// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ad_phrase_comscore.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ad_phrase_comscore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ad_phrase_comscore {
namespace pb {
class PhraseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Phrase>
     _instance;
} _Phrase_default_instance_;
class RequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Request>
     _instance;
} _Request_default_instance_;
class MatchCandidateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchCandidate>
     _instance;
} _MatchCandidate_default_instance_;
class DebugInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo>
     _instance;
} _DebugInfo_default_instance_;
class MatchedPhraseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchedPhrase>
     _instance;
} _MatchedPhrase_default_instance_;
class AnswerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Answer>
     _instance;
} _Answer_default_instance_;

namespace protobuf_ad_5fphrase_5fcomscore_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, vector_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, id_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, phrases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, model_version_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchCandidate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchCandidate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchCandidate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchCandidate, distance_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, candidates_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchedPhrase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchedPhrase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchedPhrase, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchedPhrase, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchedPhrase, debug_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Answer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Answer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Answer, magic_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Answer, matched_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(Phrase)},
  { 9, 16, sizeof(Request)},
  { 18, 25, sizeof(MatchCandidate)},
  { 27, 33, sizeof(DebugInfo)},
  { 34, 42, sizeof(MatchedPhrase)},
  { 45, 52, sizeof(Answer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Phrase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchCandidate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DebugInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchedPhrase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Answer_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ad_phrase_comscore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Phrase_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Phrase_default_instance_);_Request_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Request_default_instance_);_MatchCandidate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchCandidate_default_instance_);_DebugInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DebugInfo_default_instance_);_MatchedPhrase_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchedPhrase_default_instance_);_Answer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Answer_default_instance_);_MatchedPhrase_default_instance_._instance.get_mutable()->debug_ = const_cast< ::ad_phrase_comscore::pb::DebugInfo*>(
      ::ad_phrase_comscore::pb::DebugInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030ad_phrase_comscore.proto\022\025ad_phrase_co"
      "mscore.pb\"-\n\006Phrase\022\027\n\013vector_data\030\001 \003(\002"
      "B\002\020\001\022\n\n\002id\030\002 \002(\006\"P\n\007Request\022.\n\007phrases\030\001"
      " \003(\0132\035.ad_phrase_comscore.pb.Phrase\022\025\n\rm"
      "odel_version\030\002 \002(\r\".\n\016MatchCandidate\022\n\n\002"
      "id\030\001 \002(\006\022\020\n\010distance\030\002 \002(\002\"F\n\tDebugInfo\022"
      "9\n\ncandidates\030\001 \003(\0132%.ad_phrase_comscore"
      ".pb.MatchCandidate\"[\n\rMatchedPhrase\022\n\n\002i"
      "d\030\001 \002(\006\022\r\n\005score\030\002 \001(\002\022/\n\005debug\030\003 \001(\0132 ."
      "ad_phrase_comscore.pb.DebugInfo\"U\n\006Answe"
      "r\022\024\n\014magic_header\030\001 \002(\007\0225\n\007matched\030\002 \003(\013"
      "2$.ad_phrase_comscore.pb.MatchedPhrase"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 478);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ad_phrase_comscore.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ad_5fphrase_5fcomscore_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Phrase::kVectorDataFieldNumber;
const int Phrase::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Phrase::Phrase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.Phrase)
}
Phrase::Phrase(const Phrase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      vector_data_(from.vector_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.Phrase)
}

void Phrase::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
}

Phrase::~Phrase() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.Phrase)
  SharedDtor();
}

void Phrase::SharedDtor() {
}

void Phrase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Phrase::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Phrase& Phrase::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

Phrase* Phrase::New(::google::protobuf::Arena* arena) const {
  Phrase* n = new Phrase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Phrase::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_data_.Clear();
  id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Phrase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.Phrase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float vector_data = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_vector_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_vector_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.Phrase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.Phrase)
  return false;
#undef DO_
}

void Phrase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float vector_data = 1 [packed = true];
  if (this->vector_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vector_data_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->vector_data().data(), this->vector_data_size(), output);
  }

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.Phrase)
}

::google::protobuf::uint8* Phrase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float vector_data = 1 [packed = true];
  if (this->vector_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _vector_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->vector_data_, target);
  }

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.Phrase)
  return target;
}

size_t Phrase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.Phrase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required fixed64 id = 2;
  if (has_id()) {
    total_size += 1 + 8;
  }
  // repeated float vector_data = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->vector_data_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vector_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Phrase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.Phrase)
  GOOGLE_DCHECK_NE(&from, this);
  const Phrase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Phrase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.Phrase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.Phrase)
    MergeFrom(*source);
  }
}

void Phrase::MergeFrom(const Phrase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.Phrase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_data_.MergeFrom(from.vector_data_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void Phrase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.Phrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Phrase::CopyFrom(const Phrase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.Phrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Phrase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Phrase::Swap(Phrase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Phrase::InternalSwap(Phrase* other) {
  using std::swap;
  vector_data_.InternalSwap(&other->vector_data_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Phrase::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Phrase

// repeated float vector_data = 1 [packed = true];
int Phrase::vector_data_size() const {
  return vector_data_.size();
}
void Phrase::clear_vector_data() {
  vector_data_.Clear();
}
float Phrase::vector_data(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Phrase.vector_data)
  return vector_data_.Get(index);
}
void Phrase::set_vector_data(int index, float value) {
  vector_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Phrase.vector_data)
}
void Phrase::add_vector_data(float value) {
  vector_data_.Add(value);
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Phrase.vector_data)
}
const ::google::protobuf::RepeatedField< float >&
Phrase::vector_data() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Phrase.vector_data)
  return vector_data_;
}
::google::protobuf::RepeatedField< float >*
Phrase::mutable_vector_data() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Phrase.vector_data)
  return &vector_data_;
}

// required fixed64 id = 2;
bool Phrase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Phrase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Phrase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Phrase::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 Phrase::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Phrase.id)
  return id_;
}
void Phrase::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Phrase.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kPhrasesFieldNumber;
const int Request::kModelVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      phrases_(from.phrases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_version_ = from.model_version_;
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  model_version_ = 0u;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.Request)
  SharedDtor();
}

void Request::SharedDtor() {
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phrases_.Clear();
  model_version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_phrases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 model_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_model_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &model_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phrases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->phrases(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required uint32 model_version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->model_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phrases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->phrases(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required uint32 model_version = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->model_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 model_version = 2;
  if (has_model_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->model_version());
  }
  // repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->phrases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->phrases(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phrases_.MergeFrom(from.phrases_);
  if (from.has_model_version()) {
    set_model_version(from.model_version());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->phrases())) return false;
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  phrases_.InternalSwap(&other->phrases_);
  swap(model_version_, other->model_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
int Request::phrases_size() const {
  return phrases_.size();
}
void Request::clear_phrases() {
  phrases_.Clear();
}
const ::ad_phrase_comscore::pb::Phrase& Request::phrases(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Get(index);
}
::ad_phrase_comscore::pb::Phrase* Request::mutable_phrases(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Mutable(index);
}
::ad_phrase_comscore::pb::Phrase* Request::add_phrases() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Add();
}
::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >*
Request::mutable_phrases() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Request.phrases)
  return &phrases_;
}
const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >&
Request::phrases() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Request.phrases)
  return phrases_;
}

// required uint32 model_version = 2;
bool Request::has_model_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_model_version() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_model_version() {
  model_version_ = 0u;
  clear_has_model_version();
}
::google::protobuf::uint32 Request::model_version() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Request.model_version)
  return model_version_;
}
void Request::set_model_version(::google::protobuf::uint32 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Request.model_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchCandidate::kIdFieldNumber;
const int MatchCandidate::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchCandidate::MatchCandidate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.MatchCandidate)
}
MatchCandidate::MatchCandidate(const MatchCandidate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&id_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.MatchCandidate)
}

void MatchCandidate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&id_)) + sizeof(distance_));
}

MatchCandidate::~MatchCandidate() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.MatchCandidate)
  SharedDtor();
}

void MatchCandidate::SharedDtor() {
}

void MatchCandidate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchCandidate::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchCandidate& MatchCandidate::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchCandidate* MatchCandidate::New(::google::protobuf::Arena* arena) const {
  MatchCandidate* n = new MatchCandidate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchCandidate::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.MatchCandidate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&id_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchCandidate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.MatchCandidate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.MatchCandidate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.MatchCandidate)
  return false;
#undef DO_
}

void MatchCandidate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.MatchCandidate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->id(), output);
  }

  // required float distance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.MatchCandidate)
}

::google::protobuf::uint8* MatchCandidate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.MatchCandidate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->id(), target);
  }

  // required float distance = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.MatchCandidate)
  return target;
}

size_t MatchCandidate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ad_phrase_comscore.pb.MatchCandidate)
  size_t total_size = 0;

  if (has_id()) {
    // required fixed64 id = 1;
    total_size += 1 + 8;
  }

  if (has_distance()) {
    // required float distance = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t MatchCandidate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.MatchCandidate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required fixed64 id = 1;
    total_size += 1 + 8;

    // required float distance = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchCandidate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.MatchCandidate)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchCandidate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchCandidate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.MatchCandidate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.MatchCandidate)
    MergeFrom(*source);
  }
}

void MatchCandidate::MergeFrom(const MatchCandidate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.MatchCandidate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchCandidate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.MatchCandidate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchCandidate::CopyFrom(const MatchCandidate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.MatchCandidate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchCandidate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MatchCandidate::Swap(MatchCandidate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchCandidate::InternalSwap(MatchCandidate* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchCandidate::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchCandidate

// required fixed64 id = 1;
bool MatchCandidate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchCandidate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchCandidate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchCandidate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 MatchCandidate::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchCandidate.id)
  return id_;
}
void MatchCandidate::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchCandidate.id)
}

// required float distance = 2;
bool MatchCandidate::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchCandidate::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchCandidate::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchCandidate::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
float MatchCandidate::distance() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchCandidate.distance)
  return distance_;
}
void MatchCandidate::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchCandidate.distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kCandidatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      candidates_(from.candidates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.DebugInfo)
}

void DebugInfo::SharedCtor() {
  _cached_size_ = 0;
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
}

void DebugInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugInfo::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugInfo& DebugInfo::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const {
  DebugInfo* n = new DebugInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidates_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.DebugInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_candidates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->candidates(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.DebugInfo)
}

::google::protobuf::uint8* DebugInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->candidates(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.DebugInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->candidates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->candidates(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.DebugInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.DebugInfo)
    MergeFrom(*source);
  }
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidates_.MergeFrom(from.candidates_);
}

void DebugInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->candidates())) return false;
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  using std::swap;
  candidates_.InternalSwap(&other->candidates_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugInfo::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
int DebugInfo::candidates_size() const {
  return candidates_.size();
}
void DebugInfo::clear_candidates() {
  candidates_.Clear();
}
const ::ad_phrase_comscore::pb::MatchCandidate& DebugInfo::candidates(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Get(index);
}
::ad_phrase_comscore::pb::MatchCandidate* DebugInfo::mutable_candidates(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Mutable(index);
}
::ad_phrase_comscore::pb::MatchCandidate* DebugInfo::add_candidates() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Add();
}
::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >*
DebugInfo::mutable_candidates() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.DebugInfo.candidates)
  return &candidates_;
}
const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >&
DebugInfo::candidates() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchedPhrase::kIdFieldNumber;
const int MatchedPhrase::kScoreFieldNumber;
const int MatchedPhrase::kDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchedPhrase::MatchedPhrase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.MatchedPhrase)
}
MatchedPhrase::MatchedPhrase(const MatchedPhrase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_debug()) {
    debug_ = new ::ad_phrase_comscore::pb::DebugInfo(*from.debug_);
  } else {
    debug_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.MatchedPhrase)
}

void MatchedPhrase::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&debug_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&debug_)) + sizeof(score_));
}

MatchedPhrase::~MatchedPhrase() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.MatchedPhrase)
  SharedDtor();
}

void MatchedPhrase::SharedDtor() {
  if (this != internal_default_instance()) delete debug_;
}

void MatchedPhrase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchedPhrase::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchedPhrase& MatchedPhrase::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchedPhrase* MatchedPhrase::New(::google::protobuf::Arena* arena) const {
  MatchedPhrase* n = new MatchedPhrase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchedPhrase::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.MatchedPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_debug()) {
    GOOGLE_DCHECK(debug_ != NULL);
    debug_->::ad_phrase_comscore::pb::DebugInfo::Clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&id_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchedPhrase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.MatchedPhrase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.MatchedPhrase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.MatchedPhrase)
  return false;
#undef DO_
}

void MatchedPhrase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.MatchedPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->id(), output);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->debug_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.MatchedPhrase)
}

::google::protobuf::uint8* MatchedPhrase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.MatchedPhrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->id(), target);
  }

  // optional float score = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->debug_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.MatchedPhrase)
  return target;
}

size_t MatchedPhrase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.MatchedPhrase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required fixed64 id = 1;
  if (has_id()) {
    total_size += 1 + 8;
  }
  // optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
  if (has_debug()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->debug_);
  }

  // optional float score = 2;
  if (has_score()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchedPhrase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.MatchedPhrase)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchedPhrase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchedPhrase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.MatchedPhrase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.MatchedPhrase)
    MergeFrom(*source);
  }
}

void MatchedPhrase::MergeFrom(const MatchedPhrase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.MatchedPhrase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_debug()->::ad_phrase_comscore::pb::DebugInfo::MergeFrom(from.debug());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchedPhrase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.MatchedPhrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchedPhrase::CopyFrom(const MatchedPhrase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.MatchedPhrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchedPhrase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_debug()) {
    if (!this->debug_->IsInitialized()) return false;
  }
  return true;
}

void MatchedPhrase::Swap(MatchedPhrase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchedPhrase::InternalSwap(MatchedPhrase* other) {
  using std::swap;
  swap(debug_, other->debug_);
  swap(id_, other->id_);
  swap(score_, other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchedPhrase::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchedPhrase

// required fixed64 id = 1;
bool MatchedPhrase::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchedPhrase::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchedPhrase::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchedPhrase::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 MatchedPhrase::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.id)
  return id_;
}
void MatchedPhrase::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchedPhrase.id)
}

// optional float score = 2;
bool MatchedPhrase::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MatchedPhrase::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
void MatchedPhrase::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
void MatchedPhrase::clear_score() {
  score_ = 0;
  clear_has_score();
}
float MatchedPhrase::score() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.score)
  return score_;
}
void MatchedPhrase::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchedPhrase.score)
}

// optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
bool MatchedPhrase::has_debug() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchedPhrase::set_has_debug() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchedPhrase::clear_has_debug() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchedPhrase::clear_debug() {
  if (debug_ != NULL) debug_->::ad_phrase_comscore::pb::DebugInfo::Clear();
  clear_has_debug();
}
const ::ad_phrase_comscore::pb::DebugInfo& MatchedPhrase::debug() const {
  const ::ad_phrase_comscore::pb::DebugInfo* p = debug_;
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.debug)
  return p != NULL ? *p : *reinterpret_cast<const ::ad_phrase_comscore::pb::DebugInfo*>(
      &::ad_phrase_comscore::pb::_DebugInfo_default_instance_);
}
::ad_phrase_comscore::pb::DebugInfo* MatchedPhrase::mutable_debug() {
  set_has_debug();
  if (debug_ == NULL) {
    debug_ = new ::ad_phrase_comscore::pb::DebugInfo;
  }
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.MatchedPhrase.debug)
  return debug_;
}
::ad_phrase_comscore::pb::DebugInfo* MatchedPhrase::release_debug() {
  // @@protoc_insertion_point(field_release:ad_phrase_comscore.pb.MatchedPhrase.debug)
  clear_has_debug();
  ::ad_phrase_comscore::pb::DebugInfo* temp = debug_;
  debug_ = NULL;
  return temp;
}
void MatchedPhrase::set_allocated_debug(::ad_phrase_comscore::pb::DebugInfo* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  // @@protoc_insertion_point(field_set_allocated:ad_phrase_comscore.pb.MatchedPhrase.debug)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Answer::kMagicHeaderFieldNumber;
const int Answer::kMatchedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Answer::Answer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ad_phrase_comscore.pb.Answer)
}
Answer::Answer(const Answer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      matched_(from.matched_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  magic_header_ = from.magic_header_;
  // @@protoc_insertion_point(copy_constructor:ad_phrase_comscore.pb.Answer)
}

void Answer::SharedCtor() {
  _cached_size_ = 0;
  magic_header_ = 0u;
}

Answer::~Answer() {
  // @@protoc_insertion_point(destructor:ad_phrase_comscore.pb.Answer)
  SharedDtor();
}

void Answer::SharedDtor() {
}

void Answer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Answer::descriptor() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Answer& Answer::default_instance() {
  protobuf_ad_5fphrase_5fcomscore_2eproto::InitDefaults();
  return *internal_default_instance();
}

Answer* Answer::New(::google::protobuf::Arena* arena) const {
  Answer* n = new Answer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Answer::Clear() {
// @@protoc_insertion_point(message_clear_start:ad_phrase_comscore.pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matched_.Clear();
  magic_header_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Answer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ad_phrase_comscore.pb.Answer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 magic_header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_magic_header();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &magic_header_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matched()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ad_phrase_comscore.pb.Answer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ad_phrase_comscore.pb.Answer)
  return false;
#undef DO_
}

void Answer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ad_phrase_comscore.pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 magic_header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->magic_header(), output);
  }

  // repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->matched(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ad_phrase_comscore.pb.Answer)
}

::google::protobuf::uint8* Answer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ad_phrase_comscore.pb.Answer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 magic_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->magic_header(), target);
  }

  // repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->matched(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad_phrase_comscore.pb.Answer)
  return target;
}

size_t Answer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad_phrase_comscore.pb.Answer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required fixed32 magic_header = 1;
  if (has_magic_header()) {
    total_size += 1 + 4;
  }
  // repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->matched_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matched(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Answer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ad_phrase_comscore.pb.Answer)
  GOOGLE_DCHECK_NE(&from, this);
  const Answer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Answer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ad_phrase_comscore.pb.Answer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ad_phrase_comscore.pb.Answer)
    MergeFrom(*source);
  }
}

void Answer::MergeFrom(const Answer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ad_phrase_comscore.pb.Answer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matched_.MergeFrom(from.matched_);
  if (from.has_magic_header()) {
    set_magic_header(from.magic_header());
  }
}

void Answer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ad_phrase_comscore.pb.Answer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Answer::CopyFrom(const Answer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad_phrase_comscore.pb.Answer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Answer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->matched())) return false;
  return true;
}

void Answer::Swap(Answer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Answer::InternalSwap(Answer* other) {
  using std::swap;
  matched_.InternalSwap(&other->matched_);
  swap(magic_header_, other->magic_header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Answer::GetMetadata() const {
  protobuf_ad_5fphrase_5fcomscore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ad_5fphrase_5fcomscore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Answer

// required fixed32 magic_header = 1;
bool Answer::has_magic_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Answer::set_has_magic_header() {
  _has_bits_[0] |= 0x00000001u;
}
void Answer::clear_has_magic_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void Answer::clear_magic_header() {
  magic_header_ = 0u;
  clear_has_magic_header();
}
::google::protobuf::uint32 Answer::magic_header() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Answer.magic_header)
  return magic_header_;
}
void Answer::set_magic_header(::google::protobuf::uint32 value) {
  set_has_magic_header();
  magic_header_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Answer.magic_header)
}

// repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
int Answer::matched_size() const {
  return matched_.size();
}
void Answer::clear_matched() {
  matched_.Clear();
}
const ::ad_phrase_comscore::pb::MatchedPhrase& Answer::matched(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Get(index);
}
::ad_phrase_comscore::pb::MatchedPhrase* Answer::mutable_matched(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Mutable(index);
}
::ad_phrase_comscore::pb::MatchedPhrase* Answer::add_matched() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Add();
}
::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >*
Answer::mutable_matched() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Answer.matched)
  return &matched_;
}
const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >&
Answer::matched() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Answer.matched)
  return matched_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace ad_phrase_comscore

// @@protoc_insertion_point(global_scope)
