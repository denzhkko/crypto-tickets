// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ad_phrase_comscore.proto

#ifndef PROTOBUF_ad_5fphrase_5fcomscore_2eproto__INCLUDED
#define PROTOBUF_ad_5fphrase_5fcomscore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ad_phrase_comscore {
namespace pb {
class Answer;
class AnswerDefaultTypeInternal;
extern AnswerDefaultTypeInternal _Answer_default_instance_;
class DebugInfo;
class DebugInfoDefaultTypeInternal;
extern DebugInfoDefaultTypeInternal _DebugInfo_default_instance_;
class MatchCandidate;
class MatchCandidateDefaultTypeInternal;
extern MatchCandidateDefaultTypeInternal _MatchCandidate_default_instance_;
class MatchedPhrase;
class MatchedPhraseDefaultTypeInternal;
extern MatchedPhraseDefaultTypeInternal _MatchedPhrase_default_instance_;
class Phrase;
class PhraseDefaultTypeInternal;
extern PhraseDefaultTypeInternal _Phrase_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
}  // namespace pb
}  // namespace ad_phrase_comscore

namespace ad_phrase_comscore {
namespace pb {

namespace protobuf_ad_5fphrase_5fcomscore_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ad_5fphrase_5fcomscore_2eproto

// ===================================================================

class Phrase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.Phrase) */ {
 public:
  Phrase();
  virtual ~Phrase();

  Phrase(const Phrase& from);

  inline Phrase& operator=(const Phrase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Phrase(Phrase&& from) noexcept
    : Phrase() {
    *this = ::std::move(from);
  }

  inline Phrase& operator=(Phrase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Phrase& default_instance();

  static inline const Phrase* internal_default_instance() {
    return reinterpret_cast<const Phrase*>(
               &_Phrase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Phrase* other);
  friend void swap(Phrase& a, Phrase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Phrase* New() const PROTOBUF_FINAL { return New(NULL); }

  Phrase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Phrase& from);
  void MergeFrom(const Phrase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Phrase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float vector_data = 1 [packed = true];
  int vector_data_size() const;
  void clear_vector_data();
  static const int kVectorDataFieldNumber = 1;
  float vector_data(int index) const;
  void set_vector_data(int index, float value);
  void add_vector_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      vector_data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_vector_data();

  // required fixed64 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.Phrase)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > vector_data_;
  mutable int _vector_data_cached_byte_size_;
  ::google::protobuf::uint64 id_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
  int phrases_size() const;
  void clear_phrases();
  static const int kPhrasesFieldNumber = 1;
  const ::ad_phrase_comscore::pb::Phrase& phrases(int index) const;
  ::ad_phrase_comscore::pb::Phrase* mutable_phrases(int index);
  ::ad_phrase_comscore::pb::Phrase* add_phrases();
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >*
      mutable_phrases();
  const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >&
      phrases() const;

  // required uint32 model_version = 2;
  bool has_model_version() const;
  void clear_model_version();
  static const int kModelVersionFieldNumber = 2;
  ::google::protobuf::uint32 model_version() const;
  void set_model_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.Request)
 private:
  void set_has_model_version();
  void clear_has_model_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase > phrases_;
  ::google::protobuf::uint32 model_version_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchCandidate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.MatchCandidate) */ {
 public:
  MatchCandidate();
  virtual ~MatchCandidate();

  MatchCandidate(const MatchCandidate& from);

  inline MatchCandidate& operator=(const MatchCandidate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchCandidate(MatchCandidate&& from) noexcept
    : MatchCandidate() {
    *this = ::std::move(from);
  }

  inline MatchCandidate& operator=(MatchCandidate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchCandidate& default_instance();

  static inline const MatchCandidate* internal_default_instance() {
    return reinterpret_cast<const MatchCandidate*>(
               &_MatchCandidate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MatchCandidate* other);
  friend void swap(MatchCandidate& a, MatchCandidate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchCandidate* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchCandidate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchCandidate& from);
  void MergeFrom(const MatchCandidate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchCandidate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required float distance = 2;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.MatchCandidate)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_distance();
  void clear_has_distance();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  float distance_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DebugInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.DebugInfo) */ {
 public:
  DebugInfo();
  virtual ~DebugInfo();

  DebugInfo(const DebugInfo& from);

  inline DebugInfo& operator=(const DebugInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebugInfo(DebugInfo&& from) noexcept
    : DebugInfo() {
    *this = ::std::move(from);
  }

  inline DebugInfo& operator=(DebugInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugInfo& default_instance();

  static inline const DebugInfo* internal_default_instance() {
    return reinterpret_cast<const DebugInfo*>(
               &_DebugInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DebugInfo* other);
  friend void swap(DebugInfo& a, DebugInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebugInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DebugInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DebugInfo& from);
  void MergeFrom(const DebugInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DebugInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
  int candidates_size() const;
  void clear_candidates();
  static const int kCandidatesFieldNumber = 1;
  const ::ad_phrase_comscore::pb::MatchCandidate& candidates(int index) const;
  ::ad_phrase_comscore::pb::MatchCandidate* mutable_candidates(int index);
  ::ad_phrase_comscore::pb::MatchCandidate* add_candidates();
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >*
      mutable_candidates();
  const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >&
      candidates() const;

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.DebugInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate > candidates_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchedPhrase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.MatchedPhrase) */ {
 public:
  MatchedPhrase();
  virtual ~MatchedPhrase();

  MatchedPhrase(const MatchedPhrase& from);

  inline MatchedPhrase& operator=(const MatchedPhrase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchedPhrase(MatchedPhrase&& from) noexcept
    : MatchedPhrase() {
    *this = ::std::move(from);
  }

  inline MatchedPhrase& operator=(MatchedPhrase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchedPhrase& default_instance();

  static inline const MatchedPhrase* internal_default_instance() {
    return reinterpret_cast<const MatchedPhrase*>(
               &_MatchedPhrase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MatchedPhrase* other);
  friend void swap(MatchedPhrase& a, MatchedPhrase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchedPhrase* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchedPhrase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchedPhrase& from);
  void MergeFrom(const MatchedPhrase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchedPhrase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
  bool has_debug() const;
  void clear_debug();
  static const int kDebugFieldNumber = 3;
  const ::ad_phrase_comscore::pb::DebugInfo& debug() const;
  ::ad_phrase_comscore::pb::DebugInfo* mutable_debug();
  ::ad_phrase_comscore::pb::DebugInfo* release_debug();
  void set_allocated_debug(::ad_phrase_comscore::pb::DebugInfo* debug);

  // required fixed64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional float score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.MatchedPhrase)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_score();
  void clear_has_score();
  void set_has_debug();
  void clear_has_debug();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ad_phrase_comscore::pb::DebugInfo* debug_;
  ::google::protobuf::uint64 id_;
  float score_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Answer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ad_phrase_comscore.pb.Answer) */ {
 public:
  Answer();
  virtual ~Answer();

  Answer(const Answer& from);

  inline Answer& operator=(const Answer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Answer(Answer&& from) noexcept
    : Answer() {
    *this = ::std::move(from);
  }

  inline Answer& operator=(Answer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Answer& default_instance();

  static inline const Answer* internal_default_instance() {
    return reinterpret_cast<const Answer*>(
               &_Answer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Answer* other);
  friend void swap(Answer& a, Answer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Answer* New() const PROTOBUF_FINAL { return New(NULL); }

  Answer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Answer& from);
  void MergeFrom(const Answer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
  int matched_size() const;
  void clear_matched();
  static const int kMatchedFieldNumber = 2;
  const ::ad_phrase_comscore::pb::MatchedPhrase& matched(int index) const;
  ::ad_phrase_comscore::pb::MatchedPhrase* mutable_matched(int index);
  ::ad_phrase_comscore::pb::MatchedPhrase* add_matched();
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >*
      mutable_matched();
  const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >&
      matched() const;

  // required fixed32 magic_header = 1;
  bool has_magic_header() const;
  void clear_magic_header();
  static const int kMagicHeaderFieldNumber = 1;
  ::google::protobuf::uint32 magic_header() const;
  void set_magic_header(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ad_phrase_comscore.pb.Answer)
 private:
  void set_has_magic_header();
  void clear_has_magic_header();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase > matched_;
  ::google::protobuf::uint32 magic_header_;
  friend struct protobuf_ad_5fphrase_5fcomscore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Phrase

// repeated float vector_data = 1 [packed = true];
inline int Phrase::vector_data_size() const {
  return vector_data_.size();
}
inline void Phrase::clear_vector_data() {
  vector_data_.Clear();
}
inline float Phrase::vector_data(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Phrase.vector_data)
  return vector_data_.Get(index);
}
inline void Phrase::set_vector_data(int index, float value) {
  vector_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Phrase.vector_data)
}
inline void Phrase::add_vector_data(float value) {
  vector_data_.Add(value);
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Phrase.vector_data)
}
inline const ::google::protobuf::RepeatedField< float >&
Phrase::vector_data() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Phrase.vector_data)
  return vector_data_;
}
inline ::google::protobuf::RepeatedField< float >*
Phrase::mutable_vector_data() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Phrase.vector_data)
  return &vector_data_;
}

// required fixed64 id = 2;
inline bool Phrase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Phrase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Phrase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Phrase::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Phrase::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Phrase.id)
  return id_;
}
inline void Phrase::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Phrase.id)
}

// -------------------------------------------------------------------

// Request

// repeated .ad_phrase_comscore.pb.Phrase phrases = 1;
inline int Request::phrases_size() const {
  return phrases_.size();
}
inline void Request::clear_phrases() {
  phrases_.Clear();
}
inline const ::ad_phrase_comscore::pb::Phrase& Request::phrases(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Get(index);
}
inline ::ad_phrase_comscore::pb::Phrase* Request::mutable_phrases(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Mutable(index);
}
inline ::ad_phrase_comscore::pb::Phrase* Request::add_phrases() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Request.phrases)
  return phrases_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >*
Request::mutable_phrases() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Request.phrases)
  return &phrases_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::Phrase >&
Request::phrases() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Request.phrases)
  return phrases_;
}

// required uint32 model_version = 2;
inline bool Request::has_model_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_model_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_model_version() {
  model_version_ = 0u;
  clear_has_model_version();
}
inline ::google::protobuf::uint32 Request::model_version() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Request.model_version)
  return model_version_;
}
inline void Request::set_model_version(::google::protobuf::uint32 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Request.model_version)
}

// -------------------------------------------------------------------

// MatchCandidate

// required fixed64 id = 1;
inline bool MatchCandidate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchCandidate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchCandidate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchCandidate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MatchCandidate::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchCandidate.id)
  return id_;
}
inline void MatchCandidate::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchCandidate.id)
}

// required float distance = 2;
inline bool MatchCandidate::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchCandidate::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchCandidate::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchCandidate::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float MatchCandidate::distance() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchCandidate.distance)
  return distance_;
}
inline void MatchCandidate::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchCandidate.distance)
}

// -------------------------------------------------------------------

// DebugInfo

// repeated .ad_phrase_comscore.pb.MatchCandidate candidates = 1;
inline int DebugInfo::candidates_size() const {
  return candidates_.size();
}
inline void DebugInfo::clear_candidates() {
  candidates_.Clear();
}
inline const ::ad_phrase_comscore::pb::MatchCandidate& DebugInfo::candidates(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Get(index);
}
inline ::ad_phrase_comscore::pb::MatchCandidate* DebugInfo::mutable_candidates(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Mutable(index);
}
inline ::ad_phrase_comscore::pb::MatchCandidate* DebugInfo::add_candidates() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >*
DebugInfo::mutable_candidates() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.DebugInfo.candidates)
  return &candidates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchCandidate >&
DebugInfo::candidates() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.DebugInfo.candidates)
  return candidates_;
}

// -------------------------------------------------------------------

// MatchedPhrase

// required fixed64 id = 1;
inline bool MatchedPhrase::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchedPhrase::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchedPhrase::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchedPhrase::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MatchedPhrase::id() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.id)
  return id_;
}
inline void MatchedPhrase::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchedPhrase.id)
}

// optional float score = 2;
inline bool MatchedPhrase::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatchedPhrase::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatchedPhrase::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatchedPhrase::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float MatchedPhrase::score() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.score)
  return score_;
}
inline void MatchedPhrase::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.MatchedPhrase.score)
}

// optional .ad_phrase_comscore.pb.DebugInfo debug = 3;
inline bool MatchedPhrase::has_debug() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchedPhrase::set_has_debug() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchedPhrase::clear_has_debug() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchedPhrase::clear_debug() {
  if (debug_ != NULL) debug_->::ad_phrase_comscore::pb::DebugInfo::Clear();
  clear_has_debug();
}
inline const ::ad_phrase_comscore::pb::DebugInfo& MatchedPhrase::debug() const {
  const ::ad_phrase_comscore::pb::DebugInfo* p = debug_;
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.MatchedPhrase.debug)
  return p != NULL ? *p : *reinterpret_cast<const ::ad_phrase_comscore::pb::DebugInfo*>(
      &::ad_phrase_comscore::pb::_DebugInfo_default_instance_);
}
inline ::ad_phrase_comscore::pb::DebugInfo* MatchedPhrase::mutable_debug() {
  set_has_debug();
  if (debug_ == NULL) {
    debug_ = new ::ad_phrase_comscore::pb::DebugInfo;
  }
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.MatchedPhrase.debug)
  return debug_;
}
inline ::ad_phrase_comscore::pb::DebugInfo* MatchedPhrase::release_debug() {
  // @@protoc_insertion_point(field_release:ad_phrase_comscore.pb.MatchedPhrase.debug)
  clear_has_debug();
  ::ad_phrase_comscore::pb::DebugInfo* temp = debug_;
  debug_ = NULL;
  return temp;
}
inline void MatchedPhrase::set_allocated_debug(::ad_phrase_comscore::pb::DebugInfo* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  // @@protoc_insertion_point(field_set_allocated:ad_phrase_comscore.pb.MatchedPhrase.debug)
}

// -------------------------------------------------------------------

// Answer

// required fixed32 magic_header = 1;
inline bool Answer::has_magic_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Answer::set_has_magic_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Answer::clear_has_magic_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Answer::clear_magic_header() {
  magic_header_ = 0u;
  clear_has_magic_header();
}
inline ::google::protobuf::uint32 Answer::magic_header() const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Answer.magic_header)
  return magic_header_;
}
inline void Answer::set_magic_header(::google::protobuf::uint32 value) {
  set_has_magic_header();
  magic_header_ = value;
  // @@protoc_insertion_point(field_set:ad_phrase_comscore.pb.Answer.magic_header)
}

// repeated .ad_phrase_comscore.pb.MatchedPhrase matched = 2;
inline int Answer::matched_size() const {
  return matched_.size();
}
inline void Answer::clear_matched() {
  matched_.Clear();
}
inline const ::ad_phrase_comscore::pb::MatchedPhrase& Answer::matched(int index) const {
  // @@protoc_insertion_point(field_get:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Get(index);
}
inline ::ad_phrase_comscore::pb::MatchedPhrase* Answer::mutable_matched(int index) {
  // @@protoc_insertion_point(field_mutable:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Mutable(index);
}
inline ::ad_phrase_comscore::pb::MatchedPhrase* Answer::add_matched() {
  // @@protoc_insertion_point(field_add:ad_phrase_comscore.pb.Answer.matched)
  return matched_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >*
Answer::mutable_matched() {
  // @@protoc_insertion_point(field_mutable_list:ad_phrase_comscore.pb.Answer.matched)
  return &matched_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ad_phrase_comscore::pb::MatchedPhrase >&
Answer::matched() const {
  // @@protoc_insertion_point(field_list:ad_phrase_comscore.pb.Answer.matched)
  return matched_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace ad_phrase_comscore

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ad_5fphrase_5fcomscore_2eproto__INCLUDED
