// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: additive_app.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "additive_app.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class AppDeveloperDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppDeveloper>
     _instance;
} _AppDeveloper_default_instance_;
class AppCategoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppCategory>
     _instance;
} _AppCategory_default_instance_;
class AppParsedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppParsed>
     _instance;
} _AppParsed_default_instance_;
class AppPropertiesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppProperties>
     _instance;
} _AppProperties_default_instance_;
class AppImageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppImage>
     _instance;
} _AppImage_default_instance_;
class AppDataWrapperDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppDataWrapper>
     _instance;
} _AppDataWrapper_default_instance_;
class AppImageWrapperDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppImageWrapper>
     _instance;
} _AppImageWrapper_default_instance_;

namespace protobuf_additive_5fapp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeveloper, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeveloper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeveloper, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeveloper, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDeveloper, support_url_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCategory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCategory, name_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, is_free_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, age_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, thumb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, max_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, developer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, mobile_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppParsed, reviewers_),
  0,
  16,
  1,
  2,
  3,
  13,
  17,
  4,
  5,
  6,
  14,
  7,
  18,
  19,
  15,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, is_free_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, age_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, max_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, developer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, mobile_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, reviewers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, rub_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, is_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, categoryids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, paid_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, is_top_dev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppProperties, is_editor_choice_),
  0,
  17,
  1,
  2,
  3,
  13,
  18,
  4,
  5,
  6,
  7,
  15,
  16,
  14,
  8,
  9,
  10,
  11,
  23,
  22,
  19,
  12,
  20,
  21,
  24,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImage, thumb_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, image_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, brsq2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, uruq2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, is_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, base64_img_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, img_bkgrnd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDataWrapper, reco_srch_key_),
  4,
  0,
  5,
  6,
  7,
  8,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImageWrapper, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImageWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImageWrapper, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImageWrapper, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppImageWrapper, base64_img_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(AppDeveloper)},
  { 11, 17, sizeof(AppCategory)},
  { 18, 43, sizeof(AppParsed)},
  { 63, 93, sizeof(AppProperties)},
  { 118, 124, sizeof(AppImage)},
  { 125, 139, sizeof(AppDataWrapper)},
  { 148, 156, sizeof(AppImageWrapper)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppDeveloper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppCategory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppParsed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppDataWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppImageWrapper_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "additive_app.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ru::mail::go::webbase::parsing::img::protobuf_image_5fdefs_2eproto::InitDefaults();
  _AppDeveloper_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppDeveloper_default_instance_);_AppCategory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppCategory_default_instance_);_AppParsed_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppParsed_default_instance_);_AppProperties_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppProperties_default_instance_);_AppImage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppImage_default_instance_);_AppDataWrapper_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppDataWrapper_default_instance_);_AppImageWrapper_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppImageWrapper_default_instance_);_AppParsed_default_instance_._instance.get_mutable()->category_ = const_cast< ::ru::mail::go::webbase::blobs::AppCategory*>(
      ::ru::mail::go::webbase::blobs::AppCategory::internal_default_instance());
  _AppParsed_default_instance_._instance.get_mutable()->thumb_ = const_cast< ::ru::mail::go::webbase::parsing::img::Thumb*>(
      ::ru::mail::go::webbase::parsing::img::Thumb::internal_default_instance());
  _AppParsed_default_instance_._instance.get_mutable()->developer_ = const_cast< ::ru::mail::go::webbase::blobs::AppDeveloper*>(
      ::ru::mail::go::webbase::blobs::AppDeveloper::internal_default_instance());
  _AppProperties_default_instance_._instance.get_mutable()->category_ = const_cast< ::ru::mail::go::webbase::blobs::AppCategory*>(
      ::ru::mail::go::webbase::blobs::AppCategory::internal_default_instance());
  _AppProperties_default_instance_._instance.get_mutable()->developer_ = const_cast< ::ru::mail::go::webbase::blobs::AppDeveloper*>(
      ::ru::mail::go::webbase::blobs::AppDeveloper::internal_default_instance());
  _AppImage_default_instance_._instance.get_mutable()->thumb_ = const_cast< ::ru::mail::go::webbase::parsing::img::Thumb*>(
      ::ru::mail::go::webbase::parsing::img::Thumb::internal_default_instance());
  _AppDataWrapper_default_instance_._instance.get_mutable()->properties_ = const_cast< ::ru::mail::go::webbase::blobs::AppProperties*>(
      ::ru::mail::go::webbase::blobs::AppProperties::internal_default_instance());
  _AppDataWrapper_default_instance_._instance.get_mutable()->image_ = const_cast< ::ru::mail::go::webbase::blobs::AppImage*>(
      ::ru::mail::go::webbase::blobs::AppImage::internal_default_instance());
  _AppImageWrapper_default_instance_._instance.get_mutable()->image_ = const_cast< ::ru::mail::go::webbase::blobs::AppImage*>(
      ::ru::mail::go::webbase::blobs::AppImage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022additive_app.proto\022\030ru.mail.go.webbase"
      ".blobs\032\020image_defs.proto\">\n\014AppDeveloper"
      "\022\014\n\004name\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\023\n\013support_u"
      "rl\030\003 \001(\t\"\033\n\013AppCategory\022\014\n\004name\030\001 \003(\t\"\322\003"
      "\n\tAppParsed\022\r\n\005title\030\001 \002(\t\022\020\n\010platform\030\002"
      " \002(\r\022\017\n\007version\030\003 \001(\t\022\017\n\007updated\030\004 \001(\t\022\r"
      "\n\005price\030\005 \002(\t\0227\n\010category\030\006 \001(\0132%.ru.mai"
      "l.go.webbase.blobs.AppCategory\022\017\n\007is_fre"
      "e\030\007 \002(\010\022\013\n\003age\030\010 \001(\t\022\022\n\nage_reason\030\t \001(\t"
      "\022\014\n\004size\030\n \001(\t\0224\n\005thumb\030\013 \002(\0132%.ru.mail."
      "go.webbase.parsing.img.Thumb\022\023\n\013descript"
      "ion\030\014 \002(\t\022\014\n\004rate\030\r \002(\001\022\020\n\010max_rate\030\016 \002("
      "\001\0229\n\tdeveloper\030\017 \001(\0132&.ru.mail.go.webbas"
      "e.blobs.AppDeveloper\022\013\n\003url\030\020 \002(\t\022\022\n\nmob"
      "ile_url\030\021 \002(\t\022\024\n\014requirements\030\022 \001(\t\022\n\n\002i"
      "d\030\023 \001(\t\022\021\n\treviewers\030\024 \001(\t\"\236\004\n\rAppProper"
      "ties\022\r\n\005title\030\001 \002(\t\022\020\n\010platform\030\002 \002(\r\022\017\n"
      "\007version\030\003 \001(\t\022\017\n\007updated\030\004 \001(\t\022\r\n\005price"
      "\030\005 \002(\t\0227\n\010category\030\006 \001(\0132%.ru.mail.go.we"
      "bbase.blobs.AppCategory\022\017\n\007is_free\030\007 \002(\010"
      "\022\013\n\003age\030\010 \001(\t\022\022\n\nage_reason\030\t \001(\t\022\014\n\004siz"
      "e\030\n \001(\t\022\023\n\013description\030\013 \002(\t\022\014\n\004rate\030\014 \002"
      "(\001\022\020\n\010max_rate\030\r \002(\001\0229\n\tdeveloper\030\016 \001(\0132"
      "&.ru.mail.go.webbase.blobs.AppDeveloper\022"
      "\013\n\003url\030\017 \002(\t\022\022\n\nmobile_url\030\020 \002(\t\022\024\n\014requ"
      "irements\030\021 \001(\t\022\n\n\002id\030\022 \001(\t\022\021\n\treviewers\030"
      "\023 \001(\r\022\020\n\010rub_mask\030\024 \001(\004\022\021\n\tis_banned\030\025 \001"
      "(\010\022\023\n\013categoryIds\030\026 \001(\t\022\024\n\014paid_content\030"
      "\027 \001(\010\022\022\n\nis_top_dev\030\030 \001(\010\022\030\n\020is_editor_c"
      "hoice\030\031 \001(\010\"@\n\010AppImage\0224\n\005thumb\030\001 \002(\0132%"
      ".ru.mail.go.webbase.parsing.img.Thumb\"\200\002"
      "\n\016AppDataWrapper\022;\n\nproperties\030\001 \002(\0132\'.r"
      "u.mail.go.webbase.blobs.AppProperties\022\021\n"
      "\timage_url\030\002 \002(\t\0221\n\005image\030\003 \001(\0132\".ru.mai"
      "l.go.webbase.blobs.AppImage\022\r\n\005brsq2\030\004 \001"
      "(\004\022\r\n\005uruq2\030\005 \001(\004\022\016\n\006is_top\030\006 \001(\010\022\022\n\nbas"
      "e64_img\030\007 \001(\t\022\022\n\nimg_bkgrnd\030\010 \001(\t\022\025\n\rrec"
      "o_srch_key\030\t \001(\t\"e\n\017AppImageWrapper\0221\n\005i"
      "mage\030\001 \002(\0132\".ru.mail.go.webbase.blobs.Ap"
      "pImage\022\013\n\003url\030\002 \002(\t\022\022\n\nbase64_img\030\003 \001(\tB"
      "\tB\007AppData"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1610);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "additive_app.proto", &protobuf_RegisterTypes);
  ::ru::mail::go::webbase::parsing::img::protobuf_image_5fdefs_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_additive_5fapp_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDeveloper::kNameFieldNumber;
const int AppDeveloper::kUrlFieldNumber;
const int AppDeveloper::kSupportUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDeveloper::AppDeveloper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppDeveloper)
}
AppDeveloper::AppDeveloper(const AppDeveloper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  support_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_support_url()) {
    support_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.support_url_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppDeveloper)
}

void AppDeveloper::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  support_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AppDeveloper::~AppDeveloper() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppDeveloper)
  SharedDtor();
}

void AppDeveloper::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  support_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppDeveloper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDeveloper::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppDeveloper& AppDeveloper::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppDeveloper* AppDeveloper::New(::google::protobuf::Arena* arena) const {
  AppDeveloper* n = new AppDeveloper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDeveloper::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!support_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*support_url_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppDeveloper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppDeveloper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDeveloper.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDeveloper.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string support_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_support_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->support_url().data(), static_cast<int>(this->support_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDeveloper.support_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppDeveloper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppDeveloper)
  return false;
#undef DO_
}

void AppDeveloper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string support_url = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->support_url().data(), static_cast<int>(this->support_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.support_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->support_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppDeveloper)
}

::google::protobuf::uint8* AppDeveloper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string support_url = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->support_url().data(), static_cast<int>(this->support_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDeveloper.support_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->support_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppDeveloper)
  return target;
}

size_t AppDeveloper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppDeveloper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string support_url = 3;
    if (has_support_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->support_url());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDeveloper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppDeveloper)
  GOOGLE_DCHECK_NE(&from, this);
  const AppDeveloper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDeveloper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppDeveloper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppDeveloper)
    MergeFrom(*source);
  }
}

void AppDeveloper::MergeFrom(const AppDeveloper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppDeveloper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_support_url();
      support_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.support_url_);
    }
  }
}

void AppDeveloper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppDeveloper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDeveloper::CopyFrom(const AppDeveloper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppDeveloper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppDeveloper::IsInitialized() const {
  return true;
}

void AppDeveloper::Swap(AppDeveloper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDeveloper::InternalSwap(AppDeveloper* other) {
  using std::swap;
  name_.Swap(&other->name_);
  url_.Swap(&other->url_);
  support_url_.Swap(&other->support_url_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDeveloper::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppDeveloper

// optional string name = 1;
bool AppDeveloper::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppDeveloper::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AppDeveloper::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppDeveloper::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AppDeveloper::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDeveloper.name)
  return name_.GetNoArena();
}
void AppDeveloper::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDeveloper.name)
}
#if LANG_CXX11
void AppDeveloper::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDeveloper.name)
}
#endif
void AppDeveloper::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDeveloper.name)
}
void AppDeveloper::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDeveloper.name)
}
::std::string* AppDeveloper::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDeveloper.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDeveloper::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDeveloper.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDeveloper::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDeveloper.name)
}

// optional string url = 2;
bool AppDeveloper::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppDeveloper::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void AppDeveloper::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppDeveloper::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& AppDeveloper::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDeveloper.url)
  return url_.GetNoArena();
}
void AppDeveloper::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDeveloper.url)
}
#if LANG_CXX11
void AppDeveloper::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDeveloper.url)
}
#endif
void AppDeveloper::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDeveloper.url)
}
void AppDeveloper::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDeveloper.url)
}
::std::string* AppDeveloper::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDeveloper.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDeveloper::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDeveloper.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDeveloper::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDeveloper.url)
}

// optional string support_url = 3;
bool AppDeveloper::has_support_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppDeveloper::set_has_support_url() {
  _has_bits_[0] |= 0x00000004u;
}
void AppDeveloper::clear_has_support_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppDeveloper::clear_support_url() {
  support_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_support_url();
}
const ::std::string& AppDeveloper::support_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
  return support_url_.GetNoArena();
}
void AppDeveloper::set_support_url(const ::std::string& value) {
  set_has_support_url();
  support_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
}
#if LANG_CXX11
void AppDeveloper::set_support_url(::std::string&& value) {
  set_has_support_url();
  support_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
}
#endif
void AppDeveloper::set_support_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_support_url();
  support_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
}
void AppDeveloper::set_support_url(const char* value, size_t size) {
  set_has_support_url();
  support_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
}
::std::string* AppDeveloper::mutable_support_url() {
  set_has_support_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
  return support_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDeveloper::release_support_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
  clear_has_support_url();
  return support_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDeveloper::set_allocated_support_url(::std::string* support_url) {
  if (support_url != NULL) {
    set_has_support_url();
  } else {
    clear_has_support_url();
  }
  support_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), support_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDeveloper.support_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCategory::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCategory::AppCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppCategory)
}
AppCategory::AppCategory(const AppCategory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppCategory)
}

void AppCategory::SharedCtor() {
  _cached_size_ = 0;
}

AppCategory::~AppCategory() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppCategory)
  SharedDtor();
}

void AppCategory::SharedDtor() {
}

void AppCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCategory::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppCategory& AppCategory::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppCategory* AppCategory::New(::google::protobuf::Arena* arena) const {
  AppCategory* n = new AppCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name(this->name_size() - 1).data(),
            static_cast<int>(this->name(this->name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppCategory.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppCategory)
  return false;
#undef DO_
}

void AppCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppCategory.name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppCategory)
}

::google::protobuf::uint8* AppCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppCategory.name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppCategory)
  return target;
}

size_t AppCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppCategory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_size());
  for (int i = 0, n = this->name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppCategory)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCategory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppCategory)
    MergeFrom(*source);
  }
}

void AppCategory::MergeFrom(const AppCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
}

void AppCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCategory::CopyFrom(const AppCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCategory::IsInitialized() const {
  return true;
}

void AppCategory::Swap(AppCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCategory::InternalSwap(AppCategory* other) {
  using std::swap;
  name_.InternalSwap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppCategory::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppCategory

// repeated string name = 1;
int AppCategory::name_size() const {
  return name_.size();
}
void AppCategory::clear_name() {
  name_.Clear();
}
const ::std::string& AppCategory::name(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppCategory.name)
  return name_.Get(index);
}
::std::string* AppCategory::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppCategory.name)
  return name_.Mutable(index);
}
void AppCategory::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppCategory.name)
  name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AppCategory::set_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppCategory.name)
  name_.Mutable(index)->assign(std::move(value));
}
#endif
void AppCategory::set_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppCategory.name)
}
void AppCategory::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppCategory.name)
}
::std::string* AppCategory::add_name() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.blobs.AppCategory.name)
  return name_.Add();
}
void AppCategory::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.AppCategory.name)
}
#if LANG_CXX11
void AppCategory::add_name(::std::string&& value) {
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.AppCategory.name)
}
#endif
void AppCategory::add_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.blobs.AppCategory.name)
}
void AppCategory::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.blobs.AppCategory.name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppCategory::name() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.AppCategory.name)
  return name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AppCategory::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.AppCategory.name)
  return &name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppParsed::kTitleFieldNumber;
const int AppParsed::kPlatformFieldNumber;
const int AppParsed::kVersionFieldNumber;
const int AppParsed::kUpdatedFieldNumber;
const int AppParsed::kPriceFieldNumber;
const int AppParsed::kCategoryFieldNumber;
const int AppParsed::kIsFreeFieldNumber;
const int AppParsed::kAgeFieldNumber;
const int AppParsed::kAgeReasonFieldNumber;
const int AppParsed::kSizeFieldNumber;
const int AppParsed::kThumbFieldNumber;
const int AppParsed::kDescriptionFieldNumber;
const int AppParsed::kRateFieldNumber;
const int AppParsed::kMaxRateFieldNumber;
const int AppParsed::kDeveloperFieldNumber;
const int AppParsed::kUrlFieldNumber;
const int AppParsed::kMobileUrlFieldNumber;
const int AppParsed::kRequirementsFieldNumber;
const int AppParsed::kIdFieldNumber;
const int AppParsed::kReviewersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppParsed::AppParsed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppParsed)
}
AppParsed::AppParsed(const AppParsed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_updated()) {
    updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_);
  }
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_price()) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  age_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_age()) {
    age_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_);
  }
  age_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_age_reason()) {
    age_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_reason_);
  }
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_size()) {
    size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  mobile_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile_url()) {
    mobile_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_url_);
  }
  requirements_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_requirements()) {
    requirements_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requirements_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  reviewers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reviewers()) {
    reviewers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reviewers_);
  }
  if (from.has_category()) {
    category_ = new ::ru::mail::go::webbase::blobs::AppCategory(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_thumb()) {
    thumb_ = new ::ru::mail::go::webbase::parsing::img::Thumb(*from.thumb_);
  } else {
    thumb_ = NULL;
  }
  if (from.has_developer()) {
    developer_ = new ::ru::mail::go::webbase::blobs::AppDeveloper(*from.developer_);
  } else {
    developer_ = NULL;
  }
  ::memcpy(&platform_, &from.platform_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_rate_) -
    reinterpret_cast<char*>(&platform_)) + sizeof(max_rate_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppParsed)
}

void AppParsed::SharedCtor() {
  _cached_size_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requirements_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reviewers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_rate_) -
      reinterpret_cast<char*>(&category_)) + sizeof(max_rate_));
}

AppParsed::~AppParsed() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppParsed)
  SharedDtor();
}

void AppParsed::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requirements_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reviewers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete thumb_;
  if (this != internal_default_instance()) delete developer_;
}

void AppParsed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppParsed::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppParsed& AppParsed::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppParsed* AppParsed::New(::google::protobuf::Arena* arena) const {
  AppParsed* n = new AppParsed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppParsed::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppParsed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!updated_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*updated_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!price_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*price_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!age_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*age_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!age_reason_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*age_reason_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!size_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*size_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!mobile_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mobile_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(!requirements_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*requirements_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(!reviewers_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*reviewers_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(category_ != NULL);
      category_->::ru::mail::go::webbase::blobs::AppCategory::Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(thumb_ != NULL);
      thumb_->::ru::mail::go::webbase::parsing::img::Thumb::Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(developer_ != NULL);
      developer_->::ru::mail::go::webbase::blobs::AppDeveloper::Clear();
    }
  }
  if (cached_has_bits & 983040u) {
    ::memset(&platform_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_rate_) -
        reinterpret_cast<char*>(&platform_)) + sizeof(max_rate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppParsed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppParsed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 platform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_platform();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string updated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updated()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updated().data(), static_cast<int>(this->updated().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.updated");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.price");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_free = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_free();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string age = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->age().data(), static_cast<int>(this->age().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.age");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string age_reason = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->age_reason().data(), static_cast<int>(this->age_reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.age_reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_size()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->size().data(), static_cast<int>(this->size().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.size");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thumb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double rate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double max_rate = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_max_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_developer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string mobile_url = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.mobile_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string requirements = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requirements()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requirements().data(), static_cast<int>(this->requirements().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.requirements");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reviewers = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reviewers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reviewers().data(), static_cast<int>(this->reviewers().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppParsed.reviewers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppParsed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppParsed)
  return false;
#undef DO_
}

void AppParsed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppParsed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // required uint32 platform = 2;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->platform(), output);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string updated = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updated().data(), static_cast<int>(this->updated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.updated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->updated(), output);
  }

  // required string price = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->price(), output);
  }

  // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->category_, output);
  }

  // required bool is_free = 7;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_free(), output);
  }

  // optional string age = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age().data(), static_cast<int>(this->age().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.age");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->age(), output);
  }

  // optional string age_reason = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age_reason().data(), static_cast<int>(this->age_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.age_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->age_reason(), output);
  }

  // optional string size = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->size(), output);
  }

  // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->thumb_, output);
  }

  // required string description = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->description(), output);
  }

  // required double rate = 13;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->rate(), output);
  }

  // required double max_rate = 14;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->max_rate(), output);
  }

  // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->developer_, output);
  }

  // required string url = 16;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->url(), output);
  }

  // required string mobile_url = 17;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.mobile_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->mobile_url(), output);
  }

  // optional string requirements = 18;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requirements().data(), static_cast<int>(this->requirements().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.requirements");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->requirements(), output);
  }

  // optional string id = 19;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->id(), output);
  }

  // optional string reviewers = 20;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reviewers().data(), static_cast<int>(this->reviewers().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.reviewers");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->reviewers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppParsed)
}

::google::protobuf::uint8* AppParsed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppParsed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // required uint32 platform = 2;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->platform(), target);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string updated = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updated().data(), static_cast<int>(this->updated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.updated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->updated(), target);
  }

  // required string price = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->price(), target);
  }

  // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->category_, deterministic, target);
  }

  // required bool is_free = 7;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_free(), target);
  }

  // optional string age = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age().data(), static_cast<int>(this->age().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.age");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->age(), target);
  }

  // optional string age_reason = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age_reason().data(), static_cast<int>(this->age_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.age_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->age_reason(), target);
  }

  // optional string size = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->size(), target);
  }

  // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->thumb_, deterministic, target);
  }

  // required string description = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->description(), target);
  }

  // required double rate = 13;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->rate(), target);
  }

  // required double max_rate = 14;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->max_rate(), target);
  }

  // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->developer_, deterministic, target);
  }

  // required string url = 16;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->url(), target);
  }

  // required string mobile_url = 17;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.mobile_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->mobile_url(), target);
  }

  // optional string requirements = 18;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requirements().data(), static_cast<int>(this->requirements().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.requirements");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->requirements(), target);
  }

  // optional string id = 19;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->id(), target);
  }

  // optional string reviewers = 20;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reviewers().data(), static_cast<int>(this->reviewers().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppParsed.reviewers");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->reviewers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppParsed)
  return target;
}

size_t AppParsed::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.AppParsed)
  size_t total_size = 0;

  if (has_title()) {
    // required string title = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  if (has_price()) {
    // required string price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  if (has_description()) {
    // required string description = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_url()) {
    // required string url = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_mobile_url()) {
    // required string mobile_url = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_url());
  }

  if (has_thumb()) {
    // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thumb_);
  }

  if (has_platform()) {
    // required uint32 platform = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  if (has_is_free()) {
    // required bool is_free = 7;
    total_size += 1 + 1;
  }

  if (has_rate()) {
    // required double rate = 13;
    total_size += 1 + 8;
  }

  if (has_max_rate()) {
    // required double max_rate = 14;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t AppParsed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppParsed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000f4389) ^ 0x000f4389) == 0) {  // All required fields are present.
    // required string title = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

    // required string price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());

    // required string description = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required string url = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string mobile_url = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_url());

    // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thumb_);

    // required uint32 platform = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());

    // required bool is_free = 7;
    total_size += 1 + 1;

    // required double rate = 13;
    total_size += 1 + 8;

    // required double max_rate = 14;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string updated = 4;
    if (has_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->updated());
    }

  }
  if (_has_bits_[0 / 32] & 112u) {
    // optional string age = 8;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age());
    }

    // optional string age_reason = 9;
    if (has_age_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age_reason());
    }

    // optional string size = 10;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->size());
    }

  }
  if (_has_bits_[8 / 32] & 15360u) {
    // optional string requirements = 18;
    if (has_requirements()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requirements());
    }

    // optional string id = 19;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string reviewers = 20;
    if (has_reviewers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reviewers());
    }

    // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->category_);
    }

  }
  // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 15;
  if (has_developer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->developer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppParsed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppParsed)
  GOOGLE_DCHECK_NE(&from, this);
  const AppParsed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppParsed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppParsed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppParsed)
    MergeFrom(*source);
  }
}

void AppParsed::MergeFrom(const AppParsed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppParsed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_updated();
      updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_price();
      price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_age();
      age_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_age_reason();
      age_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_reason_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_size();
      size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_mobile_url();
      mobile_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_url_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_requirements();
      requirements_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requirements_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_reviewers();
      reviewers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reviewers_);
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_category()->::ru::mail::go::webbase::blobs::AppCategory::MergeFrom(from.category());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_thumb()->::ru::mail::go::webbase::parsing::img::Thumb::MergeFrom(from.thumb());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_developer()->::ru::mail::go::webbase::blobs::AppDeveloper::MergeFrom(from.developer());
    }
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      platform_ = from.platform_;
    }
    if (cached_has_bits & 0x00020000u) {
      is_free_ = from.is_free_;
    }
    if (cached_has_bits & 0x00040000u) {
      rate_ = from.rate_;
    }
    if (cached_has_bits & 0x00080000u) {
      max_rate_ = from.max_rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppParsed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppParsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppParsed::CopyFrom(const AppParsed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppParsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppParsed::IsInitialized() const {
  if ((_has_bits_[0] & 0x000f4389) != 0x000f4389) return false;
  if (has_thumb()) {
    if (!this->thumb_->IsInitialized()) return false;
  }
  return true;
}

void AppParsed::Swap(AppParsed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppParsed::InternalSwap(AppParsed* other) {
  using std::swap;
  title_.Swap(&other->title_);
  version_.Swap(&other->version_);
  updated_.Swap(&other->updated_);
  price_.Swap(&other->price_);
  age_.Swap(&other->age_);
  age_reason_.Swap(&other->age_reason_);
  size_.Swap(&other->size_);
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  mobile_url_.Swap(&other->mobile_url_);
  requirements_.Swap(&other->requirements_);
  id_.Swap(&other->id_);
  reviewers_.Swap(&other->reviewers_);
  swap(category_, other->category_);
  swap(thumb_, other->thumb_);
  swap(developer_, other->developer_);
  swap(platform_, other->platform_);
  swap(is_free_, other->is_free_);
  swap(rate_, other->rate_);
  swap(max_rate_, other->max_rate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppParsed::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppParsed

// required string title = 1;
bool AppParsed::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppParsed::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
void AppParsed::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppParsed::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& AppParsed::title() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.title)
  return title_.GetNoArena();
}
void AppParsed::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.title)
}
#if LANG_CXX11
void AppParsed::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.title)
}
#endif
void AppParsed::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.title)
}
void AppParsed::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.title)
}
::std::string* AppParsed::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_title() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.title)
}

// required uint32 platform = 2;
bool AppParsed::has_platform() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void AppParsed::set_has_platform() {
  _has_bits_[0] |= 0x00010000u;
}
void AppParsed::clear_has_platform() {
  _has_bits_[0] &= ~0x00010000u;
}
void AppParsed::clear_platform() {
  platform_ = 0u;
  clear_has_platform();
}
::google::protobuf::uint32 AppParsed::platform() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.platform)
  return platform_;
}
void AppParsed::set_platform(::google::protobuf::uint32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.platform)
}

// optional string version = 3;
bool AppParsed::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppParsed::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void AppParsed::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppParsed::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& AppParsed::version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.version)
  return version_.GetNoArena();
}
void AppParsed::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.version)
}
#if LANG_CXX11
void AppParsed::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.version)
}
#endif
void AppParsed::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.version)
}
void AppParsed::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.version)
}
::std::string* AppParsed::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.version)
}

// optional string updated = 4;
bool AppParsed::has_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppParsed::set_has_updated() {
  _has_bits_[0] |= 0x00000004u;
}
void AppParsed::clear_has_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppParsed::clear_updated() {
  updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_updated();
}
const ::std::string& AppParsed::updated() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.updated)
  return updated_.GetNoArena();
}
void AppParsed::set_updated(const ::std::string& value) {
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.updated)
}
#if LANG_CXX11
void AppParsed::set_updated(::std::string&& value) {
  set_has_updated();
  updated_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.updated)
}
#endif
void AppParsed::set_updated(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.updated)
}
void AppParsed::set_updated(const char* value, size_t size) {
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.updated)
}
::std::string* AppParsed::mutable_updated() {
  set_has_updated();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.updated)
  return updated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_updated() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.updated)
  clear_has_updated();
  return updated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_updated(::std::string* updated) {
  if (updated != NULL) {
    set_has_updated();
  } else {
    clear_has_updated();
  }
  updated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updated);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.updated)
}

// required string price = 5;
bool AppParsed::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppParsed::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
void AppParsed::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppParsed::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_price();
}
const ::std::string& AppParsed::price() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.price)
  return price_.GetNoArena();
}
void AppParsed::set_price(const ::std::string& value) {
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.price)
}
#if LANG_CXX11
void AppParsed::set_price(::std::string&& value) {
  set_has_price();
  price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.price)
}
#endif
void AppParsed::set_price(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.price)
}
void AppParsed::set_price(const char* value, size_t size) {
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.price)
}
::std::string* AppParsed::mutable_price() {
  set_has_price();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_price() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.price)
  clear_has_price();
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    set_has_price();
  } else {
    clear_has_price();
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.price)
}

// optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
bool AppParsed::has_category() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AppParsed::set_has_category() {
  _has_bits_[0] |= 0x00002000u;
}
void AppParsed::clear_has_category() {
  _has_bits_[0] &= ~0x00002000u;
}
void AppParsed::clear_category() {
  if (category_ != NULL) category_->::ru::mail::go::webbase::blobs::AppCategory::Clear();
  clear_has_category();
}
const ::ru::mail::go::webbase::blobs::AppCategory& AppParsed::category() const {
  const ::ru::mail::go::webbase::blobs::AppCategory* p = category_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.category)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppCategory*>(
      &::ru::mail::go::webbase::blobs::_AppCategory_default_instance_);
}
::ru::mail::go::webbase::blobs::AppCategory* AppParsed::mutable_category() {
  set_has_category();
  if (category_ == NULL) {
    category_ = new ::ru::mail::go::webbase::blobs::AppCategory;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.category)
  return category_;
}
::ru::mail::go::webbase::blobs::AppCategory* AppParsed::release_category() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.category)
  clear_has_category();
  ::ru::mail::go::webbase::blobs::AppCategory* temp = category_;
  category_ = NULL;
  return temp;
}
void AppParsed::set_allocated_category(::ru::mail::go::webbase::blobs::AppCategory* category) {
  delete category_;
  category_ = category;
  if (category) {
    set_has_category();
  } else {
    clear_has_category();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.category)
}

// required bool is_free = 7;
bool AppParsed::has_is_free() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void AppParsed::set_has_is_free() {
  _has_bits_[0] |= 0x00020000u;
}
void AppParsed::clear_has_is_free() {
  _has_bits_[0] &= ~0x00020000u;
}
void AppParsed::clear_is_free() {
  is_free_ = false;
  clear_has_is_free();
}
bool AppParsed::is_free() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.is_free)
  return is_free_;
}
void AppParsed::set_is_free(bool value) {
  set_has_is_free();
  is_free_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.is_free)
}

// optional string age = 8;
bool AppParsed::has_age() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppParsed::set_has_age() {
  _has_bits_[0] |= 0x00000010u;
}
void AppParsed::clear_has_age() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppParsed::clear_age() {
  age_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_age();
}
const ::std::string& AppParsed::age() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.age)
  return age_.GetNoArena();
}
void AppParsed::set_age(const ::std::string& value) {
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.age)
}
#if LANG_CXX11
void AppParsed::set_age(::std::string&& value) {
  set_has_age();
  age_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.age)
}
#endif
void AppParsed::set_age(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.age)
}
void AppParsed::set_age(const char* value, size_t size) {
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.age)
}
::std::string* AppParsed::mutable_age() {
  set_has_age();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.age)
  return age_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_age() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.age)
  clear_has_age();
  return age_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_age(::std::string* age) {
  if (age != NULL) {
    set_has_age();
  } else {
    clear_has_age();
  }
  age_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), age);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.age)
}

// optional string age_reason = 9;
bool AppParsed::has_age_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppParsed::set_has_age_reason() {
  _has_bits_[0] |= 0x00000020u;
}
void AppParsed::clear_has_age_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppParsed::clear_age_reason() {
  age_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_age_reason();
}
const ::std::string& AppParsed::age_reason() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.age_reason)
  return age_reason_.GetNoArena();
}
void AppParsed::set_age_reason(const ::std::string& value) {
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.age_reason)
}
#if LANG_CXX11
void AppParsed::set_age_reason(::std::string&& value) {
  set_has_age_reason();
  age_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.age_reason)
}
#endif
void AppParsed::set_age_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.age_reason)
}
void AppParsed::set_age_reason(const char* value, size_t size) {
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.age_reason)
}
::std::string* AppParsed::mutable_age_reason() {
  set_has_age_reason();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.age_reason)
  return age_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_age_reason() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.age_reason)
  clear_has_age_reason();
  return age_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_age_reason(::std::string* age_reason) {
  if (age_reason != NULL) {
    set_has_age_reason();
  } else {
    clear_has_age_reason();
  }
  age_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), age_reason);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.age_reason)
}

// optional string size = 10;
bool AppParsed::has_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppParsed::set_has_size() {
  _has_bits_[0] |= 0x00000040u;
}
void AppParsed::clear_has_size() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppParsed::clear_size() {
  size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_size();
}
const ::std::string& AppParsed::size() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.size)
  return size_.GetNoArena();
}
void AppParsed::set_size(const ::std::string& value) {
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.size)
}
#if LANG_CXX11
void AppParsed::set_size(::std::string&& value) {
  set_has_size();
  size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.size)
}
#endif
void AppParsed::set_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.size)
}
void AppParsed::set_size(const char* value, size_t size) {
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.size)
}
::std::string* AppParsed::mutable_size() {
  set_has_size();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.size)
  return size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_size() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.size)
  clear_has_size();
  return size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_size(::std::string* size) {
  if (size != NULL) {
    set_has_size();
  } else {
    clear_has_size();
  }
  size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), size);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.size)
}

// required .ru.mail.go.webbase.parsing.img.Thumb thumb = 11;
bool AppParsed::has_thumb() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void AppParsed::set_has_thumb() {
  _has_bits_[0] |= 0x00004000u;
}
void AppParsed::clear_has_thumb() {
  _has_bits_[0] &= ~0x00004000u;
}
void AppParsed::clear_thumb() {
  if (thumb_ != NULL) thumb_->::ru::mail::go::webbase::parsing::img::Thumb::Clear();
  clear_has_thumb();
}
const ::ru::mail::go::webbase::parsing::img::Thumb& AppParsed::thumb() const {
  const ::ru::mail::go::webbase::parsing::img::Thumb* p = thumb_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.thumb)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::parsing::img::Thumb*>(
      &::ru::mail::go::webbase::parsing::img::_Thumb_default_instance_);
}
::ru::mail::go::webbase::parsing::img::Thumb* AppParsed::mutable_thumb() {
  set_has_thumb();
  if (thumb_ == NULL) {
    thumb_ = new ::ru::mail::go::webbase::parsing::img::Thumb;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.thumb)
  return thumb_;
}
::ru::mail::go::webbase::parsing::img::Thumb* AppParsed::release_thumb() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.thumb)
  clear_has_thumb();
  ::ru::mail::go::webbase::parsing::img::Thumb* temp = thumb_;
  thumb_ = NULL;
  return temp;
}
void AppParsed::set_allocated_thumb(::ru::mail::go::webbase::parsing::img::Thumb* thumb) {
  delete thumb_;
  thumb_ = thumb;
  if (thumb) {
    set_has_thumb();
  } else {
    clear_has_thumb();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.thumb)
}

// required string description = 12;
bool AppParsed::has_description() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppParsed::set_has_description() {
  _has_bits_[0] |= 0x00000080u;
}
void AppParsed::clear_has_description() {
  _has_bits_[0] &= ~0x00000080u;
}
void AppParsed::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& AppParsed::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.description)
  return description_.GetNoArena();
}
void AppParsed::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.description)
}
#if LANG_CXX11
void AppParsed::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.description)
}
#endif
void AppParsed::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.description)
}
void AppParsed::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.description)
}
::std::string* AppParsed::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.description)
}

// required double rate = 13;
bool AppParsed::has_rate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void AppParsed::set_has_rate() {
  _has_bits_[0] |= 0x00040000u;
}
void AppParsed::clear_has_rate() {
  _has_bits_[0] &= ~0x00040000u;
}
void AppParsed::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
double AppParsed::rate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.rate)
  return rate_;
}
void AppParsed::set_rate(double value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.rate)
}

// required double max_rate = 14;
bool AppParsed::has_max_rate() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void AppParsed::set_has_max_rate() {
  _has_bits_[0] |= 0x00080000u;
}
void AppParsed::clear_has_max_rate() {
  _has_bits_[0] &= ~0x00080000u;
}
void AppParsed::clear_max_rate() {
  max_rate_ = 0;
  clear_has_max_rate();
}
double AppParsed::max_rate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.max_rate)
  return max_rate_;
}
void AppParsed::set_max_rate(double value) {
  set_has_max_rate();
  max_rate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.max_rate)
}

// optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 15;
bool AppParsed::has_developer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void AppParsed::set_has_developer() {
  _has_bits_[0] |= 0x00008000u;
}
void AppParsed::clear_has_developer() {
  _has_bits_[0] &= ~0x00008000u;
}
void AppParsed::clear_developer() {
  if (developer_ != NULL) developer_->::ru::mail::go::webbase::blobs::AppDeveloper::Clear();
  clear_has_developer();
}
const ::ru::mail::go::webbase::blobs::AppDeveloper& AppParsed::developer() const {
  const ::ru::mail::go::webbase::blobs::AppDeveloper* p = developer_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.developer)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppDeveloper*>(
      &::ru::mail::go::webbase::blobs::_AppDeveloper_default_instance_);
}
::ru::mail::go::webbase::blobs::AppDeveloper* AppParsed::mutable_developer() {
  set_has_developer();
  if (developer_ == NULL) {
    developer_ = new ::ru::mail::go::webbase::blobs::AppDeveloper;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.developer)
  return developer_;
}
::ru::mail::go::webbase::blobs::AppDeveloper* AppParsed::release_developer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.developer)
  clear_has_developer();
  ::ru::mail::go::webbase::blobs::AppDeveloper* temp = developer_;
  developer_ = NULL;
  return temp;
}
void AppParsed::set_allocated_developer(::ru::mail::go::webbase::blobs::AppDeveloper* developer) {
  delete developer_;
  developer_ = developer;
  if (developer) {
    set_has_developer();
  } else {
    clear_has_developer();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.developer)
}

// required string url = 16;
bool AppParsed::has_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AppParsed::set_has_url() {
  _has_bits_[0] |= 0x00000100u;
}
void AppParsed::clear_has_url() {
  _has_bits_[0] &= ~0x00000100u;
}
void AppParsed::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& AppParsed::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.url)
  return url_.GetNoArena();
}
void AppParsed::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.url)
}
#if LANG_CXX11
void AppParsed::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.url)
}
#endif
void AppParsed::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.url)
}
void AppParsed::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.url)
}
::std::string* AppParsed::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.url)
}

// required string mobile_url = 17;
bool AppParsed::has_mobile_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AppParsed::set_has_mobile_url() {
  _has_bits_[0] |= 0x00000200u;
}
void AppParsed::clear_has_mobile_url() {
  _has_bits_[0] &= ~0x00000200u;
}
void AppParsed::clear_mobile_url() {
  mobile_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mobile_url();
}
const ::std::string& AppParsed::mobile_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
  return mobile_url_.GetNoArena();
}
void AppParsed::set_mobile_url(const ::std::string& value) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
}
#if LANG_CXX11
void AppParsed::set_mobile_url(::std::string&& value) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
}
#endif
void AppParsed::set_mobile_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
}
void AppParsed::set_mobile_url(const char* value, size_t size) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
}
::std::string* AppParsed::mutable_mobile_url() {
  set_has_mobile_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
  return mobile_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_mobile_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
  clear_has_mobile_url();
  return mobile_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_mobile_url(::std::string* mobile_url) {
  if (mobile_url != NULL) {
    set_has_mobile_url();
  } else {
    clear_has_mobile_url();
  }
  mobile_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.mobile_url)
}

// optional string requirements = 18;
bool AppParsed::has_requirements() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AppParsed::set_has_requirements() {
  _has_bits_[0] |= 0x00000400u;
}
void AppParsed::clear_has_requirements() {
  _has_bits_[0] &= ~0x00000400u;
}
void AppParsed::clear_requirements() {
  requirements_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_requirements();
}
const ::std::string& AppParsed::requirements() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.requirements)
  return requirements_.GetNoArena();
}
void AppParsed::set_requirements(const ::std::string& value) {
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.requirements)
}
#if LANG_CXX11
void AppParsed::set_requirements(::std::string&& value) {
  set_has_requirements();
  requirements_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.requirements)
}
#endif
void AppParsed::set_requirements(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.requirements)
}
void AppParsed::set_requirements(const char* value, size_t size) {
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.requirements)
}
::std::string* AppParsed::mutable_requirements() {
  set_has_requirements();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.requirements)
  return requirements_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_requirements() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.requirements)
  clear_has_requirements();
  return requirements_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_requirements(::std::string* requirements) {
  if (requirements != NULL) {
    set_has_requirements();
  } else {
    clear_has_requirements();
  }
  requirements_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requirements);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.requirements)
}

// optional string id = 19;
bool AppParsed::has_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AppParsed::set_has_id() {
  _has_bits_[0] |= 0x00000800u;
}
void AppParsed::clear_has_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void AppParsed::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& AppParsed::id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.id)
  return id_.GetNoArena();
}
void AppParsed::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.id)
}
#if LANG_CXX11
void AppParsed::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.id)
}
#endif
void AppParsed::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.id)
}
void AppParsed::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.id)
}
::std::string* AppParsed::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.id)
}

// optional string reviewers = 20;
bool AppParsed::has_reviewers() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AppParsed::set_has_reviewers() {
  _has_bits_[0] |= 0x00001000u;
}
void AppParsed::clear_has_reviewers() {
  _has_bits_[0] &= ~0x00001000u;
}
void AppParsed::clear_reviewers() {
  reviewers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reviewers();
}
const ::std::string& AppParsed::reviewers() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppParsed.reviewers)
  return reviewers_.GetNoArena();
}
void AppParsed::set_reviewers(const ::std::string& value) {
  set_has_reviewers();
  reviewers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppParsed.reviewers)
}
#if LANG_CXX11
void AppParsed::set_reviewers(::std::string&& value) {
  set_has_reviewers();
  reviewers_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppParsed.reviewers)
}
#endif
void AppParsed::set_reviewers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reviewers();
  reviewers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppParsed.reviewers)
}
void AppParsed::set_reviewers(const char* value, size_t size) {
  set_has_reviewers();
  reviewers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppParsed.reviewers)
}
::std::string* AppParsed::mutable_reviewers() {
  set_has_reviewers();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppParsed.reviewers)
  return reviewers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppParsed::release_reviewers() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppParsed.reviewers)
  clear_has_reviewers();
  return reviewers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppParsed::set_allocated_reviewers(::std::string* reviewers) {
  if (reviewers != NULL) {
    set_has_reviewers();
  } else {
    clear_has_reviewers();
  }
  reviewers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reviewers);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppParsed.reviewers)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppProperties::kTitleFieldNumber;
const int AppProperties::kPlatformFieldNumber;
const int AppProperties::kVersionFieldNumber;
const int AppProperties::kUpdatedFieldNumber;
const int AppProperties::kPriceFieldNumber;
const int AppProperties::kCategoryFieldNumber;
const int AppProperties::kIsFreeFieldNumber;
const int AppProperties::kAgeFieldNumber;
const int AppProperties::kAgeReasonFieldNumber;
const int AppProperties::kSizeFieldNumber;
const int AppProperties::kDescriptionFieldNumber;
const int AppProperties::kRateFieldNumber;
const int AppProperties::kMaxRateFieldNumber;
const int AppProperties::kDeveloperFieldNumber;
const int AppProperties::kUrlFieldNumber;
const int AppProperties::kMobileUrlFieldNumber;
const int AppProperties::kRequirementsFieldNumber;
const int AppProperties::kIdFieldNumber;
const int AppProperties::kReviewersFieldNumber;
const int AppProperties::kRubMaskFieldNumber;
const int AppProperties::kIsBannedFieldNumber;
const int AppProperties::kCategoryIdsFieldNumber;
const int AppProperties::kPaidContentFieldNumber;
const int AppProperties::kIsTopDevFieldNumber;
const int AppProperties::kIsEditorChoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppProperties::AppProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppProperties)
}
AppProperties::AppProperties(const AppProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_updated()) {
    updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_);
  }
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_price()) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  age_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_age()) {
    age_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_);
  }
  age_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_age_reason()) {
    age_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_reason_);
  }
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_size()) {
    size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  mobile_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile_url()) {
    mobile_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_url_);
  }
  requirements_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_requirements()) {
    requirements_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requirements_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  categoryids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_categoryids()) {
    categoryids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.categoryids_);
  }
  if (from.has_category()) {
    category_ = new ::ru::mail::go::webbase::blobs::AppCategory(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_developer()) {
    developer_ = new ::ru::mail::go::webbase::blobs::AppDeveloper(*from.developer_);
  } else {
    developer_ = NULL;
  }
  ::memcpy(&rate_, &from.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_editor_choice_) -
    reinterpret_cast<char*>(&rate_)) + sizeof(is_editor_choice_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppProperties)
}

void AppProperties::SharedCtor() {
  _cached_size_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requirements_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  categoryids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_editor_choice_) -
      reinterpret_cast<char*>(&category_)) + sizeof(is_editor_choice_));
}

AppProperties::~AppProperties() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppProperties)
  SharedDtor();
}

void AppProperties::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requirements_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  categoryids_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete developer_;
}

void AppProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppProperties::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppProperties& AppProperties::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppProperties* AppProperties::New(::google::protobuf::Arena* arena) const {
  AppProperties* n = new AppProperties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!updated_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*updated_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!price_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*price_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!age_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*age_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!age_reason_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*age_reason_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!size_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*size_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!mobile_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mobile_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(!requirements_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*requirements_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(!categoryids_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*categoryids_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(category_ != NULL);
      category_->::ru::mail::go::webbase::blobs::AppCategory::Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(developer_ != NULL);
      developer_->::ru::mail::go::webbase::blobs::AppDeveloper::Clear();
    }
  }
  rate_ = 0;
  if (cached_has_bits & 16711680u) {
    ::memset(&max_rate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reviewers_) -
        reinterpret_cast<char*>(&max_rate_)) + sizeof(reviewers_));
  }
  is_editor_choice_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 platform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_platform();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string updated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updated()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updated().data(), static_cast<int>(this->updated().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.updated");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.price");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_free = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_free();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string age = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->age().data(), static_cast<int>(this->age().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.age");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string age_reason = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->age_reason().data(), static_cast<int>(this->age_reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.age_reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_size()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->size().data(), static_cast<int>(this->size().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.size");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double rate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double max_rate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_max_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_developer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string url = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string mobile_url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.mobile_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string requirements = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requirements()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requirements().data(), static_cast<int>(this->requirements().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.requirements");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reviewers = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_reviewers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reviewers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 rub_mask = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_rub_mask();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rub_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_banned = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_is_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string categoryIds = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_categoryids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->categoryids().data(), static_cast<int>(this->categoryids().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppProperties.categoryIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool paid_content = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_paid_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paid_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_top_dev = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_is_top_dev();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_top_dev_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_editor_choice = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_is_editor_choice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_editor_choice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppProperties)
  return false;
#undef DO_
}

void AppProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // required uint32 platform = 2;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->platform(), output);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string updated = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updated().data(), static_cast<int>(this->updated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.updated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->updated(), output);
  }

  // required string price = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->price(), output);
  }

  // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->category_, output);
  }

  // required bool is_free = 7;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_free(), output);
  }

  // optional string age = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age().data(), static_cast<int>(this->age().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.age");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->age(), output);
  }

  // optional string age_reason = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age_reason().data(), static_cast<int>(this->age_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.age_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->age_reason(), output);
  }

  // optional string size = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->size(), output);
  }

  // required string description = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->description(), output);
  }

  // required double rate = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->rate(), output);
  }

  // required double max_rate = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->max_rate(), output);
  }

  // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->developer_, output);
  }

  // required string url = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->url(), output);
  }

  // required string mobile_url = 16;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.mobile_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->mobile_url(), output);
  }

  // optional string requirements = 17;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requirements().data(), static_cast<int>(this->requirements().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.requirements");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->requirements(), output);
  }

  // optional string id = 18;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->id(), output);
  }

  // optional uint32 reviewers = 19;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->reviewers(), output);
  }

  // optional uint64 rub_mask = 20;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->rub_mask(), output);
  }

  // optional bool is_banned = 21;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->is_banned(), output);
  }

  // optional string categoryIds = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categoryids().data(), static_cast<int>(this->categoryids().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.categoryIds");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->categoryids(), output);
  }

  // optional bool paid_content = 23;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->paid_content(), output);
  }

  // optional bool is_top_dev = 24;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->is_top_dev(), output);
  }

  // optional bool is_editor_choice = 25;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->is_editor_choice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppProperties)
}

::google::protobuf::uint8* AppProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // required uint32 platform = 2;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->platform(), target);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string updated = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updated().data(), static_cast<int>(this->updated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.updated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->updated(), target);
  }

  // required string price = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->price(), target);
  }

  // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->category_, deterministic, target);
  }

  // required bool is_free = 7;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_free(), target);
  }

  // optional string age = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age().data(), static_cast<int>(this->age().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.age");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->age(), target);
  }

  // optional string age_reason = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->age_reason().data(), static_cast<int>(this->age_reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.age_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->age_reason(), target);
  }

  // optional string size = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->size(), target);
  }

  // required string description = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->description(), target);
  }

  // required double rate = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->rate(), target);
  }

  // required double max_rate = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->max_rate(), target);
  }

  // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->developer_, deterministic, target);
  }

  // required string url = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->url(), target);
  }

  // required string mobile_url = 16;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile_url().data(), static_cast<int>(this->mobile_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.mobile_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->mobile_url(), target);
  }

  // optional string requirements = 17;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requirements().data(), static_cast<int>(this->requirements().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.requirements");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->requirements(), target);
  }

  // optional string id = 18;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->id(), target);
  }

  // optional uint32 reviewers = 19;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->reviewers(), target);
  }

  // optional uint64 rub_mask = 20;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->rub_mask(), target);
  }

  // optional bool is_banned = 21;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->is_banned(), target);
  }

  // optional string categoryIds = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categoryids().data(), static_cast<int>(this->categoryids().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppProperties.categoryIds");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->categoryids(), target);
  }

  // optional bool paid_content = 23;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->paid_content(), target);
  }

  // optional bool is_top_dev = 24;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->is_top_dev(), target);
  }

  // optional bool is_editor_choice = 25;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->is_editor_choice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppProperties)
  return target;
}

size_t AppProperties::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.AppProperties)
  size_t total_size = 0;

  if (has_title()) {
    // required string title = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  if (has_price()) {
    // required string price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  if (has_description()) {
    // required string description = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_url()) {
    // required string url = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_mobile_url()) {
    // required string mobile_url = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_url());
  }

  if (has_rate()) {
    // required double rate = 12;
    total_size += 1 + 8;
  }

  if (has_max_rate()) {
    // required double max_rate = 13;
    total_size += 1 + 8;
  }

  if (has_platform()) {
    // required uint32 platform = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  if (has_is_free()) {
    // required bool is_free = 7;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t AppProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppProperties)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00078389) ^ 0x00078389) == 0) {  // All required fields are present.
    // required string title = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

    // required string price = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());

    // required string description = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required string url = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string mobile_url = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_url());

    // required double rate = 12;
    total_size += 1 + 8;

    // required double max_rate = 13;
    total_size += 1 + 8;

    // required uint32 platform = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());

    // required bool is_free = 7;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string updated = 4;
    if (has_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->updated());
    }

  }
  if (_has_bits_[0 / 32] & 112u) {
    // optional string age = 8;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age());
    }

    // optional string age_reason = 9;
    if (has_age_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age_reason());
    }

    // optional string size = 10;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->size());
    }

  }
  if (_has_bits_[8 / 32] & 31744u) {
    // optional string requirements = 17;
    if (has_requirements()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requirements());
    }

    // optional string id = 18;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string categoryIds = 22;
    if (has_categoryids()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->categoryids());
    }

    // optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->category_);
    }

    // optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 14;
    if (has_developer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->developer_);
    }

  }
  if (_has_bits_[16 / 32] & 16252928u) {
    // optional bool is_banned = 21;
    if (has_is_banned()) {
      total_size += 2 + 1;
    }

    // optional bool paid_content = 23;
    if (has_paid_content()) {
      total_size += 2 + 1;
    }

    // optional bool is_top_dev = 24;
    if (has_is_top_dev()) {
      total_size += 2 + 1;
    }

    // optional uint64 rub_mask = 20;
    if (has_rub_mask()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rub_mask());
    }

    // optional uint32 reviewers = 19;
    if (has_reviewers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reviewers());
    }

  }
  // optional bool is_editor_choice = 25;
  if (has_is_editor_choice()) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AppProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppProperties)
    MergeFrom(*source);
  }
}

void AppProperties::MergeFrom(const AppProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_updated();
      updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_price();
      price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_age();
      age_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_age_reason();
      age_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.age_reason_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_size();
      size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_mobile_url();
      mobile_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_url_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_requirements();
      requirements_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requirements_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_categoryids();
      categoryids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.categoryids_);
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_category()->::ru::mail::go::webbase::blobs::AppCategory::MergeFrom(from.category());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_developer()->::ru::mail::go::webbase::blobs::AppDeveloper::MergeFrom(from.developer());
    }
    if (cached_has_bits & 0x00008000u) {
      rate_ = from.rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      max_rate_ = from.max_rate_;
    }
    if (cached_has_bits & 0x00020000u) {
      platform_ = from.platform_;
    }
    if (cached_has_bits & 0x00040000u) {
      is_free_ = from.is_free_;
    }
    if (cached_has_bits & 0x00080000u) {
      is_banned_ = from.is_banned_;
    }
    if (cached_has_bits & 0x00100000u) {
      paid_content_ = from.paid_content_;
    }
    if (cached_has_bits & 0x00200000u) {
      is_top_dev_ = from.is_top_dev_;
    }
    if (cached_has_bits & 0x00400000u) {
      rub_mask_ = from.rub_mask_;
    }
    if (cached_has_bits & 0x00800000u) {
      reviewers_ = from.reviewers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    set_is_editor_choice(from.is_editor_choice());
  }
}

void AppProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppProperties::CopyFrom(const AppProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppProperties::IsInitialized() const {
  if ((_has_bits_[0] & 0x00078389) != 0x00078389) return false;
  return true;
}

void AppProperties::Swap(AppProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppProperties::InternalSwap(AppProperties* other) {
  using std::swap;
  title_.Swap(&other->title_);
  version_.Swap(&other->version_);
  updated_.Swap(&other->updated_);
  price_.Swap(&other->price_);
  age_.Swap(&other->age_);
  age_reason_.Swap(&other->age_reason_);
  size_.Swap(&other->size_);
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  mobile_url_.Swap(&other->mobile_url_);
  requirements_.Swap(&other->requirements_);
  id_.Swap(&other->id_);
  categoryids_.Swap(&other->categoryids_);
  swap(category_, other->category_);
  swap(developer_, other->developer_);
  swap(rate_, other->rate_);
  swap(max_rate_, other->max_rate_);
  swap(platform_, other->platform_);
  swap(is_free_, other->is_free_);
  swap(is_banned_, other->is_banned_);
  swap(paid_content_, other->paid_content_);
  swap(is_top_dev_, other->is_top_dev_);
  swap(rub_mask_, other->rub_mask_);
  swap(reviewers_, other->reviewers_);
  swap(is_editor_choice_, other->is_editor_choice_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppProperties::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppProperties

// required string title = 1;
bool AppProperties::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppProperties::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
void AppProperties::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppProperties::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& AppProperties::title() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.title)
  return title_.GetNoArena();
}
void AppProperties::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.title)
}
#if LANG_CXX11
void AppProperties::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.title)
}
#endif
void AppProperties::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.title)
}
void AppProperties::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.title)
}
::std::string* AppProperties::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_title() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.title)
}

// required uint32 platform = 2;
bool AppProperties::has_platform() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void AppProperties::set_has_platform() {
  _has_bits_[0] |= 0x00020000u;
}
void AppProperties::clear_has_platform() {
  _has_bits_[0] &= ~0x00020000u;
}
void AppProperties::clear_platform() {
  platform_ = 0u;
  clear_has_platform();
}
::google::protobuf::uint32 AppProperties::platform() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.platform)
  return platform_;
}
void AppProperties::set_platform(::google::protobuf::uint32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.platform)
}

// optional string version = 3;
bool AppProperties::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppProperties::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void AppProperties::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppProperties::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& AppProperties::version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.version)
  return version_.GetNoArena();
}
void AppProperties::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.version)
}
#if LANG_CXX11
void AppProperties::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.version)
}
#endif
void AppProperties::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.version)
}
void AppProperties::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.version)
}
::std::string* AppProperties::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.version)
}

// optional string updated = 4;
bool AppProperties::has_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppProperties::set_has_updated() {
  _has_bits_[0] |= 0x00000004u;
}
void AppProperties::clear_has_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppProperties::clear_updated() {
  updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_updated();
}
const ::std::string& AppProperties::updated() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.updated)
  return updated_.GetNoArena();
}
void AppProperties::set_updated(const ::std::string& value) {
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.updated)
}
#if LANG_CXX11
void AppProperties::set_updated(::std::string&& value) {
  set_has_updated();
  updated_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.updated)
}
#endif
void AppProperties::set_updated(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.updated)
}
void AppProperties::set_updated(const char* value, size_t size) {
  set_has_updated();
  updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.updated)
}
::std::string* AppProperties::mutable_updated() {
  set_has_updated();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.updated)
  return updated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_updated() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.updated)
  clear_has_updated();
  return updated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_updated(::std::string* updated) {
  if (updated != NULL) {
    set_has_updated();
  } else {
    clear_has_updated();
  }
  updated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updated);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.updated)
}

// required string price = 5;
bool AppProperties::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppProperties::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
void AppProperties::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppProperties::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_price();
}
const ::std::string& AppProperties::price() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.price)
  return price_.GetNoArena();
}
void AppProperties::set_price(const ::std::string& value) {
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.price)
}
#if LANG_CXX11
void AppProperties::set_price(::std::string&& value) {
  set_has_price();
  price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.price)
}
#endif
void AppProperties::set_price(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.price)
}
void AppProperties::set_price(const char* value, size_t size) {
  set_has_price();
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.price)
}
::std::string* AppProperties::mutable_price() {
  set_has_price();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_price() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.price)
  clear_has_price();
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    set_has_price();
  } else {
    clear_has_price();
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.price)
}

// optional .ru.mail.go.webbase.blobs.AppCategory category = 6;
bool AppProperties::has_category() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AppProperties::set_has_category() {
  _has_bits_[0] |= 0x00002000u;
}
void AppProperties::clear_has_category() {
  _has_bits_[0] &= ~0x00002000u;
}
void AppProperties::clear_category() {
  if (category_ != NULL) category_->::ru::mail::go::webbase::blobs::AppCategory::Clear();
  clear_has_category();
}
const ::ru::mail::go::webbase::blobs::AppCategory& AppProperties::category() const {
  const ::ru::mail::go::webbase::blobs::AppCategory* p = category_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.category)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppCategory*>(
      &::ru::mail::go::webbase::blobs::_AppCategory_default_instance_);
}
::ru::mail::go::webbase::blobs::AppCategory* AppProperties::mutable_category() {
  set_has_category();
  if (category_ == NULL) {
    category_ = new ::ru::mail::go::webbase::blobs::AppCategory;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.category)
  return category_;
}
::ru::mail::go::webbase::blobs::AppCategory* AppProperties::release_category() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.category)
  clear_has_category();
  ::ru::mail::go::webbase::blobs::AppCategory* temp = category_;
  category_ = NULL;
  return temp;
}
void AppProperties::set_allocated_category(::ru::mail::go::webbase::blobs::AppCategory* category) {
  delete category_;
  category_ = category;
  if (category) {
    set_has_category();
  } else {
    clear_has_category();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.category)
}

// required bool is_free = 7;
bool AppProperties::has_is_free() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void AppProperties::set_has_is_free() {
  _has_bits_[0] |= 0x00040000u;
}
void AppProperties::clear_has_is_free() {
  _has_bits_[0] &= ~0x00040000u;
}
void AppProperties::clear_is_free() {
  is_free_ = false;
  clear_has_is_free();
}
bool AppProperties::is_free() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.is_free)
  return is_free_;
}
void AppProperties::set_is_free(bool value) {
  set_has_is_free();
  is_free_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.is_free)
}

// optional string age = 8;
bool AppProperties::has_age() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppProperties::set_has_age() {
  _has_bits_[0] |= 0x00000010u;
}
void AppProperties::clear_has_age() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppProperties::clear_age() {
  age_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_age();
}
const ::std::string& AppProperties::age() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.age)
  return age_.GetNoArena();
}
void AppProperties::set_age(const ::std::string& value) {
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.age)
}
#if LANG_CXX11
void AppProperties::set_age(::std::string&& value) {
  set_has_age();
  age_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.age)
}
#endif
void AppProperties::set_age(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.age)
}
void AppProperties::set_age(const char* value, size_t size) {
  set_has_age();
  age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.age)
}
::std::string* AppProperties::mutable_age() {
  set_has_age();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.age)
  return age_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_age() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.age)
  clear_has_age();
  return age_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_age(::std::string* age) {
  if (age != NULL) {
    set_has_age();
  } else {
    clear_has_age();
  }
  age_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), age);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.age)
}

// optional string age_reason = 9;
bool AppProperties::has_age_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppProperties::set_has_age_reason() {
  _has_bits_[0] |= 0x00000020u;
}
void AppProperties::clear_has_age_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppProperties::clear_age_reason() {
  age_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_age_reason();
}
const ::std::string& AppProperties::age_reason() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.age_reason)
  return age_reason_.GetNoArena();
}
void AppProperties::set_age_reason(const ::std::string& value) {
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.age_reason)
}
#if LANG_CXX11
void AppProperties::set_age_reason(::std::string&& value) {
  set_has_age_reason();
  age_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.age_reason)
}
#endif
void AppProperties::set_age_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.age_reason)
}
void AppProperties::set_age_reason(const char* value, size_t size) {
  set_has_age_reason();
  age_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.age_reason)
}
::std::string* AppProperties::mutable_age_reason() {
  set_has_age_reason();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.age_reason)
  return age_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_age_reason() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.age_reason)
  clear_has_age_reason();
  return age_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_age_reason(::std::string* age_reason) {
  if (age_reason != NULL) {
    set_has_age_reason();
  } else {
    clear_has_age_reason();
  }
  age_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), age_reason);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.age_reason)
}

// optional string size = 10;
bool AppProperties::has_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppProperties::set_has_size() {
  _has_bits_[0] |= 0x00000040u;
}
void AppProperties::clear_has_size() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppProperties::clear_size() {
  size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_size();
}
const ::std::string& AppProperties::size() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.size)
  return size_.GetNoArena();
}
void AppProperties::set_size(const ::std::string& value) {
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.size)
}
#if LANG_CXX11
void AppProperties::set_size(::std::string&& value) {
  set_has_size();
  size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.size)
}
#endif
void AppProperties::set_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.size)
}
void AppProperties::set_size(const char* value, size_t size) {
  set_has_size();
  size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.size)
}
::std::string* AppProperties::mutable_size() {
  set_has_size();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.size)
  return size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_size() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.size)
  clear_has_size();
  return size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_size(::std::string* size) {
  if (size != NULL) {
    set_has_size();
  } else {
    clear_has_size();
  }
  size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), size);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.size)
}

// required string description = 11;
bool AppProperties::has_description() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppProperties::set_has_description() {
  _has_bits_[0] |= 0x00000080u;
}
void AppProperties::clear_has_description() {
  _has_bits_[0] &= ~0x00000080u;
}
void AppProperties::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& AppProperties::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.description)
  return description_.GetNoArena();
}
void AppProperties::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.description)
}
#if LANG_CXX11
void AppProperties::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.description)
}
#endif
void AppProperties::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.description)
}
void AppProperties::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.description)
}
::std::string* AppProperties::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.description)
}

// required double rate = 12;
bool AppProperties::has_rate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void AppProperties::set_has_rate() {
  _has_bits_[0] |= 0x00008000u;
}
void AppProperties::clear_has_rate() {
  _has_bits_[0] &= ~0x00008000u;
}
void AppProperties::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
double AppProperties::rate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.rate)
  return rate_;
}
void AppProperties::set_rate(double value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.rate)
}

// required double max_rate = 13;
bool AppProperties::has_max_rate() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void AppProperties::set_has_max_rate() {
  _has_bits_[0] |= 0x00010000u;
}
void AppProperties::clear_has_max_rate() {
  _has_bits_[0] &= ~0x00010000u;
}
void AppProperties::clear_max_rate() {
  max_rate_ = 0;
  clear_has_max_rate();
}
double AppProperties::max_rate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.max_rate)
  return max_rate_;
}
void AppProperties::set_max_rate(double value) {
  set_has_max_rate();
  max_rate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.max_rate)
}

// optional .ru.mail.go.webbase.blobs.AppDeveloper developer = 14;
bool AppProperties::has_developer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void AppProperties::set_has_developer() {
  _has_bits_[0] |= 0x00004000u;
}
void AppProperties::clear_has_developer() {
  _has_bits_[0] &= ~0x00004000u;
}
void AppProperties::clear_developer() {
  if (developer_ != NULL) developer_->::ru::mail::go::webbase::blobs::AppDeveloper::Clear();
  clear_has_developer();
}
const ::ru::mail::go::webbase::blobs::AppDeveloper& AppProperties::developer() const {
  const ::ru::mail::go::webbase::blobs::AppDeveloper* p = developer_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.developer)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppDeveloper*>(
      &::ru::mail::go::webbase::blobs::_AppDeveloper_default_instance_);
}
::ru::mail::go::webbase::blobs::AppDeveloper* AppProperties::mutable_developer() {
  set_has_developer();
  if (developer_ == NULL) {
    developer_ = new ::ru::mail::go::webbase::blobs::AppDeveloper;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.developer)
  return developer_;
}
::ru::mail::go::webbase::blobs::AppDeveloper* AppProperties::release_developer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.developer)
  clear_has_developer();
  ::ru::mail::go::webbase::blobs::AppDeveloper* temp = developer_;
  developer_ = NULL;
  return temp;
}
void AppProperties::set_allocated_developer(::ru::mail::go::webbase::blobs::AppDeveloper* developer) {
  delete developer_;
  developer_ = developer;
  if (developer) {
    set_has_developer();
  } else {
    clear_has_developer();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.developer)
}

// required string url = 15;
bool AppProperties::has_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AppProperties::set_has_url() {
  _has_bits_[0] |= 0x00000100u;
}
void AppProperties::clear_has_url() {
  _has_bits_[0] &= ~0x00000100u;
}
void AppProperties::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& AppProperties::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.url)
  return url_.GetNoArena();
}
void AppProperties::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.url)
}
#if LANG_CXX11
void AppProperties::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.url)
}
#endif
void AppProperties::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.url)
}
void AppProperties::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.url)
}
::std::string* AppProperties::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.url)
}

// required string mobile_url = 16;
bool AppProperties::has_mobile_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AppProperties::set_has_mobile_url() {
  _has_bits_[0] |= 0x00000200u;
}
void AppProperties::clear_has_mobile_url() {
  _has_bits_[0] &= ~0x00000200u;
}
void AppProperties::clear_mobile_url() {
  mobile_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mobile_url();
}
const ::std::string& AppProperties::mobile_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
  return mobile_url_.GetNoArena();
}
void AppProperties::set_mobile_url(const ::std::string& value) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
}
#if LANG_CXX11
void AppProperties::set_mobile_url(::std::string&& value) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
}
#endif
void AppProperties::set_mobile_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
}
void AppProperties::set_mobile_url(const char* value, size_t size) {
  set_has_mobile_url();
  mobile_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
}
::std::string* AppProperties::mutable_mobile_url() {
  set_has_mobile_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
  return mobile_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_mobile_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
  clear_has_mobile_url();
  return mobile_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_mobile_url(::std::string* mobile_url) {
  if (mobile_url != NULL) {
    set_has_mobile_url();
  } else {
    clear_has_mobile_url();
  }
  mobile_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.mobile_url)
}

// optional string requirements = 17;
bool AppProperties::has_requirements() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AppProperties::set_has_requirements() {
  _has_bits_[0] |= 0x00000400u;
}
void AppProperties::clear_has_requirements() {
  _has_bits_[0] &= ~0x00000400u;
}
void AppProperties::clear_requirements() {
  requirements_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_requirements();
}
const ::std::string& AppProperties::requirements() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.requirements)
  return requirements_.GetNoArena();
}
void AppProperties::set_requirements(const ::std::string& value) {
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.requirements)
}
#if LANG_CXX11
void AppProperties::set_requirements(::std::string&& value) {
  set_has_requirements();
  requirements_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.requirements)
}
#endif
void AppProperties::set_requirements(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.requirements)
}
void AppProperties::set_requirements(const char* value, size_t size) {
  set_has_requirements();
  requirements_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.requirements)
}
::std::string* AppProperties::mutable_requirements() {
  set_has_requirements();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.requirements)
  return requirements_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_requirements() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.requirements)
  clear_has_requirements();
  return requirements_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_requirements(::std::string* requirements) {
  if (requirements != NULL) {
    set_has_requirements();
  } else {
    clear_has_requirements();
  }
  requirements_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requirements);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.requirements)
}

// optional string id = 18;
bool AppProperties::has_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AppProperties::set_has_id() {
  _has_bits_[0] |= 0x00000800u;
}
void AppProperties::clear_has_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void AppProperties::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& AppProperties::id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.id)
  return id_.GetNoArena();
}
void AppProperties::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.id)
}
#if LANG_CXX11
void AppProperties::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.id)
}
#endif
void AppProperties::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.id)
}
void AppProperties::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.id)
}
::std::string* AppProperties::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.id)
}

// optional uint32 reviewers = 19;
bool AppProperties::has_reviewers() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void AppProperties::set_has_reviewers() {
  _has_bits_[0] |= 0x00800000u;
}
void AppProperties::clear_has_reviewers() {
  _has_bits_[0] &= ~0x00800000u;
}
void AppProperties::clear_reviewers() {
  reviewers_ = 0u;
  clear_has_reviewers();
}
::google::protobuf::uint32 AppProperties::reviewers() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.reviewers)
  return reviewers_;
}
void AppProperties::set_reviewers(::google::protobuf::uint32 value) {
  set_has_reviewers();
  reviewers_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.reviewers)
}

// optional uint64 rub_mask = 20;
bool AppProperties::has_rub_mask() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void AppProperties::set_has_rub_mask() {
  _has_bits_[0] |= 0x00400000u;
}
void AppProperties::clear_has_rub_mask() {
  _has_bits_[0] &= ~0x00400000u;
}
void AppProperties::clear_rub_mask() {
  rub_mask_ = GOOGLE_ULONGLONG(0);
  clear_has_rub_mask();
}
::google::protobuf::uint64 AppProperties::rub_mask() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.rub_mask)
  return rub_mask_;
}
void AppProperties::set_rub_mask(::google::protobuf::uint64 value) {
  set_has_rub_mask();
  rub_mask_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.rub_mask)
}

// optional bool is_banned = 21;
bool AppProperties::has_is_banned() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void AppProperties::set_has_is_banned() {
  _has_bits_[0] |= 0x00080000u;
}
void AppProperties::clear_has_is_banned() {
  _has_bits_[0] &= ~0x00080000u;
}
void AppProperties::clear_is_banned() {
  is_banned_ = false;
  clear_has_is_banned();
}
bool AppProperties::is_banned() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.is_banned)
  return is_banned_;
}
void AppProperties::set_is_banned(bool value) {
  set_has_is_banned();
  is_banned_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.is_banned)
}

// optional string categoryIds = 22;
bool AppProperties::has_categoryids() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AppProperties::set_has_categoryids() {
  _has_bits_[0] |= 0x00001000u;
}
void AppProperties::clear_has_categoryids() {
  _has_bits_[0] &= ~0x00001000u;
}
void AppProperties::clear_categoryids() {
  categoryids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_categoryids();
}
const ::std::string& AppProperties::categoryids() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
  return categoryids_.GetNoArena();
}
void AppProperties::set_categoryids(const ::std::string& value) {
  set_has_categoryids();
  categoryids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
}
#if LANG_CXX11
void AppProperties::set_categoryids(::std::string&& value) {
  set_has_categoryids();
  categoryids_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
}
#endif
void AppProperties::set_categoryids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_categoryids();
  categoryids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
}
void AppProperties::set_categoryids(const char* value, size_t size) {
  set_has_categoryids();
  categoryids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
}
::std::string* AppProperties::mutable_categoryids() {
  set_has_categoryids();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
  return categoryids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppProperties::release_categoryids() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
  clear_has_categoryids();
  return categoryids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppProperties::set_allocated_categoryids(::std::string* categoryids) {
  if (categoryids != NULL) {
    set_has_categoryids();
  } else {
    clear_has_categoryids();
  }
  categoryids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), categoryids);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppProperties.categoryIds)
}

// optional bool paid_content = 23;
bool AppProperties::has_paid_content() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void AppProperties::set_has_paid_content() {
  _has_bits_[0] |= 0x00100000u;
}
void AppProperties::clear_has_paid_content() {
  _has_bits_[0] &= ~0x00100000u;
}
void AppProperties::clear_paid_content() {
  paid_content_ = false;
  clear_has_paid_content();
}
bool AppProperties::paid_content() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.paid_content)
  return paid_content_;
}
void AppProperties::set_paid_content(bool value) {
  set_has_paid_content();
  paid_content_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.paid_content)
}

// optional bool is_top_dev = 24;
bool AppProperties::has_is_top_dev() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void AppProperties::set_has_is_top_dev() {
  _has_bits_[0] |= 0x00200000u;
}
void AppProperties::clear_has_is_top_dev() {
  _has_bits_[0] &= ~0x00200000u;
}
void AppProperties::clear_is_top_dev() {
  is_top_dev_ = false;
  clear_has_is_top_dev();
}
bool AppProperties::is_top_dev() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.is_top_dev)
  return is_top_dev_;
}
void AppProperties::set_is_top_dev(bool value) {
  set_has_is_top_dev();
  is_top_dev_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.is_top_dev)
}

// optional bool is_editor_choice = 25;
bool AppProperties::has_is_editor_choice() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void AppProperties::set_has_is_editor_choice() {
  _has_bits_[0] |= 0x01000000u;
}
void AppProperties::clear_has_is_editor_choice() {
  _has_bits_[0] &= ~0x01000000u;
}
void AppProperties::clear_is_editor_choice() {
  is_editor_choice_ = false;
  clear_has_is_editor_choice();
}
bool AppProperties::is_editor_choice() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppProperties.is_editor_choice)
  return is_editor_choice_;
}
void AppProperties::set_is_editor_choice(bool value) {
  set_has_is_editor_choice();
  is_editor_choice_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppProperties.is_editor_choice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppImage::kThumbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppImage::AppImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppImage)
}
AppImage::AppImage(const AppImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_thumb()) {
    thumb_ = new ::ru::mail::go::webbase::parsing::img::Thumb(*from.thumb_);
  } else {
    thumb_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppImage)
}

void AppImage::SharedCtor() {
  _cached_size_ = 0;
  thumb_ = NULL;
}

AppImage::~AppImage() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppImage)
  SharedDtor();
}

void AppImage::SharedDtor() {
  if (this != internal_default_instance()) delete thumb_;
}

void AppImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppImage::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppImage& AppImage::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppImage* AppImage::New(::google::protobuf::Arena* arena) const {
  AppImage* n = new AppImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppImage::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_thumb()) {
    GOOGLE_DCHECK(thumb_ != NULL);
    thumb_->::ru::mail::go::webbase::parsing::img::Thumb::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thumb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppImage)
  return false;
#undef DO_
}

void AppImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->thumb_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppImage)
}

::google::protobuf::uint8* AppImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->thumb_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppImage)
  return target;
}

size_t AppImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppImage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ru.mail.go.webbase.parsing.img.Thumb thumb = 1;
  if (has_thumb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thumb_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppImage)
  GOOGLE_DCHECK_NE(&from, this);
  const AppImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppImage)
    MergeFrom(*source);
  }
}

void AppImage::MergeFrom(const AppImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_thumb()) {
    mutable_thumb()->::ru::mail::go::webbase::parsing::img::Thumb::MergeFrom(from.thumb());
  }
}

void AppImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppImage::CopyFrom(const AppImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppImage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_thumb()) {
    if (!this->thumb_->IsInitialized()) return false;
  }
  return true;
}

void AppImage::Swap(AppImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppImage::InternalSwap(AppImage* other) {
  using std::swap;
  swap(thumb_, other->thumb_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppImage::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppImage

// required .ru.mail.go.webbase.parsing.img.Thumb thumb = 1;
bool AppImage::has_thumb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppImage::set_has_thumb() {
  _has_bits_[0] |= 0x00000001u;
}
void AppImage::clear_has_thumb() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppImage::clear_thumb() {
  if (thumb_ != NULL) thumb_->::ru::mail::go::webbase::parsing::img::Thumb::Clear();
  clear_has_thumb();
}
const ::ru::mail::go::webbase::parsing::img::Thumb& AppImage::thumb() const {
  const ::ru::mail::go::webbase::parsing::img::Thumb* p = thumb_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppImage.thumb)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::parsing::img::Thumb*>(
      &::ru::mail::go::webbase::parsing::img::_Thumb_default_instance_);
}
::ru::mail::go::webbase::parsing::img::Thumb* AppImage::mutable_thumb() {
  set_has_thumb();
  if (thumb_ == NULL) {
    thumb_ = new ::ru::mail::go::webbase::parsing::img::Thumb;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppImage.thumb)
  return thumb_;
}
::ru::mail::go::webbase::parsing::img::Thumb* AppImage::release_thumb() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppImage.thumb)
  clear_has_thumb();
  ::ru::mail::go::webbase::parsing::img::Thumb* temp = thumb_;
  thumb_ = NULL;
  return temp;
}
void AppImage::set_allocated_thumb(::ru::mail::go::webbase::parsing::img::Thumb* thumb) {
  delete thumb_;
  thumb_ = thumb;
  if (thumb) {
    set_has_thumb();
  } else {
    clear_has_thumb();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppImage.thumb)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDataWrapper::kPropertiesFieldNumber;
const int AppDataWrapper::kImageUrlFieldNumber;
const int AppDataWrapper::kImageFieldNumber;
const int AppDataWrapper::kBrsq2FieldNumber;
const int AppDataWrapper::kUruq2FieldNumber;
const int AppDataWrapper::kIsTopFieldNumber;
const int AppDataWrapper::kBase64ImgFieldNumber;
const int AppDataWrapper::kImgBkgrndFieldNumber;
const int AppDataWrapper::kRecoSrchKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDataWrapper::AppDataWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppDataWrapper)
}
AppDataWrapper::AppDataWrapper(const AppDataWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_url()) {
    image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  base64_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_base64_img()) {
    base64_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base64_img_);
  }
  img_bkgrnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_img_bkgrnd()) {
    img_bkgrnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_bkgrnd_);
  }
  reco_srch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reco_srch_key()) {
    reco_srch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reco_srch_key_);
  }
  if (from.has_properties()) {
    properties_ = new ::ru::mail::go::webbase::blobs::AppProperties(*from.properties_);
  } else {
    properties_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::ru::mail::go::webbase::blobs::AppImage(*from.image_);
  } else {
    image_ = NULL;
  }
  ::memcpy(&brsq2_, &from.brsq2_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_top_) -
    reinterpret_cast<char*>(&brsq2_)) + sizeof(is_top_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppDataWrapper)
}

void AppDataWrapper::SharedCtor() {
  _cached_size_ = 0;
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base64_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_bkgrnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reco_srch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&properties_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_top_) -
      reinterpret_cast<char*>(&properties_)) + sizeof(is_top_));
}

AppDataWrapper::~AppDataWrapper() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppDataWrapper)
  SharedDtor();
}

void AppDataWrapper::SharedDtor() {
  image_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base64_img_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_bkgrnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reco_srch_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete properties_;
  if (this != internal_default_instance()) delete image_;
}

void AppDataWrapper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDataWrapper::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppDataWrapper& AppDataWrapper::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppDataWrapper* AppDataWrapper::New(::google::protobuf::Arena* arena) const {
  AppDataWrapper* n = new AppDataWrapper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDataWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!image_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*image_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!base64_img_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*base64_img_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!img_bkgrnd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*img_bkgrnd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!reco_srch_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*reco_srch_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(properties_ != NULL);
      properties_->::ru::mail::go::webbase::blobs::AppProperties::Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(image_ != NULL);
      image_->::ru::mail::go::webbase::blobs::AppImage::Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&brsq2_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uruq2_) -
        reinterpret_cast<char*>(&brsq2_)) + sizeof(uruq2_));
  }
  is_top_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppDataWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string image_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image_url().data(), static_cast<int>(this->image_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDataWrapper.image_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.AppImage image = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 brsq2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_brsq2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &brsq2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uruq2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_uruq2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uruq2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_top = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string base64_img = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base64_img()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->base64_img().data(), static_cast<int>(this->base64_img().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDataWrapper.base64_img");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string img_bkgrnd = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_img_bkgrnd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->img_bkgrnd().data(), static_cast<int>(this->img_bkgrnd().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reco_srch_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reco_srch_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reco_srch_key().data(), static_cast<int>(this->reco_srch_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppDataWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppDataWrapper)
  return false;
#undef DO_
}

void AppDataWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->properties_, output);
  }

  // required string image_url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.image_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->image_url(), output);
  }

  // optional .ru.mail.go.webbase.blobs.AppImage image = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->image_, output);
  }

  // optional uint64 brsq2 = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->brsq2(), output);
  }

  // optional uint64 uruq2 = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->uruq2(), output);
  }

  // optional bool is_top = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_top(), output);
  }

  // optional string base64_img = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base64_img().data(), static_cast<int>(this->base64_img().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.base64_img");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->base64_img(), output);
  }

  // optional string img_bkgrnd = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_bkgrnd().data(), static_cast<int>(this->img_bkgrnd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->img_bkgrnd(), output);
  }

  // optional string reco_srch_key = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reco_srch_key().data(), static_cast<int>(this->reco_srch_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->reco_srch_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppDataWrapper)
}

::google::protobuf::uint8* AppDataWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->properties_, deterministic, target);
  }

  // required string image_url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.image_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->image_url(), target);
  }

  // optional .ru.mail.go.webbase.blobs.AppImage image = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->image_, deterministic, target);
  }

  // optional uint64 brsq2 = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->brsq2(), target);
  }

  // optional uint64 uruq2 = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->uruq2(), target);
  }

  // optional bool is_top = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_top(), target);
  }

  // optional string base64_img = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base64_img().data(), static_cast<int>(this->base64_img().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.base64_img");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->base64_img(), target);
  }

  // optional string img_bkgrnd = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_bkgrnd().data(), static_cast<int>(this->img_bkgrnd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->img_bkgrnd(), target);
  }

  // optional string reco_srch_key = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reco_srch_key().data(), static_cast<int>(this->reco_srch_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->reco_srch_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppDataWrapper)
  return target;
}

size_t AppDataWrapper::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  size_t total_size = 0;

  if (has_image_url()) {
    // required string image_url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_url());
  }

  if (has_properties()) {
    // required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->properties_);
  }

  return total_size;
}
size_t AppDataWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000011) ^ 0x00000011) == 0) {  // All required fields are present.
    // required string image_url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_url());

    // required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->properties_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string base64_img = 7;
    if (has_base64_img()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->base64_img());
    }

    // optional string img_bkgrnd = 8;
    if (has_img_bkgrnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->img_bkgrnd());
    }

    // optional string reco_srch_key = 9;
    if (has_reco_srch_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reco_srch_key());
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional .ru.mail.go.webbase.blobs.AppImage image = 3;
    if (has_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->image_);
    }

    // optional uint64 brsq2 = 4;
    if (has_brsq2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->brsq2());
    }

    // optional uint64 uruq2 = 5;
    if (has_uruq2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uruq2());
    }

  }
  // optional bool is_top = 6;
  if (has_is_top()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDataWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const AppDataWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDataWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppDataWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppDataWrapper)
    MergeFrom(*source);
  }
}

void AppDataWrapper::MergeFrom(const AppDataWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_image_url();
      image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_base64_img();
      base64_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base64_img_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_img_bkgrnd();
      img_bkgrnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_bkgrnd_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_reco_srch_key();
      reco_srch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reco_srch_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_properties()->::ru::mail::go::webbase::blobs::AppProperties::MergeFrom(from.properties());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_image()->::ru::mail::go::webbase::blobs::AppImage::MergeFrom(from.image());
    }
    if (cached_has_bits & 0x00000040u) {
      brsq2_ = from.brsq2_;
    }
    if (cached_has_bits & 0x00000080u) {
      uruq2_ = from.uruq2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_is_top(from.is_top());
  }
}

void AppDataWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDataWrapper::CopyFrom(const AppDataWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppDataWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppDataWrapper::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;
  if (has_properties()) {
    if (!this->properties_->IsInitialized()) return false;
  }
  if (has_image()) {
    if (!this->image_->IsInitialized()) return false;
  }
  return true;
}

void AppDataWrapper::Swap(AppDataWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDataWrapper::InternalSwap(AppDataWrapper* other) {
  using std::swap;
  image_url_.Swap(&other->image_url_);
  base64_img_.Swap(&other->base64_img_);
  img_bkgrnd_.Swap(&other->img_bkgrnd_);
  reco_srch_key_.Swap(&other->reco_srch_key_);
  swap(properties_, other->properties_);
  swap(image_, other->image_);
  swap(brsq2_, other->brsq2_);
  swap(uruq2_, other->uruq2_);
  swap(is_top_, other->is_top_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDataWrapper::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppDataWrapper

// required .ru.mail.go.webbase.blobs.AppProperties properties = 1;
bool AppDataWrapper::has_properties() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppDataWrapper::set_has_properties() {
  _has_bits_[0] |= 0x00000010u;
}
void AppDataWrapper::clear_has_properties() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppDataWrapper::clear_properties() {
  if (properties_ != NULL) properties_->::ru::mail::go::webbase::blobs::AppProperties::Clear();
  clear_has_properties();
}
const ::ru::mail::go::webbase::blobs::AppProperties& AppDataWrapper::properties() const {
  const ::ru::mail::go::webbase::blobs::AppProperties* p = properties_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.properties)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppProperties*>(
      &::ru::mail::go::webbase::blobs::_AppProperties_default_instance_);
}
::ru::mail::go::webbase::blobs::AppProperties* AppDataWrapper::mutable_properties() {
  set_has_properties();
  if (properties_ == NULL) {
    properties_ = new ::ru::mail::go::webbase::blobs::AppProperties;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.properties)
  return properties_;
}
::ru::mail::go::webbase::blobs::AppProperties* AppDataWrapper::release_properties() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.properties)
  clear_has_properties();
  ::ru::mail::go::webbase::blobs::AppProperties* temp = properties_;
  properties_ = NULL;
  return temp;
}
void AppDataWrapper::set_allocated_properties(::ru::mail::go::webbase::blobs::AppProperties* properties) {
  delete properties_;
  properties_ = properties;
  if (properties) {
    set_has_properties();
  } else {
    clear_has_properties();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.properties)
}

// required string image_url = 2;
bool AppDataWrapper::has_image_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppDataWrapper::set_has_image_url() {
  _has_bits_[0] |= 0x00000001u;
}
void AppDataWrapper::clear_has_image_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppDataWrapper::clear_image_url() {
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_url();
}
const ::std::string& AppDataWrapper::image_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
  return image_url_.GetNoArena();
}
void AppDataWrapper::set_image_url(const ::std::string& value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
}
#if LANG_CXX11
void AppDataWrapper::set_image_url(::std::string&& value) {
  set_has_image_url();
  image_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
}
#endif
void AppDataWrapper::set_image_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
}
void AppDataWrapper::set_image_url(const char* value, size_t size) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
}
::std::string* AppDataWrapper::mutable_image_url() {
  set_has_image_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
  return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDataWrapper::release_image_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
  clear_has_image_url();
  return image_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDataWrapper::set_allocated_image_url(::std::string* image_url) {
  if (image_url != NULL) {
    set_has_image_url();
  } else {
    clear_has_image_url();
  }
  image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.image_url)
}

// optional .ru.mail.go.webbase.blobs.AppImage image = 3;
bool AppDataWrapper::has_image() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppDataWrapper::set_has_image() {
  _has_bits_[0] |= 0x00000020u;
}
void AppDataWrapper::clear_has_image() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppDataWrapper::clear_image() {
  if (image_ != NULL) image_->::ru::mail::go::webbase::blobs::AppImage::Clear();
  clear_has_image();
}
const ::ru::mail::go::webbase::blobs::AppImage& AppDataWrapper::image() const {
  const ::ru::mail::go::webbase::blobs::AppImage* p = image_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.image)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppImage*>(
      &::ru::mail::go::webbase::blobs::_AppImage_default_instance_);
}
::ru::mail::go::webbase::blobs::AppImage* AppDataWrapper::mutable_image() {
  set_has_image();
  if (image_ == NULL) {
    image_ = new ::ru::mail::go::webbase::blobs::AppImage;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.image)
  return image_;
}
::ru::mail::go::webbase::blobs::AppImage* AppDataWrapper::release_image() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.image)
  clear_has_image();
  ::ru::mail::go::webbase::blobs::AppImage* temp = image_;
  image_ = NULL;
  return temp;
}
void AppDataWrapper::set_allocated_image(::ru::mail::go::webbase::blobs::AppImage* image) {
  delete image_;
  image_ = image;
  if (image) {
    set_has_image();
  } else {
    clear_has_image();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.image)
}

// optional uint64 brsq2 = 4;
bool AppDataWrapper::has_brsq2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppDataWrapper::set_has_brsq2() {
  _has_bits_[0] |= 0x00000040u;
}
void AppDataWrapper::clear_has_brsq2() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppDataWrapper::clear_brsq2() {
  brsq2_ = GOOGLE_ULONGLONG(0);
  clear_has_brsq2();
}
::google::protobuf::uint64 AppDataWrapper::brsq2() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.brsq2)
  return brsq2_;
}
void AppDataWrapper::set_brsq2(::google::protobuf::uint64 value) {
  set_has_brsq2();
  brsq2_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.brsq2)
}

// optional uint64 uruq2 = 5;
bool AppDataWrapper::has_uruq2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppDataWrapper::set_has_uruq2() {
  _has_bits_[0] |= 0x00000080u;
}
void AppDataWrapper::clear_has_uruq2() {
  _has_bits_[0] &= ~0x00000080u;
}
void AppDataWrapper::clear_uruq2() {
  uruq2_ = GOOGLE_ULONGLONG(0);
  clear_has_uruq2();
}
::google::protobuf::uint64 AppDataWrapper::uruq2() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.uruq2)
  return uruq2_;
}
void AppDataWrapper::set_uruq2(::google::protobuf::uint64 value) {
  set_has_uruq2();
  uruq2_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.uruq2)
}

// optional bool is_top = 6;
bool AppDataWrapper::has_is_top() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AppDataWrapper::set_has_is_top() {
  _has_bits_[0] |= 0x00000100u;
}
void AppDataWrapper::clear_has_is_top() {
  _has_bits_[0] &= ~0x00000100u;
}
void AppDataWrapper::clear_is_top() {
  is_top_ = false;
  clear_has_is_top();
}
bool AppDataWrapper::is_top() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.is_top)
  return is_top_;
}
void AppDataWrapper::set_is_top(bool value) {
  set_has_is_top();
  is_top_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.is_top)
}

// optional string base64_img = 7;
bool AppDataWrapper::has_base64_img() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppDataWrapper::set_has_base64_img() {
  _has_bits_[0] |= 0x00000002u;
}
void AppDataWrapper::clear_has_base64_img() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppDataWrapper::clear_base64_img() {
  base64_img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base64_img();
}
const ::std::string& AppDataWrapper::base64_img() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
  return base64_img_.GetNoArena();
}
void AppDataWrapper::set_base64_img(const ::std::string& value) {
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
}
#if LANG_CXX11
void AppDataWrapper::set_base64_img(::std::string&& value) {
  set_has_base64_img();
  base64_img_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
}
#endif
void AppDataWrapper::set_base64_img(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
}
void AppDataWrapper::set_base64_img(const char* value, size_t size) {
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
}
::std::string* AppDataWrapper::mutable_base64_img() {
  set_has_base64_img();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
  return base64_img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDataWrapper::release_base64_img() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
  clear_has_base64_img();
  return base64_img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDataWrapper::set_allocated_base64_img(::std::string* base64_img) {
  if (base64_img != NULL) {
    set_has_base64_img();
  } else {
    clear_has_base64_img();
  }
  base64_img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base64_img);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.base64_img)
}

// optional string img_bkgrnd = 8;
bool AppDataWrapper::has_img_bkgrnd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppDataWrapper::set_has_img_bkgrnd() {
  _has_bits_[0] |= 0x00000004u;
}
void AppDataWrapper::clear_has_img_bkgrnd() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppDataWrapper::clear_img_bkgrnd() {
  img_bkgrnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img_bkgrnd();
}
const ::std::string& AppDataWrapper::img_bkgrnd() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
  return img_bkgrnd_.GetNoArena();
}
void AppDataWrapper::set_img_bkgrnd(const ::std::string& value) {
  set_has_img_bkgrnd();
  img_bkgrnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
}
#if LANG_CXX11
void AppDataWrapper::set_img_bkgrnd(::std::string&& value) {
  set_has_img_bkgrnd();
  img_bkgrnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
}
#endif
void AppDataWrapper::set_img_bkgrnd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img_bkgrnd();
  img_bkgrnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
}
void AppDataWrapper::set_img_bkgrnd(const char* value, size_t size) {
  set_has_img_bkgrnd();
  img_bkgrnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
}
::std::string* AppDataWrapper::mutable_img_bkgrnd() {
  set_has_img_bkgrnd();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
  return img_bkgrnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDataWrapper::release_img_bkgrnd() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
  clear_has_img_bkgrnd();
  return img_bkgrnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDataWrapper::set_allocated_img_bkgrnd(::std::string* img_bkgrnd) {
  if (img_bkgrnd != NULL) {
    set_has_img_bkgrnd();
  } else {
    clear_has_img_bkgrnd();
  }
  img_bkgrnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_bkgrnd);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.img_bkgrnd)
}

// optional string reco_srch_key = 9;
bool AppDataWrapper::has_reco_srch_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppDataWrapper::set_has_reco_srch_key() {
  _has_bits_[0] |= 0x00000008u;
}
void AppDataWrapper::clear_has_reco_srch_key() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppDataWrapper::clear_reco_srch_key() {
  reco_srch_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reco_srch_key();
}
const ::std::string& AppDataWrapper::reco_srch_key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
  return reco_srch_key_.GetNoArena();
}
void AppDataWrapper::set_reco_srch_key(const ::std::string& value) {
  set_has_reco_srch_key();
  reco_srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
}
#if LANG_CXX11
void AppDataWrapper::set_reco_srch_key(::std::string&& value) {
  set_has_reco_srch_key();
  reco_srch_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
}
#endif
void AppDataWrapper::set_reco_srch_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reco_srch_key();
  reco_srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
}
void AppDataWrapper::set_reco_srch_key(const char* value, size_t size) {
  set_has_reco_srch_key();
  reco_srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
}
::std::string* AppDataWrapper::mutable_reco_srch_key() {
  set_has_reco_srch_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
  return reco_srch_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppDataWrapper::release_reco_srch_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
  clear_has_reco_srch_key();
  return reco_srch_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppDataWrapper::set_allocated_reco_srch_key(::std::string* reco_srch_key) {
  if (reco_srch_key != NULL) {
    set_has_reco_srch_key();
  } else {
    clear_has_reco_srch_key();
  }
  reco_srch_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reco_srch_key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppDataWrapper.reco_srch_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppImageWrapper::kImageFieldNumber;
const int AppImageWrapper::kUrlFieldNumber;
const int AppImageWrapper::kBase64ImgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppImageWrapper::AppImageWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_additive_5fapp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.AppImageWrapper)
}
AppImageWrapper::AppImageWrapper(const AppImageWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  base64_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_base64_img()) {
    base64_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base64_img_);
  }
  if (from.has_image()) {
    image_ = new ::ru::mail::go::webbase::blobs::AppImage(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.AppImageWrapper)
}

void AppImageWrapper::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base64_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ = NULL;
}

AppImageWrapper::~AppImageWrapper() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.AppImageWrapper)
  SharedDtor();
}

void AppImageWrapper::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base64_img_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
}

void AppImageWrapper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppImageWrapper::descriptor() {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppImageWrapper& AppImageWrapper::default_instance() {
  protobuf_additive_5fapp_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppImageWrapper* AppImageWrapper::New(::google::protobuf::Arena* arena) const {
  AppImageWrapper* n = new AppImageWrapper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppImageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!base64_img_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*base64_img_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(image_ != NULL);
      image_->::ru::mail::go::webbase::blobs::AppImage::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppImageWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.webbase.blobs.AppImage image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppImageWrapper.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string base64_img = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base64_img()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->base64_img().data(), static_cast<int>(this->base64_img().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.AppImageWrapper.base64_img");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.AppImageWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.AppImageWrapper)
  return false;
#undef DO_
}

void AppImageWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.blobs.AppImage image = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  // required string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppImageWrapper.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string base64_img = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base64_img().data(), static_cast<int>(this->base64_img().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppImageWrapper.base64_img");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->base64_img(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.AppImageWrapper)
}

::google::protobuf::uint8* AppImageWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.blobs.AppImage image = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->image_, deterministic, target);
  }

  // required string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppImageWrapper.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string base64_img = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base64_img().data(), static_cast<int>(this->base64_img().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.AppImageWrapper.base64_img");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->base64_img(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.AppImageWrapper)
  return target;
}

size_t AppImageWrapper::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_image()) {
    // required .ru.mail.go.webbase.blobs.AppImage image = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_);
  }

  return total_size;
}
size_t AppImageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required .ru.mail.go.webbase.blobs.AppImage image = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string base64_img = 3;
  if (has_base64_img()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base64_img());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppImageWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const AppImageWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppImageWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.AppImageWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.AppImageWrapper)
    MergeFrom(*source);
  }
}

void AppImageWrapper::MergeFrom(const AppImageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_base64_img();
      base64_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base64_img_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_image()->::ru::mail::go::webbase::blobs::AppImage::MergeFrom(from.image());
    }
  }
}

void AppImageWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppImageWrapper::CopyFrom(const AppImageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.AppImageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppImageWrapper::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (has_image()) {
    if (!this->image_->IsInitialized()) return false;
  }
  return true;
}

void AppImageWrapper::Swap(AppImageWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppImageWrapper::InternalSwap(AppImageWrapper* other) {
  using std::swap;
  url_.Swap(&other->url_);
  base64_img_.Swap(&other->base64_img_);
  swap(image_, other->image_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppImageWrapper::GetMetadata() const {
  protobuf_additive_5fapp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_additive_5fapp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppImageWrapper

// required .ru.mail.go.webbase.blobs.AppImage image = 1;
bool AppImageWrapper::has_image() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppImageWrapper::set_has_image() {
  _has_bits_[0] |= 0x00000004u;
}
void AppImageWrapper::clear_has_image() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppImageWrapper::clear_image() {
  if (image_ != NULL) image_->::ru::mail::go::webbase::blobs::AppImage::Clear();
  clear_has_image();
}
const ::ru::mail::go::webbase::blobs::AppImage& AppImageWrapper::image() const {
  const ::ru::mail::go::webbase::blobs::AppImage* p = image_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppImageWrapper.image)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::AppImage*>(
      &::ru::mail::go::webbase::blobs::_AppImage_default_instance_);
}
::ru::mail::go::webbase::blobs::AppImage* AppImageWrapper::mutable_image() {
  set_has_image();
  if (image_ == NULL) {
    image_ = new ::ru::mail::go::webbase::blobs::AppImage;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppImageWrapper.image)
  return image_;
}
::ru::mail::go::webbase::blobs::AppImage* AppImageWrapper::release_image() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppImageWrapper.image)
  clear_has_image();
  ::ru::mail::go::webbase::blobs::AppImage* temp = image_;
  image_ = NULL;
  return temp;
}
void AppImageWrapper::set_allocated_image(::ru::mail::go::webbase::blobs::AppImage* image) {
  delete image_;
  image_ = image;
  if (image) {
    set_has_image();
  } else {
    clear_has_image();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppImageWrapper.image)
}

// required string url = 2;
bool AppImageWrapper::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppImageWrapper::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void AppImageWrapper::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppImageWrapper::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& AppImageWrapper::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppImageWrapper.url)
  return url_.GetNoArena();
}
void AppImageWrapper::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppImageWrapper.url)
}
#if LANG_CXX11
void AppImageWrapper::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppImageWrapper.url)
}
#endif
void AppImageWrapper::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppImageWrapper.url)
}
void AppImageWrapper::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppImageWrapper.url)
}
::std::string* AppImageWrapper::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppImageWrapper.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppImageWrapper::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppImageWrapper.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppImageWrapper::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppImageWrapper.url)
}

// optional string base64_img = 3;
bool AppImageWrapper::has_base64_img() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppImageWrapper::set_has_base64_img() {
  _has_bits_[0] |= 0x00000002u;
}
void AppImageWrapper::clear_has_base64_img() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppImageWrapper::clear_base64_img() {
  base64_img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base64_img();
}
const ::std::string& AppImageWrapper::base64_img() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
  return base64_img_.GetNoArena();
}
void AppImageWrapper::set_base64_img(const ::std::string& value) {
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
}
#if LANG_CXX11
void AppImageWrapper::set_base64_img(::std::string&& value) {
  set_has_base64_img();
  base64_img_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
}
#endif
void AppImageWrapper::set_base64_img(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
}
void AppImageWrapper::set_base64_img(const char* value, size_t size) {
  set_has_base64_img();
  base64_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
}
::std::string* AppImageWrapper::mutable_base64_img() {
  set_has_base64_img();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
  return base64_img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppImageWrapper::release_base64_img() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
  clear_has_base64_img();
  return base64_img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppImageWrapper::set_allocated_base64_img(::std::string* base64_img) {
  if (base64_img != NULL) {
    set_has_base64_img();
  } else {
    clear_has_base64_img();
  }
  base64_img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base64_img);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.AppImageWrapper.base64_img)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
