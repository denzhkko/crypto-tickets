// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: advert.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "advert.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace advert {
class AddressDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Address>
     _instance;
} _Address_default_instance_;
class AdvertAddressDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdvertAddress>
     _instance;
} _AdvertAddress_default_instance_;
class RichSitelinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RichSitelink>
     _instance;
} _RichSitelink_default_instance_;
class RichSitelinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RichSitelinks>
     _instance;
} _RichSitelinks_default_instance_;

namespace protobuf_advert_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, georegid_),
  3,
  4,
  0,
  1,
  2,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertAddress, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertAddress, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertAddress, apiresponse_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelink, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelink, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelink, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelink, snippet_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelinks, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichSitelinks, link_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(Address)},
  { 17, 25, sizeof(AdvertAddress)},
  { 28, 36, sizeof(RichSitelink)},
  { 39, 46, sizeof(RichSitelinks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdvertAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RichSitelink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RichSitelinks_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "advert.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Address_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Address_default_instance_);_AdvertAddress_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdvertAddress_default_instance_);_RichSitelink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RichSitelink_default_instance_);_RichSitelinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RichSitelinks_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014advert.proto\022\021ru.mail.go.advert\"g\n\007Add"
      "ress\022\013\n\003lat\030\001 \002(\002\022\013\n\003lon\030\002 \002(\002\022\r\n\005phone\030"
      "\003 \002(\t\022\017\n\007address\030\004 \002(\t\022\020\n\010schedule\030\005 \001(\t"
      "\022\020\n\010georegid\030\006 \001(\005\"]\n\rAdvertAddress\022\n\n\002t"
      "s\030\001 \002(\004\022+\n\007address\030\002 \003(\0132\032.ru.mail.go.ad"
      "vert.Address\022\023\n\013apiResponse\030\003 \001(\t\";\n\014Ric"
      "hSitelink\022\013\n\003url\030\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\017\n"
      "\007snippet\030\003 \002(\t\"J\n\rRichSitelinks\022\n\n\002ts\030\001 "
      "\002(\004\022-\n\004link\030\002 \003(\0132\037.ru.mail.go.advert.Ri"
      "chSitelinkB\010B\006Advert"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "advert.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_advert_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kLatFieldNumber;
const int Address::kLonFieldNumber;
const int Address::kPhoneFieldNumber;
const int Address::kAddressFieldNumber;
const int Address::kScheduleFieldNumber;
const int Address::kGeoregidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_advert_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.advert.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schedule()) {
    schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedule_);
  }
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&georegid_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(georegid_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.advert.Address)
}

void Address::SharedCtor() {
  _cached_size_ = 0;
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&georegid_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(georegid_));
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:ru.mail.go.advert.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schedule_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  protobuf_advert_2eproto::InitDefaults();
  return *internal_default_instance();
}

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.advert.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!schedule_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*schedule_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&lat_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&georegid_) -
        reinterpret_cast<char*>(&lat_)) + sizeof(georegid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.advert.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_lat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float lon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_lon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.Address.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.Address.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string schedule = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schedule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->schedule().data(), static_cast<int>(this->schedule().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.Address.schedule");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 georegid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_georegid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &georegid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.advert.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.advert.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.advert.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float lat = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->lat(), output);
  }

  // required float lon = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lon(), output);
  }

  // required string phone = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone(), output);
  }

  // required string address = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional string schedule = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->schedule().data(), static_cast<int>(this->schedule().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.schedule");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->schedule(), output);
  }

  // optional int32 georegid = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->georegid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.advert.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.advert.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float lat = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->lat(), target);
  }

  // required float lon = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lon(), target);
  }

  // required string phone = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // required string address = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional string schedule = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->schedule().data(), static_cast<int>(this->schedule().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.Address.schedule");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->schedule(), target);
  }

  // optional int32 georegid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->georegid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.advert.Address)
  return target;
}

size_t Address::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.advert.Address)
  size_t total_size = 0;

  if (has_phone()) {
    // required string phone = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  if (has_address()) {
    // required string address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  if (has_lat()) {
    // required float lat = 1;
    total_size += 1 + 4;
  }

  if (has_lon()) {
    // required float lon = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.advert.Address)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required string phone = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());

    // required string address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());

    // required float lat = 1;
    total_size += 1 + 4;

    // required float lon = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string schedule = 5;
  if (has_schedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->schedule());
  }

  // optional int32 georegid = 6;
  if (has_georegid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->georegid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.advert.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.advert.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.advert.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.advert.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_schedule();
      schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedule_);
    }
    if (cached_has_bits & 0x00000008u) {
      lat_ = from.lat_;
    }
    if (cached_has_bits & 0x00000010u) {
      lon_ = from.lon_;
    }
    if (cached_has_bits & 0x00000020u) {
      georegid_ = from.georegid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.advert.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.advert.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  phone_.Swap(&other->phone_);
  address_.Swap(&other->address_);
  schedule_.Swap(&other->schedule_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(georegid_, other->georegid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// required float lat = 1;
bool Address::has_lat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Address::set_has_lat() {
  _has_bits_[0] |= 0x00000008u;
}
void Address::clear_has_lat() {
  _has_bits_[0] &= ~0x00000008u;
}
void Address::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
float Address::lat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.lat)
  return lat_;
}
void Address::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.lat)
}

// required float lon = 2;
bool Address::has_lon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Address::set_has_lon() {
  _has_bits_[0] |= 0x00000010u;
}
void Address::clear_has_lon() {
  _has_bits_[0] &= ~0x00000010u;
}
void Address::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
float Address::lon() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.lon)
  return lon_;
}
void Address::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.lon)
}

// required string phone = 3;
bool Address::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Address::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
void Address::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
void Address::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& Address::phone() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.phone)
  return phone_.GetNoArena();
}
void Address::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.phone)
}
#if LANG_CXX11
void Address::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.Address.phone)
}
#endif
void Address::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.Address.phone)
}
void Address::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.Address.phone)
}
::std::string* Address::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.Address.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_phone() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.Address.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.Address.phone)
}

// required string address = 4;
bool Address::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Address::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
void Address::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
void Address::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
const ::std::string& Address::address() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.address)
  return address_.GetNoArena();
}
void Address::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.address)
}
#if LANG_CXX11
void Address::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.Address.address)
}
#endif
void Address::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.Address.address)
}
void Address::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.Address.address)
}
::std::string* Address::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.Address.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_address() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.Address.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.Address.address)
}

// optional string schedule = 5;
bool Address::has_schedule() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Address::set_has_schedule() {
  _has_bits_[0] |= 0x00000004u;
}
void Address::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000004u;
}
void Address::clear_schedule() {
  schedule_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_schedule();
}
const ::std::string& Address::schedule() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.schedule)
  return schedule_.GetNoArena();
}
void Address::set_schedule(const ::std::string& value) {
  set_has_schedule();
  schedule_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.schedule)
}
#if LANG_CXX11
void Address::set_schedule(::std::string&& value) {
  set_has_schedule();
  schedule_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.Address.schedule)
}
#endif
void Address::set_schedule(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_schedule();
  schedule_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.Address.schedule)
}
void Address::set_schedule(const char* value, size_t size) {
  set_has_schedule();
  schedule_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.Address.schedule)
}
::std::string* Address::mutable_schedule() {
  set_has_schedule();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.Address.schedule)
  return schedule_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_schedule() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.Address.schedule)
  clear_has_schedule();
  return schedule_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_schedule(::std::string* schedule) {
  if (schedule != NULL) {
    set_has_schedule();
  } else {
    clear_has_schedule();
  }
  schedule_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schedule);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.Address.schedule)
}

// optional int32 georegid = 6;
bool Address::has_georegid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Address::set_has_georegid() {
  _has_bits_[0] |= 0x00000020u;
}
void Address::clear_has_georegid() {
  _has_bits_[0] &= ~0x00000020u;
}
void Address::clear_georegid() {
  georegid_ = 0;
  clear_has_georegid();
}
::google::protobuf::int32 Address::georegid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.Address.georegid)
  return georegid_;
}
void Address::set_georegid(::google::protobuf::int32 value) {
  set_has_georegid();
  georegid_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.Address.georegid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdvertAddress::kTsFieldNumber;
const int AdvertAddress::kAddressFieldNumber;
const int AdvertAddress::kApiResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdvertAddress::AdvertAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_advert_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.advert.AdvertAddress)
}
AdvertAddress::AdvertAddress(const AdvertAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      address_(from.address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apiresponse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apiresponse()) {
    apiresponse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiresponse_);
  }
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.advert.AdvertAddress)
}

void AdvertAddress::SharedCtor() {
  _cached_size_ = 0;
  apiresponse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_ = GOOGLE_ULONGLONG(0);
}

AdvertAddress::~AdvertAddress() {
  // @@protoc_insertion_point(destructor:ru.mail.go.advert.AdvertAddress)
  SharedDtor();
}

void AdvertAddress::SharedDtor() {
  apiresponse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdvertAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvertAddress::descriptor() {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdvertAddress& AdvertAddress::default_instance() {
  protobuf_advert_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdvertAddress* AdvertAddress::New(::google::protobuf::Arena* arena) const {
  AdvertAddress* n = new AdvertAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdvertAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.advert.AdvertAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  if (has_apiresponse()) {
    GOOGLE_DCHECK(!apiresponse_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*apiresponse_.UnsafeRawStringPointer())->clear();
  }
  ts_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdvertAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.advert.AdvertAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.advert.Address address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string apiResponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiresponse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apiresponse().data(), static_cast<int>(this->apiresponse().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.AdvertAddress.apiResponse");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.advert.AdvertAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.advert.AdvertAddress)
  return false;
#undef DO_
}

void AdvertAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.advert.AdvertAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ts = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ts(), output);
  }

  // repeated .ru.mail.go.advert.Address address = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->address(static_cast<int>(i)), output);
  }

  // optional string apiResponse = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apiresponse().data(), static_cast<int>(this->apiresponse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.AdvertAddress.apiResponse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->apiresponse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.advert.AdvertAddress)
}

::google::protobuf::uint8* AdvertAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.advert.AdvertAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ts = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ts(), target);
  }

  // repeated .ru.mail.go.advert.Address address = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->address(static_cast<int>(i)), deterministic, target);
  }

  // optional string apiResponse = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apiresponse().data(), static_cast<int>(this->apiresponse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.AdvertAddress.apiResponse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->apiresponse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.advert.AdvertAddress)
  return target;
}

size_t AdvertAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.advert.AdvertAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 ts = 1;
  if (has_ts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ts());
  }
  // repeated .ru.mail.go.advert.Address address = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->address_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->address(static_cast<int>(i)));
    }
  }

  // optional string apiResponse = 3;
  if (has_apiresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apiresponse());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdvertAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.advert.AdvertAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const AdvertAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdvertAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.advert.AdvertAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.advert.AdvertAddress)
    MergeFrom(*source);
  }
}

void AdvertAddress::MergeFrom(const AdvertAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.advert.AdvertAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_apiresponse();
      apiresponse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiresponse_);
    }
    if (cached_has_bits & 0x00000002u) {
      ts_ = from.ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AdvertAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.advert.AdvertAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdvertAddress::CopyFrom(const AdvertAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.advert.AdvertAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdvertAddress::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->address())) return false;
  return true;
}

void AdvertAddress::Swap(AdvertAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdvertAddress::InternalSwap(AdvertAddress* other) {
  using std::swap;
  address_.InternalSwap(&other->address_);
  apiresponse_.Swap(&other->apiresponse_);
  swap(ts_, other->ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdvertAddress::GetMetadata() const {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdvertAddress

// required uint64 ts = 1;
bool AdvertAddress::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AdvertAddress::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void AdvertAddress::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void AdvertAddress::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
::google::protobuf::uint64 AdvertAddress::ts() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.AdvertAddress.ts)
  return ts_;
}
void AdvertAddress::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.AdvertAddress.ts)
}

// repeated .ru.mail.go.advert.Address address = 2;
int AdvertAddress::address_size() const {
  return address_.size();
}
void AdvertAddress::clear_address() {
  address_.Clear();
}
const ::ru::mail::go::advert::Address& AdvertAddress::address(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.AdvertAddress.address)
  return address_.Get(index);
}
::ru::mail::go::advert::Address* AdvertAddress::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.AdvertAddress.address)
  return address_.Mutable(index);
}
::ru::mail::go::advert::Address* AdvertAddress::add_address() {
  // @@protoc_insertion_point(field_add:ru.mail.go.advert.AdvertAddress.address)
  return address_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::advert::Address >*
AdvertAddress::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.advert.AdvertAddress.address)
  return &address_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::advert::Address >&
AdvertAddress::address() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.advert.AdvertAddress.address)
  return address_;
}

// optional string apiResponse = 3;
bool AdvertAddress::has_apiresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdvertAddress::set_has_apiresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void AdvertAddress::clear_has_apiresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdvertAddress::clear_apiresponse() {
  apiresponse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apiresponse();
}
const ::std::string& AdvertAddress::apiresponse() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.AdvertAddress.apiResponse)
  return apiresponse_.GetNoArena();
}
void AdvertAddress::set_apiresponse(const ::std::string& value) {
  set_has_apiresponse();
  apiresponse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.AdvertAddress.apiResponse)
}
#if LANG_CXX11
void AdvertAddress::set_apiresponse(::std::string&& value) {
  set_has_apiresponse();
  apiresponse_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.AdvertAddress.apiResponse)
}
#endif
void AdvertAddress::set_apiresponse(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apiresponse();
  apiresponse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.AdvertAddress.apiResponse)
}
void AdvertAddress::set_apiresponse(const char* value, size_t size) {
  set_has_apiresponse();
  apiresponse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.AdvertAddress.apiResponse)
}
::std::string* AdvertAddress::mutable_apiresponse() {
  set_has_apiresponse();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.AdvertAddress.apiResponse)
  return apiresponse_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdvertAddress::release_apiresponse() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.AdvertAddress.apiResponse)
  clear_has_apiresponse();
  return apiresponse_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdvertAddress::set_allocated_apiresponse(::std::string* apiresponse) {
  if (apiresponse != NULL) {
    set_has_apiresponse();
  } else {
    clear_has_apiresponse();
  }
  apiresponse_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apiresponse);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.AdvertAddress.apiResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RichSitelink::kUrlFieldNumber;
const int RichSitelink::kTitleFieldNumber;
const int RichSitelink::kSnippetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RichSitelink::RichSitelink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_advert_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.advert.RichSitelink)
}
RichSitelink::RichSitelink(const RichSitelink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_snippet()) {
    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.advert.RichSitelink)
}

void RichSitelink::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RichSitelink::~RichSitelink() {
  // @@protoc_insertion_point(destructor:ru.mail.go.advert.RichSitelink)
  SharedDtor();
}

void RichSitelink::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RichSitelink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RichSitelink::descriptor() {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RichSitelink& RichSitelink::default_instance() {
  protobuf_advert_2eproto::InitDefaults();
  return *internal_default_instance();
}

RichSitelink* RichSitelink::New(::google::protobuf::Arena* arena) const {
  RichSitelink* n = new RichSitelink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RichSitelink::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.advert.RichSitelink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!snippet_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*snippet_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RichSitelink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.advert.RichSitelink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.RichSitelink.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.RichSitelink.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string snippet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snippet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->snippet().data(), static_cast<int>(this->snippet().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.advert.RichSitelink.snippet");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.advert.RichSitelink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.advert.RichSitelink)
  return false;
#undef DO_
}

void RichSitelink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.advert.RichSitelink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // required string snippet = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.snippet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->snippet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.advert.RichSitelink)
}

::google::protobuf::uint8* RichSitelink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.advert.RichSitelink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // required string snippet = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.advert.RichSitelink.snippet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->snippet(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.advert.RichSitelink)
  return target;
}

size_t RichSitelink::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.advert.RichSitelink)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_title()) {
    // required string title = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  if (has_snippet()) {
    // required string snippet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snippet());
  }

  return total_size;
}
size_t RichSitelink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.advert.RichSitelink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string title = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

    // required string snippet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snippet());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RichSitelink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.advert.RichSitelink)
  GOOGLE_DCHECK_NE(&from, this);
  const RichSitelink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RichSitelink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.advert.RichSitelink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.advert.RichSitelink)
    MergeFrom(*source);
  }
}

void RichSitelink::MergeFrom(const RichSitelink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.advert.RichSitelink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_snippet();
      snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
    }
  }
}

void RichSitelink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.advert.RichSitelink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RichSitelink::CopyFrom(const RichSitelink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.advert.RichSitelink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RichSitelink::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void RichSitelink::Swap(RichSitelink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RichSitelink::InternalSwap(RichSitelink* other) {
  using std::swap;
  url_.Swap(&other->url_);
  title_.Swap(&other->title_);
  snippet_.Swap(&other->snippet_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RichSitelink::GetMetadata() const {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RichSitelink

// required string url = 1;
bool RichSitelink::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RichSitelink::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void RichSitelink::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void RichSitelink::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& RichSitelink::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.RichSitelink.url)
  return url_.GetNoArena();
}
void RichSitelink::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.RichSitelink.url)
}
#if LANG_CXX11
void RichSitelink::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.RichSitelink.url)
}
#endif
void RichSitelink::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.RichSitelink.url)
}
void RichSitelink::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.RichSitelink.url)
}
::std::string* RichSitelink::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.RichSitelink.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RichSitelink::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.RichSitelink.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RichSitelink::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.RichSitelink.url)
}

// required string title = 2;
bool RichSitelink::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RichSitelink::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void RichSitelink::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void RichSitelink::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& RichSitelink::title() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.RichSitelink.title)
  return title_.GetNoArena();
}
void RichSitelink::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.RichSitelink.title)
}
#if LANG_CXX11
void RichSitelink::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.RichSitelink.title)
}
#endif
void RichSitelink::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.RichSitelink.title)
}
void RichSitelink::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.RichSitelink.title)
}
::std::string* RichSitelink::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.RichSitelink.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RichSitelink::release_title() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.RichSitelink.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RichSitelink::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.RichSitelink.title)
}

// required string snippet = 3;
bool RichSitelink::has_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RichSitelink::set_has_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
void RichSitelink::clear_has_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
void RichSitelink::clear_snippet() {
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snippet();
}
const ::std::string& RichSitelink::snippet() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.RichSitelink.snippet)
  return snippet_.GetNoArena();
}
void RichSitelink::set_snippet(const ::std::string& value) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.RichSitelink.snippet)
}
#if LANG_CXX11
void RichSitelink::set_snippet(::std::string&& value) {
  set_has_snippet();
  snippet_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.advert.RichSitelink.snippet)
}
#endif
void RichSitelink::set_snippet(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.advert.RichSitelink.snippet)
}
void RichSitelink::set_snippet(const char* value, size_t size) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.advert.RichSitelink.snippet)
}
::std::string* RichSitelink::mutable_snippet() {
  set_has_snippet();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.RichSitelink.snippet)
  return snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RichSitelink::release_snippet() {
  // @@protoc_insertion_point(field_release:ru.mail.go.advert.RichSitelink.snippet)
  clear_has_snippet();
  return snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RichSitelink::set_allocated_snippet(::std::string* snippet) {
  if (snippet != NULL) {
    set_has_snippet();
  } else {
    clear_has_snippet();
  }
  snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippet);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.advert.RichSitelink.snippet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RichSitelinks::kTsFieldNumber;
const int RichSitelinks::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RichSitelinks::RichSitelinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_advert_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.advert.RichSitelinks)
}
RichSitelinks::RichSitelinks(const RichSitelinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      link_(from.link_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.advert.RichSitelinks)
}

void RichSitelinks::SharedCtor() {
  _cached_size_ = 0;
  ts_ = GOOGLE_ULONGLONG(0);
}

RichSitelinks::~RichSitelinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.advert.RichSitelinks)
  SharedDtor();
}

void RichSitelinks::SharedDtor() {
}

void RichSitelinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RichSitelinks::descriptor() {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RichSitelinks& RichSitelinks::default_instance() {
  protobuf_advert_2eproto::InitDefaults();
  return *internal_default_instance();
}

RichSitelinks* RichSitelinks::New(::google::protobuf::Arena* arena) const {
  RichSitelinks* n = new RichSitelinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RichSitelinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.advert.RichSitelinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_.Clear();
  ts_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RichSitelinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.advert.RichSitelinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.advert.RichSitelink link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.advert.RichSitelinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.advert.RichSitelinks)
  return false;
#undef DO_
}

void RichSitelinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.advert.RichSitelinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ts = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ts(), output);
  }

  // repeated .ru.mail.go.advert.RichSitelink link = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->link(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.advert.RichSitelinks)
}

::google::protobuf::uint8* RichSitelinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.advert.RichSitelinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ts(), target);
  }

  // repeated .ru.mail.go.advert.RichSitelink link = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->link(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.advert.RichSitelinks)
  return target;
}

size_t RichSitelinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.advert.RichSitelinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 ts = 1;
  if (has_ts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ts());
  }
  // repeated .ru.mail.go.advert.RichSitelink link = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->link_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->link(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RichSitelinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.advert.RichSitelinks)
  GOOGLE_DCHECK_NE(&from, this);
  const RichSitelinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RichSitelinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.advert.RichSitelinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.advert.RichSitelinks)
    MergeFrom(*source);
  }
}

void RichSitelinks::MergeFrom(const RichSitelinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.advert.RichSitelinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  link_.MergeFrom(from.link_);
  if (from.has_ts()) {
    set_ts(from.ts());
  }
}

void RichSitelinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.advert.RichSitelinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RichSitelinks::CopyFrom(const RichSitelinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.advert.RichSitelinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RichSitelinks::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->link())) return false;
  return true;
}

void RichSitelinks::Swap(RichSitelinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RichSitelinks::InternalSwap(RichSitelinks* other) {
  using std::swap;
  link_.InternalSwap(&other->link_);
  swap(ts_, other->ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RichSitelinks::GetMetadata() const {
  protobuf_advert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_advert_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RichSitelinks

// required uint64 ts = 1;
bool RichSitelinks::has_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RichSitelinks::set_has_ts() {
  _has_bits_[0] |= 0x00000001u;
}
void RichSitelinks::clear_has_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
void RichSitelinks::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
::google::protobuf::uint64 RichSitelinks::ts() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.RichSitelinks.ts)
  return ts_;
}
void RichSitelinks::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.advert.RichSitelinks.ts)
}

// repeated .ru.mail.go.advert.RichSitelink link = 2;
int RichSitelinks::link_size() const {
  return link_.size();
}
void RichSitelinks::clear_link() {
  link_.Clear();
}
const ::ru::mail::go::advert::RichSitelink& RichSitelinks::link(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.advert.RichSitelinks.link)
  return link_.Get(index);
}
::ru::mail::go::advert::RichSitelink* RichSitelinks::mutable_link(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.advert.RichSitelinks.link)
  return link_.Mutable(index);
}
::ru::mail::go::advert::RichSitelink* RichSitelinks::add_link() {
  // @@protoc_insertion_point(field_add:ru.mail.go.advert.RichSitelinks.link)
  return link_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::advert::RichSitelink >*
RichSitelinks::mutable_link() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.advert.RichSitelinks.link)
  return &link_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::advert::RichSitelink >&
RichSitelinks::link() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.advert.RichSitelinks.link)
  return link_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace advert
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
