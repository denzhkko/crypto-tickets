// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: annoy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "annoy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace annoy {
namespace pb {
class DocumentData_OriginalInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentData_OriginalInfo>
     _instance;
} _DocumentData_OriginalInfo_default_instance_;
class DocumentData_OkInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentData_OkInfo>
     _instance;
} _DocumentData_OkInfo_default_instance_;
class DocumentDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentData>
     _instance;
} _DocumentData_default_instance_;
class AnnoyOutput_AnnoyResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnnoyOutput_AnnoyResult>
     _instance;
} _AnnoyOutput_AnnoyResult_default_instance_;
class AnnoyOutputDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnnoyOutput>
     _instance;
} _AnnoyOutput_default_instance_;

namespace protobuf_annoy_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OriginalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OriginalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OriginalInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OriginalInfo, text_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OkInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OkInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OkInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData_OkInfo, topic_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, source_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, original_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentData, ok_info_),
  2,
  3,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput_AnnoyResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput_AnnoyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput_AnnoyResult, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput_AnnoyResult, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput_AnnoyResult, topic_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnoyOutput, results_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(DocumentData_OriginalInfo)},
  { 9, 16, sizeof(DocumentData_OkInfo)},
  { 18, 28, sizeof(DocumentData)},
  { 33, 41, sizeof(AnnoyOutput_AnnoyResult)},
  { 44, 50, sizeof(AnnoyOutput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentData_OriginalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentData_OkInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnnoyOutput_AnnoyResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnnoyOutput_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "annoy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DocumentData_OriginalInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentData_OriginalInfo_default_instance_);_DocumentData_OkInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentData_OkInfo_default_instance_);_DocumentData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentData_default_instance_);_AnnoyOutput_AnnoyResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnnoyOutput_AnnoyResult_default_instance_);_AnnoyOutput_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnnoyOutput_default_instance_);_DocumentData_default_instance_._instance.get_mutable()->original_info_ = const_cast< ::annoy::pb::DocumentData_OriginalInfo*>(
      ::annoy::pb::DocumentData_OriginalInfo::internal_default_instance());
  _DocumentData_default_instance_._instance.get_mutable()->ok_info_ = const_cast< ::annoy::pb::DocumentData_OkInfo*>(
      ::annoy::pb::DocumentData_OkInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013annoy.proto\022\010annoy.pb\"\210\002\n\014DocumentData"
      "\022\021\n\tsource_id\030\001 \001(\003\022\016\n\006doc_id\030\002 \002(\003\022\020\n\010f"
      "eatures\030\003 \003(\002\022:\n\roriginal_info\030\004 \001(\0132#.a"
      "nnoy.pb.DocumentData.OriginalInfo\022.\n\007ok_"
      "info\030\005 \001(\0132\035.annoy.pb.DocumentData.OkInf"
      "o\032)\n\014OriginalInfo\022\013\n\003url\030\001 \001(\t\022\014\n\004text\030\002"
      " \001(\t\032,\n\006OkInfo\022\020\n\010group_id\030\001 \002(\003\022\020\n\010topi"
      "c_id\030\002 \002(\003\"\204\001\n\013AnnoyOutput\0222\n\007results\030\001 "
      "\003(\0132!.annoy.pb.AnnoyOutput.AnnoyResult\032A"
      "\n\013AnnoyResult\022\016\n\006doc_id\030\001 \002(\003\022\020\n\010distanc"
      "e\030\002 \002(\002\022\020\n\010topic_id\030\003 \001(\003B\013B\tAnnoyData"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "annoy.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_annoy_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentData_OriginalInfo::kUrlFieldNumber;
const int DocumentData_OriginalInfo::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentData_OriginalInfo::DocumentData_OriginalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_annoy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:annoy.pb.DocumentData.OriginalInfo)
}
DocumentData_OriginalInfo::DocumentData_OriginalInfo(const DocumentData_OriginalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:annoy.pb.DocumentData.OriginalInfo)
}

void DocumentData_OriginalInfo::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DocumentData_OriginalInfo::~DocumentData_OriginalInfo() {
  // @@protoc_insertion_point(destructor:annoy.pb.DocumentData.OriginalInfo)
  SharedDtor();
}

void DocumentData_OriginalInfo::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DocumentData_OriginalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentData_OriginalInfo::descriptor() {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentData_OriginalInfo& DocumentData_OriginalInfo::default_instance() {
  protobuf_annoy_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentData_OriginalInfo* DocumentData_OriginalInfo::New(::google::protobuf::Arena* arena) const {
  DocumentData_OriginalInfo* n = new DocumentData_OriginalInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentData_OriginalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:annoy.pb.DocumentData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DocumentData_OriginalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:annoy.pb.DocumentData.OriginalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "annoy.pb.DocumentData.OriginalInfo.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "annoy.pb.DocumentData.OriginalInfo.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:annoy.pb.DocumentData.OriginalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:annoy.pb.DocumentData.OriginalInfo)
  return false;
#undef DO_
}

void DocumentData_OriginalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:annoy.pb.DocumentData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "annoy.pb.DocumentData.OriginalInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "annoy.pb.DocumentData.OriginalInfo.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:annoy.pb.DocumentData.OriginalInfo)
}

::google::protobuf::uint8* DocumentData_OriginalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:annoy.pb.DocumentData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "annoy.pb.DocumentData.OriginalInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "annoy.pb.DocumentData.OriginalInfo.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:annoy.pb.DocumentData.OriginalInfo)
  return target;
}

size_t DocumentData_OriginalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:annoy.pb.DocumentData.OriginalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocumentData_OriginalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:annoy.pb.DocumentData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentData_OriginalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DocumentData_OriginalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:annoy.pb.DocumentData.OriginalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:annoy.pb.DocumentData.OriginalInfo)
    MergeFrom(*source);
  }
}

void DocumentData_OriginalInfo::MergeFrom(const DocumentData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:annoy.pb.DocumentData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
}

void DocumentData_OriginalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:annoy.pb.DocumentData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentData_OriginalInfo::CopyFrom(const DocumentData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:annoy.pb.DocumentData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentData_OriginalInfo::IsInitialized() const {
  return true;
}

void DocumentData_OriginalInfo::Swap(DocumentData_OriginalInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentData_OriginalInfo::InternalSwap(DocumentData_OriginalInfo* other) {
  using std::swap;
  url_.Swap(&other->url_);
  text_.Swap(&other->text_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DocumentData_OriginalInfo::GetMetadata() const {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentData_OriginalInfo

// optional string url = 1;
bool DocumentData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DocumentData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void DocumentData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void DocumentData_OriginalInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& DocumentData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OriginalInfo.url)
  return url_.GetNoArena();
}
void DocumentData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OriginalInfo.url)
}
#if LANG_CXX11
void DocumentData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:annoy.pb.DocumentData.OriginalInfo.url)
}
#endif
void DocumentData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:annoy.pb.DocumentData.OriginalInfo.url)
}
void DocumentData_OriginalInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:annoy.pb.DocumentData.OriginalInfo.url)
}
::std::string* DocumentData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.OriginalInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DocumentData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.OriginalInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.OriginalInfo.url)
}

// optional string text = 2;
bool DocumentData_OriginalInfo::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DocumentData_OriginalInfo::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void DocumentData_OriginalInfo::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void DocumentData_OriginalInfo::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& DocumentData_OriginalInfo::text() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OriginalInfo.text)
  return text_.GetNoArena();
}
void DocumentData_OriginalInfo::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OriginalInfo.text)
}
#if LANG_CXX11
void DocumentData_OriginalInfo::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:annoy.pb.DocumentData.OriginalInfo.text)
}
#endif
void DocumentData_OriginalInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:annoy.pb.DocumentData.OriginalInfo.text)
}
void DocumentData_OriginalInfo::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:annoy.pb.DocumentData.OriginalInfo.text)
}
::std::string* DocumentData_OriginalInfo::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.OriginalInfo.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DocumentData_OriginalInfo::release_text() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.OriginalInfo.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentData_OriginalInfo::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.OriginalInfo.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentData_OkInfo::kGroupIdFieldNumber;
const int DocumentData_OkInfo::kTopicIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentData_OkInfo::DocumentData_OkInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_annoy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:annoy.pb.DocumentData.OkInfo)
}
DocumentData_OkInfo::DocumentData_OkInfo(const DocumentData_OkInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&topic_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(topic_id_));
  // @@protoc_insertion_point(copy_constructor:annoy.pb.DocumentData.OkInfo)
}

void DocumentData_OkInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topic_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(topic_id_));
}

DocumentData_OkInfo::~DocumentData_OkInfo() {
  // @@protoc_insertion_point(destructor:annoy.pb.DocumentData.OkInfo)
  SharedDtor();
}

void DocumentData_OkInfo::SharedDtor() {
}

void DocumentData_OkInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentData_OkInfo::descriptor() {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentData_OkInfo& DocumentData_OkInfo::default_instance() {
  protobuf_annoy_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentData_OkInfo* DocumentData_OkInfo::New(::google::protobuf::Arena* arena) const {
  DocumentData_OkInfo* n = new DocumentData_OkInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentData_OkInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:annoy.pb.DocumentData.OkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&topic_id_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(topic_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DocumentData_OkInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:annoy.pb.DocumentData.OkInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 topic_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_topic_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &topic_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:annoy.pb.DocumentData.OkInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:annoy.pb.DocumentData.OkInfo)
  return false;
#undef DO_
}

void DocumentData_OkInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:annoy.pb.DocumentData.OkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->group_id(), output);
  }

  // required int64 topic_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->topic_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:annoy.pb.DocumentData.OkInfo)
}

::google::protobuf::uint8* DocumentData_OkInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:annoy.pb.DocumentData.OkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->group_id(), target);
  }

  // required int64 topic_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->topic_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:annoy.pb.DocumentData.OkInfo)
  return target;
}

size_t DocumentData_OkInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:annoy.pb.DocumentData.OkInfo)
  size_t total_size = 0;

  if (has_group_id()) {
    // required int64 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->group_id());
  }

  if (has_topic_id()) {
    // required int64 topic_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->topic_id());
  }

  return total_size;
}
size_t DocumentData_OkInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:annoy.pb.DocumentData.OkInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->group_id());

    // required int64 topic_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->topic_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocumentData_OkInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:annoy.pb.DocumentData.OkInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentData_OkInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DocumentData_OkInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:annoy.pb.DocumentData.OkInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:annoy.pb.DocumentData.OkInfo)
    MergeFrom(*source);
  }
}

void DocumentData_OkInfo::MergeFrom(const DocumentData_OkInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:annoy.pb.DocumentData.OkInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      topic_id_ = from.topic_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DocumentData_OkInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:annoy.pb.DocumentData.OkInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentData_OkInfo::CopyFrom(const DocumentData_OkInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:annoy.pb.DocumentData.OkInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentData_OkInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DocumentData_OkInfo::Swap(DocumentData_OkInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentData_OkInfo::InternalSwap(DocumentData_OkInfo* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(topic_id_, other->topic_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DocumentData_OkInfo::GetMetadata() const {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentData_OkInfo

// required int64 group_id = 1;
bool DocumentData_OkInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DocumentData_OkInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DocumentData_OkInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DocumentData_OkInfo::clear_group_id() {
  group_id_ = GOOGLE_LONGLONG(0);
  clear_has_group_id();
}
::google::protobuf::int64 DocumentData_OkInfo::group_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OkInfo.group_id)
  return group_id_;
}
void DocumentData_OkInfo::set_group_id(::google::protobuf::int64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OkInfo.group_id)
}

// required int64 topic_id = 2;
bool DocumentData_OkInfo::has_topic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DocumentData_OkInfo::set_has_topic_id() {
  _has_bits_[0] |= 0x00000002u;
}
void DocumentData_OkInfo::clear_has_topic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void DocumentData_OkInfo::clear_topic_id() {
  topic_id_ = GOOGLE_LONGLONG(0);
  clear_has_topic_id();
}
::google::protobuf::int64 DocumentData_OkInfo::topic_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OkInfo.topic_id)
  return topic_id_;
}
void DocumentData_OkInfo::set_topic_id(::google::protobuf::int64 value) {
  set_has_topic_id();
  topic_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OkInfo.topic_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentData::kSourceIdFieldNumber;
const int DocumentData::kDocIdFieldNumber;
const int DocumentData::kFeaturesFieldNumber;
const int DocumentData::kOriginalInfoFieldNumber;
const int DocumentData::kOkInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentData::DocumentData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_annoy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:annoy.pb.DocumentData)
}
DocumentData::DocumentData(const DocumentData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_info()) {
    original_info_ = new ::annoy::pb::DocumentData_OriginalInfo(*from.original_info_);
  } else {
    original_info_ = NULL;
  }
  if (from.has_ok_info()) {
    ok_info_ = new ::annoy::pb::DocumentData_OkInfo(*from.ok_info_);
  } else {
    ok_info_ = NULL;
  }
  ::memcpy(&source_id_, &from.source_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&doc_id_) -
    reinterpret_cast<char*>(&source_id_)) + sizeof(doc_id_));
  // @@protoc_insertion_point(copy_constructor:annoy.pb.DocumentData)
}

void DocumentData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&original_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&doc_id_) -
      reinterpret_cast<char*>(&original_info_)) + sizeof(doc_id_));
}

DocumentData::~DocumentData() {
  // @@protoc_insertion_point(destructor:annoy.pb.DocumentData)
  SharedDtor();
}

void DocumentData::SharedDtor() {
  if (this != internal_default_instance()) delete original_info_;
  if (this != internal_default_instance()) delete ok_info_;
}

void DocumentData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentData::descriptor() {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentData& DocumentData::default_instance() {
  protobuf_annoy_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentData* DocumentData::New(::google::protobuf::Arena* arena) const {
  DocumentData* n = new DocumentData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentData::Clear() {
// @@protoc_insertion_point(message_clear_start:annoy.pb.DocumentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(original_info_ != NULL);
      original_info_->::annoy::pb::DocumentData_OriginalInfo::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ok_info_ != NULL);
      ok_info_->::annoy::pb::DocumentData_OkInfo::Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&source_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&doc_id_) -
        reinterpret_cast<char*>(&source_id_)) + sizeof(doc_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DocumentData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:annoy.pb.DocumentData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 source_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 doc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_doc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float features = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_features())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_features())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ok_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:annoy.pb.DocumentData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:annoy.pb.DocumentData)
  return false;
#undef DO_
}

void DocumentData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:annoy.pb.DocumentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 source_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source_id(), output);
  }

  // required int64 doc_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->doc_id(), output);
  }

  // repeated float features = 3;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->features(i), output);
  }

  // optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->original_info_, output);
  }

  // optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->ok_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:annoy.pb.DocumentData)
}

::google::protobuf::uint8* DocumentData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:annoy.pb.DocumentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 source_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source_id(), target);
  }

  // required int64 doc_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->doc_id(), target);
  }

  // repeated float features = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->features_, target);

  // optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->original_info_, deterministic, target);
  }

  // optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->ok_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:annoy.pb.DocumentData)
  return target;
}

size_t DocumentData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:annoy.pb.DocumentData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 doc_id = 2;
  if (has_doc_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());
  }
  // repeated float features = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->features_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
    if (has_original_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->original_info_);
    }

    // optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
    if (has_ok_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ok_info_);
    }

    // optional int64 source_id = 1;
    if (has_source_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->source_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocumentData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:annoy.pb.DocumentData)
  GOOGLE_DCHECK_NE(&from, this);
  const DocumentData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DocumentData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:annoy.pb.DocumentData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:annoy.pb.DocumentData)
    MergeFrom(*source);
  }
}

void DocumentData::MergeFrom(const DocumentData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:annoy.pb.DocumentData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_original_info()->::annoy::pb::DocumentData_OriginalInfo::MergeFrom(from.original_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ok_info()->::annoy::pb::DocumentData_OkInfo::MergeFrom(from.ok_info());
    }
    if (cached_has_bits & 0x00000004u) {
      source_id_ = from.source_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      doc_id_ = from.doc_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DocumentData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:annoy.pb.DocumentData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentData::CopyFrom(const DocumentData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:annoy.pb.DocumentData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DocumentData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_ok_info()) {
    if (!this->ok_info_->IsInitialized()) return false;
  }
  return true;
}

void DocumentData::Swap(DocumentData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentData::InternalSwap(DocumentData* other) {
  using std::swap;
  features_.InternalSwap(&other->features_);
  swap(original_info_, other->original_info_);
  swap(ok_info_, other->ok_info_);
  swap(source_id_, other->source_id_);
  swap(doc_id_, other->doc_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DocumentData::GetMetadata() const {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentData

// optional int64 source_id = 1;
bool DocumentData::has_source_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DocumentData::set_has_source_id() {
  _has_bits_[0] |= 0x00000004u;
}
void DocumentData::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void DocumentData::clear_source_id() {
  source_id_ = GOOGLE_LONGLONG(0);
  clear_has_source_id();
}
::google::protobuf::int64 DocumentData::source_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.source_id)
  return source_id_;
}
void DocumentData::set_source_id(::google::protobuf::int64 value) {
  set_has_source_id();
  source_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.source_id)
}

// required int64 doc_id = 2;
bool DocumentData::has_doc_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DocumentData::set_has_doc_id() {
  _has_bits_[0] |= 0x00000008u;
}
void DocumentData::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void DocumentData::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
::google::protobuf::int64 DocumentData::doc_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.doc_id)
  return doc_id_;
}
void DocumentData::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.doc_id)
}

// repeated float features = 3;
int DocumentData::features_size() const {
  return features_.size();
}
void DocumentData::clear_features() {
  features_.Clear();
}
float DocumentData::features(int index) const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.features)
  return features_.Get(index);
}
void DocumentData::set_features(int index, float value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.features)
}
void DocumentData::add_features(float value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:annoy.pb.DocumentData.features)
}
const ::google::protobuf::RepeatedField< float >&
DocumentData::features() const {
  // @@protoc_insertion_point(field_list:annoy.pb.DocumentData.features)
  return features_;
}
::google::protobuf::RepeatedField< float >*
DocumentData::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:annoy.pb.DocumentData.features)
  return &features_;
}

// optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
bool DocumentData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DocumentData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
void DocumentData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void DocumentData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::annoy::pb::DocumentData_OriginalInfo::Clear();
  clear_has_original_info();
}
const ::annoy::pb::DocumentData_OriginalInfo& DocumentData::original_info() const {
  const ::annoy::pb::DocumentData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::annoy::pb::DocumentData_OriginalInfo*>(
      &::annoy::pb::_DocumentData_OriginalInfo_default_instance_);
}
::annoy::pb::DocumentData_OriginalInfo* DocumentData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    original_info_ = new ::annoy::pb::DocumentData_OriginalInfo;
  }
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.original_info)
  return original_info_;
}
::annoy::pb::DocumentData_OriginalInfo* DocumentData::release_original_info() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.original_info)
  clear_has_original_info();
  ::annoy::pb::DocumentData_OriginalInfo* temp = original_info_;
  original_info_ = NULL;
  return temp;
}
void DocumentData::set_allocated_original_info(::annoy::pb::DocumentData_OriginalInfo* original_info) {
  delete original_info_;
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.original_info)
}

// optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
bool DocumentData::has_ok_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DocumentData::set_has_ok_info() {
  _has_bits_[0] |= 0x00000002u;
}
void DocumentData::clear_has_ok_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void DocumentData::clear_ok_info() {
  if (ok_info_ != NULL) ok_info_->::annoy::pb::DocumentData_OkInfo::Clear();
  clear_has_ok_info();
}
const ::annoy::pb::DocumentData_OkInfo& DocumentData::ok_info() const {
  const ::annoy::pb::DocumentData_OkInfo* p = ok_info_;
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.ok_info)
  return p != NULL ? *p : *reinterpret_cast<const ::annoy::pb::DocumentData_OkInfo*>(
      &::annoy::pb::_DocumentData_OkInfo_default_instance_);
}
::annoy::pb::DocumentData_OkInfo* DocumentData::mutable_ok_info() {
  set_has_ok_info();
  if (ok_info_ == NULL) {
    ok_info_ = new ::annoy::pb::DocumentData_OkInfo;
  }
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.ok_info)
  return ok_info_;
}
::annoy::pb::DocumentData_OkInfo* DocumentData::release_ok_info() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.ok_info)
  clear_has_ok_info();
  ::annoy::pb::DocumentData_OkInfo* temp = ok_info_;
  ok_info_ = NULL;
  return temp;
}
void DocumentData::set_allocated_ok_info(::annoy::pb::DocumentData_OkInfo* ok_info) {
  delete ok_info_;
  ok_info_ = ok_info;
  if (ok_info) {
    set_has_ok_info();
  } else {
    clear_has_ok_info();
  }
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.ok_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnoyOutput_AnnoyResult::kDocIdFieldNumber;
const int AnnoyOutput_AnnoyResult::kDistanceFieldNumber;
const int AnnoyOutput_AnnoyResult::kTopicIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnoyOutput_AnnoyResult::AnnoyOutput_AnnoyResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_annoy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:annoy.pb.AnnoyOutput.AnnoyResult)
}
AnnoyOutput_AnnoyResult::AnnoyOutput_AnnoyResult(const AnnoyOutput_AnnoyResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&doc_id_, &from.doc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:annoy.pb.AnnoyOutput.AnnoyResult)
}

void AnnoyOutput_AnnoyResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
}

AnnoyOutput_AnnoyResult::~AnnoyOutput_AnnoyResult() {
  // @@protoc_insertion_point(destructor:annoy.pb.AnnoyOutput.AnnoyResult)
  SharedDtor();
}

void AnnoyOutput_AnnoyResult::SharedDtor() {
}

void AnnoyOutput_AnnoyResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnoyOutput_AnnoyResult::descriptor() {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnoyOutput_AnnoyResult& AnnoyOutput_AnnoyResult::default_instance() {
  protobuf_annoy_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnnoyOutput_AnnoyResult* AnnoyOutput_AnnoyResult::New(::google::protobuf::Arena* arena) const {
  AnnoyOutput_AnnoyResult* n = new AnnoyOutput_AnnoyResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnoyOutput_AnnoyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:annoy.pb.AnnoyOutput.AnnoyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&doc_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnnoyOutput_AnnoyResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:annoy.pb.AnnoyOutput.AnnoyResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_doc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 topic_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_topic_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &topic_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:annoy.pb.AnnoyOutput.AnnoyResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:annoy.pb.AnnoyOutput.AnnoyResult)
  return false;
#undef DO_
}

void AnnoyOutput_AnnoyResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:annoy.pb.AnnoyOutput.AnnoyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 doc_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->doc_id(), output);
  }

  // required float distance = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->distance(), output);
  }

  // optional int64 topic_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->topic_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:annoy.pb.AnnoyOutput.AnnoyResult)
}

::google::protobuf::uint8* AnnoyOutput_AnnoyResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:annoy.pb.AnnoyOutput.AnnoyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 doc_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->doc_id(), target);
  }

  // required float distance = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->distance(), target);
  }

  // optional int64 topic_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->topic_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:annoy.pb.AnnoyOutput.AnnoyResult)
  return target;
}

size_t AnnoyOutput_AnnoyResult::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:annoy.pb.AnnoyOutput.AnnoyResult)
  size_t total_size = 0;

  if (has_doc_id()) {
    // required int64 doc_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());
  }

  if (has_distance()) {
    // required float distance = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t AnnoyOutput_AnnoyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:annoy.pb.AnnoyOutput.AnnoyResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required int64 doc_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());

    // required float distance = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int64 topic_id = 3;
  if (has_topic_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->topic_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnoyOutput_AnnoyResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:annoy.pb.AnnoyOutput.AnnoyResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnoyOutput_AnnoyResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnoyOutput_AnnoyResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:annoy.pb.AnnoyOutput.AnnoyResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:annoy.pb.AnnoyOutput.AnnoyResult)
    MergeFrom(*source);
  }
}

void AnnoyOutput_AnnoyResult::MergeFrom(const AnnoyOutput_AnnoyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:annoy.pb.AnnoyOutput.AnnoyResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      doc_id_ = from.doc_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      topic_id_ = from.topic_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AnnoyOutput_AnnoyResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:annoy.pb.AnnoyOutput.AnnoyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnoyOutput_AnnoyResult::CopyFrom(const AnnoyOutput_AnnoyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:annoy.pb.AnnoyOutput.AnnoyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnoyOutput_AnnoyResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void AnnoyOutput_AnnoyResult::Swap(AnnoyOutput_AnnoyResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnoyOutput_AnnoyResult::InternalSwap(AnnoyOutput_AnnoyResult* other) {
  using std::swap;
  swap(doc_id_, other->doc_id_);
  swap(topic_id_, other->topic_id_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnoyOutput_AnnoyResult::GetMetadata() const {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnnoyOutput_AnnoyResult

// required int64 doc_id = 1;
bool AnnoyOutput_AnnoyResult::has_doc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AnnoyOutput_AnnoyResult::set_has_doc_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AnnoyOutput_AnnoyResult::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AnnoyOutput_AnnoyResult::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
::google::protobuf::int64 AnnoyOutput_AnnoyResult::doc_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.doc_id)
  return doc_id_;
}
void AnnoyOutput_AnnoyResult::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.doc_id)
}

// required float distance = 2;
bool AnnoyOutput_AnnoyResult::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AnnoyOutput_AnnoyResult::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
void AnnoyOutput_AnnoyResult::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
void AnnoyOutput_AnnoyResult::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
float AnnoyOutput_AnnoyResult::distance() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.distance)
  return distance_;
}
void AnnoyOutput_AnnoyResult::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.distance)
}

// optional int64 topic_id = 3;
bool AnnoyOutput_AnnoyResult::has_topic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AnnoyOutput_AnnoyResult::set_has_topic_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AnnoyOutput_AnnoyResult::clear_has_topic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AnnoyOutput_AnnoyResult::clear_topic_id() {
  topic_id_ = GOOGLE_LONGLONG(0);
  clear_has_topic_id();
}
::google::protobuf::int64 AnnoyOutput_AnnoyResult::topic_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.topic_id)
  return topic_id_;
}
void AnnoyOutput_AnnoyResult::set_topic_id(::google::protobuf::int64 value) {
  set_has_topic_id();
  topic_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.topic_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnoyOutput::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnoyOutput::AnnoyOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_annoy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:annoy.pb.AnnoyOutput)
}
AnnoyOutput::AnnoyOutput(const AnnoyOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:annoy.pb.AnnoyOutput)
}

void AnnoyOutput::SharedCtor() {
  _cached_size_ = 0;
}

AnnoyOutput::~AnnoyOutput() {
  // @@protoc_insertion_point(destructor:annoy.pb.AnnoyOutput)
  SharedDtor();
}

void AnnoyOutput::SharedDtor() {
}

void AnnoyOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnoyOutput::descriptor() {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnoyOutput& AnnoyOutput::default_instance() {
  protobuf_annoy_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnnoyOutput* AnnoyOutput::New(::google::protobuf::Arena* arena) const {
  AnnoyOutput* n = new AnnoyOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnnoyOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:annoy.pb.AnnoyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnnoyOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:annoy.pb.AnnoyOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:annoy.pb.AnnoyOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:annoy.pb.AnnoyOutput)
  return false;
#undef DO_
}

void AnnoyOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:annoy.pb.AnnoyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:annoy.pb.AnnoyOutput)
}

::google::protobuf::uint8* AnnoyOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:annoy.pb.AnnoyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:annoy.pb.AnnoyOutput)
  return target;
}

size_t AnnoyOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:annoy.pb.AnnoyOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnoyOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:annoy.pb.AnnoyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnoyOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnoyOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:annoy.pb.AnnoyOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:annoy.pb.AnnoyOutput)
    MergeFrom(*source);
  }
}

void AnnoyOutput::MergeFrom(const AnnoyOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:annoy.pb.AnnoyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void AnnoyOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:annoy.pb.AnnoyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnoyOutput::CopyFrom(const AnnoyOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:annoy.pb.AnnoyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnoyOutput::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void AnnoyOutput::Swap(AnnoyOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnoyOutput::InternalSwap(AnnoyOutput* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnoyOutput::GetMetadata() const {
  protobuf_annoy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_annoy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnnoyOutput

// repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
int AnnoyOutput::results_size() const {
  return results_.size();
}
void AnnoyOutput::clear_results() {
  results_.Clear();
}
const ::annoy::pb::AnnoyOutput_AnnoyResult& AnnoyOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.results)
  return results_.Get(index);
}
::annoy::pb::AnnoyOutput_AnnoyResult* AnnoyOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:annoy.pb.AnnoyOutput.results)
  return results_.Mutable(index);
}
::annoy::pb::AnnoyOutput_AnnoyResult* AnnoyOutput::add_results() {
  // @@protoc_insertion_point(field_add:annoy.pb.AnnoyOutput.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >*
AnnoyOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:annoy.pb.AnnoyOutput.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >&
AnnoyOutput::results() const {
  // @@protoc_insertion_point(field_list:annoy.pb.AnnoyOutput.results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace annoy

// @@protoc_insertion_point(global_scope)
