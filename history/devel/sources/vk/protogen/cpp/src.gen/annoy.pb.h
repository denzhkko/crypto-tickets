// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: annoy.proto

#ifndef PROTOBUF_annoy_2eproto__INCLUDED
#define PROTOBUF_annoy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace annoy {
namespace pb {
class AnnoyOutput;
class AnnoyOutputDefaultTypeInternal;
extern AnnoyOutputDefaultTypeInternal _AnnoyOutput_default_instance_;
class AnnoyOutput_AnnoyResult;
class AnnoyOutput_AnnoyResultDefaultTypeInternal;
extern AnnoyOutput_AnnoyResultDefaultTypeInternal _AnnoyOutput_AnnoyResult_default_instance_;
class DocumentData;
class DocumentDataDefaultTypeInternal;
extern DocumentDataDefaultTypeInternal _DocumentData_default_instance_;
class DocumentData_OkInfo;
class DocumentData_OkInfoDefaultTypeInternal;
extern DocumentData_OkInfoDefaultTypeInternal _DocumentData_OkInfo_default_instance_;
class DocumentData_OriginalInfo;
class DocumentData_OriginalInfoDefaultTypeInternal;
extern DocumentData_OriginalInfoDefaultTypeInternal _DocumentData_OriginalInfo_default_instance_;
}  // namespace pb
}  // namespace annoy

namespace annoy {
namespace pb {

namespace protobuf_annoy_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_annoy_2eproto

// ===================================================================

class DocumentData_OriginalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:annoy.pb.DocumentData.OriginalInfo) */ {
 public:
  DocumentData_OriginalInfo();
  virtual ~DocumentData_OriginalInfo();

  DocumentData_OriginalInfo(const DocumentData_OriginalInfo& from);

  inline DocumentData_OriginalInfo& operator=(const DocumentData_OriginalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentData_OriginalInfo(DocumentData_OriginalInfo&& from) noexcept
    : DocumentData_OriginalInfo() {
    *this = ::std::move(from);
  }

  inline DocumentData_OriginalInfo& operator=(DocumentData_OriginalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentData_OriginalInfo& default_instance();

  static inline const DocumentData_OriginalInfo* internal_default_instance() {
    return reinterpret_cast<const DocumentData_OriginalInfo*>(
               &_DocumentData_OriginalInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DocumentData_OriginalInfo* other);
  friend void swap(DocumentData_OriginalInfo& a, DocumentData_OriginalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentData_OriginalInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentData_OriginalInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocumentData_OriginalInfo& from);
  void MergeFrom(const DocumentData_OriginalInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentData_OriginalInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:annoy.pb.DocumentData.OriginalInfo)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct protobuf_annoy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentData_OkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:annoy.pb.DocumentData.OkInfo) */ {
 public:
  DocumentData_OkInfo();
  virtual ~DocumentData_OkInfo();

  DocumentData_OkInfo(const DocumentData_OkInfo& from);

  inline DocumentData_OkInfo& operator=(const DocumentData_OkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentData_OkInfo(DocumentData_OkInfo&& from) noexcept
    : DocumentData_OkInfo() {
    *this = ::std::move(from);
  }

  inline DocumentData_OkInfo& operator=(DocumentData_OkInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentData_OkInfo& default_instance();

  static inline const DocumentData_OkInfo* internal_default_instance() {
    return reinterpret_cast<const DocumentData_OkInfo*>(
               &_DocumentData_OkInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DocumentData_OkInfo* other);
  friend void swap(DocumentData_OkInfo& a, DocumentData_OkInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentData_OkInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentData_OkInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocumentData_OkInfo& from);
  void MergeFrom(const DocumentData_OkInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentData_OkInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::int64 group_id() const;
  void set_group_id(::google::protobuf::int64 value);

  // required int64 topic_id = 2;
  bool has_topic_id() const;
  void clear_topic_id();
  static const int kTopicIdFieldNumber = 2;
  ::google::protobuf::int64 topic_id() const;
  void set_topic_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:annoy.pb.DocumentData.OkInfo)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_topic_id();
  void clear_has_topic_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 group_id_;
  ::google::protobuf::int64 topic_id_;
  friend struct protobuf_annoy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:annoy.pb.DocumentData) */ {
 public:
  DocumentData();
  virtual ~DocumentData();

  DocumentData(const DocumentData& from);

  inline DocumentData& operator=(const DocumentData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentData(DocumentData&& from) noexcept
    : DocumentData() {
    *this = ::std::move(from);
  }

  inline DocumentData& operator=(DocumentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentData& default_instance();

  static inline const DocumentData* internal_default_instance() {
    return reinterpret_cast<const DocumentData*>(
               &_DocumentData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DocumentData* other);
  friend void swap(DocumentData& a, DocumentData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentData* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocumentData& from);
  void MergeFrom(const DocumentData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DocumentData_OriginalInfo OriginalInfo;
  typedef DocumentData_OkInfo OkInfo;

  // accessors -------------------------------------------------------

  // repeated float features = 3;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 3;
  float features(int index) const;
  void set_features(int index, float value);
  void add_features(float value);
  const ::google::protobuf::RepeatedField< float >&
      features() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_features();

  // optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
  bool has_original_info() const;
  void clear_original_info();
  static const int kOriginalInfoFieldNumber = 4;
  const ::annoy::pb::DocumentData_OriginalInfo& original_info() const;
  ::annoy::pb::DocumentData_OriginalInfo* mutable_original_info();
  ::annoy::pb::DocumentData_OriginalInfo* release_original_info();
  void set_allocated_original_info(::annoy::pb::DocumentData_OriginalInfo* original_info);

  // optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
  bool has_ok_info() const;
  void clear_ok_info();
  static const int kOkInfoFieldNumber = 5;
  const ::annoy::pb::DocumentData_OkInfo& ok_info() const;
  ::annoy::pb::DocumentData_OkInfo* mutable_ok_info();
  ::annoy::pb::DocumentData_OkInfo* release_ok_info();
  void set_allocated_ok_info(::annoy::pb::DocumentData_OkInfo* ok_info);

  // optional int64 source_id = 1;
  bool has_source_id() const;
  void clear_source_id();
  static const int kSourceIdFieldNumber = 1;
  ::google::protobuf::int64 source_id() const;
  void set_source_id(::google::protobuf::int64 value);

  // required int64 doc_id = 2;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 2;
  ::google::protobuf::int64 doc_id() const;
  void set_doc_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:annoy.pb.DocumentData)
 private:
  void set_has_source_id();
  void clear_has_source_id();
  void set_has_doc_id();
  void clear_has_doc_id();
  void set_has_original_info();
  void clear_has_original_info();
  void set_has_ok_info();
  void clear_has_ok_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > features_;
  ::annoy::pb::DocumentData_OriginalInfo* original_info_;
  ::annoy::pb::DocumentData_OkInfo* ok_info_;
  ::google::protobuf::int64 source_id_;
  ::google::protobuf::int64 doc_id_;
  friend struct protobuf_annoy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnnoyOutput_AnnoyResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:annoy.pb.AnnoyOutput.AnnoyResult) */ {
 public:
  AnnoyOutput_AnnoyResult();
  virtual ~AnnoyOutput_AnnoyResult();

  AnnoyOutput_AnnoyResult(const AnnoyOutput_AnnoyResult& from);

  inline AnnoyOutput_AnnoyResult& operator=(const AnnoyOutput_AnnoyResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnoyOutput_AnnoyResult(AnnoyOutput_AnnoyResult&& from) noexcept
    : AnnoyOutput_AnnoyResult() {
    *this = ::std::move(from);
  }

  inline AnnoyOutput_AnnoyResult& operator=(AnnoyOutput_AnnoyResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnoyOutput_AnnoyResult& default_instance();

  static inline const AnnoyOutput_AnnoyResult* internal_default_instance() {
    return reinterpret_cast<const AnnoyOutput_AnnoyResult*>(
               &_AnnoyOutput_AnnoyResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AnnoyOutput_AnnoyResult* other);
  friend void swap(AnnoyOutput_AnnoyResult& a, AnnoyOutput_AnnoyResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnoyOutput_AnnoyResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnoyOutput_AnnoyResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnoyOutput_AnnoyResult& from);
  void MergeFrom(const AnnoyOutput_AnnoyResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnoyOutput_AnnoyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 doc_id = 1;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 1;
  ::google::protobuf::int64 doc_id() const;
  void set_doc_id(::google::protobuf::int64 value);

  // optional int64 topic_id = 3;
  bool has_topic_id() const;
  void clear_topic_id();
  static const int kTopicIdFieldNumber = 3;
  ::google::protobuf::int64 topic_id() const;
  void set_topic_id(::google::protobuf::int64 value);

  // required float distance = 2;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:annoy.pb.AnnoyOutput.AnnoyResult)
 private:
  void set_has_doc_id();
  void clear_has_doc_id();
  void set_has_distance();
  void clear_has_distance();
  void set_has_topic_id();
  void clear_has_topic_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 doc_id_;
  ::google::protobuf::int64 topic_id_;
  float distance_;
  friend struct protobuf_annoy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnnoyOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:annoy.pb.AnnoyOutput) */ {
 public:
  AnnoyOutput();
  virtual ~AnnoyOutput();

  AnnoyOutput(const AnnoyOutput& from);

  inline AnnoyOutput& operator=(const AnnoyOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnnoyOutput(AnnoyOutput&& from) noexcept
    : AnnoyOutput() {
    *this = ::std::move(from);
  }

  inline AnnoyOutput& operator=(AnnoyOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnoyOutput& default_instance();

  static inline const AnnoyOutput* internal_default_instance() {
    return reinterpret_cast<const AnnoyOutput*>(
               &_AnnoyOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AnnoyOutput* other);
  friend void swap(AnnoyOutput& a, AnnoyOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnnoyOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  AnnoyOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnnoyOutput& from);
  void MergeFrom(const AnnoyOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnnoyOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AnnoyOutput_AnnoyResult AnnoyResult;

  // accessors -------------------------------------------------------

  // repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::annoy::pb::AnnoyOutput_AnnoyResult& results(int index) const;
  ::annoy::pb::AnnoyOutput_AnnoyResult* mutable_results(int index);
  ::annoy::pb::AnnoyOutput_AnnoyResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >&
      results() const;

  // @@protoc_insertion_point(class_scope:annoy.pb.AnnoyOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult > results_;
  friend struct protobuf_annoy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DocumentData_OriginalInfo

// optional string url = 1;
inline bool DocumentData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentData_OriginalInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& DocumentData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OriginalInfo.url)
  return url_.GetNoArena();
}
inline void DocumentData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OriginalInfo.url)
}
#if LANG_CXX11
inline void DocumentData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:annoy.pb.DocumentData.OriginalInfo.url)
}
#endif
inline void DocumentData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:annoy.pb.DocumentData.OriginalInfo.url)
}
inline void DocumentData_OriginalInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:annoy.pb.DocumentData.OriginalInfo.url)
}
inline ::std::string* DocumentData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.OriginalInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocumentData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.OriginalInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocumentData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.OriginalInfo.url)
}

// optional string text = 2;
inline bool DocumentData_OriginalInfo::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocumentData_OriginalInfo::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocumentData_OriginalInfo::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocumentData_OriginalInfo::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& DocumentData_OriginalInfo::text() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OriginalInfo.text)
  return text_.GetNoArena();
}
inline void DocumentData_OriginalInfo::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OriginalInfo.text)
}
#if LANG_CXX11
inline void DocumentData_OriginalInfo::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:annoy.pb.DocumentData.OriginalInfo.text)
}
#endif
inline void DocumentData_OriginalInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:annoy.pb.DocumentData.OriginalInfo.text)
}
inline void DocumentData_OriginalInfo::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:annoy.pb.DocumentData.OriginalInfo.text)
}
inline ::std::string* DocumentData_OriginalInfo::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.OriginalInfo.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocumentData_OriginalInfo::release_text() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.OriginalInfo.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocumentData_OriginalInfo::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.OriginalInfo.text)
}

// -------------------------------------------------------------------

// DocumentData_OkInfo

// required int64 group_id = 1;
inline bool DocumentData_OkInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentData_OkInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentData_OkInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentData_OkInfo::clear_group_id() {
  group_id_ = GOOGLE_LONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::int64 DocumentData_OkInfo::group_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OkInfo.group_id)
  return group_id_;
}
inline void DocumentData_OkInfo::set_group_id(::google::protobuf::int64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OkInfo.group_id)
}

// required int64 topic_id = 2;
inline bool DocumentData_OkInfo::has_topic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocumentData_OkInfo::set_has_topic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocumentData_OkInfo::clear_has_topic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocumentData_OkInfo::clear_topic_id() {
  topic_id_ = GOOGLE_LONGLONG(0);
  clear_has_topic_id();
}
inline ::google::protobuf::int64 DocumentData_OkInfo::topic_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.OkInfo.topic_id)
  return topic_id_;
}
inline void DocumentData_OkInfo::set_topic_id(::google::protobuf::int64 value) {
  set_has_topic_id();
  topic_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.OkInfo.topic_id)
}

// -------------------------------------------------------------------

// DocumentData

// optional int64 source_id = 1;
inline bool DocumentData::has_source_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DocumentData::set_has_source_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DocumentData::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DocumentData::clear_source_id() {
  source_id_ = GOOGLE_LONGLONG(0);
  clear_has_source_id();
}
inline ::google::protobuf::int64 DocumentData::source_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.source_id)
  return source_id_;
}
inline void DocumentData::set_source_id(::google::protobuf::int64 value) {
  set_has_source_id();
  source_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.source_id)
}

// required int64 doc_id = 2;
inline bool DocumentData::has_doc_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DocumentData::set_has_doc_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DocumentData::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DocumentData::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
inline ::google::protobuf::int64 DocumentData::doc_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.doc_id)
  return doc_id_;
}
inline void DocumentData::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.doc_id)
}

// repeated float features = 3;
inline int DocumentData::features_size() const {
  return features_.size();
}
inline void DocumentData::clear_features() {
  features_.Clear();
}
inline float DocumentData::features(int index) const {
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.features)
  return features_.Get(index);
}
inline void DocumentData::set_features(int index, float value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:annoy.pb.DocumentData.features)
}
inline void DocumentData::add_features(float value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:annoy.pb.DocumentData.features)
}
inline const ::google::protobuf::RepeatedField< float >&
DocumentData::features() const {
  // @@protoc_insertion_point(field_list:annoy.pb.DocumentData.features)
  return features_;
}
inline ::google::protobuf::RepeatedField< float >*
DocumentData::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:annoy.pb.DocumentData.features)
  return &features_;
}

// optional .annoy.pb.DocumentData.OriginalInfo original_info = 4;
inline bool DocumentData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::annoy::pb::DocumentData_OriginalInfo::Clear();
  clear_has_original_info();
}
inline const ::annoy::pb::DocumentData_OriginalInfo& DocumentData::original_info() const {
  const ::annoy::pb::DocumentData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::annoy::pb::DocumentData_OriginalInfo*>(
      &::annoy::pb::_DocumentData_OriginalInfo_default_instance_);
}
inline ::annoy::pb::DocumentData_OriginalInfo* DocumentData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    original_info_ = new ::annoy::pb::DocumentData_OriginalInfo;
  }
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.original_info)
  return original_info_;
}
inline ::annoy::pb::DocumentData_OriginalInfo* DocumentData::release_original_info() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.original_info)
  clear_has_original_info();
  ::annoy::pb::DocumentData_OriginalInfo* temp = original_info_;
  original_info_ = NULL;
  return temp;
}
inline void DocumentData::set_allocated_original_info(::annoy::pb::DocumentData_OriginalInfo* original_info) {
  delete original_info_;
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.original_info)
}

// optional .annoy.pb.DocumentData.OkInfo ok_info = 5;
inline bool DocumentData::has_ok_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocumentData::set_has_ok_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocumentData::clear_has_ok_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocumentData::clear_ok_info() {
  if (ok_info_ != NULL) ok_info_->::annoy::pb::DocumentData_OkInfo::Clear();
  clear_has_ok_info();
}
inline const ::annoy::pb::DocumentData_OkInfo& DocumentData::ok_info() const {
  const ::annoy::pb::DocumentData_OkInfo* p = ok_info_;
  // @@protoc_insertion_point(field_get:annoy.pb.DocumentData.ok_info)
  return p != NULL ? *p : *reinterpret_cast<const ::annoy::pb::DocumentData_OkInfo*>(
      &::annoy::pb::_DocumentData_OkInfo_default_instance_);
}
inline ::annoy::pb::DocumentData_OkInfo* DocumentData::mutable_ok_info() {
  set_has_ok_info();
  if (ok_info_ == NULL) {
    ok_info_ = new ::annoy::pb::DocumentData_OkInfo;
  }
  // @@protoc_insertion_point(field_mutable:annoy.pb.DocumentData.ok_info)
  return ok_info_;
}
inline ::annoy::pb::DocumentData_OkInfo* DocumentData::release_ok_info() {
  // @@protoc_insertion_point(field_release:annoy.pb.DocumentData.ok_info)
  clear_has_ok_info();
  ::annoy::pb::DocumentData_OkInfo* temp = ok_info_;
  ok_info_ = NULL;
  return temp;
}
inline void DocumentData::set_allocated_ok_info(::annoy::pb::DocumentData_OkInfo* ok_info) {
  delete ok_info_;
  ok_info_ = ok_info;
  if (ok_info) {
    set_has_ok_info();
  } else {
    clear_has_ok_info();
  }
  // @@protoc_insertion_point(field_set_allocated:annoy.pb.DocumentData.ok_info)
}

// -------------------------------------------------------------------

// AnnoyOutput_AnnoyResult

// required int64 doc_id = 1;
inline bool AnnoyOutput_AnnoyResult::has_doc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnnoyOutput_AnnoyResult::set_has_doc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnnoyOutput_AnnoyResult::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnnoyOutput_AnnoyResult::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
inline ::google::protobuf::int64 AnnoyOutput_AnnoyResult::doc_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.doc_id)
  return doc_id_;
}
inline void AnnoyOutput_AnnoyResult::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.doc_id)
}

// required float distance = 2;
inline bool AnnoyOutput_AnnoyResult::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnnoyOutput_AnnoyResult::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnnoyOutput_AnnoyResult::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnnoyOutput_AnnoyResult::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float AnnoyOutput_AnnoyResult::distance() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.distance)
  return distance_;
}
inline void AnnoyOutput_AnnoyResult::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.distance)
}

// optional int64 topic_id = 3;
inline bool AnnoyOutput_AnnoyResult::has_topic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnnoyOutput_AnnoyResult::set_has_topic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnnoyOutput_AnnoyResult::clear_has_topic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnnoyOutput_AnnoyResult::clear_topic_id() {
  topic_id_ = GOOGLE_LONGLONG(0);
  clear_has_topic_id();
}
inline ::google::protobuf::int64 AnnoyOutput_AnnoyResult::topic_id() const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.AnnoyResult.topic_id)
  return topic_id_;
}
inline void AnnoyOutput_AnnoyResult::set_topic_id(::google::protobuf::int64 value) {
  set_has_topic_id();
  topic_id_ = value;
  // @@protoc_insertion_point(field_set:annoy.pb.AnnoyOutput.AnnoyResult.topic_id)
}

// -------------------------------------------------------------------

// AnnoyOutput

// repeated .annoy.pb.AnnoyOutput.AnnoyResult results = 1;
inline int AnnoyOutput::results_size() const {
  return results_.size();
}
inline void AnnoyOutput::clear_results() {
  results_.Clear();
}
inline const ::annoy::pb::AnnoyOutput_AnnoyResult& AnnoyOutput::results(int index) const {
  // @@protoc_insertion_point(field_get:annoy.pb.AnnoyOutput.results)
  return results_.Get(index);
}
inline ::annoy::pb::AnnoyOutput_AnnoyResult* AnnoyOutput::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:annoy.pb.AnnoyOutput.results)
  return results_.Mutable(index);
}
inline ::annoy::pb::AnnoyOutput_AnnoyResult* AnnoyOutput::add_results() {
  // @@protoc_insertion_point(field_add:annoy.pb.AnnoyOutput.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >*
AnnoyOutput::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:annoy.pb.AnnoyOutput.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::annoy::pb::AnnoyOutput_AnnoyResult >&
AnnoyOutput::results() const {
  // @@protoc_insertion_point(field_list:annoy.pb.AnnoyOutput.results)
  return results_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace annoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_annoy_2eproto__INCLUDED
