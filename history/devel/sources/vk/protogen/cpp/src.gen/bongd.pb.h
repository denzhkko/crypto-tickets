// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bongd.proto

#ifndef PROTOBUF_bongd_2eproto__INCLUDED
#define PROTOBUF_bongd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace bongd {
class SnippetStruct;
class SnippetStructDefaultTypeInternal;
extern SnippetStructDefaultTypeInternal _SnippetStruct_default_instance_;
class SnippetStruct_CustomFieldStruct;
class SnippetStruct_CustomFieldStructDefaultTypeInternal;
extern SnippetStruct_CustomFieldStructDefaultTypeInternal _SnippetStruct_CustomFieldStruct_default_instance_;
class SnippetStruct_ImageStruct;
class SnippetStruct_ImageStructDefaultTypeInternal;
extern SnippetStruct_ImageStructDefaultTypeInternal _SnippetStruct_ImageStruct_default_instance_;
class SnippetStruct_MetaDataStruct;
class SnippetStruct_MetaDataStructDefaultTypeInternal;
extern SnippetStruct_MetaDataStructDefaultTypeInternal _SnippetStruct_MetaDataStruct_default_instance_;
}  // namespace bongd

namespace bongd {

namespace protobuf_bongd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_bongd_2eproto

// ===================================================================

class SnippetStruct_ImageStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bongd.SnippetStruct.ImageStruct) */ {
 public:
  SnippetStruct_ImageStruct();
  virtual ~SnippetStruct_ImageStruct();

  SnippetStruct_ImageStruct(const SnippetStruct_ImageStruct& from);

  inline SnippetStruct_ImageStruct& operator=(const SnippetStruct_ImageStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnippetStruct_ImageStruct(SnippetStruct_ImageStruct&& from) noexcept
    : SnippetStruct_ImageStruct() {
    *this = ::std::move(from);
  }

  inline SnippetStruct_ImageStruct& operator=(SnippetStruct_ImageStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnippetStruct_ImageStruct& default_instance();

  static inline const SnippetStruct_ImageStruct* internal_default_instance() {
    return reinterpret_cast<const SnippetStruct_ImageStruct*>(
               &_SnippetStruct_ImageStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SnippetStruct_ImageStruct* other);
  friend void swap(SnippetStruct_ImageStruct& a, SnippetStruct_ImageStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnippetStruct_ImageStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  SnippetStruct_ImageStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnippetStruct_ImageStruct& from);
  void MergeFrom(const SnippetStruct_ImageStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnippetStruct_ImageStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string orig_url = 1;
  bool has_orig_url() const;
  void clear_orig_url();
  static const int kOrigUrlFieldNumber = 1;
  const ::std::string& orig_url() const;
  void set_orig_url(const ::std::string& value);
  #if LANG_CXX11
  void set_orig_url(::std::string&& value);
  #endif
  void set_orig_url(const char* value);
  void set_orig_url(const char* value, size_t size);
  ::std::string* mutable_orig_url();
  ::std::string* release_orig_url();
  void set_allocated_orig_url(::std::string* orig_url);

  // required string srch_key = 2;
  bool has_srch_key() const;
  void clear_srch_key();
  static const int kSrchKeyFieldNumber = 2;
  const ::std::string& srch_key() const;
  void set_srch_key(const ::std::string& value);
  #if LANG_CXX11
  void set_srch_key(::std::string&& value);
  #endif
  void set_srch_key(const char* value);
  void set_srch_key(const char* value, size_t size);
  ::std::string* mutable_srch_key();
  ::std::string* release_srch_key();
  void set_allocated_srch_key(::std::string* srch_key);

  // required string format = 5;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 5;
  const ::std::string& format() const;
  void set_format(const ::std::string& value);
  #if LANG_CXX11
  void set_format(::std::string&& value);
  #endif
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  ::std::string* mutable_format();
  ::std::string* release_format();
  void set_allocated_format(::std::string* format);

  // required uint32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // required uint32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional uint32 orig_size = 6;
  bool has_orig_size() const;
  void clear_orig_size();
  static const int kOrigSizeFieldNumber = 6;
  ::google::protobuf::uint32 orig_size() const;
  void set_orig_size(::google::protobuf::uint32 value);

  // optional uint32 orig_width = 7;
  bool has_orig_width() const;
  void clear_orig_width();
  static const int kOrigWidthFieldNumber = 7;
  ::google::protobuf::uint32 orig_width() const;
  void set_orig_width(::google::protobuf::uint32 value);

  // optional uint32 orig_height = 8;
  bool has_orig_height() const;
  void clear_orig_height();
  static const int kOrigHeightFieldNumber = 8;
  ::google::protobuf::uint32 orig_height() const;
  void set_orig_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bongd.SnippetStruct.ImageStruct)
 private:
  void set_has_orig_url();
  void clear_has_orig_url();
  void set_has_srch_key();
  void clear_has_srch_key();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_format();
  void clear_has_format();
  void set_has_orig_size();
  void clear_has_orig_size();
  void set_has_orig_width();
  void clear_has_orig_width();
  void set_has_orig_height();
  void clear_has_orig_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr orig_url_;
  ::google::protobuf::internal::ArenaStringPtr srch_key_;
  ::google::protobuf::internal::ArenaStringPtr format_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 orig_size_;
  ::google::protobuf::uint32 orig_width_;
  ::google::protobuf::uint32 orig_height_;
  friend struct protobuf_bongd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnippetStruct_CustomFieldStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bongd.SnippetStruct.CustomFieldStruct) */ {
 public:
  SnippetStruct_CustomFieldStruct();
  virtual ~SnippetStruct_CustomFieldStruct();

  SnippetStruct_CustomFieldStruct(const SnippetStruct_CustomFieldStruct& from);

  inline SnippetStruct_CustomFieldStruct& operator=(const SnippetStruct_CustomFieldStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnippetStruct_CustomFieldStruct(SnippetStruct_CustomFieldStruct&& from) noexcept
    : SnippetStruct_CustomFieldStruct() {
    *this = ::std::move(from);
  }

  inline SnippetStruct_CustomFieldStruct& operator=(SnippetStruct_CustomFieldStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnippetStruct_CustomFieldStruct& default_instance();

  static inline const SnippetStruct_CustomFieldStruct* internal_default_instance() {
    return reinterpret_cast<const SnippetStruct_CustomFieldStruct*>(
               &_SnippetStruct_CustomFieldStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SnippetStruct_CustomFieldStruct* other);
  friend void swap(SnippetStruct_CustomFieldStruct& a, SnippetStruct_CustomFieldStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnippetStruct_CustomFieldStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  SnippetStruct_CustomFieldStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnippetStruct_CustomFieldStruct& from);
  void MergeFrom(const SnippetStruct_CustomFieldStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnippetStruct_CustomFieldStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:bongd.SnippetStruct.CustomFieldStruct)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_bongd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnippetStruct_MetaDataStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bongd.SnippetStruct.MetaDataStruct) */ {
 public:
  SnippetStruct_MetaDataStruct();
  virtual ~SnippetStruct_MetaDataStruct();

  SnippetStruct_MetaDataStruct(const SnippetStruct_MetaDataStruct& from);

  inline SnippetStruct_MetaDataStruct& operator=(const SnippetStruct_MetaDataStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnippetStruct_MetaDataStruct(SnippetStruct_MetaDataStruct&& from) noexcept
    : SnippetStruct_MetaDataStruct() {
    *this = ::std::move(from);
  }

  inline SnippetStruct_MetaDataStruct& operator=(SnippetStruct_MetaDataStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnippetStruct_MetaDataStruct& default_instance();

  static inline const SnippetStruct_MetaDataStruct* internal_default_instance() {
    return reinterpret_cast<const SnippetStruct_MetaDataStruct*>(
               &_SnippetStruct_MetaDataStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SnippetStruct_MetaDataStruct* other);
  friend void swap(SnippetStruct_MetaDataStruct& a, SnippetStruct_MetaDataStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnippetStruct_MetaDataStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  SnippetStruct_MetaDataStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnippetStruct_MetaDataStruct& from);
  void MergeFrom(const SnippetStruct_MetaDataStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnippetStruct_MetaDataStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:bongd.SnippetStruct.MetaDataStruct)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_bongd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnippetStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bongd.SnippetStruct) */ {
 public:
  SnippetStruct();
  virtual ~SnippetStruct();

  SnippetStruct(const SnippetStruct& from);

  inline SnippetStruct& operator=(const SnippetStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnippetStruct(SnippetStruct&& from) noexcept
    : SnippetStruct() {
    *this = ::std::move(from);
  }

  inline SnippetStruct& operator=(SnippetStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnippetStruct& default_instance();

  static inline const SnippetStruct* internal_default_instance() {
    return reinterpret_cast<const SnippetStruct*>(
               &_SnippetStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SnippetStruct* other);
  friend void swap(SnippetStruct& a, SnippetStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnippetStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  SnippetStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnippetStruct& from);
  void MergeFrom(const SnippetStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnippetStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SnippetStruct_ImageStruct ImageStruct;
  typedef SnippetStruct_CustomFieldStruct CustomFieldStruct;
  typedef SnippetStruct_MetaDataStruct MetaDataStruct;

  // accessors -------------------------------------------------------

  // repeated .bongd.SnippetStruct.ImageStruct images = 5;
  int images_size() const;
  void clear_images();
  static const int kImagesFieldNumber = 5;
  const ::bongd::SnippetStruct_ImageStruct& images(int index) const;
  ::bongd::SnippetStruct_ImageStruct* mutable_images(int index);
  ::bongd::SnippetStruct_ImageStruct* add_images();
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
      mutable_images();
  const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
      images() const;

  // repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
  int layer_images_size() const;
  void clear_layer_images();
  static const int kLayerImagesFieldNumber = 14;
  const ::bongd::SnippetStruct_ImageStruct& layer_images(int index) const;
  ::bongd::SnippetStruct_ImageStruct* mutable_layer_images(int index);
  ::bongd::SnippetStruct_ImageStruct* add_layer_images();
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
      mutable_layer_images();
  const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
      layer_images() const;

  // repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
  int custom_fields_size() const;
  void clear_custom_fields();
  static const int kCustomFieldsFieldNumber = 16;
  const ::bongd::SnippetStruct_CustomFieldStruct& custom_fields(int index) const;
  ::bongd::SnippetStruct_CustomFieldStruct* mutable_custom_fields(int index);
  ::bongd::SnippetStruct_CustomFieldStruct* add_custom_fields();
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >*
      mutable_custom_fields();
  const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >&
      custom_fields() const;

  // repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
  int meta_data_size() const;
  void clear_meta_data();
  static const int kMetaDataFieldNumber = 17;
  const ::bongd::SnippetStruct_MetaDataStruct& meta_data(int index) const;
  ::bongd::SnippetStruct_MetaDataStruct* mutable_meta_data(int index);
  ::bongd::SnippetStruct_MetaDataStruct* add_meta_data();
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >*
      mutable_meta_data();
  const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >&
      meta_data() const;

  // repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
  int vk_image_array_size() const;
  void clear_vk_image_array();
  static const int kVkImageArrayFieldNumber = 24;
  const ::bongd::SnippetStruct_ImageStruct& vk_image_array(int index) const;
  ::bongd::SnippetStruct_ImageStruct* mutable_vk_image_array(int index);
  ::bongd::SnippetStruct_ImageStruct* add_vk_image_array();
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
      mutable_vk_image_array();
  const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
      vk_image_array() const;

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string snippet = 3;
  bool has_snippet() const;
  void clear_snippet();
  static const int kSnippetFieldNumber = 3;
  const ::std::string& snippet() const;
  void set_snippet(const ::std::string& value);
  #if LANG_CXX11
  void set_snippet(::std::string&& value);
  #endif
  void set_snippet(const char* value);
  void set_snippet(const char* value, size_t size);
  ::std::string* mutable_snippet();
  ::std::string* release_snippet();
  void set_allocated_snippet(::std::string* snippet);

  // optional string creation_qid = 6;
  bool has_creation_qid() const;
  void clear_creation_qid();
  static const int kCreationQidFieldNumber = 6;
  const ::std::string& creation_qid() const;
  void set_creation_qid(const ::std::string& value);
  #if LANG_CXX11
  void set_creation_qid(::std::string&& value);
  #endif
  void set_creation_qid(const char* value);
  void set_creation_qid(const char* value, size_t size);
  ::std::string* mutable_creation_qid();
  ::std::string* release_creation_qid();
  void set_allocated_creation_qid(::std::string* creation_qid);

  // optional string creation_error = 7;
  bool has_creation_error() const;
  void clear_creation_error();
  static const int kCreationErrorFieldNumber = 7;
  const ::std::string& creation_error() const;
  void set_creation_error(const ::std::string& value);
  #if LANG_CXX11
  void set_creation_error(::std::string&& value);
  #endif
  void set_creation_error(const char* value);
  void set_creation_error(const char* value, size_t size);
  ::std::string* mutable_creation_error();
  ::std::string* release_creation_error();
  void set_allocated_creation_error(::std::string* creation_error);

  // optional string content_type = 9;
  bool has_content_type() const;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 9;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // optional string redirect_url = 11;
  bool has_redirect_url() const;
  void clear_redirect_url();
  static const int kRedirectUrlFieldNumber = 11;
  const ::std::string& redirect_url() const;
  void set_redirect_url(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect_url(::std::string&& value);
  #endif
  void set_redirect_url(const char* value);
  void set_redirect_url(const char* value, size_t size);
  ::std::string* mutable_redirect_url();
  ::std::string* release_redirect_url();
  void set_allocated_redirect_url(::std::string* redirect_url);

  // optional bytes layer_html = 13;
  bool has_layer_html() const;
  void clear_layer_html();
  static const int kLayerHtmlFieldNumber = 13;
  const ::std::string& layer_html() const;
  void set_layer_html(const ::std::string& value);
  #if LANG_CXX11
  void set_layer_html(::std::string&& value);
  #endif
  void set_layer_html(const char* value);
  void set_layer_html(const void* value, size_t size);
  ::std::string* mutable_layer_html();
  ::std::string* release_layer_html();
  void set_allocated_layer_html(::std::string* layer_html);

  // optional string layer_header = 22;
  bool has_layer_header() const;
  void clear_layer_header();
  static const int kLayerHeaderFieldNumber = 22;
  const ::std::string& layer_header() const;
  void set_layer_header(const ::std::string& value);
  #if LANG_CXX11
  void set_layer_header(::std::string&& value);
  #endif
  void set_layer_header(const char* value);
  void set_layer_header(const char* value, size_t size);
  ::std::string* mutable_layer_header();
  ::std::string* release_layer_header();
  void set_allocated_layer_header(::std::string* layer_header);

  // optional string layer_footer = 23;
  bool has_layer_footer() const;
  void clear_layer_footer();
  static const int kLayerFooterFieldNumber = 23;
  const ::std::string& layer_footer() const;
  void set_layer_footer(const ::std::string& value);
  #if LANG_CXX11
  void set_layer_footer(::std::string&& value);
  #endif
  void set_layer_footer(const char* value);
  void set_layer_footer(const char* value, size_t size);
  ::std::string* mutable_layer_footer();
  ::std::string* release_layer_footer();
  void set_allocated_layer_footer(::std::string* layer_footer);

  // optional .bongd.SnippetStruct.ImageStruct favicon = 8;
  bool has_favicon() const;
  void clear_favicon();
  static const int kFaviconFieldNumber = 8;
  const ::bongd::SnippetStruct_ImageStruct& favicon() const;
  ::bongd::SnippetStruct_ImageStruct* mutable_favicon();
  ::bongd::SnippetStruct_ImageStruct* release_favicon();
  void set_allocated_favicon(::bongd::SnippetStruct_ImageStruct* favicon);

  // optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
  bool has_vk_image() const;
  void clear_vk_image();
  static const int kVkImageFieldNumber = 20;
  const ::bongd::SnippetStruct_ImageStruct& vk_image() const;
  ::bongd::SnippetStruct_ImageStruct* mutable_vk_image();
  ::bongd::SnippetStruct_ImageStruct* release_vk_image();
  void set_allocated_vk_image(::bongd::SnippetStruct_ImageStruct* vk_image);

  // required uint32 fetch_ts = 4;
  bool has_fetch_ts() const;
  void clear_fetch_ts();
  static const int kFetchTsFieldNumber = 4;
  ::google::protobuf::uint32 fetch_ts() const;
  void set_fetch_ts(::google::protobuf::uint32 value);

  // optional bool is_handmade = 10;
  bool has_is_handmade() const;
  void clear_is_handmade();
  static const int kIsHandmadeFieldNumber = 10;
  bool is_handmade() const;
  void set_is_handmade(bool value);

  // optional bool has_layer = 12;
  bool has_has_layer() const;
  void clear_has_layer();
  static const int kHasLayerFieldNumber = 12;
  bool has_layer() const;
  void set_has_layer(bool value);

  // optional bool is_vydra = 15;
  bool has_is_vydra() const;
  void clear_is_vydra();
  static const int kIsVydraFieldNumber = 15;
  bool is_vydra() const;
  void set_is_vydra(bool value);

  // optional bool is_dynamic = 18;
  bool has_is_dynamic() const;
  void clear_is_dynamic();
  static const int kIsDynamicFieldNumber = 18;
  bool is_dynamic() const;
  void set_is_dynamic(bool value);

  // optional int32 layer_words_count = 19;
  bool has_layer_words_count() const;
  void clear_layer_words_count();
  static const int kLayerWordsCountFieldNumber = 19;
  ::google::protobuf::int32 layer_words_count() const;
  void set_layer_words_count(::google::protobuf::int32 value);

  // optional bool from_amp = 21;
  bool has_from_amp() const;
  void clear_from_amp();
  static const int kFromAmpFieldNumber = 21;
  bool from_amp() const;
  void set_from_amp(bool value);

  // optional int32 creation_error_code = 25;
  bool has_creation_error_code() const;
  void clear_creation_error_code();
  static const int kCreationErrorCodeFieldNumber = 25;
  ::google::protobuf::int32 creation_error_code() const;
  void set_creation_error_code(::google::protobuf::int32 value);

  // optional int32 http_code = 26;
  bool has_http_code() const;
  void clear_http_code();
  static const int kHttpCodeFieldNumber = 26;
  ::google::protobuf::int32 http_code() const;
  void set_http_code(::google::protobuf::int32 value);

  // optional int32 duration = 27;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 27;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bongd.SnippetStruct)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_title();
  void clear_has_title();
  void set_has_snippet();
  void clear_has_snippet();
  void set_has_fetch_ts();
  void clear_has_fetch_ts();
  void set_has_creation_qid();
  void clear_has_creation_qid();
  void set_has_creation_error();
  void clear_has_creation_error();
  void set_has_favicon();
  void clear_has_favicon();
  void set_has_content_type();
  void clear_has_content_type();
  void set_has_is_handmade();
  void clear_has_is_handmade();
  void set_has_redirect_url();
  void clear_has_redirect_url();
  void set_has_has_layer();
  void clear_has_has_layer();
  void set_has_layer_html();
  void clear_has_layer_html();
  void set_has_is_vydra();
  void clear_has_is_vydra();
  void set_has_is_dynamic();
  void clear_has_is_dynamic();
  void set_has_layer_words_count();
  void clear_has_layer_words_count();
  void set_has_vk_image();
  void clear_has_vk_image();
  void set_has_from_amp();
  void clear_has_from_amp();
  void set_has_layer_header();
  void clear_has_layer_header();
  void set_has_layer_footer();
  void clear_has_layer_footer();
  void set_has_creation_error_code();
  void clear_has_creation_error_code();
  void set_has_http_code();
  void clear_has_http_code();
  void set_has_duration();
  void clear_has_duration();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct > images_;
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct > layer_images_;
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct > custom_fields_;
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct > meta_data_;
  ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct > vk_image_array_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr snippet_;
  ::google::protobuf::internal::ArenaStringPtr creation_qid_;
  ::google::protobuf::internal::ArenaStringPtr creation_error_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::google::protobuf::internal::ArenaStringPtr redirect_url_;
  ::google::protobuf::internal::ArenaStringPtr layer_html_;
  ::google::protobuf::internal::ArenaStringPtr layer_header_;
  ::google::protobuf::internal::ArenaStringPtr layer_footer_;
  ::bongd::SnippetStruct_ImageStruct* favicon_;
  ::bongd::SnippetStruct_ImageStruct* vk_image_;
  ::google::protobuf::uint32 fetch_ts_;
  bool is_handmade_;
  bool has_layer_;
  bool is_vydra_;
  bool is_dynamic_;
  ::google::protobuf::int32 layer_words_count_;
  bool from_amp_;
  ::google::protobuf::int32 creation_error_code_;
  ::google::protobuf::int32 http_code_;
  ::google::protobuf::int32 duration_;
  friend struct protobuf_bongd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SnippetStruct_ImageStruct

// required string orig_url = 1;
inline bool SnippetStruct_ImageStruct::has_orig_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_orig_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnippetStruct_ImageStruct::clear_has_orig_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnippetStruct_ImageStruct::clear_orig_url() {
  orig_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_url();
}
inline const ::std::string& SnippetStruct_ImageStruct::orig_url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_url)
  return orig_url_.GetNoArena();
}
inline void SnippetStruct_ImageStruct::set_orig_url(const ::std::string& value) {
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_url)
}
#if LANG_CXX11
inline void SnippetStruct_ImageStruct::set_orig_url(::std::string&& value) {
  set_has_orig_url();
  orig_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.orig_url)
}
#endif
inline void SnippetStruct_ImageStruct::set_orig_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.orig_url)
}
inline void SnippetStruct_ImageStruct::set_orig_url(const char* value, size_t size) {
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.orig_url)
}
inline ::std::string* SnippetStruct_ImageStruct::mutable_orig_url() {
  set_has_orig_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.orig_url)
  return orig_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_ImageStruct::release_orig_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.orig_url)
  clear_has_orig_url();
  return orig_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_ImageStruct::set_allocated_orig_url(::std::string* orig_url) {
  if (orig_url != NULL) {
    set_has_orig_url();
  } else {
    clear_has_orig_url();
  }
  orig_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.orig_url)
}

// required string srch_key = 2;
inline bool SnippetStruct_ImageStruct::has_srch_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_srch_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnippetStruct_ImageStruct::clear_has_srch_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnippetStruct_ImageStruct::clear_srch_key() {
  srch_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_srch_key();
}
inline const ::std::string& SnippetStruct_ImageStruct::srch_key() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.srch_key)
  return srch_key_.GetNoArena();
}
inline void SnippetStruct_ImageStruct::set_srch_key(const ::std::string& value) {
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.srch_key)
}
#if LANG_CXX11
inline void SnippetStruct_ImageStruct::set_srch_key(::std::string&& value) {
  set_has_srch_key();
  srch_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.srch_key)
}
#endif
inline void SnippetStruct_ImageStruct::set_srch_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.srch_key)
}
inline void SnippetStruct_ImageStruct::set_srch_key(const char* value, size_t size) {
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.srch_key)
}
inline ::std::string* SnippetStruct_ImageStruct::mutable_srch_key() {
  set_has_srch_key();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.srch_key)
  return srch_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_ImageStruct::release_srch_key() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.srch_key)
  clear_has_srch_key();
  return srch_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_ImageStruct::set_allocated_srch_key(::std::string* srch_key) {
  if (srch_key != NULL) {
    set_has_srch_key();
  } else {
    clear_has_srch_key();
  }
  srch_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srch_key);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.srch_key)
}

// required uint32 width = 3;
inline bool SnippetStruct_ImageStruct::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnippetStruct_ImageStruct::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnippetStruct_ImageStruct::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 SnippetStruct_ImageStruct::width() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.width)
  return width_;
}
inline void SnippetStruct_ImageStruct::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.width)
}

// required uint32 height = 4;
inline bool SnippetStruct_ImageStruct::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnippetStruct_ImageStruct::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnippetStruct_ImageStruct::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 SnippetStruct_ImageStruct::height() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.height)
  return height_;
}
inline void SnippetStruct_ImageStruct::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.height)
}

// required string format = 5;
inline bool SnippetStruct_ImageStruct::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnippetStruct_ImageStruct::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnippetStruct_ImageStruct::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_format();
}
inline const ::std::string& SnippetStruct_ImageStruct::format() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.format)
  return format_.GetNoArena();
}
inline void SnippetStruct_ImageStruct::set_format(const ::std::string& value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.format)
}
#if LANG_CXX11
inline void SnippetStruct_ImageStruct::set_format(::std::string&& value) {
  set_has_format();
  format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.format)
}
#endif
inline void SnippetStruct_ImageStruct::set_format(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.format)
}
inline void SnippetStruct_ImageStruct::set_format(const char* value, size_t size) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.format)
}
inline ::std::string* SnippetStruct_ImageStruct::mutable_format() {
  set_has_format();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_ImageStruct::release_format() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.format)
  clear_has_format();
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_ImageStruct::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    set_has_format();
  } else {
    clear_has_format();
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.format)
}

// optional uint32 orig_size = 6;
inline bool SnippetStruct_ImageStruct::has_orig_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_orig_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnippetStruct_ImageStruct::clear_has_orig_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnippetStruct_ImageStruct::clear_orig_size() {
  orig_size_ = 0u;
  clear_has_orig_size();
}
inline ::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_size() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_size)
  return orig_size_;
}
inline void SnippetStruct_ImageStruct::set_orig_size(::google::protobuf::uint32 value) {
  set_has_orig_size();
  orig_size_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_size)
}

// optional uint32 orig_width = 7;
inline bool SnippetStruct_ImageStruct::has_orig_width() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_orig_width() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnippetStruct_ImageStruct::clear_has_orig_width() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnippetStruct_ImageStruct::clear_orig_width() {
  orig_width_ = 0u;
  clear_has_orig_width();
}
inline ::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_width() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_width)
  return orig_width_;
}
inline void SnippetStruct_ImageStruct::set_orig_width(::google::protobuf::uint32 value) {
  set_has_orig_width();
  orig_width_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_width)
}

// optional uint32 orig_height = 8;
inline bool SnippetStruct_ImageStruct::has_orig_height() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnippetStruct_ImageStruct::set_has_orig_height() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnippetStruct_ImageStruct::clear_has_orig_height() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnippetStruct_ImageStruct::clear_orig_height() {
  orig_height_ = 0u;
  clear_has_orig_height();
}
inline ::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_height() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_height)
  return orig_height_;
}
inline void SnippetStruct_ImageStruct::set_orig_height(::google::protobuf::uint32 value) {
  set_has_orig_height();
  orig_height_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_height)
}

// -------------------------------------------------------------------

// SnippetStruct_CustomFieldStruct

// required string name = 1;
inline bool SnippetStruct_CustomFieldStruct::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnippetStruct_CustomFieldStruct::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnippetStruct_CustomFieldStruct::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnippetStruct_CustomFieldStruct::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SnippetStruct_CustomFieldStruct::name() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.CustomFieldStruct.name)
  return name_.GetNoArena();
}
inline void SnippetStruct_CustomFieldStruct::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.CustomFieldStruct.name)
}
#if LANG_CXX11
inline void SnippetStruct_CustomFieldStruct::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.CustomFieldStruct.name)
}
#endif
inline void SnippetStruct_CustomFieldStruct::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.CustomFieldStruct.name)
}
inline void SnippetStruct_CustomFieldStruct::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.CustomFieldStruct.name)
}
inline ::std::string* SnippetStruct_CustomFieldStruct::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.CustomFieldStruct.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_CustomFieldStruct::release_name() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.CustomFieldStruct.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_CustomFieldStruct::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.CustomFieldStruct.name)
}

// optional string value = 2;
inline bool SnippetStruct_CustomFieldStruct::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnippetStruct_CustomFieldStruct::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnippetStruct_CustomFieldStruct::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnippetStruct_CustomFieldStruct::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SnippetStruct_CustomFieldStruct::value() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.CustomFieldStruct.value)
  return value_.GetNoArena();
}
inline void SnippetStruct_CustomFieldStruct::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.CustomFieldStruct.value)
}
#if LANG_CXX11
inline void SnippetStruct_CustomFieldStruct::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.CustomFieldStruct.value)
}
#endif
inline void SnippetStruct_CustomFieldStruct::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.CustomFieldStruct.value)
}
inline void SnippetStruct_CustomFieldStruct::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.CustomFieldStruct.value)
}
inline ::std::string* SnippetStruct_CustomFieldStruct::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.CustomFieldStruct.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_CustomFieldStruct::release_value() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.CustomFieldStruct.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_CustomFieldStruct::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.CustomFieldStruct.value)
}

// -------------------------------------------------------------------

// SnippetStruct_MetaDataStruct

// required string name = 1;
inline bool SnippetStruct_MetaDataStruct::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnippetStruct_MetaDataStruct::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnippetStruct_MetaDataStruct::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnippetStruct_MetaDataStruct::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SnippetStruct_MetaDataStruct::name() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.MetaDataStruct.name)
  return name_.GetNoArena();
}
inline void SnippetStruct_MetaDataStruct::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.MetaDataStruct.name)
}
#if LANG_CXX11
inline void SnippetStruct_MetaDataStruct::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.MetaDataStruct.name)
}
#endif
inline void SnippetStruct_MetaDataStruct::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.MetaDataStruct.name)
}
inline void SnippetStruct_MetaDataStruct::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.MetaDataStruct.name)
}
inline ::std::string* SnippetStruct_MetaDataStruct::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.MetaDataStruct.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_MetaDataStruct::release_name() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.MetaDataStruct.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_MetaDataStruct::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.MetaDataStruct.name)
}

// optional string value = 2;
inline bool SnippetStruct_MetaDataStruct::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnippetStruct_MetaDataStruct::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnippetStruct_MetaDataStruct::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnippetStruct_MetaDataStruct::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SnippetStruct_MetaDataStruct::value() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.MetaDataStruct.value)
  return value_.GetNoArena();
}
inline void SnippetStruct_MetaDataStruct::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.MetaDataStruct.value)
}
#if LANG_CXX11
inline void SnippetStruct_MetaDataStruct::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.MetaDataStruct.value)
}
#endif
inline void SnippetStruct_MetaDataStruct::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.MetaDataStruct.value)
}
inline void SnippetStruct_MetaDataStruct::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.MetaDataStruct.value)
}
inline ::std::string* SnippetStruct_MetaDataStruct::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.MetaDataStruct.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct_MetaDataStruct::release_value() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.MetaDataStruct.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct_MetaDataStruct::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.MetaDataStruct.value)
}

// -------------------------------------------------------------------

// SnippetStruct

// required string url = 1;
inline bool SnippetStruct::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnippetStruct::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnippetStruct::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnippetStruct::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& SnippetStruct::url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.url)
  return url_.GetNoArena();
}
inline void SnippetStruct::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.url)
}
#if LANG_CXX11
inline void SnippetStruct::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.url)
}
#endif
inline void SnippetStruct::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.url)
}
inline void SnippetStruct::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.url)
}
inline ::std::string* SnippetStruct::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.url)
}

// optional string title = 2;
inline bool SnippetStruct::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnippetStruct::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnippetStruct::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnippetStruct::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& SnippetStruct::title() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.title)
  return title_.GetNoArena();
}
inline void SnippetStruct::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.title)
}
#if LANG_CXX11
inline void SnippetStruct::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.title)
}
#endif
inline void SnippetStruct::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.title)
}
inline void SnippetStruct::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.title)
}
inline ::std::string* SnippetStruct::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_title() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.title)
}

// optional string snippet = 3;
inline bool SnippetStruct::has_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnippetStruct::set_has_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnippetStruct::clear_has_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnippetStruct::clear_snippet() {
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snippet();
}
inline const ::std::string& SnippetStruct::snippet() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.snippet)
  return snippet_.GetNoArena();
}
inline void SnippetStruct::set_snippet(const ::std::string& value) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.snippet)
}
#if LANG_CXX11
inline void SnippetStruct::set_snippet(::std::string&& value) {
  set_has_snippet();
  snippet_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.snippet)
}
#endif
inline void SnippetStruct::set_snippet(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.snippet)
}
inline void SnippetStruct::set_snippet(const char* value, size_t size) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.snippet)
}
inline ::std::string* SnippetStruct::mutable_snippet() {
  set_has_snippet();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.snippet)
  return snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_snippet() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.snippet)
  clear_has_snippet();
  return snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_snippet(::std::string* snippet) {
  if (snippet != NULL) {
    set_has_snippet();
  } else {
    clear_has_snippet();
  }
  snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippet);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.snippet)
}

// required uint32 fetch_ts = 4;
inline bool SnippetStruct::has_fetch_ts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnippetStruct::set_has_fetch_ts() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnippetStruct::clear_has_fetch_ts() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnippetStruct::clear_fetch_ts() {
  fetch_ts_ = 0u;
  clear_has_fetch_ts();
}
inline ::google::protobuf::uint32 SnippetStruct::fetch_ts() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.fetch_ts)
  return fetch_ts_;
}
inline void SnippetStruct::set_fetch_ts(::google::protobuf::uint32 value) {
  set_has_fetch_ts();
  fetch_ts_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.fetch_ts)
}

// repeated .bongd.SnippetStruct.ImageStruct images = 5;
inline int SnippetStruct::images_size() const {
  return images_.size();
}
inline void SnippetStruct::clear_images() {
  images_.Clear();
}
inline const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::images(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.images)
  return images_.Get(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.images)
  return images_.Mutable(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_images() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.images)
  return images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.images)
  return &images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::images() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.images)
  return images_;
}

// optional string creation_qid = 6;
inline bool SnippetStruct::has_creation_qid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnippetStruct::set_has_creation_qid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnippetStruct::clear_has_creation_qid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnippetStruct::clear_creation_qid() {
  creation_qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_qid();
}
inline const ::std::string& SnippetStruct::creation_qid() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_qid)
  return creation_qid_.GetNoArena();
}
inline void SnippetStruct::set_creation_qid(const ::std::string& value) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_qid)
}
#if LANG_CXX11
inline void SnippetStruct::set_creation_qid(::std::string&& value) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.creation_qid)
}
#endif
inline void SnippetStruct::set_creation_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.creation_qid)
}
inline void SnippetStruct::set_creation_qid(const char* value, size_t size) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.creation_qid)
}
inline ::std::string* SnippetStruct::mutable_creation_qid() {
  set_has_creation_qid();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.creation_qid)
  return creation_qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_creation_qid() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.creation_qid)
  clear_has_creation_qid();
  return creation_qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_creation_qid(::std::string* creation_qid) {
  if (creation_qid != NULL) {
    set_has_creation_qid();
  } else {
    clear_has_creation_qid();
  }
  creation_qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_qid);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.creation_qid)
}

// optional string creation_error = 7;
inline bool SnippetStruct::has_creation_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnippetStruct::set_has_creation_error() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnippetStruct::clear_has_creation_error() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnippetStruct::clear_creation_error() {
  creation_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_error();
}
inline const ::std::string& SnippetStruct::creation_error() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_error)
  return creation_error_.GetNoArena();
}
inline void SnippetStruct::set_creation_error(const ::std::string& value) {
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_error)
}
#if LANG_CXX11
inline void SnippetStruct::set_creation_error(::std::string&& value) {
  set_has_creation_error();
  creation_error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.creation_error)
}
#endif
inline void SnippetStruct::set_creation_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.creation_error)
}
inline void SnippetStruct::set_creation_error(const char* value, size_t size) {
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.creation_error)
}
inline ::std::string* SnippetStruct::mutable_creation_error() {
  set_has_creation_error();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.creation_error)
  return creation_error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_creation_error() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.creation_error)
  clear_has_creation_error();
  return creation_error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_creation_error(::std::string* creation_error) {
  if (creation_error != NULL) {
    set_has_creation_error();
  } else {
    clear_has_creation_error();
  }
  creation_error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_error);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.creation_error)
}

// optional .bongd.SnippetStruct.ImageStruct favicon = 8;
inline bool SnippetStruct::has_favicon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnippetStruct::set_has_favicon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnippetStruct::clear_has_favicon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnippetStruct::clear_favicon() {
  if (favicon_ != NULL) favicon_->::bongd::SnippetStruct_ImageStruct::Clear();
  clear_has_favicon();
}
inline const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::favicon() const {
  const ::bongd::SnippetStruct_ImageStruct* p = favicon_;
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.favicon)
  return p != NULL ? *p : *reinterpret_cast<const ::bongd::SnippetStruct_ImageStruct*>(
      &::bongd::_SnippetStruct_ImageStruct_default_instance_);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_favicon() {
  set_has_favicon();
  if (favicon_ == NULL) {
    favicon_ = new ::bongd::SnippetStruct_ImageStruct;
  }
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.favicon)
  return favicon_;
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::release_favicon() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.favicon)
  clear_has_favicon();
  ::bongd::SnippetStruct_ImageStruct* temp = favicon_;
  favicon_ = NULL;
  return temp;
}
inline void SnippetStruct::set_allocated_favicon(::bongd::SnippetStruct_ImageStruct* favicon) {
  delete favicon_;
  favicon_ = favicon;
  if (favicon) {
    set_has_favicon();
  } else {
    clear_has_favicon();
  }
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.favicon)
}

// optional string content_type = 9;
inline bool SnippetStruct::has_content_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnippetStruct::set_has_content_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnippetStruct::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnippetStruct::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content_type();
}
inline const ::std::string& SnippetStruct::content_type() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.content_type)
  return content_type_.GetNoArena();
}
inline void SnippetStruct::set_content_type(const ::std::string& value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.content_type)
}
#if LANG_CXX11
inline void SnippetStruct::set_content_type(::std::string&& value) {
  set_has_content_type();
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.content_type)
}
#endif
inline void SnippetStruct::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.content_type)
}
inline void SnippetStruct::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.content_type)
}
inline ::std::string* SnippetStruct::mutable_content_type() {
  set_has_content_type();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_content_type() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.content_type)
  clear_has_content_type();
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    set_has_content_type();
  } else {
    clear_has_content_type();
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.content_type)
}

// optional bool is_handmade = 10;
inline bool SnippetStruct::has_is_handmade() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnippetStruct::set_has_is_handmade() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnippetStruct::clear_has_is_handmade() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnippetStruct::clear_is_handmade() {
  is_handmade_ = false;
  clear_has_is_handmade();
}
inline bool SnippetStruct::is_handmade() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_handmade)
  return is_handmade_;
}
inline void SnippetStruct::set_is_handmade(bool value) {
  set_has_is_handmade();
  is_handmade_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_handmade)
}

// optional string redirect_url = 11;
inline bool SnippetStruct::has_redirect_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnippetStruct::set_has_redirect_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnippetStruct::clear_has_redirect_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnippetStruct::clear_redirect_url() {
  redirect_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect_url();
}
inline const ::std::string& SnippetStruct::redirect_url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.redirect_url)
  return redirect_url_.GetNoArena();
}
inline void SnippetStruct::set_redirect_url(const ::std::string& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.redirect_url)
}
#if LANG_CXX11
inline void SnippetStruct::set_redirect_url(::std::string&& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.redirect_url)
}
#endif
inline void SnippetStruct::set_redirect_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.redirect_url)
}
inline void SnippetStruct::set_redirect_url(const char* value, size_t size) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.redirect_url)
}
inline ::std::string* SnippetStruct::mutable_redirect_url() {
  set_has_redirect_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.redirect_url)
  return redirect_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_redirect_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.redirect_url)
  clear_has_redirect_url();
  return redirect_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_redirect_url(::std::string* redirect_url) {
  if (redirect_url != NULL) {
    set_has_redirect_url();
  } else {
    clear_has_redirect_url();
  }
  redirect_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.redirect_url)
}

// optional bool has_layer = 12;
inline bool SnippetStruct::has_has_layer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SnippetStruct::set_has_has_layer() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SnippetStruct::clear_has_has_layer() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SnippetStruct::clear_has_layer() {
  has_layer_ = false;
  clear_has_has_layer();
}
inline bool SnippetStruct::has_layer() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.has_layer)
  return has_layer_;
}
inline void SnippetStruct::set_has_layer(bool value) {
  set_has_has_layer();
  has_layer_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.has_layer)
}

// optional bytes layer_html = 13;
inline bool SnippetStruct::has_layer_html() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnippetStruct::set_has_layer_html() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnippetStruct::clear_has_layer_html() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnippetStruct::clear_layer_html() {
  layer_html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_html();
}
inline const ::std::string& SnippetStruct::layer_html() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_html)
  return layer_html_.GetNoArena();
}
inline void SnippetStruct::set_layer_html(const ::std::string& value) {
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_html)
}
#if LANG_CXX11
inline void SnippetStruct::set_layer_html(::std::string&& value) {
  set_has_layer_html();
  layer_html_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_html)
}
#endif
inline void SnippetStruct::set_layer_html(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_html)
}
inline void SnippetStruct::set_layer_html(const void* value, size_t size) {
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_html)
}
inline ::std::string* SnippetStruct::mutable_layer_html() {
  set_has_layer_html();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_html)
  return layer_html_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_layer_html() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_html)
  clear_has_layer_html();
  return layer_html_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_layer_html(::std::string* layer_html) {
  if (layer_html != NULL) {
    set_has_layer_html();
  } else {
    clear_has_layer_html();
  }
  layer_html_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_html);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_html)
}

// repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
inline int SnippetStruct::layer_images_size() const {
  return layer_images_.size();
}
inline void SnippetStruct::clear_layer_images() {
  layer_images_.Clear();
}
inline const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::layer_images(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_images)
  return layer_images_.Get(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_layer_images(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_images)
  return layer_images_.Mutable(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_layer_images() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.layer_images)
  return layer_images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_layer_images() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.layer_images)
  return &layer_images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::layer_images() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.layer_images)
  return layer_images_;
}

// optional bool is_vydra = 15;
inline bool SnippetStruct::has_is_vydra() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SnippetStruct::set_has_is_vydra() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SnippetStruct::clear_has_is_vydra() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SnippetStruct::clear_is_vydra() {
  is_vydra_ = false;
  clear_has_is_vydra();
}
inline bool SnippetStruct::is_vydra() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_vydra)
  return is_vydra_;
}
inline void SnippetStruct::set_is_vydra(bool value) {
  set_has_is_vydra();
  is_vydra_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_vydra)
}

// repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
inline int SnippetStruct::custom_fields_size() const {
  return custom_fields_.size();
}
inline void SnippetStruct::clear_custom_fields() {
  custom_fields_.Clear();
}
inline const ::bongd::SnippetStruct_CustomFieldStruct& SnippetStruct::custom_fields(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Get(index);
}
inline ::bongd::SnippetStruct_CustomFieldStruct* SnippetStruct::mutable_custom_fields(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Mutable(index);
}
inline ::bongd::SnippetStruct_CustomFieldStruct* SnippetStruct::add_custom_fields() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >*
SnippetStruct::mutable_custom_fields() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.custom_fields)
  return &custom_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >&
SnippetStruct::custom_fields() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.custom_fields)
  return custom_fields_;
}

// repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
inline int SnippetStruct::meta_data_size() const {
  return meta_data_.size();
}
inline void SnippetStruct::clear_meta_data() {
  meta_data_.Clear();
}
inline const ::bongd::SnippetStruct_MetaDataStruct& SnippetStruct::meta_data(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.meta_data)
  return meta_data_.Get(index);
}
inline ::bongd::SnippetStruct_MetaDataStruct* SnippetStruct::mutable_meta_data(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.meta_data)
  return meta_data_.Mutable(index);
}
inline ::bongd::SnippetStruct_MetaDataStruct* SnippetStruct::add_meta_data() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.meta_data)
  return meta_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >*
SnippetStruct::mutable_meta_data() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.meta_data)
  return &meta_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >&
SnippetStruct::meta_data() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.meta_data)
  return meta_data_;
}

// optional bool is_dynamic = 18;
inline bool SnippetStruct::has_is_dynamic() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SnippetStruct::set_has_is_dynamic() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SnippetStruct::clear_has_is_dynamic() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SnippetStruct::clear_is_dynamic() {
  is_dynamic_ = false;
  clear_has_is_dynamic();
}
inline bool SnippetStruct::is_dynamic() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_dynamic)
  return is_dynamic_;
}
inline void SnippetStruct::set_is_dynamic(bool value) {
  set_has_is_dynamic();
  is_dynamic_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_dynamic)
}

// optional int32 layer_words_count = 19;
inline bool SnippetStruct::has_layer_words_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SnippetStruct::set_has_layer_words_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SnippetStruct::clear_has_layer_words_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SnippetStruct::clear_layer_words_count() {
  layer_words_count_ = 0;
  clear_has_layer_words_count();
}
inline ::google::protobuf::int32 SnippetStruct::layer_words_count() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_words_count)
  return layer_words_count_;
}
inline void SnippetStruct::set_layer_words_count(::google::protobuf::int32 value) {
  set_has_layer_words_count();
  layer_words_count_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_words_count)
}

// optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
inline bool SnippetStruct::has_vk_image() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnippetStruct::set_has_vk_image() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnippetStruct::clear_has_vk_image() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnippetStruct::clear_vk_image() {
  if (vk_image_ != NULL) vk_image_->::bongd::SnippetStruct_ImageStruct::Clear();
  clear_has_vk_image();
}
inline const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::vk_image() const {
  const ::bongd::SnippetStruct_ImageStruct* p = vk_image_;
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.vk_image)
  return p != NULL ? *p : *reinterpret_cast<const ::bongd::SnippetStruct_ImageStruct*>(
      &::bongd::_SnippetStruct_ImageStruct_default_instance_);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_vk_image() {
  set_has_vk_image();
  if (vk_image_ == NULL) {
    vk_image_ = new ::bongd::SnippetStruct_ImageStruct;
  }
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.vk_image)
  return vk_image_;
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::release_vk_image() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.vk_image)
  clear_has_vk_image();
  ::bongd::SnippetStruct_ImageStruct* temp = vk_image_;
  vk_image_ = NULL;
  return temp;
}
inline void SnippetStruct::set_allocated_vk_image(::bongd::SnippetStruct_ImageStruct* vk_image) {
  delete vk_image_;
  vk_image_ = vk_image;
  if (vk_image) {
    set_has_vk_image();
  } else {
    clear_has_vk_image();
  }
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.vk_image)
}

// optional bool from_amp = 21;
inline bool SnippetStruct::has_from_amp() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SnippetStruct::set_has_from_amp() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SnippetStruct::clear_has_from_amp() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SnippetStruct::clear_from_amp() {
  from_amp_ = false;
  clear_has_from_amp();
}
inline bool SnippetStruct::from_amp() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.from_amp)
  return from_amp_;
}
inline void SnippetStruct::set_from_amp(bool value) {
  set_has_from_amp();
  from_amp_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.from_amp)
}

// optional string layer_header = 22;
inline bool SnippetStruct::has_layer_header() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnippetStruct::set_has_layer_header() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnippetStruct::clear_has_layer_header() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnippetStruct::clear_layer_header() {
  layer_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_header();
}
inline const ::std::string& SnippetStruct::layer_header() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_header)
  return layer_header_.GetNoArena();
}
inline void SnippetStruct::set_layer_header(const ::std::string& value) {
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_header)
}
#if LANG_CXX11
inline void SnippetStruct::set_layer_header(::std::string&& value) {
  set_has_layer_header();
  layer_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_header)
}
#endif
inline void SnippetStruct::set_layer_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_header)
}
inline void SnippetStruct::set_layer_header(const char* value, size_t size) {
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_header)
}
inline ::std::string* SnippetStruct::mutable_layer_header() {
  set_has_layer_header();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_header)
  return layer_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_layer_header() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_header)
  clear_has_layer_header();
  return layer_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_layer_header(::std::string* layer_header) {
  if (layer_header != NULL) {
    set_has_layer_header();
  } else {
    clear_has_layer_header();
  }
  layer_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_header);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_header)
}

// optional string layer_footer = 23;
inline bool SnippetStruct::has_layer_footer() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnippetStruct::set_has_layer_footer() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnippetStruct::clear_has_layer_footer() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnippetStruct::clear_layer_footer() {
  layer_footer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_footer();
}
inline const ::std::string& SnippetStruct::layer_footer() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_footer)
  return layer_footer_.GetNoArena();
}
inline void SnippetStruct::set_layer_footer(const ::std::string& value) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_footer)
}
#if LANG_CXX11
inline void SnippetStruct::set_layer_footer(::std::string&& value) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_footer)
}
#endif
inline void SnippetStruct::set_layer_footer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_footer)
}
inline void SnippetStruct::set_layer_footer(const char* value, size_t size) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_footer)
}
inline ::std::string* SnippetStruct::mutable_layer_footer() {
  set_has_layer_footer();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_footer)
  return layer_footer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnippetStruct::release_layer_footer() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_footer)
  clear_has_layer_footer();
  return layer_footer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnippetStruct::set_allocated_layer_footer(::std::string* layer_footer) {
  if (layer_footer != NULL) {
    set_has_layer_footer();
  } else {
    clear_has_layer_footer();
  }
  layer_footer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_footer);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_footer)
}

// repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
inline int SnippetStruct::vk_image_array_size() const {
  return vk_image_array_.size();
}
inline void SnippetStruct::clear_vk_image_array() {
  vk_image_array_.Clear();
}
inline const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::vk_image_array(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Get(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_vk_image_array(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Mutable(index);
}
inline ::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_vk_image_array() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_vk_image_array() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.vk_image_array)
  return &vk_image_array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::vk_image_array() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_;
}

// optional int32 creation_error_code = 25;
inline bool SnippetStruct::has_creation_error_code() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SnippetStruct::set_has_creation_error_code() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SnippetStruct::clear_has_creation_error_code() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SnippetStruct::clear_creation_error_code() {
  creation_error_code_ = 0;
  clear_has_creation_error_code();
}
inline ::google::protobuf::int32 SnippetStruct::creation_error_code() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_error_code)
  return creation_error_code_;
}
inline void SnippetStruct::set_creation_error_code(::google::protobuf::int32 value) {
  set_has_creation_error_code();
  creation_error_code_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_error_code)
}

// optional int32 http_code = 26;
inline bool SnippetStruct::has_http_code() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SnippetStruct::set_has_http_code() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SnippetStruct::clear_has_http_code() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SnippetStruct::clear_http_code() {
  http_code_ = 0;
  clear_has_http_code();
}
inline ::google::protobuf::int32 SnippetStruct::http_code() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.http_code)
  return http_code_;
}
inline void SnippetStruct::set_http_code(::google::protobuf::int32 value) {
  set_has_http_code();
  http_code_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.http_code)
}

// optional int32 duration = 27;
inline bool SnippetStruct::has_duration() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SnippetStruct::set_has_duration() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SnippetStruct::clear_has_duration() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SnippetStruct::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 SnippetStruct::duration() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.duration)
  return duration_;
}
inline void SnippetStruct::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.duration)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace bongd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bongd_2eproto__INCLUDED
