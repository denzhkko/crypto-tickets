// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: call_stack_profile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "call_stack_profile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class CallStackProfile_ModuleIdentifierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_ModuleIdentifier>
     _instance;
} _CallStackProfile_ModuleIdentifier_default_instance_;
class CallStackProfile_LocationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_Location>
     _instance;
} _CallStackProfile_Location_default_instance_;
class CallStackProfile_StackDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_Stack>
     _instance;
} _CallStackProfile_Stack_default_instance_;
class CallStackProfile_MetadataItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_MetadataItem>
     _instance;
} _CallStackProfile_MetadataItem_default_instance_;
class CallStackProfile_AsyncBacktraceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_AsyncBacktrace>
     _instance;
} _CallStackProfile_AsyncBacktrace_default_instance_;
class CallStackProfile_SampleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_Sample>
     _instance;
} _CallStackProfile_Sample_default_instance_;
class CallStackProfile_StackSampleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile_StackSample>
     _instance;
} _CallStackProfile_StackSample_default_instance_;
class CallStackProfileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CallStackProfile>
     _instance;
} _CallStackProfile_default_instance_;

namespace protobuf_call_5fstack_5fprofile_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_ModuleIdentifier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_ModuleIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_ModuleIdentifier, build_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_ModuleIdentifier, name_md5_prefix_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Location, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Location, module_id_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Stack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Stack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Stack, frame_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_MetadataItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_MetadataItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_MetadataItem, name_hash_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_MetadataItem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_MetadataItem, value_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_AsyncBacktrace, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_AsyncBacktrace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_AsyncBacktrace, location_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Sample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Sample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Sample, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Sample, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_Sample, process_phase_),
  ~0u,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, stack_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, sample_time_offset_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, continued_work_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, async_backtrace_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile_StackSample, count_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, deprecated_sample_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, module_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, metadata_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, profile_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, async_backtrace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, stack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, stack_sample_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, profile_start_time_offset_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, profile_duration_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallStackProfile, sampling_period_ms_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(CallStackProfile_ModuleIdentifier)},
  { 9, 16, sizeof(CallStackProfile_Location)},
  { 18, 24, sizeof(CallStackProfile_Stack)},
  { 25, 33, sizeof(CallStackProfile_MetadataItem)},
  { 36, 42, sizeof(CallStackProfile_AsyncBacktrace)},
  { 43, 51, sizeof(CallStackProfile_Sample)},
  { 54, 66, sizeof(CallStackProfile_StackSample)},
  { 73, 88, sizeof(CallStackProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_ModuleIdentifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_Stack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_MetadataItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_AsyncBacktrace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_Sample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_StackSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CallStackProfile_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "call_stack_profile.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::metrics::protobuf_execution_5fcontext_2eproto::InitDefaults();
  _CallStackProfile_ModuleIdentifier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_ModuleIdentifier_default_instance_);_CallStackProfile_Location_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_Location_default_instance_);_CallStackProfile_Stack_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_Stack_default_instance_);_CallStackProfile_MetadataItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_MetadataItem_default_instance_);_CallStackProfile_AsyncBacktrace_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_AsyncBacktrace_default_instance_);_CallStackProfile_Sample_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_Sample_default_instance_);_CallStackProfile_StackSample_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_StackSample_default_instance_);_CallStackProfile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CallStackProfile_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030call_stack_profile.proto\022\007metrics\032\027exe"
      "cution_context.proto\"\216\t\n\020CallStackProfil"
      "e\022\?\n\021DEPRECATED_sample\030\001 \003(\0132 .metrics.C"
      "allStackProfile.SampleB\002\030\001\022=\n\tmodule_id\030"
      "\002 \003(\0132*.metrics.CallStackProfile.ModuleI"
      "dentifier\022\032\n\022metadata_name_hash\030\005 \003(\006\022@\n"
      "\020profile_metadata\030\006 \003(\0132&.metrics.CallSt"
      "ackProfile.MetadataItem\022A\n\017async_backtra"
      "ce\030\007 \003(\0132(.metrics.CallStackProfile.Asyn"
      "cBacktrace\022.\n\005stack\030\010 \003(\0132\037.metrics.Call"
      "StackProfile.Stack\022;\n\014stack_sample\030\t \003(\013"
      "2%.metrics.CallStackProfile.StackSample\022"
      "$\n\034profile_start_time_offset_ms\030\n \001(\003\022\033\n"
      "\023profile_duration_ms\030\003 \001(\005\022\032\n\022sampling_p"
      "eriod_ms\030\004 \001(\005\032=\n\020ModuleIdentifier\022\020\n\010bu"
      "ild_id\030\001 \001(\t\022\027\n\017name_md5_prefix\030\002 \001(\006\0324\n"
      "\010Location\022\017\n\007address\030\001 \001(\004\022\027\n\017module_id_"
      "index\030\002 \001(\005\032:\n\005Stack\0221\n\005frame\030\001 \003(\0132\".me"
      "trics.CallStackProfile.Location\032C\n\014Metad"
      "ataItem\022\027\n\017name_hash_index\030\001 \001(\005\022\013\n\003key\030"
      "\003 \001(\022\022\r\n\005value\030\002 \001(\022\032F\n\016AsyncBacktrace\0224"
      "\n\010location\030\001 \003(\0132\".metrics.CallStackProf"
      "ile.Location\032x\n\006Sample\0221\n\005frame\030\001 \003(\0132\"."
      "metrics.CallStackProfile.Location\022\r\n\005cou"
      "nt\030\002 \001(\003\022,\n\rprocess_phase\030\003 \003(\0162\025.metric"
      "s.ProcessPhase\032\324\001\n\013StackSample\022\023\n\013stack_"
      "index\030\001 \001(\005\022\035\n\025sample_time_offset_ms\030\002 \001"
      "(\005\022\026\n\016continued_work\030\003 \001(\010\022\035\n\025async_back"
      "trace_index\030\004 \001(\005\0228\n\010metadata\030\005 \003(\0132&.me"
      "trics.CallStackProfile.MetadataItem\022\016\n\006w"
      "eight\030\006 \001(\003\022\020\n\005count\030\007 \001(\003:\0011B9\n\037org.chr"
      "omium.components.metricsB\026CallStackProfi"
      "leProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "call_stack_profile.proto", &protobuf_RegisterTypes);
  ::metrics::protobuf_execution_5fcontext_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_call_5fstack_5fprofile_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_ModuleIdentifier::kBuildIdFieldNumber;
const int CallStackProfile_ModuleIdentifier::kNameMd5PrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_ModuleIdentifier::CallStackProfile_ModuleIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.ModuleIdentifier)
}
CallStackProfile_ModuleIdentifier::CallStackProfile_ModuleIdentifier(const CallStackProfile_ModuleIdentifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_build_id()) {
    build_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_id_);
  }
  name_md5_prefix_ = from.name_md5_prefix_;
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.ModuleIdentifier)
}

void CallStackProfile_ModuleIdentifier::SharedCtor() {
  _cached_size_ = 0;
  build_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_md5_prefix_ = GOOGLE_ULONGLONG(0);
}

CallStackProfile_ModuleIdentifier::~CallStackProfile_ModuleIdentifier() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.ModuleIdentifier)
  SharedDtor();
}

void CallStackProfile_ModuleIdentifier::SharedDtor() {
  build_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallStackProfile_ModuleIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_ModuleIdentifier::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_ModuleIdentifier& CallStackProfile_ModuleIdentifier::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_ModuleIdentifier* CallStackProfile_ModuleIdentifier::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_ModuleIdentifier* n = new CallStackProfile_ModuleIdentifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_ModuleIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.ModuleIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_build_id()) {
    GOOGLE_DCHECK(!build_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*build_id_.UnsafeRawStringPointer())->clear();
  }
  name_md5_prefix_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_ModuleIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.ModuleIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string build_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->build_id().data(), static_cast<int>(this->build_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CallStackProfile.ModuleIdentifier.build_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 name_md5_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_name_md5_prefix();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &name_md5_prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.ModuleIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.ModuleIdentifier)
  return false;
#undef DO_
}

void CallStackProfile_ModuleIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.ModuleIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string build_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_id().data(), static_cast<int>(this->build_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CallStackProfile.ModuleIdentifier.build_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->build_id(), output);
  }

  // optional fixed64 name_md5_prefix = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->name_md5_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.ModuleIdentifier)
}

::google::protobuf::uint8* CallStackProfile_ModuleIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.ModuleIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string build_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->build_id().data(), static_cast<int>(this->build_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CallStackProfile.ModuleIdentifier.build_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->build_id(), target);
  }

  // optional fixed64 name_md5_prefix = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->name_md5_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.ModuleIdentifier)
  return target;
}

size_t CallStackProfile_ModuleIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.ModuleIdentifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string build_id = 1;
    if (has_build_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->build_id());
    }

    // optional fixed64 name_md5_prefix = 2;
    if (has_name_md5_prefix()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_ModuleIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.ModuleIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_ModuleIdentifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_ModuleIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.ModuleIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.ModuleIdentifier)
    MergeFrom(*source);
  }
}

void CallStackProfile_ModuleIdentifier::MergeFrom(const CallStackProfile_ModuleIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.ModuleIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_build_id();
      build_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      name_md5_prefix_ = from.name_md5_prefix_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallStackProfile_ModuleIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.ModuleIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_ModuleIdentifier::CopyFrom(const CallStackProfile_ModuleIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.ModuleIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_ModuleIdentifier::IsInitialized() const {
  return true;
}

void CallStackProfile_ModuleIdentifier::Swap(CallStackProfile_ModuleIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_ModuleIdentifier::InternalSwap(CallStackProfile_ModuleIdentifier* other) {
  using std::swap;
  build_id_.Swap(&other->build_id_);
  swap(name_md5_prefix_, other->name_md5_prefix_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_ModuleIdentifier::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_ModuleIdentifier

// optional string build_id = 1;
bool CallStackProfile_ModuleIdentifier::has_build_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_ModuleIdentifier::set_has_build_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_ModuleIdentifier::clear_has_build_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_ModuleIdentifier::clear_build_id() {
  build_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_build_id();
}
const ::std::string& CallStackProfile_ModuleIdentifier::build_id() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.ModuleIdentifier.build_id)
  return build_id_.GetNoArena();
}
void CallStackProfile_ModuleIdentifier::set_build_id(const ::std::string& value) {
  set_has_build_id();
  build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
#if LANG_CXX11
void CallStackProfile_ModuleIdentifier::set_build_id(::std::string&& value) {
  set_has_build_id();
  build_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
#endif
void CallStackProfile_ModuleIdentifier::set_build_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_build_id();
  build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
void CallStackProfile_ModuleIdentifier::set_build_id(const char* value, size_t size) {
  set_has_build_id();
  build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
::std::string* CallStackProfile_ModuleIdentifier::mutable_build_id() {
  set_has_build_id();
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.ModuleIdentifier.build_id)
  return build_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallStackProfile_ModuleIdentifier::release_build_id() {
  // @@protoc_insertion_point(field_release:metrics.CallStackProfile.ModuleIdentifier.build_id)
  clear_has_build_id();
  return build_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallStackProfile_ModuleIdentifier::set_allocated_build_id(::std::string* build_id) {
  if (build_id != NULL) {
    set_has_build_id();
  } else {
    clear_has_build_id();
  }
  build_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CallStackProfile.ModuleIdentifier.build_id)
}

// optional fixed64 name_md5_prefix = 2;
bool CallStackProfile_ModuleIdentifier::has_name_md5_prefix() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_ModuleIdentifier::set_has_name_md5_prefix() {
  _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_ModuleIdentifier::clear_has_name_md5_prefix() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_ModuleIdentifier::clear_name_md5_prefix() {
  name_md5_prefix_ = GOOGLE_ULONGLONG(0);
  clear_has_name_md5_prefix();
}
::google::protobuf::uint64 CallStackProfile_ModuleIdentifier::name_md5_prefix() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.ModuleIdentifier.name_md5_prefix)
  return name_md5_prefix_;
}
void CallStackProfile_ModuleIdentifier::set_name_md5_prefix(::google::protobuf::uint64 value) {
  set_has_name_md5_prefix();
  name_md5_prefix_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.ModuleIdentifier.name_md5_prefix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_Location::kAddressFieldNumber;
const int CallStackProfile_Location::kModuleIdIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_Location::CallStackProfile_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.Location)
}
CallStackProfile_Location::CallStackProfile_Location(const CallStackProfile_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_id_index_) -
    reinterpret_cast<char*>(&address_)) + sizeof(module_id_index_));
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.Location)
}

void CallStackProfile_Location::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_id_index_) -
      reinterpret_cast<char*>(&address_)) + sizeof(module_id_index_));
}

CallStackProfile_Location::~CallStackProfile_Location() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.Location)
  SharedDtor();
}

void CallStackProfile_Location::SharedDtor() {
}

void CallStackProfile_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_Location::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_Location& CallStackProfile_Location::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_Location* CallStackProfile_Location::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_Location* n = new CallStackProfile_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&address_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&module_id_index_) -
        reinterpret_cast<char*>(&address_)) + sizeof(module_id_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 module_id_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_module_id_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_id_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.Location)
  return false;
#undef DO_
}

void CallStackProfile_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->address(), output);
  }

  // optional int32 module_id_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->module_id_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.Location)
}

::google::protobuf::uint8* CallStackProfile_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 address = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->address(), target);
  }

  // optional int32 module_id_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->module_id_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.Location)
  return target;
}

size_t CallStackProfile_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address());
    }

    // optional int32 module_id_index = 2;
    if (has_module_id_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->module_id_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.Location)
    MergeFrom(*source);
  }
}

void CallStackProfile_Location::MergeFrom(const CallStackProfile_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      address_ = from.address_;
    }
    if (cached_has_bits & 0x00000002u) {
      module_id_index_ = from.module_id_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallStackProfile_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_Location::CopyFrom(const CallStackProfile_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_Location::IsInitialized() const {
  return true;
}

void CallStackProfile_Location::Swap(CallStackProfile_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_Location::InternalSwap(CallStackProfile_Location* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(module_id_index_, other->module_id_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_Location::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_Location

// optional uint64 address = 1;
bool CallStackProfile_Location::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_Location::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_Location::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_Location::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
::google::protobuf::uint64 CallStackProfile_Location::address() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Location.address)
  return address_;
}
void CallStackProfile_Location::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Location.address)
}

// optional int32 module_id_index = 2;
bool CallStackProfile_Location::has_module_id_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_Location::set_has_module_id_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_Location::clear_has_module_id_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_Location::clear_module_id_index() {
  module_id_index_ = 0;
  clear_has_module_id_index();
}
::google::protobuf::int32 CallStackProfile_Location::module_id_index() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Location.module_id_index)
  return module_id_index_;
}
void CallStackProfile_Location::set_module_id_index(::google::protobuf::int32 value) {
  set_has_module_id_index();
  module_id_index_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Location.module_id_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_Stack::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_Stack::CallStackProfile_Stack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.Stack)
}
CallStackProfile_Stack::CallStackProfile_Stack(const CallStackProfile_Stack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      frame_(from.frame_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.Stack)
}

void CallStackProfile_Stack::SharedCtor() {
  _cached_size_ = 0;
}

CallStackProfile_Stack::~CallStackProfile_Stack() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.Stack)
  SharedDtor();
}

void CallStackProfile_Stack::SharedDtor() {
}

void CallStackProfile_Stack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_Stack::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_Stack& CallStackProfile_Stack::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_Stack* CallStackProfile_Stack::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_Stack* n = new CallStackProfile_Stack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_Stack::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_Stack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.Stack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metrics.CallStackProfile.Location frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.Stack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.Stack)
  return false;
#undef DO_
}

void CallStackProfile_Stack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location frame = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frame_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frame(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.Stack)
}

::google::protobuf::uint8* CallStackProfile_Stack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location frame = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frame_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frame(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.Stack)
  return target;
}

size_t CallStackProfile_Stack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.Stack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CallStackProfile.Location frame = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->frame_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frame(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_Stack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.Stack)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_Stack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_Stack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.Stack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.Stack)
    MergeFrom(*source);
  }
}

void CallStackProfile_Stack::MergeFrom(const CallStackProfile_Stack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.Stack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frame_.MergeFrom(from.frame_);
}

void CallStackProfile_Stack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.Stack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_Stack::CopyFrom(const CallStackProfile_Stack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.Stack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_Stack::IsInitialized() const {
  return true;
}

void CallStackProfile_Stack::Swap(CallStackProfile_Stack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_Stack::InternalSwap(CallStackProfile_Stack* other) {
  using std::swap;
  frame_.InternalSwap(&other->frame_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_Stack::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_Stack

// repeated .metrics.CallStackProfile.Location frame = 1;
int CallStackProfile_Stack::frame_size() const {
  return frame_.size();
}
void CallStackProfile_Stack::clear_frame() {
  frame_.Clear();
}
const ::metrics::CallStackProfile_Location& CallStackProfile_Stack::frame(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Stack.frame)
  return frame_.Get(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_Stack::mutable_frame(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.Stack.frame)
  return frame_.Mutable(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_Stack::add_frame() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.Stack.frame)
  return frame_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >*
CallStackProfile_Stack::mutable_frame() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.Stack.frame)
  return &frame_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >&
CallStackProfile_Stack::frame() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.Stack.frame)
  return frame_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_MetadataItem::kNameHashIndexFieldNumber;
const int CallStackProfile_MetadataItem::kKeyFieldNumber;
const int CallStackProfile_MetadataItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_MetadataItem::CallStackProfile_MetadataItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.MetadataItem)
}
CallStackProfile_MetadataItem::CallStackProfile_MetadataItem(const CallStackProfile_MetadataItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&name_hash_index_) -
    reinterpret_cast<char*>(&value_)) + sizeof(name_hash_index_));
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.MetadataItem)
}

void CallStackProfile_MetadataItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_hash_index_) -
      reinterpret_cast<char*>(&value_)) + sizeof(name_hash_index_));
}

CallStackProfile_MetadataItem::~CallStackProfile_MetadataItem() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.MetadataItem)
  SharedDtor();
}

void CallStackProfile_MetadataItem::SharedDtor() {
}

void CallStackProfile_MetadataItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_MetadataItem::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_MetadataItem& CallStackProfile_MetadataItem::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_MetadataItem* CallStackProfile_MetadataItem::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_MetadataItem* n = new CallStackProfile_MetadataItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_MetadataItem::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.MetadataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&name_hash_index_) -
        reinterpret_cast<char*>(&value_)) + sizeof(name_hash_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_MetadataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.MetadataItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 name_hash_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_name_hash_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_hash_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.MetadataItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.MetadataItem)
  return false;
#undef DO_
}

void CallStackProfile_MetadataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.MetadataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 name_hash_index = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->name_hash_index(), output);
  }

  // optional sint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->value(), output);
  }

  // optional sint64 key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.MetadataItem)
}

::google::protobuf::uint8* CallStackProfile_MetadataItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.MetadataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 name_hash_index = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->name_hash_index(), target);
  }

  // optional sint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->value(), target);
  }

  // optional sint64 key = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.MetadataItem)
  return target;
}

size_t CallStackProfile_MetadataItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.MetadataItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->value());
    }

    // optional sint64 key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->key());
    }

    // optional int32 name_hash_index = 1;
    if (has_name_hash_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_hash_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_MetadataItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.MetadataItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_MetadataItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_MetadataItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.MetadataItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.MetadataItem)
    MergeFrom(*source);
  }
}

void CallStackProfile_MetadataItem::MergeFrom(const CallStackProfile_MetadataItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.MetadataItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000004u) {
      name_hash_index_ = from.name_hash_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallStackProfile_MetadataItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.MetadataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_MetadataItem::CopyFrom(const CallStackProfile_MetadataItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.MetadataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_MetadataItem::IsInitialized() const {
  return true;
}

void CallStackProfile_MetadataItem::Swap(CallStackProfile_MetadataItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_MetadataItem::InternalSwap(CallStackProfile_MetadataItem* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(key_, other->key_);
  swap(name_hash_index_, other->name_hash_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_MetadataItem::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_MetadataItem

// optional int32 name_hash_index = 1;
bool CallStackProfile_MetadataItem::has_name_hash_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CallStackProfile_MetadataItem::set_has_name_hash_index() {
  _has_bits_[0] |= 0x00000004u;
}
void CallStackProfile_MetadataItem::clear_has_name_hash_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void CallStackProfile_MetadataItem::clear_name_hash_index() {
  name_hash_index_ = 0;
  clear_has_name_hash_index();
}
::google::protobuf::int32 CallStackProfile_MetadataItem::name_hash_index() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.MetadataItem.name_hash_index)
  return name_hash_index_;
}
void CallStackProfile_MetadataItem::set_name_hash_index(::google::protobuf::int32 value) {
  set_has_name_hash_index();
  name_hash_index_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.MetadataItem.name_hash_index)
}

// optional sint64 key = 3;
bool CallStackProfile_MetadataItem::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_MetadataItem::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_MetadataItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_MetadataItem::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
::google::protobuf::int64 CallStackProfile_MetadataItem::key() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.MetadataItem.key)
  return key_;
}
void CallStackProfile_MetadataItem::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.MetadataItem.key)
}

// optional sint64 value = 2;
bool CallStackProfile_MetadataItem::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_MetadataItem::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_MetadataItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_MetadataItem::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
::google::protobuf::int64 CallStackProfile_MetadataItem::value() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.MetadataItem.value)
  return value_;
}
void CallStackProfile_MetadataItem::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.MetadataItem.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_AsyncBacktrace::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_AsyncBacktrace::CallStackProfile_AsyncBacktrace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.AsyncBacktrace)
}
CallStackProfile_AsyncBacktrace::CallStackProfile_AsyncBacktrace(const CallStackProfile_AsyncBacktrace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      location_(from.location_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.AsyncBacktrace)
}

void CallStackProfile_AsyncBacktrace::SharedCtor() {
  _cached_size_ = 0;
}

CallStackProfile_AsyncBacktrace::~CallStackProfile_AsyncBacktrace() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.AsyncBacktrace)
  SharedDtor();
}

void CallStackProfile_AsyncBacktrace::SharedDtor() {
}

void CallStackProfile_AsyncBacktrace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_AsyncBacktrace::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_AsyncBacktrace& CallStackProfile_AsyncBacktrace::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_AsyncBacktrace* CallStackProfile_AsyncBacktrace::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_AsyncBacktrace* n = new CallStackProfile_AsyncBacktrace;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_AsyncBacktrace::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.AsyncBacktrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_AsyncBacktrace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.AsyncBacktrace)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metrics.CallStackProfile.Location location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.AsyncBacktrace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.AsyncBacktrace)
  return false;
#undef DO_
}

void CallStackProfile_AsyncBacktrace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.AsyncBacktrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->location_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->location(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.AsyncBacktrace)
}

::google::protobuf::uint8* CallStackProfile_AsyncBacktrace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.AsyncBacktrace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->location_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->location(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.AsyncBacktrace)
  return target;
}

size_t CallStackProfile_AsyncBacktrace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.AsyncBacktrace)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CallStackProfile.Location location = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->location_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_AsyncBacktrace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.AsyncBacktrace)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_AsyncBacktrace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_AsyncBacktrace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.AsyncBacktrace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.AsyncBacktrace)
    MergeFrom(*source);
  }
}

void CallStackProfile_AsyncBacktrace::MergeFrom(const CallStackProfile_AsyncBacktrace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.AsyncBacktrace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  location_.MergeFrom(from.location_);
}

void CallStackProfile_AsyncBacktrace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.AsyncBacktrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_AsyncBacktrace::CopyFrom(const CallStackProfile_AsyncBacktrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.AsyncBacktrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_AsyncBacktrace::IsInitialized() const {
  return true;
}

void CallStackProfile_AsyncBacktrace::Swap(CallStackProfile_AsyncBacktrace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_AsyncBacktrace::InternalSwap(CallStackProfile_AsyncBacktrace* other) {
  using std::swap;
  location_.InternalSwap(&other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_AsyncBacktrace::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_AsyncBacktrace

// repeated .metrics.CallStackProfile.Location location = 1;
int CallStackProfile_AsyncBacktrace::location_size() const {
  return location_.size();
}
void CallStackProfile_AsyncBacktrace::clear_location() {
  location_.Clear();
}
const ::metrics::CallStackProfile_Location& CallStackProfile_AsyncBacktrace::location(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.AsyncBacktrace.location)
  return location_.Get(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_AsyncBacktrace::mutable_location(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.AsyncBacktrace.location)
  return location_.Mutable(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_AsyncBacktrace::add_location() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.AsyncBacktrace.location)
  return location_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >*
CallStackProfile_AsyncBacktrace::mutable_location() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.AsyncBacktrace.location)
  return &location_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >&
CallStackProfile_AsyncBacktrace::location() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.AsyncBacktrace.location)
  return location_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_Sample::kFrameFieldNumber;
const int CallStackProfile_Sample::kCountFieldNumber;
const int CallStackProfile_Sample::kProcessPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_Sample::CallStackProfile_Sample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.Sample)
}
CallStackProfile_Sample::CallStackProfile_Sample(const CallStackProfile_Sample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      frame_(from.frame_),
      process_phase_(from.process_phase_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.Sample)
}

void CallStackProfile_Sample::SharedCtor() {
  _cached_size_ = 0;
  count_ = GOOGLE_LONGLONG(0);
}

CallStackProfile_Sample::~CallStackProfile_Sample() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.Sample)
  SharedDtor();
}

void CallStackProfile_Sample::SharedDtor() {
}

void CallStackProfile_Sample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_Sample::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_Sample& CallStackProfile_Sample::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_Sample* CallStackProfile_Sample::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_Sample* n = new CallStackProfile_Sample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_Sample::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.Clear();
  process_phase_.Clear();
  count_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_Sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.Sample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metrics.CallStackProfile.Location frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.ProcessPhase process_phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ProcessPhase_IsValid(value)) {
            add_process_phase(static_cast< ::metrics::ProcessPhase >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 3,
                 ::metrics::ProcessPhase_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_process_phase())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.Sample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.Sample)
  return false;
#undef DO_
}

void CallStackProfile_Sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location frame = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frame_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frame(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // repeated .metrics.ProcessPhase process_phase = 3;
  for (int i = 0, n = this->process_phase_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->process_phase(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.Sample)
}

::google::protobuf::uint8* CallStackProfile_Sample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Location frame = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frame_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frame(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // repeated .metrics.ProcessPhase process_phase = 3;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    3, this->process_phase_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.Sample)
  return target;
}

size_t CallStackProfile_Sample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.Sample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CallStackProfile.Location frame = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->frame_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frame(static_cast<int>(i)));
    }
  }

  // repeated .metrics.ProcessPhase process_phase = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->process_phase_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->process_phase(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional int64 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_Sample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_Sample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_Sample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.Sample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.Sample)
    MergeFrom(*source);
  }
}

void CallStackProfile_Sample::MergeFrom(const CallStackProfile_Sample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frame_.MergeFrom(from.frame_);
  process_phase_.MergeFrom(from.process_phase_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void CallStackProfile_Sample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_Sample::CopyFrom(const CallStackProfile_Sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_Sample::IsInitialized() const {
  return true;
}

void CallStackProfile_Sample::Swap(CallStackProfile_Sample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_Sample::InternalSwap(CallStackProfile_Sample* other) {
  using std::swap;
  frame_.InternalSwap(&other->frame_);
  process_phase_.InternalSwap(&other->process_phase_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_Sample::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_Sample

// repeated .metrics.CallStackProfile.Location frame = 1;
int CallStackProfile_Sample::frame_size() const {
  return frame_.size();
}
void CallStackProfile_Sample::clear_frame() {
  frame_.Clear();
}
const ::metrics::CallStackProfile_Location& CallStackProfile_Sample::frame(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.frame)
  return frame_.Get(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_Sample::mutable_frame(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.Sample.frame)
  return frame_.Mutable(index);
}
::metrics::CallStackProfile_Location* CallStackProfile_Sample::add_frame() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.Sample.frame)
  return frame_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >*
CallStackProfile_Sample::mutable_frame() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.Sample.frame)
  return &frame_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Location >&
CallStackProfile_Sample::frame() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.Sample.frame)
  return frame_;
}

// optional int64 count = 2;
bool CallStackProfile_Sample::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_Sample::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_Sample::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_Sample::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
::google::protobuf::int64 CallStackProfile_Sample::count() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.count)
  return count_;
}
void CallStackProfile_Sample::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Sample.count)
}

// repeated .metrics.ProcessPhase process_phase = 3;
int CallStackProfile_Sample::process_phase_size() const {
  return process_phase_.size();
}
void CallStackProfile_Sample::clear_process_phase() {
  process_phase_.Clear();
}
::metrics::ProcessPhase CallStackProfile_Sample::process_phase(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.process_phase)
  return static_cast< ::metrics::ProcessPhase >(process_phase_.Get(index));
}
void CallStackProfile_Sample::set_process_phase(int index, ::metrics::ProcessPhase value) {
  assert(::metrics::ProcessPhase_IsValid(value));
  process_phase_.Set(index, value);
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Sample.process_phase)
}
void CallStackProfile_Sample::add_process_phase(::metrics::ProcessPhase value) {
  assert(::metrics::ProcessPhase_IsValid(value));
  process_phase_.Add(value);
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.Sample.process_phase)
}
const ::google::protobuf::RepeatedField<int>&
CallStackProfile_Sample::process_phase() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.Sample.process_phase)
  return process_phase_;
}
::google::protobuf::RepeatedField<int>*
CallStackProfile_Sample::mutable_process_phase() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.Sample.process_phase)
  return &process_phase_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_StackSample::kStackIndexFieldNumber;
const int CallStackProfile_StackSample::kSampleTimeOffsetMsFieldNumber;
const int CallStackProfile_StackSample::kContinuedWorkFieldNumber;
const int CallStackProfile_StackSample::kAsyncBacktraceIndexFieldNumber;
const int CallStackProfile_StackSample::kMetadataFieldNumber;
const int CallStackProfile_StackSample::kWeightFieldNumber;
const int CallStackProfile_StackSample::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_StackSample::CallStackProfile_StackSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile.StackSample)
}
CallStackProfile_StackSample::CallStackProfile_StackSample(const CallStackProfile_StackSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stack_index_, &from.stack_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&stack_index_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.StackSample)
}

void CallStackProfile_StackSample::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&stack_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&stack_index_)) + sizeof(weight_));
  count_ = GOOGLE_LONGLONG(1);
}

CallStackProfile_StackSample::~CallStackProfile_StackSample() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile.StackSample)
  SharedDtor();
}

void CallStackProfile_StackSample::SharedDtor() {
}

void CallStackProfile_StackSample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile_StackSample::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile_StackSample& CallStackProfile_StackSample::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile_StackSample* CallStackProfile_StackSample::New(::google::protobuf::Arena* arena) const {
  CallStackProfile_StackSample* n = new CallStackProfile_StackSample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile_StackSample::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.StackSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&stack_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weight_) -
        reinterpret_cast<char*>(&stack_index_)) + sizeof(weight_));
    count_ = GOOGLE_LONGLONG(1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile_StackSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.StackSample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stack_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stack_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sample_time_offset_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sample_time_offset_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_time_offset_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool continued_work = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_continued_work();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &continued_work_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 async_backtrace_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_async_backtrace_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &async_backtrace_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.MetadataItem metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 weight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 count = 7 [default = 1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.StackSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.StackSample)
  return false;
#undef DO_
}

void CallStackProfile_StackSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.StackSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stack_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stack_index(), output);
  }

  // optional int32 sample_time_offset_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_time_offset_ms(), output);
  }

  // optional bool continued_work = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->continued_work(), output);
  }

  // optional int32 async_backtrace_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->async_backtrace_index(), output);
  }

  // repeated .metrics.CallStackProfile.MetadataItem metadata = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->metadata(static_cast<int>(i)), output);
  }

  // optional int64 weight = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->weight(), output);
  }

  // optional int64 count = 7 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.StackSample)
}

::google::protobuf::uint8* CallStackProfile_StackSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile.StackSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stack_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stack_index(), target);
  }

  // optional int32 sample_time_offset_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_time_offset_ms(), target);
  }

  // optional bool continued_work = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->continued_work(), target);
  }

  // optional int32 async_backtrace_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->async_backtrace_index(), target);
  }

  // repeated .metrics.CallStackProfile.MetadataItem metadata = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  // optional int64 weight = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->weight(), target);
  }

  // optional int64 count = 7 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile.StackSample)
  return target;
}

size_t CallStackProfile_StackSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.StackSample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CallStackProfile.MetadataItem metadata = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 stack_index = 1;
    if (has_stack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stack_index());
    }

    // optional int32 sample_time_offset_ms = 2;
    if (has_sample_time_offset_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sample_time_offset_ms());
    }

    // optional bool continued_work = 3;
    if (has_continued_work()) {
      total_size += 1 + 1;
    }

    // optional int32 async_backtrace_index = 4;
    if (has_async_backtrace_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->async_backtrace_index());
    }

    // optional int64 weight = 6;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weight());
    }

    // optional int64 count = 7 [default = 1];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile_StackSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile.StackSample)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile_StackSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile_StackSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile.StackSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile.StackSample)
    MergeFrom(*source);
  }
}

void CallStackProfile_StackSample::MergeFrom(const CallStackProfile_StackSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.StackSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      stack_index_ = from.stack_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      sample_time_offset_ms_ = from.sample_time_offset_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      continued_work_ = from.continued_work_;
    }
    if (cached_has_bits & 0x00000008u) {
      async_backtrace_index_ = from.async_backtrace_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000020u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallStackProfile_StackSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile.StackSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile_StackSample::CopyFrom(const CallStackProfile_StackSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.StackSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile_StackSample::IsInitialized() const {
  return true;
}

void CallStackProfile_StackSample::Swap(CallStackProfile_StackSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile_StackSample::InternalSwap(CallStackProfile_StackSample* other) {
  using std::swap;
  metadata_.InternalSwap(&other->metadata_);
  swap(stack_index_, other->stack_index_);
  swap(sample_time_offset_ms_, other->sample_time_offset_ms_);
  swap(continued_work_, other->continued_work_);
  swap(async_backtrace_index_, other->async_backtrace_index_);
  swap(weight_, other->weight_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile_StackSample::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_StackSample

// optional int32 stack_index = 1;
bool CallStackProfile_StackSample::has_stack_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_StackSample::set_has_stack_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_StackSample::clear_has_stack_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_StackSample::clear_stack_index() {
  stack_index_ = 0;
  clear_has_stack_index();
}
::google::protobuf::int32 CallStackProfile_StackSample::stack_index() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.stack_index)
  return stack_index_;
}
void CallStackProfile_StackSample::set_stack_index(::google::protobuf::int32 value) {
  set_has_stack_index();
  stack_index_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.stack_index)
}

// optional int32 sample_time_offset_ms = 2;
bool CallStackProfile_StackSample::has_sample_time_offset_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_StackSample::set_has_sample_time_offset_ms() {
  _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_StackSample::clear_has_sample_time_offset_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_StackSample::clear_sample_time_offset_ms() {
  sample_time_offset_ms_ = 0;
  clear_has_sample_time_offset_ms();
}
::google::protobuf::int32 CallStackProfile_StackSample::sample_time_offset_ms() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.sample_time_offset_ms)
  return sample_time_offset_ms_;
}
void CallStackProfile_StackSample::set_sample_time_offset_ms(::google::protobuf::int32 value) {
  set_has_sample_time_offset_ms();
  sample_time_offset_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.sample_time_offset_ms)
}

// optional bool continued_work = 3;
bool CallStackProfile_StackSample::has_continued_work() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CallStackProfile_StackSample::set_has_continued_work() {
  _has_bits_[0] |= 0x00000004u;
}
void CallStackProfile_StackSample::clear_has_continued_work() {
  _has_bits_[0] &= ~0x00000004u;
}
void CallStackProfile_StackSample::clear_continued_work() {
  continued_work_ = false;
  clear_has_continued_work();
}
bool CallStackProfile_StackSample::continued_work() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.continued_work)
  return continued_work_;
}
void CallStackProfile_StackSample::set_continued_work(bool value) {
  set_has_continued_work();
  continued_work_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.continued_work)
}

// optional int32 async_backtrace_index = 4;
bool CallStackProfile_StackSample::has_async_backtrace_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CallStackProfile_StackSample::set_has_async_backtrace_index() {
  _has_bits_[0] |= 0x00000008u;
}
void CallStackProfile_StackSample::clear_has_async_backtrace_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void CallStackProfile_StackSample::clear_async_backtrace_index() {
  async_backtrace_index_ = 0;
  clear_has_async_backtrace_index();
}
::google::protobuf::int32 CallStackProfile_StackSample::async_backtrace_index() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.async_backtrace_index)
  return async_backtrace_index_;
}
void CallStackProfile_StackSample::set_async_backtrace_index(::google::protobuf::int32 value) {
  set_has_async_backtrace_index();
  async_backtrace_index_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.async_backtrace_index)
}

// repeated .metrics.CallStackProfile.MetadataItem metadata = 5;
int CallStackProfile_StackSample::metadata_size() const {
  return metadata_.size();
}
void CallStackProfile_StackSample::clear_metadata() {
  metadata_.Clear();
}
const ::metrics::CallStackProfile_MetadataItem& CallStackProfile_StackSample::metadata(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.metadata)
  return metadata_.Get(index);
}
::metrics::CallStackProfile_MetadataItem* CallStackProfile_StackSample::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.StackSample.metadata)
  return metadata_.Mutable(index);
}
::metrics::CallStackProfile_MetadataItem* CallStackProfile_StackSample::add_metadata() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.StackSample.metadata)
  return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_MetadataItem >*
CallStackProfile_StackSample::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.StackSample.metadata)
  return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_MetadataItem >&
CallStackProfile_StackSample::metadata() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.StackSample.metadata)
  return metadata_;
}

// optional int64 weight = 6;
bool CallStackProfile_StackSample::has_weight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CallStackProfile_StackSample::set_has_weight() {
  _has_bits_[0] |= 0x00000010u;
}
void CallStackProfile_StackSample::clear_has_weight() {
  _has_bits_[0] &= ~0x00000010u;
}
void CallStackProfile_StackSample::clear_weight() {
  weight_ = GOOGLE_LONGLONG(0);
  clear_has_weight();
}
::google::protobuf::int64 CallStackProfile_StackSample::weight() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.weight)
  return weight_;
}
void CallStackProfile_StackSample::set_weight(::google::protobuf::int64 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.weight)
}

// optional int64 count = 7 [default = 1];
bool CallStackProfile_StackSample::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CallStackProfile_StackSample::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
void CallStackProfile_StackSample::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void CallStackProfile_StackSample::clear_count() {
  count_ = GOOGLE_LONGLONG(1);
  clear_has_count();
}
::google::protobuf::int64 CallStackProfile_StackSample::count() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.StackSample.count)
  return count_;
}
void CallStackProfile_StackSample::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.StackSample.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile::kDEPRECATEDSampleFieldNumber;
const int CallStackProfile::kModuleIdFieldNumber;
const int CallStackProfile::kMetadataNameHashFieldNumber;
const int CallStackProfile::kProfileMetadataFieldNumber;
const int CallStackProfile::kAsyncBacktraceFieldNumber;
const int CallStackProfile::kStackFieldNumber;
const int CallStackProfile::kStackSampleFieldNumber;
const int CallStackProfile::kProfileStartTimeOffsetMsFieldNumber;
const int CallStackProfile::kProfileDurationMsFieldNumber;
const int CallStackProfile::kSamplingPeriodMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile::CallStackProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CallStackProfile)
}
CallStackProfile::CallStackProfile(const CallStackProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      deprecated_sample_(from.deprecated_sample_),
      module_id_(from.module_id_),
      metadata_name_hash_(from.metadata_name_hash_),
      profile_metadata_(from.profile_metadata_),
      async_backtrace_(from.async_backtrace_),
      stack_(from.stack_),
      stack_sample_(from.stack_sample_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&profile_duration_ms_, &from.profile_duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&profile_start_time_offset_ms_) -
    reinterpret_cast<char*>(&profile_duration_ms_)) + sizeof(profile_start_time_offset_ms_));
  // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile)
}

void CallStackProfile::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&profile_duration_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_start_time_offset_ms_) -
      reinterpret_cast<char*>(&profile_duration_ms_)) + sizeof(profile_start_time_offset_ms_));
}

CallStackProfile::~CallStackProfile() {
  // @@protoc_insertion_point(destructor:metrics.CallStackProfile)
  SharedDtor();
}

void CallStackProfile::SharedDtor() {
}

void CallStackProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallStackProfile::descriptor() {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallStackProfile& CallStackProfile::default_instance() {
  protobuf_call_5fstack_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

CallStackProfile* CallStackProfile::New(::google::protobuf::Arena* arena) const {
  CallStackProfile* n = new CallStackProfile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallStackProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deprecated_sample_.Clear();
  module_id_.Clear();
  metadata_name_hash_.Clear();
  profile_metadata_.Clear();
  async_backtrace_.Clear();
  stack_.Clear();
  stack_sample_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&profile_duration_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&profile_start_time_offset_ms_) -
        reinterpret_cast<char*>(&profile_duration_ms_)) + sizeof(profile_start_time_offset_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CallStackProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CallStackProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deprecated_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 profile_duration_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_profile_duration_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &profile_duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sampling_period_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sampling_period_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sampling_period_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 metadata_name_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 41u, input, this->mutable_metadata_name_hash())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_metadata_name_hash())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_profile_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_async_backtrace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.Stack stack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CallStackProfile.StackSample stack_sample = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stack_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 profile_start_time_offset_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_profile_start_time_offset_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &profile_start_time_offset_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CallStackProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile)
  return false;
#undef DO_
}

void CallStackProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deprecated_sample_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->deprecated_sample(static_cast<int>(i)), output);
  }

  // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->module_id(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 profile_duration_ms = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->profile_duration_ms(), output);
  }

  // optional int32 sampling_period_ms = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sampling_period_ms(), output);
  }

  // repeated fixed64 metadata_name_hash = 5;
  for (int i = 0, n = this->metadata_name_hash_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      5, this->metadata_name_hash(i), output);
  }

  // repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->profile_metadata(static_cast<int>(i)), output);
  }

  // repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->async_backtrace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->async_backtrace(static_cast<int>(i)), output);
  }

  // repeated .metrics.CallStackProfile.Stack stack = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->stack(static_cast<int>(i)), output);
  }

  // repeated .metrics.CallStackProfile.StackSample stack_sample = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_sample_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->stack_sample(static_cast<int>(i)), output);
  }

  // optional int64 profile_start_time_offset_ms = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->profile_start_time_offset_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile)
}

::google::protobuf::uint8* CallStackProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CallStackProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deprecated_sample_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->deprecated_sample(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->module_id(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 profile_duration_ms = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->profile_duration_ms(), target);
  }

  // optional int32 sampling_period_ms = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sampling_period_ms(), target);
  }

  // repeated fixed64 metadata_name_hash = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(5, this->metadata_name_hash_, target);

  // repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->profile_metadata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->async_backtrace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->async_backtrace(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metrics.CallStackProfile.Stack stack = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->stack(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metrics.CallStackProfile.StackSample stack_sample = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_sample_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->stack_sample(static_cast<int>(i)), deterministic, target);
  }

  // optional int64 profile_start_time_offset_ms = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->profile_start_time_offset_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CallStackProfile)
  return target;
}

size_t CallStackProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->deprecated_sample_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deprecated_sample(static_cast<int>(i)));
    }
  }

  // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->module_id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_id(static_cast<int>(i)));
    }
  }

  // repeated fixed64 metadata_name_hash = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_name_hash_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->metadata_name_hash_size());
    total_size += data_size;
  }

  // repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->profile_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile_metadata(static_cast<int>(i)));
    }
  }

  // repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->async_backtrace_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->async_backtrace(static_cast<int>(i)));
    }
  }

  // repeated .metrics.CallStackProfile.Stack stack = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->stack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stack(static_cast<int>(i)));
    }
  }

  // repeated .metrics.CallStackProfile.StackSample stack_sample = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->stack_sample_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stack_sample(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 profile_duration_ms = 3;
    if (has_profile_duration_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->profile_duration_ms());
    }

    // optional int32 sampling_period_ms = 4;
    if (has_sampling_period_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sampling_period_ms());
    }

    // optional int64 profile_start_time_offset_ms = 10;
    if (has_profile_start_time_offset_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->profile_start_time_offset_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallStackProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CallStackProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const CallStackProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallStackProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CallStackProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CallStackProfile)
    MergeFrom(*source);
  }
}

void CallStackProfile::MergeFrom(const CallStackProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deprecated_sample_.MergeFrom(from.deprecated_sample_);
  module_id_.MergeFrom(from.module_id_);
  metadata_name_hash_.MergeFrom(from.metadata_name_hash_);
  profile_metadata_.MergeFrom(from.profile_metadata_);
  async_backtrace_.MergeFrom(from.async_backtrace_);
  stack_.MergeFrom(from.stack_);
  stack_sample_.MergeFrom(from.stack_sample_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      profile_duration_ms_ = from.profile_duration_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      sampling_period_ms_ = from.sampling_period_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      profile_start_time_offset_ms_ = from.profile_start_time_offset_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CallStackProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CallStackProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallStackProfile::CopyFrom(const CallStackProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStackProfile::IsInitialized() const {
  return true;
}

void CallStackProfile::Swap(CallStackProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallStackProfile::InternalSwap(CallStackProfile* other) {
  using std::swap;
  deprecated_sample_.InternalSwap(&other->deprecated_sample_);
  module_id_.InternalSwap(&other->module_id_);
  metadata_name_hash_.InternalSwap(&other->metadata_name_hash_);
  profile_metadata_.InternalSwap(&other->profile_metadata_);
  async_backtrace_.InternalSwap(&other->async_backtrace_);
  stack_.InternalSwap(&other->stack_);
  stack_sample_.InternalSwap(&other->stack_sample_);
  swap(profile_duration_ms_, other->profile_duration_ms_);
  swap(sampling_period_ms_, other->sampling_period_ms_);
  swap(profile_start_time_offset_ms_, other->profile_start_time_offset_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallStackProfile::GetMetadata() const {
  protobuf_call_5fstack_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_call_5fstack_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile

// repeated .metrics.CallStackProfile.Sample DEPRECATED_sample = 1 [deprecated = true];
int CallStackProfile::deprecated_sample_size() const {
  return deprecated_sample_.size();
}
void CallStackProfile::clear_deprecated_sample() {
  deprecated_sample_.Clear();
}
const ::metrics::CallStackProfile_Sample& CallStackProfile::deprecated_sample(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.DEPRECATED_sample)
  return deprecated_sample_.Get(index);
}
::metrics::CallStackProfile_Sample* CallStackProfile::mutable_deprecated_sample(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.DEPRECATED_sample)
  return deprecated_sample_.Mutable(index);
}
::metrics::CallStackProfile_Sample* CallStackProfile::add_deprecated_sample() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.DEPRECATED_sample)
  return deprecated_sample_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Sample >*
CallStackProfile::mutable_deprecated_sample() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.DEPRECATED_sample)
  return &deprecated_sample_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Sample >&
CallStackProfile::deprecated_sample() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.DEPRECATED_sample)
  return deprecated_sample_;
}

// repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
int CallStackProfile::module_id_size() const {
  return module_id_.size();
}
void CallStackProfile::clear_module_id() {
  module_id_.Clear();
}
const ::metrics::CallStackProfile_ModuleIdentifier& CallStackProfile::module_id(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.module_id)
  return module_id_.Get(index);
}
::metrics::CallStackProfile_ModuleIdentifier* CallStackProfile::mutable_module_id(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.module_id)
  return module_id_.Mutable(index);
}
::metrics::CallStackProfile_ModuleIdentifier* CallStackProfile::add_module_id() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.module_id)
  return module_id_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_ModuleIdentifier >*
CallStackProfile::mutable_module_id() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.module_id)
  return &module_id_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_ModuleIdentifier >&
CallStackProfile::module_id() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.module_id)
  return module_id_;
}

// repeated fixed64 metadata_name_hash = 5;
int CallStackProfile::metadata_name_hash_size() const {
  return metadata_name_hash_.size();
}
void CallStackProfile::clear_metadata_name_hash() {
  metadata_name_hash_.Clear();
}
::google::protobuf::uint64 CallStackProfile::metadata_name_hash(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.metadata_name_hash)
  return metadata_name_hash_.Get(index);
}
void CallStackProfile::set_metadata_name_hash(int index, ::google::protobuf::uint64 value) {
  metadata_name_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.metadata_name_hash)
}
void CallStackProfile::add_metadata_name_hash(::google::protobuf::uint64 value) {
  metadata_name_hash_.Add(value);
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.metadata_name_hash)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CallStackProfile::metadata_name_hash() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.metadata_name_hash)
  return metadata_name_hash_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CallStackProfile::mutable_metadata_name_hash() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.metadata_name_hash)
  return &metadata_name_hash_;
}

// repeated .metrics.CallStackProfile.MetadataItem profile_metadata = 6;
int CallStackProfile::profile_metadata_size() const {
  return profile_metadata_.size();
}
void CallStackProfile::clear_profile_metadata() {
  profile_metadata_.Clear();
}
const ::metrics::CallStackProfile_MetadataItem& CallStackProfile::profile_metadata(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.profile_metadata)
  return profile_metadata_.Get(index);
}
::metrics::CallStackProfile_MetadataItem* CallStackProfile::mutable_profile_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.profile_metadata)
  return profile_metadata_.Mutable(index);
}
::metrics::CallStackProfile_MetadataItem* CallStackProfile::add_profile_metadata() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.profile_metadata)
  return profile_metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_MetadataItem >*
CallStackProfile::mutable_profile_metadata() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.profile_metadata)
  return &profile_metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_MetadataItem >&
CallStackProfile::profile_metadata() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.profile_metadata)
  return profile_metadata_;
}

// repeated .metrics.CallStackProfile.AsyncBacktrace async_backtrace = 7;
int CallStackProfile::async_backtrace_size() const {
  return async_backtrace_.size();
}
void CallStackProfile::clear_async_backtrace() {
  async_backtrace_.Clear();
}
const ::metrics::CallStackProfile_AsyncBacktrace& CallStackProfile::async_backtrace(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.async_backtrace)
  return async_backtrace_.Get(index);
}
::metrics::CallStackProfile_AsyncBacktrace* CallStackProfile::mutable_async_backtrace(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.async_backtrace)
  return async_backtrace_.Mutable(index);
}
::metrics::CallStackProfile_AsyncBacktrace* CallStackProfile::add_async_backtrace() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.async_backtrace)
  return async_backtrace_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_AsyncBacktrace >*
CallStackProfile::mutable_async_backtrace() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.async_backtrace)
  return &async_backtrace_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_AsyncBacktrace >&
CallStackProfile::async_backtrace() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.async_backtrace)
  return async_backtrace_;
}

// repeated .metrics.CallStackProfile.Stack stack = 8;
int CallStackProfile::stack_size() const {
  return stack_.size();
}
void CallStackProfile::clear_stack() {
  stack_.Clear();
}
const ::metrics::CallStackProfile_Stack& CallStackProfile::stack(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.stack)
  return stack_.Get(index);
}
::metrics::CallStackProfile_Stack* CallStackProfile::mutable_stack(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.stack)
  return stack_.Mutable(index);
}
::metrics::CallStackProfile_Stack* CallStackProfile::add_stack() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.stack)
  return stack_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Stack >*
CallStackProfile::mutable_stack() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.stack)
  return &stack_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_Stack >&
CallStackProfile::stack() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.stack)
  return stack_;
}

// repeated .metrics.CallStackProfile.StackSample stack_sample = 9;
int CallStackProfile::stack_sample_size() const {
  return stack_sample_.size();
}
void CallStackProfile::clear_stack_sample() {
  stack_sample_.Clear();
}
const ::metrics::CallStackProfile_StackSample& CallStackProfile::stack_sample(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.stack_sample)
  return stack_sample_.Get(index);
}
::metrics::CallStackProfile_StackSample* CallStackProfile::mutable_stack_sample(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.stack_sample)
  return stack_sample_.Mutable(index);
}
::metrics::CallStackProfile_StackSample* CallStackProfile::add_stack_sample() {
  // @@protoc_insertion_point(field_add:metrics.CallStackProfile.stack_sample)
  return stack_sample_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_StackSample >*
CallStackProfile::mutable_stack_sample() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.stack_sample)
  return &stack_sample_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CallStackProfile_StackSample >&
CallStackProfile::stack_sample() const {
  // @@protoc_insertion_point(field_list:metrics.CallStackProfile.stack_sample)
  return stack_sample_;
}

// optional int64 profile_start_time_offset_ms = 10;
bool CallStackProfile::has_profile_start_time_offset_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CallStackProfile::set_has_profile_start_time_offset_ms() {
  _has_bits_[0] |= 0x00000004u;
}
void CallStackProfile::clear_has_profile_start_time_offset_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
void CallStackProfile::clear_profile_start_time_offset_ms() {
  profile_start_time_offset_ms_ = GOOGLE_LONGLONG(0);
  clear_has_profile_start_time_offset_ms();
}
::google::protobuf::int64 CallStackProfile::profile_start_time_offset_ms() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.profile_start_time_offset_ms)
  return profile_start_time_offset_ms_;
}
void CallStackProfile::set_profile_start_time_offset_ms(::google::protobuf::int64 value) {
  set_has_profile_start_time_offset_ms();
  profile_start_time_offset_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.profile_start_time_offset_ms)
}

// optional int32 profile_duration_ms = 3;
bool CallStackProfile::has_profile_duration_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile::set_has_profile_duration_ms() {
  _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile::clear_has_profile_duration_ms() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile::clear_profile_duration_ms() {
  profile_duration_ms_ = 0;
  clear_has_profile_duration_ms();
}
::google::protobuf::int32 CallStackProfile::profile_duration_ms() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.profile_duration_ms)
  return profile_duration_ms_;
}
void CallStackProfile::set_profile_duration_ms(::google::protobuf::int32 value) {
  set_has_profile_duration_ms();
  profile_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.profile_duration_ms)
}

// optional int32 sampling_period_ms = 4;
bool CallStackProfile::has_sampling_period_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile::set_has_sampling_period_ms() {
  _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile::clear_has_sampling_period_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile::clear_sampling_period_ms() {
  sampling_period_ms_ = 0;
  clear_has_sampling_period_ms();
}
::google::protobuf::int32 CallStackProfile::sampling_period_ms() const {
  // @@protoc_insertion_point(field_get:metrics.CallStackProfile.sampling_period_ms)
  return sampling_period_ms_;
}
void CallStackProfile::set_sampling_period_ms(::google::protobuf::int32 value) {
  set_has_sampling_period_ms();
  sampling_period_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.CallStackProfile.sampling_period_ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
