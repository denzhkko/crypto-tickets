// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cast_assistant_logs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cast_assistant_logs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class CastAssistantLogsProto_CastAssistantEventProto_MetadataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CastAssistantLogsProto_CastAssistantEventProto_Metadata>
     _instance;
} _CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_;
class CastAssistantLogsProto_CastAssistantEventProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CastAssistantLogsProto_CastAssistantEventProto>
     _instance;
} _CastAssistantLogsProto_CastAssistantEventProto_default_instance_;
class CastAssistantLogsProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CastAssistantLogsProto>
     _instance;
} _CastAssistantLogsProto_default_instance_;

namespace protobuf_cast_5fassistant_5flogs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto_Metadata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto_Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto_Metadata, name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto_Metadata, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, time_msec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, duo_core_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto_CastAssistantEventProto, hotword_model_id_),
  1,
  2,
  3,
  ~0u,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, conversation_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, gaia_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, experiment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, virtual_release_track_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, cast_assistant_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, backdrop_app_device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, event_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CastAssistantLogsProto, system_bundle_version_),
  1,
  0,
  2,
  5,
  6,
  ~0u,
  7,
  ~0u,
  3,
  ~0u,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(CastAssistantLogsProto_CastAssistantEventProto_Metadata)},
  { 9, 20, sizeof(CastAssistantLogsProto_CastAssistantEventProto)},
  { 26, 42, sizeof(CastAssistantLogsProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CastAssistantLogsProto_CastAssistantEventProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CastAssistantLogsProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cast_assistant_logs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_);_CastAssistantLogsProto_CastAssistantEventProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CastAssistantLogsProto_CastAssistantEventProto_default_instance_);_CastAssistantLogsProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CastAssistantLogsProto_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031cast_assistant_logs.proto\022\007metrics\"\356\004\n"
      "\026CastAssistantLogsProto\022\022\n\nrequest_id\030\005 "
      "\001(\t\022\020\n\010event_id\030\001 \001(\t\022\034\n\020conversation_ke"
      "y\030\006 \001(\tB\002\030\001\022\017\n\007gaia_id\030\003 \001(\003\022\021\n\tclient_i"
      "d\030\004 \001(\006\022\025\n\rexperiment_id\030\010 \003(\t\022\035\n\025virtua"
      "l_release_track\030\t \001(\007\022U\n\024cast_assistant_"
      "event\030\002 \003(\01327.metrics.CastAssistantLogsP"
      "roto.CastAssistantEventProto\022\036\n\026backdrop"
      "_app_device_id\030\n \001(\t\022\025\n\revent_id_list\030\014 "
      "\003(\t\022\035\n\025system_bundle_version\030\r \001(\t\032\210\002\n\027C"
      "astAssistantEventProto\022\021\n\tname_hash\030\001 \001("
      "\006\022\021\n\ttime_msec\030\002 \001(\003\022\021\n\005value\030\003 \001(\003B\002\030\001\022"
      "R\n\010metadata\030\004 \003(\0132@.metrics.CastAssistan"
      "tLogsProto.CastAssistantEventProto.Metad"
      "ata\022\030\n\020duo_core_version\030\005 \001(\006\022\030\n\020hotword"
      "_model_id\030\006 \001(\t\032,\n\010Metadata\022\021\n\tname_hash"
      "\030\001 \001(\006\022\r\n\005value\030\002 \001(\003B4\n\037org.chromium.co"
      "mponents.metricsB\021CastAssistantLogs"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 715);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cast_assistant_logs.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cast_5fassistant_5flogs_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CastAssistantLogsProto_CastAssistantEventProto_Metadata::kNameHashFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto_Metadata::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CastAssistantLogsProto_CastAssistantEventProto_Metadata::CastAssistantLogsProto_CastAssistantEventProto_Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
}
CastAssistantLogsProto_CastAssistantEventProto_Metadata::CastAssistantLogsProto_CastAssistantEventProto_Metadata(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_hash_, &from.name_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&name_hash_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&name_hash_)) + sizeof(value_));
}

CastAssistantLogsProto_CastAssistantEventProto_Metadata::~CastAssistantLogsProto_CastAssistantEventProto_Metadata() {
  // @@protoc_insertion_point(destructor:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  SharedDtor();
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::SharedDtor() {
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CastAssistantLogsProto_CastAssistantEventProto_Metadata::descriptor() {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CastAssistantLogsProto_CastAssistantEventProto_Metadata& CastAssistantLogsProto_CastAssistantEventProto_Metadata::default_instance() {
  protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CastAssistantLogsProto_CastAssistantEventProto_Metadata* CastAssistantLogsProto_CastAssistantEventProto_Metadata::New(::google::protobuf::Arena* arena) const {
  CastAssistantLogsProto_CastAssistantEventProto_Metadata* n = new CastAssistantLogsProto_CastAssistantEventProto_Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&name_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&name_hash_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  return false;
#undef DO_
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->name_hash(), output);
  }

  // optional int64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
}

::google::protobuf::uint8* CastAssistantLogsProto_CastAssistantEventProto_Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->name_hash(), target);
  }

  // optional int64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  return target;
}

size_t CastAssistantLogsProto_CastAssistantEventProto_Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 name_hash = 1;
    if (has_name_hash()) {
      total_size += 1 + 8;
    }

    // optional int64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CastAssistantLogsProto_CastAssistantEventProto_Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CastAssistantLogsProto_CastAssistantEventProto_Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
    MergeFrom(*source);
  }
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::MergeFrom(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_hash_ = from.name_hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::CopyFrom(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::IsInitialized() const {
  return true;
}

void CastAssistantLogsProto_CastAssistantEventProto_Metadata::Swap(CastAssistantLogsProto_CastAssistantEventProto_Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::InternalSwap(CastAssistantLogsProto_CastAssistantEventProto_Metadata* other) {
  using std::swap;
  swap(name_hash_, other->name_hash_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CastAssistantLogsProto_CastAssistantEventProto_Metadata::GetMetadata() const {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CastAssistantLogsProto_CastAssistantEventProto_Metadata

// optional fixed64 name_hash = 1;
bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_has_name_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto_Metadata::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.name_hash)
  return name_hash_;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.name_hash)
}

// optional int64 value = 2;
bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto_Metadata::value() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.value)
  return value_;
}
void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CastAssistantLogsProto_CastAssistantEventProto::kNameHashFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto::kTimeMsecFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto::kValueFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto::kMetadataFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto::kDuoCoreVersionFieldNumber;
const int CastAssistantLogsProto_CastAssistantEventProto::kHotwordModelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CastAssistantLogsProto_CastAssistantEventProto::CastAssistantLogsProto_CastAssistantEventProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CastAssistantLogsProto.CastAssistantEventProto)
}
CastAssistantLogsProto_CastAssistantEventProto::CastAssistantLogsProto_CastAssistantEventProto(const CastAssistantLogsProto_CastAssistantEventProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hotword_model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hotword_model_id()) {
    hotword_model_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotword_model_id_);
  }
  ::memcpy(&name_hash_, &from.name_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&duo_core_version_) -
    reinterpret_cast<char*>(&name_hash_)) + sizeof(duo_core_version_));
  // @@protoc_insertion_point(copy_constructor:metrics.CastAssistantLogsProto.CastAssistantEventProto)
}

void CastAssistantLogsProto_CastAssistantEventProto::SharedCtor() {
  _cached_size_ = 0;
  hotword_model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duo_core_version_) -
      reinterpret_cast<char*>(&name_hash_)) + sizeof(duo_core_version_));
}

CastAssistantLogsProto_CastAssistantEventProto::~CastAssistantLogsProto_CastAssistantEventProto() {
  // @@protoc_insertion_point(destructor:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  SharedDtor();
}

void CastAssistantLogsProto_CastAssistantEventProto::SharedDtor() {
  hotword_model_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CastAssistantLogsProto_CastAssistantEventProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CastAssistantLogsProto_CastAssistantEventProto::descriptor() {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CastAssistantLogsProto_CastAssistantEventProto& CastAssistantLogsProto_CastAssistantEventProto::default_instance() {
  protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CastAssistantLogsProto_CastAssistantEventProto* CastAssistantLogsProto_CastAssistantEventProto::New(::google::protobuf::Arena* arena) const {
  CastAssistantLogsProto_CastAssistantEventProto* n = new CastAssistantLogsProto_CastAssistantEventProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CastAssistantLogsProto_CastAssistantEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  if (has_hotword_model_id()) {
    GOOGLE_DCHECK(!hotword_model_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*hotword_model_id_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 30u) {
    ::memset(&name_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duo_core_version_) -
        reinterpret_cast<char*>(&name_hash_)) + sizeof(duo_core_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CastAssistantLogsProto_CastAssistantEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_msec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_msec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_msec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 duo_core_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_duo_core_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &duo_core_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hotword_model_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hotword_model_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hotword_model_id().data(), static_cast<int>(this->hotword_model_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  return false;
#undef DO_
}

void CastAssistantLogsProto_CastAssistantEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->name_hash(), output);
  }

  // optional int64 time_msec = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time_msec(), output);
  }

  // optional int64 value = 3 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->value(), output);
  }

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->metadata(static_cast<int>(i)), output);
  }

  // optional fixed64 duo_core_version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->duo_core_version(), output);
  }

  // optional string hotword_model_id = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hotword_model_id().data(), static_cast<int>(this->hotword_model_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->hotword_model_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CastAssistantLogsProto.CastAssistantEventProto)
}

::google::protobuf::uint8* CastAssistantLogsProto_CastAssistantEventProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->name_hash(), target);
  }

  // optional int64 time_msec = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time_msec(), target);
  }

  // optional int64 value = 3 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->value(), target);
  }

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  // optional fixed64 duo_core_version = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->duo_core_version(), target);
  }

  // optional string hotword_model_id = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hotword_model_id().data(), static_cast<int>(this->hotword_model_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hotword_model_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  return target;
}

size_t CastAssistantLogsProto_CastAssistantEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string hotword_model_id = 6;
    if (has_hotword_model_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hotword_model_id());
    }

    // optional fixed64 name_hash = 1;
    if (has_name_hash()) {
      total_size += 1 + 8;
    }

    // optional int64 time_msec = 2;
    if (has_time_msec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_msec());
    }

    // optional int64 value = 3 [deprecated = true];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }

    // optional fixed64 duo_core_version = 5;
    if (has_duo_core_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CastAssistantLogsProto_CastAssistantEventProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  const CastAssistantLogsProto_CastAssistantEventProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CastAssistantLogsProto_CastAssistantEventProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CastAssistantLogsProto.CastAssistantEventProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CastAssistantLogsProto.CastAssistantEventProto)
    MergeFrom(*source);
  }
}

void CastAssistantLogsProto_CastAssistantEventProto::MergeFrom(const CastAssistantLogsProto_CastAssistantEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hotword_model_id();
      hotword_model_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hotword_model_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      name_hash_ = from.name_hash_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_msec_ = from.time_msec_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000010u) {
      duo_core_version_ = from.duo_core_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CastAssistantLogsProto_CastAssistantEventProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CastAssistantLogsProto_CastAssistantEventProto::CopyFrom(const CastAssistantLogsProto_CastAssistantEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CastAssistantLogsProto.CastAssistantEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CastAssistantLogsProto_CastAssistantEventProto::IsInitialized() const {
  return true;
}

void CastAssistantLogsProto_CastAssistantEventProto::Swap(CastAssistantLogsProto_CastAssistantEventProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CastAssistantLogsProto_CastAssistantEventProto::InternalSwap(CastAssistantLogsProto_CastAssistantEventProto* other) {
  using std::swap;
  metadata_.InternalSwap(&other->metadata_);
  hotword_model_id_.Swap(&other->hotword_model_id_);
  swap(name_hash_, other->name_hash_);
  swap(time_msec_, other->time_msec_);
  swap(value_, other->value_);
  swap(duo_core_version_, other->duo_core_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CastAssistantLogsProto_CastAssistantEventProto::GetMetadata() const {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CastAssistantLogsProto_CastAssistantEventProto

// optional fixed64 name_hash = 1;
bool CastAssistantLogsProto_CastAssistantEventProto::has_name_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_has_name_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.name_hash)
  return name_hash_;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.name_hash)
}

// optional int64 time_msec = 2;
bool CastAssistantLogsProto_CastAssistantEventProto::has_time_msec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_has_time_msec() {
  _has_bits_[0] |= 0x00000004u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_has_time_msec() {
  _has_bits_[0] &= ~0x00000004u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_time_msec() {
  time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_time_msec();
}
::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto::time_msec() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.time_msec)
  return time_msec_;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_time_msec(::google::protobuf::int64 value) {
  set_has_time_msec();
  time_msec_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.time_msec)
}

// optional int64 value = 3 [deprecated = true];
bool CastAssistantLogsProto_CastAssistantEventProto::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto::value() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.value)
  return value_;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.value)
}

// repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
int CastAssistantLogsProto_CastAssistantEventProto::metadata_size() const {
  return metadata_.size();
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_metadata() {
  metadata_.Clear();
}
const ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata& CastAssistantLogsProto_CastAssistantEventProto::metadata(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Get(index);
}
::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* CastAssistantLogsProto_CastAssistantEventProto::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Mutable(index);
}
::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* CastAssistantLogsProto_CastAssistantEventProto::add_metadata() {
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >*
CastAssistantLogsProto_CastAssistantEventProto::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >&
CastAssistantLogsProto_CastAssistantEventProto::metadata() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_;
}

// optional fixed64 duo_core_version = 5;
bool CastAssistantLogsProto_CastAssistantEventProto::has_duo_core_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_has_duo_core_version() {
  _has_bits_[0] |= 0x00000010u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_has_duo_core_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_duo_core_version() {
  duo_core_version_ = GOOGLE_ULONGLONG(0);
  clear_has_duo_core_version();
}
::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto::duo_core_version() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.duo_core_version)
  return duo_core_version_;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_duo_core_version(::google::protobuf::uint64 value) {
  set_has_duo_core_version();
  duo_core_version_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.duo_core_version)
}

// optional string hotword_model_id = 6;
bool CastAssistantLogsProto_CastAssistantEventProto::has_hotword_model_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CastAssistantLogsProto_CastAssistantEventProto::set_has_hotword_model_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_has_hotword_model_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CastAssistantLogsProto_CastAssistantEventProto::clear_hotword_model_id() {
  hotword_model_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hotword_model_id();
}
const ::std::string& CastAssistantLogsProto_CastAssistantEventProto::hotword_model_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  return hotword_model_id_.GetNoArena();
}
void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const ::std::string& value) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
#if LANG_CXX11
void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(::std::string&& value) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
#endif
void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const char* value, size_t size) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
::std::string* CastAssistantLogsProto_CastAssistantEventProto::mutable_hotword_model_id() {
  set_has_hotword_model_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  return hotword_model_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto_CastAssistantEventProto::release_hotword_model_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  clear_has_hotword_model_id();
  return hotword_model_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto_CastAssistantEventProto::set_allocated_hotword_model_id(::std::string* hotword_model_id) {
  if (hotword_model_id != NULL) {
    set_has_hotword_model_id();
  } else {
    clear_has_hotword_model_id();
  }
  hotword_model_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hotword_model_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CastAssistantLogsProto::kRequestIdFieldNumber;
const int CastAssistantLogsProto::kEventIdFieldNumber;
const int CastAssistantLogsProto::kConversationKeyFieldNumber;
const int CastAssistantLogsProto::kGaiaIdFieldNumber;
const int CastAssistantLogsProto::kClientIdFieldNumber;
const int CastAssistantLogsProto::kExperimentIdFieldNumber;
const int CastAssistantLogsProto::kVirtualReleaseTrackFieldNumber;
const int CastAssistantLogsProto::kCastAssistantEventFieldNumber;
const int CastAssistantLogsProto::kBackdropAppDeviceIdFieldNumber;
const int CastAssistantLogsProto::kEventIdListFieldNumber;
const int CastAssistantLogsProto::kSystemBundleVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CastAssistantLogsProto::CastAssistantLogsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.CastAssistantLogsProto)
}
CastAssistantLogsProto::CastAssistantLogsProto(const CastAssistantLogsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cast_assistant_event_(from.cast_assistant_event_),
      experiment_id_(from.experiment_id_),
      event_id_list_(from.event_id_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_event_id()) {
    event_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_id_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_request_id()) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  conversation_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_conversation_key()) {
    conversation_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_key_);
  }
  backdrop_app_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_backdrop_app_device_id()) {
    backdrop_app_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backdrop_app_device_id_);
  }
  system_bundle_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_system_bundle_version()) {
    system_bundle_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_bundle_version_);
  }
  ::memcpy(&gaia_id_, &from.gaia_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&virtual_release_track_) -
    reinterpret_cast<char*>(&gaia_id_)) + sizeof(virtual_release_track_));
  // @@protoc_insertion_point(copy_constructor:metrics.CastAssistantLogsProto)
}

void CastAssistantLogsProto::SharedCtor() {
  _cached_size_ = 0;
  event_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backdrop_app_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_bundle_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gaia_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&virtual_release_track_) -
      reinterpret_cast<char*>(&gaia_id_)) + sizeof(virtual_release_track_));
}

CastAssistantLogsProto::~CastAssistantLogsProto() {
  // @@protoc_insertion_point(destructor:metrics.CastAssistantLogsProto)
  SharedDtor();
}

void CastAssistantLogsProto::SharedDtor() {
  event_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backdrop_app_device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_bundle_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CastAssistantLogsProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CastAssistantLogsProto::descriptor() {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CastAssistantLogsProto& CastAssistantLogsProto::default_instance() {
  protobuf_cast_5fassistant_5flogs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CastAssistantLogsProto* CastAssistantLogsProto::New(::google::protobuf::Arena* arena) const {
  CastAssistantLogsProto* n = new CastAssistantLogsProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CastAssistantLogsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.CastAssistantLogsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cast_assistant_event_.Clear();
  experiment_id_.Clear();
  event_id_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!event_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*event_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!request_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*request_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!conversation_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*conversation_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!backdrop_app_device_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*backdrop_app_device_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!system_bundle_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*system_bundle_version_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&gaia_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&virtual_release_track_) -
        reinterpret_cast<char*>(&gaia_id_)) + sizeof(virtual_release_track_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CastAssistantLogsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.CastAssistantLogsProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_id().data(), static_cast<int>(this->event_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.event_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cast_assistant_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 gaia_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gaia_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gaia_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 client_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_client_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string request_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.request_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string conversation_key = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conversation_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->conversation_key().data(), static_cast<int>(this->conversation_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.conversation_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string experiment_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_experiment_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->experiment_id(this->experiment_id_size() - 1).data(),
            static_cast<int>(this->experiment_id(this->experiment_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.experiment_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 virtual_release_track = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_virtual_release_track();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &virtual_release_track_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string backdrop_app_device_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backdrop_app_device_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->backdrop_app_device_id().data(), static_cast<int>(this->backdrop_app_device_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.backdrop_app_device_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string event_id_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_event_id_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_id_list(this->event_id_list_size() - 1).data(),
            static_cast<int>(this->event_id_list(this->event_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.event_id_list");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string system_bundle_version = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_bundle_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->system_bundle_version().data(), static_cast<int>(this->system_bundle_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.CastAssistantLogsProto.system_bundle_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.CastAssistantLogsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.CastAssistantLogsProto)
  return false;
#undef DO_
}

void CastAssistantLogsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.CastAssistantLogsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_id().data(), static_cast<int>(this->event_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.event_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_id(), output);
  }

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cast_assistant_event_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cast_assistant_event(static_cast<int>(i)), output);
  }

  // optional int64 gaia_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->gaia_id(), output);
  }

  // optional fixed64 client_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->client_id(), output);
  }

  // optional string request_id = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->request_id(), output);
  }

  // optional string conversation_key = 6 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conversation_key().data(), static_cast<int>(this->conversation_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.conversation_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->conversation_key(), output);
  }

  // repeated string experiment_id = 8;
  for (int i = 0, n = this->experiment_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiment_id(i).data(), static_cast<int>(this->experiment_id(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.experiment_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->experiment_id(i), output);
  }

  // optional fixed32 virtual_release_track = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->virtual_release_track(), output);
  }

  // optional string backdrop_app_device_id = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->backdrop_app_device_id().data(), static_cast<int>(this->backdrop_app_device_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.backdrop_app_device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->backdrop_app_device_id(), output);
  }

  // repeated string event_id_list = 12;
  for (int i = 0, n = this->event_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_id_list(i).data(), static_cast<int>(this->event_id_list(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.event_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->event_id_list(i), output);
  }

  // optional string system_bundle_version = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system_bundle_version().data(), static_cast<int>(this->system_bundle_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.system_bundle_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->system_bundle_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.CastAssistantLogsProto)
}

::google::protobuf::uint8* CastAssistantLogsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.CastAssistantLogsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_id().data(), static_cast<int>(this->event_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.event_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_id(), target);
  }

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cast_assistant_event_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->cast_assistant_event(static_cast<int>(i)), deterministic, target);
  }

  // optional int64 gaia_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->gaia_id(), target);
  }

  // optional fixed64 client_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->client_id(), target);
  }

  // optional string request_id = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->request_id(), target);
  }

  // optional string conversation_key = 6 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conversation_key().data(), static_cast<int>(this->conversation_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.conversation_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->conversation_key(), target);
  }

  // repeated string experiment_id = 8;
  for (int i = 0, n = this->experiment_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiment_id(i).data(), static_cast<int>(this->experiment_id(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.experiment_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->experiment_id(i), target);
  }

  // optional fixed32 virtual_release_track = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->virtual_release_track(), target);
  }

  // optional string backdrop_app_device_id = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->backdrop_app_device_id().data(), static_cast<int>(this->backdrop_app_device_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.backdrop_app_device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->backdrop_app_device_id(), target);
  }

  // repeated string event_id_list = 12;
  for (int i = 0, n = this->event_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_id_list(i).data(), static_cast<int>(this->event_id_list(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.event_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->event_id_list(i), target);
  }

  // optional string system_bundle_version = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system_bundle_version().data(), static_cast<int>(this->system_bundle_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metrics.CastAssistantLogsProto.system_bundle_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->system_bundle_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.CastAssistantLogsProto)
  return target;
}

size_t CastAssistantLogsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.CastAssistantLogsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cast_assistant_event_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cast_assistant_event(static_cast<int>(i)));
    }
  }

  // repeated string experiment_id = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->experiment_id_size());
  for (int i = 0, n = this->experiment_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->experiment_id(i));
  }

  // repeated string event_id_list = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->event_id_list_size());
  for (int i = 0, n = this->event_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->event_id_list(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_id());
    }

    // optional string request_id = 5;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request_id());
    }

    // optional string conversation_key = 6 [deprecated = true];
    if (has_conversation_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->conversation_key());
    }

    // optional string backdrop_app_device_id = 10;
    if (has_backdrop_app_device_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backdrop_app_device_id());
    }

    // optional string system_bundle_version = 13;
    if (has_system_bundle_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->system_bundle_version());
    }

    // optional int64 gaia_id = 3;
    if (has_gaia_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gaia_id());
    }

    // optional fixed64 client_id = 4;
    if (has_client_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 virtual_release_track = 9;
    if (has_virtual_release_track()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CastAssistantLogsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.CastAssistantLogsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const CastAssistantLogsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CastAssistantLogsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.CastAssistantLogsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.CastAssistantLogsProto)
    MergeFrom(*source);
  }
}

void CastAssistantLogsProto::MergeFrom(const CastAssistantLogsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.CastAssistantLogsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cast_assistant_event_.MergeFrom(from.cast_assistant_event_);
  experiment_id_.MergeFrom(from.experiment_id_);
  event_id_list_.MergeFrom(from.event_id_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_event_id();
      event_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_request_id();
      request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_conversation_key();
      conversation_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_backdrop_app_device_id();
      backdrop_app_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backdrop_app_device_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_system_bundle_version();
      system_bundle_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_bundle_version_);
    }
    if (cached_has_bits & 0x00000020u) {
      gaia_id_ = from.gaia_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      client_id_ = from.client_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      virtual_release_track_ = from.virtual_release_track_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CastAssistantLogsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.CastAssistantLogsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CastAssistantLogsProto::CopyFrom(const CastAssistantLogsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.CastAssistantLogsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CastAssistantLogsProto::IsInitialized() const {
  return true;
}

void CastAssistantLogsProto::Swap(CastAssistantLogsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CastAssistantLogsProto::InternalSwap(CastAssistantLogsProto* other) {
  using std::swap;
  cast_assistant_event_.InternalSwap(&other->cast_assistant_event_);
  experiment_id_.InternalSwap(&other->experiment_id_);
  event_id_list_.InternalSwap(&other->event_id_list_);
  event_id_.Swap(&other->event_id_);
  request_id_.Swap(&other->request_id_);
  conversation_key_.Swap(&other->conversation_key_);
  backdrop_app_device_id_.Swap(&other->backdrop_app_device_id_);
  system_bundle_version_.Swap(&other->system_bundle_version_);
  swap(gaia_id_, other->gaia_id_);
  swap(client_id_, other->client_id_);
  swap(virtual_release_track_, other->virtual_release_track_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CastAssistantLogsProto::GetMetadata() const {
  protobuf_cast_5fassistant_5flogs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cast_5fassistant_5flogs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CastAssistantLogsProto

// optional string request_id = 5;
bool CastAssistantLogsProto::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CastAssistantLogsProto::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CastAssistantLogsProto::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CastAssistantLogsProto::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_id();
}
const ::std::string& CastAssistantLogsProto::request_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.request_id)
  return request_id_.GetNoArena();
}
void CastAssistantLogsProto::set_request_id(const ::std::string& value) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.request_id)
}
#if LANG_CXX11
void CastAssistantLogsProto::set_request_id(::std::string&& value) {
  set_has_request_id();
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.request_id)
}
#endif
void CastAssistantLogsProto::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.request_id)
}
void CastAssistantLogsProto::set_request_id(const char* value, size_t size) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.request_id)
}
::std::string* CastAssistantLogsProto::mutable_request_id() {
  set_has_request_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto::release_request_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.request_id)
  clear_has_request_id();
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    set_has_request_id();
  } else {
    clear_has_request_id();
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.request_id)
}

// optional string event_id = 1;
bool CastAssistantLogsProto::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CastAssistantLogsProto::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CastAssistantLogsProto::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CastAssistantLogsProto::clear_event_id() {
  event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_event_id();
}
const ::std::string& CastAssistantLogsProto::event_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.event_id)
  return event_id_.GetNoArena();
}
void CastAssistantLogsProto::set_event_id(const ::std::string& value) {
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id)
}
#if LANG_CXX11
void CastAssistantLogsProto::set_event_id(::std::string&& value) {
  set_has_event_id();
  event_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.event_id)
}
#endif
void CastAssistantLogsProto::set_event_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.event_id)
}
void CastAssistantLogsProto::set_event_id(const char* value, size_t size) {
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.event_id)
}
::std::string* CastAssistantLogsProto::mutable_event_id() {
  set_has_event_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.event_id)
  return event_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto::release_event_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.event_id)
  clear_has_event_id();
  return event_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto::set_allocated_event_id(::std::string* event_id) {
  if (event_id != NULL) {
    set_has_event_id();
  } else {
    clear_has_event_id();
  }
  event_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.event_id)
}

// optional string conversation_key = 6 [deprecated = true];
bool CastAssistantLogsProto::has_conversation_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CastAssistantLogsProto::set_has_conversation_key() {
  _has_bits_[0] |= 0x00000004u;
}
void CastAssistantLogsProto::clear_has_conversation_key() {
  _has_bits_[0] &= ~0x00000004u;
}
void CastAssistantLogsProto::clear_conversation_key() {
  conversation_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_conversation_key();
}
const ::std::string& CastAssistantLogsProto::conversation_key() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.conversation_key)
  return conversation_key_.GetNoArena();
}
void CastAssistantLogsProto::set_conversation_key(const ::std::string& value) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.conversation_key)
}
#if LANG_CXX11
void CastAssistantLogsProto::set_conversation_key(::std::string&& value) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.conversation_key)
}
#endif
void CastAssistantLogsProto::set_conversation_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.conversation_key)
}
void CastAssistantLogsProto::set_conversation_key(const char* value, size_t size) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.conversation_key)
}
::std::string* CastAssistantLogsProto::mutable_conversation_key() {
  set_has_conversation_key();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.conversation_key)
  return conversation_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto::release_conversation_key() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.conversation_key)
  clear_has_conversation_key();
  return conversation_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto::set_allocated_conversation_key(::std::string* conversation_key) {
  if (conversation_key != NULL) {
    set_has_conversation_key();
  } else {
    clear_has_conversation_key();
  }
  conversation_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conversation_key);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.conversation_key)
}

// optional int64 gaia_id = 3;
bool CastAssistantLogsProto::has_gaia_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CastAssistantLogsProto::set_has_gaia_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CastAssistantLogsProto::clear_has_gaia_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CastAssistantLogsProto::clear_gaia_id() {
  gaia_id_ = GOOGLE_LONGLONG(0);
  clear_has_gaia_id();
}
::google::protobuf::int64 CastAssistantLogsProto::gaia_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.gaia_id)
  return gaia_id_;
}
void CastAssistantLogsProto::set_gaia_id(::google::protobuf::int64 value) {
  set_has_gaia_id();
  gaia_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.gaia_id)
}

// optional fixed64 client_id = 4;
bool CastAssistantLogsProto::has_client_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CastAssistantLogsProto::set_has_client_id() {
  _has_bits_[0] |= 0x00000040u;
}
void CastAssistantLogsProto::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000040u;
}
void CastAssistantLogsProto::clear_client_id() {
  client_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_id();
}
::google::protobuf::uint64 CastAssistantLogsProto::client_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.client_id)
  return client_id_;
}
void CastAssistantLogsProto::set_client_id(::google::protobuf::uint64 value) {
  set_has_client_id();
  client_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.client_id)
}

// repeated string experiment_id = 8;
int CastAssistantLogsProto::experiment_id_size() const {
  return experiment_id_.size();
}
void CastAssistantLogsProto::clear_experiment_id() {
  experiment_id_.Clear();
}
const ::std::string& CastAssistantLogsProto::experiment_id(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Get(index);
}
::std::string* CastAssistantLogsProto::mutable_experiment_id(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Mutable(index);
}
void CastAssistantLogsProto::set_experiment_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.experiment_id)
  experiment_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CastAssistantLogsProto::set_experiment_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.experiment_id)
  experiment_id_.Mutable(index)->assign(std::move(value));
}
#endif
void CastAssistantLogsProto::set_experiment_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  experiment_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.experiment_id)
}
void CastAssistantLogsProto::set_experiment_id(int index, const char* value, size_t size) {
  experiment_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.experiment_id)
}
::std::string* CastAssistantLogsProto::add_experiment_id() {
  // @@protoc_insertion_point(field_add_mutable:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Add();
}
void CastAssistantLogsProto::add_experiment_id(const ::std::string& value) {
  experiment_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.experiment_id)
}
#if LANG_CXX11
void CastAssistantLogsProto::add_experiment_id(::std::string&& value) {
  experiment_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.experiment_id)
}
#endif
void CastAssistantLogsProto::add_experiment_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  experiment_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metrics.CastAssistantLogsProto.experiment_id)
}
void CastAssistantLogsProto::add_experiment_id(const char* value, size_t size) {
  experiment_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metrics.CastAssistantLogsProto.experiment_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CastAssistantLogsProto::experiment_id() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CastAssistantLogsProto::mutable_experiment_id() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.experiment_id)
  return &experiment_id_;
}

// optional fixed32 virtual_release_track = 9;
bool CastAssistantLogsProto::has_virtual_release_track() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CastAssistantLogsProto::set_has_virtual_release_track() {
  _has_bits_[0] |= 0x00000080u;
}
void CastAssistantLogsProto::clear_has_virtual_release_track() {
  _has_bits_[0] &= ~0x00000080u;
}
void CastAssistantLogsProto::clear_virtual_release_track() {
  virtual_release_track_ = 0u;
  clear_has_virtual_release_track();
}
::google::protobuf::uint32 CastAssistantLogsProto::virtual_release_track() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.virtual_release_track)
  return virtual_release_track_;
}
void CastAssistantLogsProto::set_virtual_release_track(::google::protobuf::uint32 value) {
  set_has_virtual_release_track();
  virtual_release_track_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.virtual_release_track)
}

// repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
int CastAssistantLogsProto::cast_assistant_event_size() const {
  return cast_assistant_event_.size();
}
void CastAssistantLogsProto::clear_cast_assistant_event() {
  cast_assistant_event_.Clear();
}
const ::metrics::CastAssistantLogsProto_CastAssistantEventProto& CastAssistantLogsProto::cast_assistant_event(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Get(index);
}
::metrics::CastAssistantLogsProto_CastAssistantEventProto* CastAssistantLogsProto::mutable_cast_assistant_event(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Mutable(index);
}
::metrics::CastAssistantLogsProto_CastAssistantEventProto* CastAssistantLogsProto::add_cast_assistant_event() {
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >*
CastAssistantLogsProto::mutable_cast_assistant_event() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.cast_assistant_event)
  return &cast_assistant_event_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >&
CastAssistantLogsProto::cast_assistant_event() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_;
}

// optional string backdrop_app_device_id = 10;
bool CastAssistantLogsProto::has_backdrop_app_device_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CastAssistantLogsProto::set_has_backdrop_app_device_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CastAssistantLogsProto::clear_has_backdrop_app_device_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CastAssistantLogsProto::clear_backdrop_app_device_id() {
  backdrop_app_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_backdrop_app_device_id();
}
const ::std::string& CastAssistantLogsProto::backdrop_app_device_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  return backdrop_app_device_id_.GetNoArena();
}
void CastAssistantLogsProto::set_backdrop_app_device_id(const ::std::string& value) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
#if LANG_CXX11
void CastAssistantLogsProto::set_backdrop_app_device_id(::std::string&& value) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
#endif
void CastAssistantLogsProto::set_backdrop_app_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
void CastAssistantLogsProto::set_backdrop_app_device_id(const char* value, size_t size) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
::std::string* CastAssistantLogsProto::mutable_backdrop_app_device_id() {
  set_has_backdrop_app_device_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  return backdrop_app_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto::release_backdrop_app_device_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  clear_has_backdrop_app_device_id();
  return backdrop_app_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto::set_allocated_backdrop_app_device_id(::std::string* backdrop_app_device_id) {
  if (backdrop_app_device_id != NULL) {
    set_has_backdrop_app_device_id();
  } else {
    clear_has_backdrop_app_device_id();
  }
  backdrop_app_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), backdrop_app_device_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}

// repeated string event_id_list = 12;
int CastAssistantLogsProto::event_id_list_size() const {
  return event_id_list_.size();
}
void CastAssistantLogsProto::clear_event_id_list() {
  event_id_list_.Clear();
}
const ::std::string& CastAssistantLogsProto::event_id_list(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Get(index);
}
::std::string* CastAssistantLogsProto::mutable_event_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Mutable(index);
}
void CastAssistantLogsProto::set_event_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id_list)
  event_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CastAssistantLogsProto::set_event_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id_list)
  event_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void CastAssistantLogsProto::set_event_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  event_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.event_id_list)
}
void CastAssistantLogsProto::set_event_id_list(int index, const char* value, size_t size) {
  event_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.event_id_list)
}
::std::string* CastAssistantLogsProto::add_event_id_list() {
  // @@protoc_insertion_point(field_add_mutable:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Add();
}
void CastAssistantLogsProto::add_event_id_list(const ::std::string& value) {
  event_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.event_id_list)
}
#if LANG_CXX11
void CastAssistantLogsProto::add_event_id_list(::std::string&& value) {
  event_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.event_id_list)
}
#endif
void CastAssistantLogsProto::add_event_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  event_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metrics.CastAssistantLogsProto.event_id_list)
}
void CastAssistantLogsProto::add_event_id_list(const char* value, size_t size) {
  event_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metrics.CastAssistantLogsProto.event_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CastAssistantLogsProto::event_id_list() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CastAssistantLogsProto::mutable_event_id_list() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.event_id_list)
  return &event_id_list_;
}

// optional string system_bundle_version = 13;
bool CastAssistantLogsProto::has_system_bundle_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CastAssistantLogsProto::set_has_system_bundle_version() {
  _has_bits_[0] |= 0x00000010u;
}
void CastAssistantLogsProto::clear_has_system_bundle_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void CastAssistantLogsProto::clear_system_bundle_version() {
  system_bundle_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_system_bundle_version();
}
const ::std::string& CastAssistantLogsProto::system_bundle_version() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.system_bundle_version)
  return system_bundle_version_.GetNoArena();
}
void CastAssistantLogsProto::set_system_bundle_version(const ::std::string& value) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.system_bundle_version)
}
#if LANG_CXX11
void CastAssistantLogsProto::set_system_bundle_version(::std::string&& value) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.system_bundle_version)
}
#endif
void CastAssistantLogsProto::set_system_bundle_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.system_bundle_version)
}
void CastAssistantLogsProto::set_system_bundle_version(const char* value, size_t size) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.system_bundle_version)
}
::std::string* CastAssistantLogsProto::mutable_system_bundle_version() {
  set_has_system_bundle_version();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.system_bundle_version)
  return system_bundle_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CastAssistantLogsProto::release_system_bundle_version() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.system_bundle_version)
  clear_has_system_bundle_version();
  return system_bundle_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CastAssistantLogsProto::set_allocated_system_bundle_version(::std::string* system_bundle_version) {
  if (system_bundle_version != NULL) {
    set_has_system_bundle_version();
  } else {
    clear_has_system_bundle_version();
  }
  system_bundle_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_bundle_version);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.system_bundle_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
