// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cast_assistant_logs.proto

#ifndef PROTOBUF_cast_5fassistant_5flogs_2eproto__INCLUDED
#define PROTOBUF_cast_5fassistant_5flogs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace metrics {
class CastAssistantLogsProto;
class CastAssistantLogsProtoDefaultTypeInternal;
extern CastAssistantLogsProtoDefaultTypeInternal _CastAssistantLogsProto_default_instance_;
class CastAssistantLogsProto_CastAssistantEventProto;
class CastAssistantLogsProto_CastAssistantEventProtoDefaultTypeInternal;
extern CastAssistantLogsProto_CastAssistantEventProtoDefaultTypeInternal _CastAssistantLogsProto_CastAssistantEventProto_default_instance_;
class CastAssistantLogsProto_CastAssistantEventProto_Metadata;
class CastAssistantLogsProto_CastAssistantEventProto_MetadataDefaultTypeInternal;
extern CastAssistantLogsProto_CastAssistantEventProto_MetadataDefaultTypeInternal _CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_;
}  // namespace metrics

namespace metrics {

namespace protobuf_cast_5fassistant_5flogs_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cast_5fassistant_5flogs_2eproto

// ===================================================================

class CastAssistantLogsProto_CastAssistantEventProto_Metadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata) */ {
 public:
  CastAssistantLogsProto_CastAssistantEventProto_Metadata();
  virtual ~CastAssistantLogsProto_CastAssistantEventProto_Metadata();

  CastAssistantLogsProto_CastAssistantEventProto_Metadata(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from);

  inline CastAssistantLogsProto_CastAssistantEventProto_Metadata& operator=(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CastAssistantLogsProto_CastAssistantEventProto_Metadata(CastAssistantLogsProto_CastAssistantEventProto_Metadata&& from) noexcept
    : CastAssistantLogsProto_CastAssistantEventProto_Metadata() {
    *this = ::std::move(from);
  }

  inline CastAssistantLogsProto_CastAssistantEventProto_Metadata& operator=(CastAssistantLogsProto_CastAssistantEventProto_Metadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastAssistantLogsProto_CastAssistantEventProto_Metadata& default_instance();

  static inline const CastAssistantLogsProto_CastAssistantEventProto_Metadata* internal_default_instance() {
    return reinterpret_cast<const CastAssistantLogsProto_CastAssistantEventProto_Metadata*>(
               &_CastAssistantLogsProto_CastAssistantEventProto_Metadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CastAssistantLogsProto_CastAssistantEventProto_Metadata* other);
  friend void swap(CastAssistantLogsProto_CastAssistantEventProto_Metadata& a, CastAssistantLogsProto_CastAssistantEventProto_Metadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CastAssistantLogsProto_CastAssistantEventProto_Metadata* New() const PROTOBUF_FINAL { return New(NULL); }

  CastAssistantLogsProto_CastAssistantEventProto_Metadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from);
  void MergeFrom(const CastAssistantLogsProto_CastAssistantEventProto_Metadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CastAssistantLogsProto_CastAssistantEventProto_Metadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 name_hash = 1;
  bool has_name_hash() const;
  void clear_name_hash();
  static const int kNameHashFieldNumber = 1;
  ::google::protobuf::uint64 name_hash() const;
  void set_name_hash(::google::protobuf::uint64 value);

  // optional int64 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata)
 private:
  void set_has_name_hash();
  void clear_has_name_hash();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 name_hash_;
  ::google::protobuf::int64 value_;
  friend struct protobuf_cast_5fassistant_5flogs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CastAssistantLogsProto_CastAssistantEventProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metrics.CastAssistantLogsProto.CastAssistantEventProto) */ {
 public:
  CastAssistantLogsProto_CastAssistantEventProto();
  virtual ~CastAssistantLogsProto_CastAssistantEventProto();

  CastAssistantLogsProto_CastAssistantEventProto(const CastAssistantLogsProto_CastAssistantEventProto& from);

  inline CastAssistantLogsProto_CastAssistantEventProto& operator=(const CastAssistantLogsProto_CastAssistantEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CastAssistantLogsProto_CastAssistantEventProto(CastAssistantLogsProto_CastAssistantEventProto&& from) noexcept
    : CastAssistantLogsProto_CastAssistantEventProto() {
    *this = ::std::move(from);
  }

  inline CastAssistantLogsProto_CastAssistantEventProto& operator=(CastAssistantLogsProto_CastAssistantEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastAssistantLogsProto_CastAssistantEventProto& default_instance();

  static inline const CastAssistantLogsProto_CastAssistantEventProto* internal_default_instance() {
    return reinterpret_cast<const CastAssistantLogsProto_CastAssistantEventProto*>(
               &_CastAssistantLogsProto_CastAssistantEventProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CastAssistantLogsProto_CastAssistantEventProto* other);
  friend void swap(CastAssistantLogsProto_CastAssistantEventProto& a, CastAssistantLogsProto_CastAssistantEventProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CastAssistantLogsProto_CastAssistantEventProto* New() const PROTOBUF_FINAL { return New(NULL); }

  CastAssistantLogsProto_CastAssistantEventProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CastAssistantLogsProto_CastAssistantEventProto& from);
  void MergeFrom(const CastAssistantLogsProto_CastAssistantEventProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CastAssistantLogsProto_CastAssistantEventProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CastAssistantLogsProto_CastAssistantEventProto_Metadata Metadata;

  // accessors -------------------------------------------------------

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata& metadata(int index) const;
  ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* mutable_metadata(int index);
  ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >&
      metadata() const;

  // optional string hotword_model_id = 6;
  bool has_hotword_model_id() const;
  void clear_hotword_model_id();
  static const int kHotwordModelIdFieldNumber = 6;
  const ::std::string& hotword_model_id() const;
  void set_hotword_model_id(const ::std::string& value);
  #if LANG_CXX11
  void set_hotword_model_id(::std::string&& value);
  #endif
  void set_hotword_model_id(const char* value);
  void set_hotword_model_id(const char* value, size_t size);
  ::std::string* mutable_hotword_model_id();
  ::std::string* release_hotword_model_id();
  void set_allocated_hotword_model_id(::std::string* hotword_model_id);

  // optional fixed64 name_hash = 1;
  bool has_name_hash() const;
  void clear_name_hash();
  static const int kNameHashFieldNumber = 1;
  ::google::protobuf::uint64 name_hash() const;
  void set_name_hash(::google::protobuf::uint64 value);

  // optional int64 time_msec = 2;
  bool has_time_msec() const;
  void clear_time_msec();
  static const int kTimeMsecFieldNumber = 2;
  ::google::protobuf::int64 time_msec() const;
  void set_time_msec(::google::protobuf::int64 value);

  // optional int64 value = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_value() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_value();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kValueFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int64 value() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_value(::google::protobuf::int64 value);

  // optional fixed64 duo_core_version = 5;
  bool has_duo_core_version() const;
  void clear_duo_core_version();
  static const int kDuoCoreVersionFieldNumber = 5;
  ::google::protobuf::uint64 duo_core_version() const;
  void set_duo_core_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:metrics.CastAssistantLogsProto.CastAssistantEventProto)
 private:
  void set_has_name_hash();
  void clear_has_name_hash();
  void set_has_time_msec();
  void clear_has_time_msec();
  void set_has_value();
  void clear_has_value();
  void set_has_duo_core_version();
  void clear_has_duo_core_version();
  void set_has_hotword_model_id();
  void clear_has_hotword_model_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata > metadata_;
  ::google::protobuf::internal::ArenaStringPtr hotword_model_id_;
  ::google::protobuf::uint64 name_hash_;
  ::google::protobuf::int64 time_msec_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::uint64 duo_core_version_;
  friend struct protobuf_cast_5fassistant_5flogs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CastAssistantLogsProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metrics.CastAssistantLogsProto) */ {
 public:
  CastAssistantLogsProto();
  virtual ~CastAssistantLogsProto();

  CastAssistantLogsProto(const CastAssistantLogsProto& from);

  inline CastAssistantLogsProto& operator=(const CastAssistantLogsProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CastAssistantLogsProto(CastAssistantLogsProto&& from) noexcept
    : CastAssistantLogsProto() {
    *this = ::std::move(from);
  }

  inline CastAssistantLogsProto& operator=(CastAssistantLogsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastAssistantLogsProto& default_instance();

  static inline const CastAssistantLogsProto* internal_default_instance() {
    return reinterpret_cast<const CastAssistantLogsProto*>(
               &_CastAssistantLogsProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CastAssistantLogsProto* other);
  friend void swap(CastAssistantLogsProto& a, CastAssistantLogsProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CastAssistantLogsProto* New() const PROTOBUF_FINAL { return New(NULL); }

  CastAssistantLogsProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CastAssistantLogsProto& from);
  void MergeFrom(const CastAssistantLogsProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CastAssistantLogsProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CastAssistantLogsProto_CastAssistantEventProto CastAssistantEventProto;

  // accessors -------------------------------------------------------

  // repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
  int cast_assistant_event_size() const;
  void clear_cast_assistant_event();
  static const int kCastAssistantEventFieldNumber = 2;
  const ::metrics::CastAssistantLogsProto_CastAssistantEventProto& cast_assistant_event(int index) const;
  ::metrics::CastAssistantLogsProto_CastAssistantEventProto* mutable_cast_assistant_event(int index);
  ::metrics::CastAssistantLogsProto_CastAssistantEventProto* add_cast_assistant_event();
  ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >*
      mutable_cast_assistant_event();
  const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >&
      cast_assistant_event() const;

  // repeated string experiment_id = 8;
  int experiment_id_size() const;
  void clear_experiment_id();
  static const int kExperimentIdFieldNumber = 8;
  const ::std::string& experiment_id(int index) const;
  ::std::string* mutable_experiment_id(int index);
  void set_experiment_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_experiment_id(int index, ::std::string&& value);
  #endif
  void set_experiment_id(int index, const char* value);
  void set_experiment_id(int index, const char* value, size_t size);
  ::std::string* add_experiment_id();
  void add_experiment_id(const ::std::string& value);
  #if LANG_CXX11
  void add_experiment_id(::std::string&& value);
  #endif
  void add_experiment_id(const char* value);
  void add_experiment_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& experiment_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_experiment_id();

  // repeated string event_id_list = 12;
  int event_id_list_size() const;
  void clear_event_id_list();
  static const int kEventIdListFieldNumber = 12;
  const ::std::string& event_id_list(int index) const;
  ::std::string* mutable_event_id_list(int index);
  void set_event_id_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_event_id_list(int index, ::std::string&& value);
  #endif
  void set_event_id_list(int index, const char* value);
  void set_event_id_list(int index, const char* value, size_t size);
  ::std::string* add_event_id_list();
  void add_event_id_list(const ::std::string& value);
  #if LANG_CXX11
  void add_event_id_list(::std::string&& value);
  #endif
  void add_event_id_list(const char* value);
  void add_event_id_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& event_id_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_event_id_list();

  // optional string event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  const ::std::string& event_id() const;
  void set_event_id(const ::std::string& value);
  #if LANG_CXX11
  void set_event_id(::std::string&& value);
  #endif
  void set_event_id(const char* value);
  void set_event_id(const char* value, size_t size);
  ::std::string* mutable_event_id();
  ::std::string* release_event_id();
  void set_allocated_event_id(::std::string* event_id);

  // optional string request_id = 5;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional string conversation_key = 6 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_conversation_key() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_conversation_key();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kConversationKeyFieldNumber = 6;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& conversation_key() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_conversation_key(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_conversation_key(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_conversation_key(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_conversation_key(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_conversation_key();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_conversation_key();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_conversation_key(::std::string* conversation_key);

  // optional string backdrop_app_device_id = 10;
  bool has_backdrop_app_device_id() const;
  void clear_backdrop_app_device_id();
  static const int kBackdropAppDeviceIdFieldNumber = 10;
  const ::std::string& backdrop_app_device_id() const;
  void set_backdrop_app_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_backdrop_app_device_id(::std::string&& value);
  #endif
  void set_backdrop_app_device_id(const char* value);
  void set_backdrop_app_device_id(const char* value, size_t size);
  ::std::string* mutable_backdrop_app_device_id();
  ::std::string* release_backdrop_app_device_id();
  void set_allocated_backdrop_app_device_id(::std::string* backdrop_app_device_id);

  // optional string system_bundle_version = 13;
  bool has_system_bundle_version() const;
  void clear_system_bundle_version();
  static const int kSystemBundleVersionFieldNumber = 13;
  const ::std::string& system_bundle_version() const;
  void set_system_bundle_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_bundle_version(::std::string&& value);
  #endif
  void set_system_bundle_version(const char* value);
  void set_system_bundle_version(const char* value, size_t size);
  ::std::string* mutable_system_bundle_version();
  ::std::string* release_system_bundle_version();
  void set_allocated_system_bundle_version(::std::string* system_bundle_version);

  // optional int64 gaia_id = 3;
  bool has_gaia_id() const;
  void clear_gaia_id();
  static const int kGaiaIdFieldNumber = 3;
  ::google::protobuf::int64 gaia_id() const;
  void set_gaia_id(::google::protobuf::int64 value);

  // optional fixed64 client_id = 4;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 4;
  ::google::protobuf::uint64 client_id() const;
  void set_client_id(::google::protobuf::uint64 value);

  // optional fixed32 virtual_release_track = 9;
  bool has_virtual_release_track() const;
  void clear_virtual_release_track();
  static const int kVirtualReleaseTrackFieldNumber = 9;
  ::google::protobuf::uint32 virtual_release_track() const;
  void set_virtual_release_track(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:metrics.CastAssistantLogsProto)
 private:
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_conversation_key();
  void clear_has_conversation_key();
  void set_has_gaia_id();
  void clear_has_gaia_id();
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_virtual_release_track();
  void clear_has_virtual_release_track();
  void set_has_backdrop_app_device_id();
  void clear_has_backdrop_app_device_id();
  void set_has_system_bundle_version();
  void clear_has_system_bundle_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto > cast_assistant_event_;
  ::google::protobuf::RepeatedPtrField< ::std::string> experiment_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> event_id_list_;
  ::google::protobuf::internal::ArenaStringPtr event_id_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr conversation_key_;
  ::google::protobuf::internal::ArenaStringPtr backdrop_app_device_id_;
  ::google::protobuf::internal::ArenaStringPtr system_bundle_version_;
  ::google::protobuf::int64 gaia_id_;
  ::google::protobuf::uint64 client_id_;
  ::google::protobuf::uint32 virtual_release_track_;
  friend struct protobuf_cast_5fassistant_5flogs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CastAssistantLogsProto_CastAssistantEventProto_Metadata

// optional fixed64 name_hash = 1;
inline bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_has_name_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
inline ::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto_Metadata::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.name_hash)
  return name_hash_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.name_hash)
}

// optional int64 value = 2;
inline bool CastAssistantLogsProto_CastAssistantEventProto_Metadata::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto_Metadata::value() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.value)
  return value_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto_Metadata::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata.value)
}

// -------------------------------------------------------------------

// CastAssistantLogsProto_CastAssistantEventProto

// optional fixed64 name_hash = 1;
inline bool CastAssistantLogsProto_CastAssistantEventProto::has_name_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_has_name_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
inline ::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.name_hash)
  return name_hash_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.name_hash)
}

// optional int64 time_msec = 2;
inline bool CastAssistantLogsProto_CastAssistantEventProto::has_time_msec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_has_time_msec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_has_time_msec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_time_msec() {
  time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_time_msec();
}
inline ::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto::time_msec() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.time_msec)
  return time_msec_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_time_msec(::google::protobuf::int64 value) {
  set_has_time_msec();
  time_msec_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.time_msec)
}

// optional int64 value = 3 [deprecated = true];
inline bool CastAssistantLogsProto_CastAssistantEventProto::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 CastAssistantLogsProto_CastAssistantEventProto::value() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.value)
  return value_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.value)
}

// repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto.Metadata metadata = 4;
inline int CastAssistantLogsProto_CastAssistantEventProto::metadata_size() const {
  return metadata_.size();
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_metadata() {
  metadata_.Clear();
}
inline const ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata& CastAssistantLogsProto_CastAssistantEventProto::metadata(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Get(index);
}
inline ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* CastAssistantLogsProto_CastAssistantEventProto::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Mutable(index);
}
inline ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata* CastAssistantLogsProto_CastAssistantEventProto::add_metadata() {
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >*
CastAssistantLogsProto_CastAssistantEventProto::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto_Metadata >&
CastAssistantLogsProto_CastAssistantEventProto::metadata() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.CastAssistantEventProto.metadata)
  return metadata_;
}

// optional fixed64 duo_core_version = 5;
inline bool CastAssistantLogsProto_CastAssistantEventProto::has_duo_core_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_has_duo_core_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_has_duo_core_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_duo_core_version() {
  duo_core_version_ = GOOGLE_ULONGLONG(0);
  clear_has_duo_core_version();
}
inline ::google::protobuf::uint64 CastAssistantLogsProto_CastAssistantEventProto::duo_core_version() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.duo_core_version)
  return duo_core_version_;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_duo_core_version(::google::protobuf::uint64 value) {
  set_has_duo_core_version();
  duo_core_version_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.duo_core_version)
}

// optional string hotword_model_id = 6;
inline bool CastAssistantLogsProto_CastAssistantEventProto::has_hotword_model_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_has_hotword_model_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_has_hotword_model_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastAssistantLogsProto_CastAssistantEventProto::clear_hotword_model_id() {
  hotword_model_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hotword_model_id();
}
inline const ::std::string& CastAssistantLogsProto_CastAssistantEventProto::hotword_model_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  return hotword_model_id_.GetNoArena();
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const ::std::string& value) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
#if LANG_CXX11
inline void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(::std::string&& value) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
#endif
inline void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_hotword_model_id(const char* value, size_t size) {
  set_has_hotword_model_id();
  hotword_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}
inline ::std::string* CastAssistantLogsProto_CastAssistantEventProto::mutable_hotword_model_id() {
  set_has_hotword_model_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  return hotword_model_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto_CastAssistantEventProto::release_hotword_model_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
  clear_has_hotword_model_id();
  return hotword_model_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto_CastAssistantEventProto::set_allocated_hotword_model_id(::std::string* hotword_model_id) {
  if (hotword_model_id != NULL) {
    set_has_hotword_model_id();
  } else {
    clear_has_hotword_model_id();
  }
  hotword_model_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hotword_model_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.CastAssistantEventProto.hotword_model_id)
}

// -------------------------------------------------------------------

// CastAssistantLogsProto

// optional string request_id = 5;
inline bool CastAssistantLogsProto::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CastAssistantLogsProto::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CastAssistantLogsProto::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CastAssistantLogsProto::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_id();
}
inline const ::std::string& CastAssistantLogsProto::request_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.request_id)
  return request_id_.GetNoArena();
}
inline void CastAssistantLogsProto::set_request_id(const ::std::string& value) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.request_id)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_request_id(::std::string&& value) {
  set_has_request_id();
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.request_id)
}
#endif
inline void CastAssistantLogsProto::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.request_id)
}
inline void CastAssistantLogsProto::set_request_id(const char* value, size_t size) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.request_id)
}
inline ::std::string* CastAssistantLogsProto::mutable_request_id() {
  set_has_request_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto::release_request_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.request_id)
  clear_has_request_id();
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    set_has_request_id();
  } else {
    clear_has_request_id();
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.request_id)
}

// optional string event_id = 1;
inline bool CastAssistantLogsProto::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CastAssistantLogsProto::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CastAssistantLogsProto::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CastAssistantLogsProto::clear_event_id() {
  event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_event_id();
}
inline const ::std::string& CastAssistantLogsProto::event_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.event_id)
  return event_id_.GetNoArena();
}
inline void CastAssistantLogsProto::set_event_id(const ::std::string& value) {
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_event_id(::std::string&& value) {
  set_has_event_id();
  event_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.event_id)
}
#endif
inline void CastAssistantLogsProto::set_event_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.event_id)
}
inline void CastAssistantLogsProto::set_event_id(const char* value, size_t size) {
  set_has_event_id();
  event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.event_id)
}
inline ::std::string* CastAssistantLogsProto::mutable_event_id() {
  set_has_event_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.event_id)
  return event_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto::release_event_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.event_id)
  clear_has_event_id();
  return event_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto::set_allocated_event_id(::std::string* event_id) {
  if (event_id != NULL) {
    set_has_event_id();
  } else {
    clear_has_event_id();
  }
  event_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.event_id)
}

// optional string conversation_key = 6 [deprecated = true];
inline bool CastAssistantLogsProto::has_conversation_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CastAssistantLogsProto::set_has_conversation_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CastAssistantLogsProto::clear_has_conversation_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CastAssistantLogsProto::clear_conversation_key() {
  conversation_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_conversation_key();
}
inline const ::std::string& CastAssistantLogsProto::conversation_key() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.conversation_key)
  return conversation_key_.GetNoArena();
}
inline void CastAssistantLogsProto::set_conversation_key(const ::std::string& value) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.conversation_key)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_conversation_key(::std::string&& value) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.conversation_key)
}
#endif
inline void CastAssistantLogsProto::set_conversation_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.conversation_key)
}
inline void CastAssistantLogsProto::set_conversation_key(const char* value, size_t size) {
  set_has_conversation_key();
  conversation_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.conversation_key)
}
inline ::std::string* CastAssistantLogsProto::mutable_conversation_key() {
  set_has_conversation_key();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.conversation_key)
  return conversation_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto::release_conversation_key() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.conversation_key)
  clear_has_conversation_key();
  return conversation_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto::set_allocated_conversation_key(::std::string* conversation_key) {
  if (conversation_key != NULL) {
    set_has_conversation_key();
  } else {
    clear_has_conversation_key();
  }
  conversation_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conversation_key);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.conversation_key)
}

// optional int64 gaia_id = 3;
inline bool CastAssistantLogsProto::has_gaia_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CastAssistantLogsProto::set_has_gaia_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CastAssistantLogsProto::clear_has_gaia_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CastAssistantLogsProto::clear_gaia_id() {
  gaia_id_ = GOOGLE_LONGLONG(0);
  clear_has_gaia_id();
}
inline ::google::protobuf::int64 CastAssistantLogsProto::gaia_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.gaia_id)
  return gaia_id_;
}
inline void CastAssistantLogsProto::set_gaia_id(::google::protobuf::int64 value) {
  set_has_gaia_id();
  gaia_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.gaia_id)
}

// optional fixed64 client_id = 4;
inline bool CastAssistantLogsProto::has_client_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CastAssistantLogsProto::set_has_client_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CastAssistantLogsProto::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CastAssistantLogsProto::clear_client_id() {
  client_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_id();
}
inline ::google::protobuf::uint64 CastAssistantLogsProto::client_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.client_id)
  return client_id_;
}
inline void CastAssistantLogsProto::set_client_id(::google::protobuf::uint64 value) {
  set_has_client_id();
  client_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.client_id)
}

// repeated string experiment_id = 8;
inline int CastAssistantLogsProto::experiment_id_size() const {
  return experiment_id_.size();
}
inline void CastAssistantLogsProto::clear_experiment_id() {
  experiment_id_.Clear();
}
inline const ::std::string& CastAssistantLogsProto::experiment_id(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Get(index);
}
inline ::std::string* CastAssistantLogsProto::mutable_experiment_id(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Mutable(index);
}
inline void CastAssistantLogsProto::set_experiment_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.experiment_id)
  experiment_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_experiment_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.experiment_id)
  experiment_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CastAssistantLogsProto::set_experiment_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  experiment_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.experiment_id)
}
inline void CastAssistantLogsProto::set_experiment_id(int index, const char* value, size_t size) {
  experiment_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.experiment_id)
}
inline ::std::string* CastAssistantLogsProto::add_experiment_id() {
  // @@protoc_insertion_point(field_add_mutable:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_.Add();
}
inline void CastAssistantLogsProto::add_experiment_id(const ::std::string& value) {
  experiment_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.experiment_id)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::add_experiment_id(::std::string&& value) {
  experiment_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.experiment_id)
}
#endif
inline void CastAssistantLogsProto::add_experiment_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  experiment_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metrics.CastAssistantLogsProto.experiment_id)
}
inline void CastAssistantLogsProto::add_experiment_id(const char* value, size_t size) {
  experiment_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metrics.CastAssistantLogsProto.experiment_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CastAssistantLogsProto::experiment_id() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.experiment_id)
  return experiment_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CastAssistantLogsProto::mutable_experiment_id() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.experiment_id)
  return &experiment_id_;
}

// optional fixed32 virtual_release_track = 9;
inline bool CastAssistantLogsProto::has_virtual_release_track() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CastAssistantLogsProto::set_has_virtual_release_track() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CastAssistantLogsProto::clear_has_virtual_release_track() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CastAssistantLogsProto::clear_virtual_release_track() {
  virtual_release_track_ = 0u;
  clear_has_virtual_release_track();
}
inline ::google::protobuf::uint32 CastAssistantLogsProto::virtual_release_track() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.virtual_release_track)
  return virtual_release_track_;
}
inline void CastAssistantLogsProto::set_virtual_release_track(::google::protobuf::uint32 value) {
  set_has_virtual_release_track();
  virtual_release_track_ = value;
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.virtual_release_track)
}

// repeated .metrics.CastAssistantLogsProto.CastAssistantEventProto cast_assistant_event = 2;
inline int CastAssistantLogsProto::cast_assistant_event_size() const {
  return cast_assistant_event_.size();
}
inline void CastAssistantLogsProto::clear_cast_assistant_event() {
  cast_assistant_event_.Clear();
}
inline const ::metrics::CastAssistantLogsProto_CastAssistantEventProto& CastAssistantLogsProto::cast_assistant_event(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Get(index);
}
inline ::metrics::CastAssistantLogsProto_CastAssistantEventProto* CastAssistantLogsProto::mutable_cast_assistant_event(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Mutable(index);
}
inline ::metrics::CastAssistantLogsProto_CastAssistantEventProto* CastAssistantLogsProto::add_cast_assistant_event() {
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >*
CastAssistantLogsProto::mutable_cast_assistant_event() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.cast_assistant_event)
  return &cast_assistant_event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metrics::CastAssistantLogsProto_CastAssistantEventProto >&
CastAssistantLogsProto::cast_assistant_event() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.cast_assistant_event)
  return cast_assistant_event_;
}

// optional string backdrop_app_device_id = 10;
inline bool CastAssistantLogsProto::has_backdrop_app_device_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CastAssistantLogsProto::set_has_backdrop_app_device_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CastAssistantLogsProto::clear_has_backdrop_app_device_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CastAssistantLogsProto::clear_backdrop_app_device_id() {
  backdrop_app_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_backdrop_app_device_id();
}
inline const ::std::string& CastAssistantLogsProto::backdrop_app_device_id() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  return backdrop_app_device_id_.GetNoArena();
}
inline void CastAssistantLogsProto::set_backdrop_app_device_id(const ::std::string& value) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_backdrop_app_device_id(::std::string&& value) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
#endif
inline void CastAssistantLogsProto::set_backdrop_app_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
inline void CastAssistantLogsProto::set_backdrop_app_device_id(const char* value, size_t size) {
  set_has_backdrop_app_device_id();
  backdrop_app_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}
inline ::std::string* CastAssistantLogsProto::mutable_backdrop_app_device_id() {
  set_has_backdrop_app_device_id();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  return backdrop_app_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto::release_backdrop_app_device_id() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.backdrop_app_device_id)
  clear_has_backdrop_app_device_id();
  return backdrop_app_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto::set_allocated_backdrop_app_device_id(::std::string* backdrop_app_device_id) {
  if (backdrop_app_device_id != NULL) {
    set_has_backdrop_app_device_id();
  } else {
    clear_has_backdrop_app_device_id();
  }
  backdrop_app_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), backdrop_app_device_id);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.backdrop_app_device_id)
}

// repeated string event_id_list = 12;
inline int CastAssistantLogsProto::event_id_list_size() const {
  return event_id_list_.size();
}
inline void CastAssistantLogsProto::clear_event_id_list() {
  event_id_list_.Clear();
}
inline const ::std::string& CastAssistantLogsProto::event_id_list(int index) const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Get(index);
}
inline ::std::string* CastAssistantLogsProto::mutable_event_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Mutable(index);
}
inline void CastAssistantLogsProto::set_event_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id_list)
  event_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_event_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.event_id_list)
  event_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CastAssistantLogsProto::set_event_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  event_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.event_id_list)
}
inline void CastAssistantLogsProto::set_event_id_list(int index, const char* value, size_t size) {
  event_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.event_id_list)
}
inline ::std::string* CastAssistantLogsProto::add_event_id_list() {
  // @@protoc_insertion_point(field_add_mutable:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_.Add();
}
inline void CastAssistantLogsProto::add_event_id_list(const ::std::string& value) {
  event_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.event_id_list)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::add_event_id_list(::std::string&& value) {
  event_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metrics.CastAssistantLogsProto.event_id_list)
}
#endif
inline void CastAssistantLogsProto::add_event_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  event_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metrics.CastAssistantLogsProto.event_id_list)
}
inline void CastAssistantLogsProto::add_event_id_list(const char* value, size_t size) {
  event_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metrics.CastAssistantLogsProto.event_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CastAssistantLogsProto::event_id_list() const {
  // @@protoc_insertion_point(field_list:metrics.CastAssistantLogsProto.event_id_list)
  return event_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CastAssistantLogsProto::mutable_event_id_list() {
  // @@protoc_insertion_point(field_mutable_list:metrics.CastAssistantLogsProto.event_id_list)
  return &event_id_list_;
}

// optional string system_bundle_version = 13;
inline bool CastAssistantLogsProto::has_system_bundle_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CastAssistantLogsProto::set_has_system_bundle_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CastAssistantLogsProto::clear_has_system_bundle_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CastAssistantLogsProto::clear_system_bundle_version() {
  system_bundle_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_system_bundle_version();
}
inline const ::std::string& CastAssistantLogsProto::system_bundle_version() const {
  // @@protoc_insertion_point(field_get:metrics.CastAssistantLogsProto.system_bundle_version)
  return system_bundle_version_.GetNoArena();
}
inline void CastAssistantLogsProto::set_system_bundle_version(const ::std::string& value) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.CastAssistantLogsProto.system_bundle_version)
}
#if LANG_CXX11
inline void CastAssistantLogsProto::set_system_bundle_version(::std::string&& value) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.CastAssistantLogsProto.system_bundle_version)
}
#endif
inline void CastAssistantLogsProto::set_system_bundle_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.CastAssistantLogsProto.system_bundle_version)
}
inline void CastAssistantLogsProto::set_system_bundle_version(const char* value, size_t size) {
  set_has_system_bundle_version();
  system_bundle_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.CastAssistantLogsProto.system_bundle_version)
}
inline ::std::string* CastAssistantLogsProto::mutable_system_bundle_version() {
  set_has_system_bundle_version();
  // @@protoc_insertion_point(field_mutable:metrics.CastAssistantLogsProto.system_bundle_version)
  return system_bundle_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CastAssistantLogsProto::release_system_bundle_version() {
  // @@protoc_insertion_point(field_release:metrics.CastAssistantLogsProto.system_bundle_version)
  clear_has_system_bundle_version();
  return system_bundle_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CastAssistantLogsProto::set_allocated_system_bundle_version(::std::string* system_bundle_version) {
  if (system_bundle_version != NULL) {
    set_has_system_bundle_version();
  } else {
    clear_has_system_bundle_version();
  }
  system_bundle_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_bundle_version);
  // @@protoc_insertion_point(field_set_allocated:metrics.CastAssistantLogsProto.system_bundle_version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace metrics

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cast_5fassistant_5flogs_2eproto__INCLUDED
