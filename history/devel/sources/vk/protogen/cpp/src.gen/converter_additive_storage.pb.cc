// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: converter_additive_storage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "converter_additive_storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace converterd {
namespace pb {
class DeclensionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeclensionInfo>
     _instance;
} _DeclensionInfo_default_instance_;
class CurrencySourceInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CurrencySourceInfo>
     _instance;
} _CurrencySourceInfo_default_instance_;
class CurrencyInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CurrencyInfo>
     _instance;
} _CurrencyInfo_default_instance_;
class CurrencyConvertionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CurrencyConvertionInfo>
     _instance;
} _CurrencyConvertionInfo_default_instance_;
class MeasureTypeInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MeasureTypeInfo>
     _instance;
} _MeasureTypeInfo_default_instance_;
class MeasureInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MeasureInfo>
     _instance;
} _MeasureInfo_default_instance_;
class MeasureConvertionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MeasureConvertionInfo>
     _instance;
} _MeasureConvertionInfo_default_instance_;

namespace protobuf_converter_5fadditive_5fstorage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, first_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, third_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeclensionInfo, fourth_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencySourceInfo, region_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyInfo, declensions_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, to_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, a_coeff_numerator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, a_coeff_denominator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, source_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CurrencyConvertionInfo, is_live_),
  0,
  1,
  2,
  3,
  6,
  4,
  5,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureTypeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureTypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureTypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureTypeInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureTypeInfo, base_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureInfo, declensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureInfo, is_optional_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, to_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, a_coeff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeasureConvertionInfo, b_coeff_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(DeclensionInfo)},
  { 13, 22, sizeof(CurrencySourceInfo)},
  { 26, 33, sizeof(CurrencyInfo)},
  { 35, 48, sizeof(CurrencyConvertionInfo)},
  { 56, 64, sizeof(MeasureTypeInfo)},
  { 67, 75, sizeof(MeasureInfo)},
  { 78, 87, sizeof(MeasureConvertionInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeclensionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CurrencySourceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CurrencyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CurrencyConvertionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MeasureTypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MeasureInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MeasureConvertionInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "converter_additive_storage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DeclensionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeclensionInfo_default_instance_);_CurrencySourceInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CurrencySourceInfo_default_instance_);_CurrencyInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CurrencyInfo_default_instance_);_CurrencyConvertionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CurrencyConvertionInfo_default_instance_);_MeasureTypeInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MeasureTypeInfo_default_instance_);_MeasureInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MeasureInfo_default_instance_);_MeasureConvertionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MeasureConvertionInfo_default_instance_);_CurrencyInfo_default_instance_._instance.get_mutable()->declensions_ = const_cast< ::converterd::pb::DeclensionInfo*>(
      ::converterd::pb::DeclensionInfo::internal_default_instance());
  _MeasureInfo_default_instance_._instance.get_mutable()->declensions_ = const_cast< ::converterd::pb::DeclensionInfo*>(
      ::converterd::pb::DeclensionInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n converter_additive_storage.proto\022\rconv"
      "erterd.pb\"N\n\016DeclensionInfo\022\r\n\005first\030\001 \002"
      "(\t\022\016\n\006second\030\002 \002(\t\022\r\n\005third\030\003 \002(\t\022\016\n\006fou"
      "rth\030\004 \002(\t\"O\n\022CurrencySourceInfo\022\n\n\002id\030\001 "
      "\002(\t\022\014\n\004name\030\002 \002(\t\022\014\n\004link\030\003 \002(\t\022\021\n\tregio"
      "n_id\030\004 \001(\t\"N\n\014CurrencyInfo\022\n\n\002id\030\001 \002(\t\0222"
      "\n\013declensions\030\002 \002(\0132\035.converterd.pb.Decl"
      "ensionInfo\"\260\001\n\026CurrencyConvertionInfo\022\017\n"
      "\007from_id\030\001 \002(\t\022\r\n\005to_id\030\002 \002(\t\022\031\n\021a_coeff"
      "_numerator\030\003 \002(\t\022\033\n\023a_coeff_denominator\030"
      "\004 \002(\t\022\014\n\004time\030\005 \002(\004\022\021\n\tsource_id\030\006 \001(\t\022\014"
      "\n\004link\030\007 \001(\t\022\017\n\007is_live\030\010 \002(\010\"<\n\017Measure"
      "TypeInfo\022\n\n\002id\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\017\n\007ba"
      "se_id\030\003 \002(\t\"b\n\013MeasureInfo\022\n\n\002id\030\001 \002(\t\0222"
      "\n\013declensions\030\002 \002(\0132\035.converterd.pb.Decl"
      "ensionInfo\022\023\n\013is_optional\030\003 \002(\010\"Y\n\025Measu"
      "reConvertionInfo\022\017\n\007from_id\030\001 \002(\t\022\r\n\005to_"
      "id\030\002 \002(\t\022\017\n\007a_coeff\030\003 \002(\t\022\017\n\007b_coeff\030\004 \002"
      "(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "converter_additive_storage.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_converter_5fadditive_5fstorage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeclensionInfo::kFirstFieldNumber;
const int DeclensionInfo::kSecondFieldNumber;
const int DeclensionInfo::kThirdFieldNumber;
const int DeclensionInfo::kFourthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeclensionInfo::DeclensionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.DeclensionInfo)
}
DeclensionInfo::DeclensionInfo(const DeclensionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_first()) {
    first_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_);
  }
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_second()) {
    second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
  }
  third_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_third()) {
    third_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.third_);
  }
  fourth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fourth()) {
    fourth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fourth_);
  }
  // @@protoc_insertion_point(copy_constructor:converterd.pb.DeclensionInfo)
}

void DeclensionInfo::SharedCtor() {
  _cached_size_ = 0;
  first_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fourth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeclensionInfo::~DeclensionInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.DeclensionInfo)
  SharedDtor();
}

void DeclensionInfo::SharedDtor() {
  first_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  second_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fourth_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeclensionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclensionInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeclensionInfo& DeclensionInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeclensionInfo* DeclensionInfo::New(::google::protobuf::Arena* arena) const {
  DeclensionInfo* n = new DeclensionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeclensionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.DeclensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!first_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*first_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!second_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*second_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!third_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*third_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!fourth_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fourth_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeclensionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.DeclensionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string first = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->first().data(), static_cast<int>(this->first().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.DeclensionInfo.first");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string second = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_second()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->second().data(), static_cast<int>(this->second().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.DeclensionInfo.second");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string third = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_third()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->third().data(), static_cast<int>(this->third().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.DeclensionInfo.third");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string fourth = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fourth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fourth().data(), static_cast<int>(this->fourth().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.DeclensionInfo.fourth");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.DeclensionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.DeclensionInfo)
  return false;
#undef DO_
}

void DeclensionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.DeclensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string first = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->first().data(), static_cast<int>(this->first().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.first");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->first(), output);
  }

  // required string second = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->second().data(), static_cast<int>(this->second().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.second");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->second(), output);
  }

  // required string third = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->third().data(), static_cast<int>(this->third().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.third");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->third(), output);
  }

  // required string fourth = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fourth().data(), static_cast<int>(this->fourth().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.fourth");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fourth(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.DeclensionInfo)
}

::google::protobuf::uint8* DeclensionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.DeclensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string first = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->first().data(), static_cast<int>(this->first().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.first");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->first(), target);
  }

  // required string second = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->second().data(), static_cast<int>(this->second().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.second");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->second(), target);
  }

  // required string third = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->third().data(), static_cast<int>(this->third().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.third");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->third(), target);
  }

  // required string fourth = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fourth().data(), static_cast<int>(this->fourth().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.DeclensionInfo.fourth");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fourth(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.DeclensionInfo)
  return target;
}

size_t DeclensionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.DeclensionInfo)
  size_t total_size = 0;

  if (has_first()) {
    // required string first = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first());
  }

  if (has_second()) {
    // required string second = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->second());
  }

  if (has_third()) {
    // required string third = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->third());
  }

  if (has_fourth()) {
    // required string fourth = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fourth());
  }

  return total_size;
}
size_t DeclensionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.DeclensionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string first = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first());

    // required string second = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->second());

    // required string third = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->third());

    // required string fourth = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fourth());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeclensionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.DeclensionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeclensionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeclensionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.DeclensionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.DeclensionInfo)
    MergeFrom(*source);
  }
}

void DeclensionInfo::MergeFrom(const DeclensionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.DeclensionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_first();
      first_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_second();
      second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_third();
      third_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.third_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_fourth();
      fourth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fourth_);
    }
  }
}

void DeclensionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.DeclensionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeclensionInfo::CopyFrom(const DeclensionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.DeclensionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeclensionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void DeclensionInfo::Swap(DeclensionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeclensionInfo::InternalSwap(DeclensionInfo* other) {
  using std::swap;
  first_.Swap(&other->first_);
  second_.Swap(&other->second_);
  third_.Swap(&other->third_);
  fourth_.Swap(&other->fourth_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeclensionInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeclensionInfo

// required string first = 1;
bool DeclensionInfo::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeclensionInfo::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
void DeclensionInfo::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeclensionInfo::clear_first() {
  first_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_first();
}
const ::std::string& DeclensionInfo::first() const {
  // @@protoc_insertion_point(field_get:converterd.pb.DeclensionInfo.first)
  return first_.GetNoArena();
}
void DeclensionInfo::set_first(const ::std::string& value) {
  set_has_first();
  first_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.DeclensionInfo.first)
}
#if LANG_CXX11
void DeclensionInfo::set_first(::std::string&& value) {
  set_has_first();
  first_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.DeclensionInfo.first)
}
#endif
void DeclensionInfo::set_first(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_first();
  first_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.DeclensionInfo.first)
}
void DeclensionInfo::set_first(const char* value, size_t size) {
  set_has_first();
  first_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.DeclensionInfo.first)
}
::std::string* DeclensionInfo::mutable_first() {
  set_has_first();
  // @@protoc_insertion_point(field_mutable:converterd.pb.DeclensionInfo.first)
  return first_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeclensionInfo::release_first() {
  // @@protoc_insertion_point(field_release:converterd.pb.DeclensionInfo.first)
  clear_has_first();
  return first_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeclensionInfo::set_allocated_first(::std::string* first) {
  if (first != NULL) {
    set_has_first();
  } else {
    clear_has_first();
  }
  first_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.DeclensionInfo.first)
}

// required string second = 2;
bool DeclensionInfo::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DeclensionInfo::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
void DeclensionInfo::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
void DeclensionInfo::clear_second() {
  second_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_second();
}
const ::std::string& DeclensionInfo::second() const {
  // @@protoc_insertion_point(field_get:converterd.pb.DeclensionInfo.second)
  return second_.GetNoArena();
}
void DeclensionInfo::set_second(const ::std::string& value) {
  set_has_second();
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.DeclensionInfo.second)
}
#if LANG_CXX11
void DeclensionInfo::set_second(::std::string&& value) {
  set_has_second();
  second_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.DeclensionInfo.second)
}
#endif
void DeclensionInfo::set_second(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_second();
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.DeclensionInfo.second)
}
void DeclensionInfo::set_second(const char* value, size_t size) {
  set_has_second();
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.DeclensionInfo.second)
}
::std::string* DeclensionInfo::mutable_second() {
  set_has_second();
  // @@protoc_insertion_point(field_mutable:converterd.pb.DeclensionInfo.second)
  return second_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeclensionInfo::release_second() {
  // @@protoc_insertion_point(field_release:converterd.pb.DeclensionInfo.second)
  clear_has_second();
  return second_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeclensionInfo::set_allocated_second(::std::string* second) {
  if (second != NULL) {
    set_has_second();
  } else {
    clear_has_second();
  }
  second_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), second);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.DeclensionInfo.second)
}

// required string third = 3;
bool DeclensionInfo::has_third() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DeclensionInfo::set_has_third() {
  _has_bits_[0] |= 0x00000004u;
}
void DeclensionInfo::clear_has_third() {
  _has_bits_[0] &= ~0x00000004u;
}
void DeclensionInfo::clear_third() {
  third_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_third();
}
const ::std::string& DeclensionInfo::third() const {
  // @@protoc_insertion_point(field_get:converterd.pb.DeclensionInfo.third)
  return third_.GetNoArena();
}
void DeclensionInfo::set_third(const ::std::string& value) {
  set_has_third();
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.DeclensionInfo.third)
}
#if LANG_CXX11
void DeclensionInfo::set_third(::std::string&& value) {
  set_has_third();
  third_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.DeclensionInfo.third)
}
#endif
void DeclensionInfo::set_third(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_third();
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.DeclensionInfo.third)
}
void DeclensionInfo::set_third(const char* value, size_t size) {
  set_has_third();
  third_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.DeclensionInfo.third)
}
::std::string* DeclensionInfo::mutable_third() {
  set_has_third();
  // @@protoc_insertion_point(field_mutable:converterd.pb.DeclensionInfo.third)
  return third_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeclensionInfo::release_third() {
  // @@protoc_insertion_point(field_release:converterd.pb.DeclensionInfo.third)
  clear_has_third();
  return third_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeclensionInfo::set_allocated_third(::std::string* third) {
  if (third != NULL) {
    set_has_third();
  } else {
    clear_has_third();
  }
  third_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), third);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.DeclensionInfo.third)
}

// required string fourth = 4;
bool DeclensionInfo::has_fourth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DeclensionInfo::set_has_fourth() {
  _has_bits_[0] |= 0x00000008u;
}
void DeclensionInfo::clear_has_fourth() {
  _has_bits_[0] &= ~0x00000008u;
}
void DeclensionInfo::clear_fourth() {
  fourth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fourth();
}
const ::std::string& DeclensionInfo::fourth() const {
  // @@protoc_insertion_point(field_get:converterd.pb.DeclensionInfo.fourth)
  return fourth_.GetNoArena();
}
void DeclensionInfo::set_fourth(const ::std::string& value) {
  set_has_fourth();
  fourth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.DeclensionInfo.fourth)
}
#if LANG_CXX11
void DeclensionInfo::set_fourth(::std::string&& value) {
  set_has_fourth();
  fourth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.DeclensionInfo.fourth)
}
#endif
void DeclensionInfo::set_fourth(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fourth();
  fourth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.DeclensionInfo.fourth)
}
void DeclensionInfo::set_fourth(const char* value, size_t size) {
  set_has_fourth();
  fourth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.DeclensionInfo.fourth)
}
::std::string* DeclensionInfo::mutable_fourth() {
  set_has_fourth();
  // @@protoc_insertion_point(field_mutable:converterd.pb.DeclensionInfo.fourth)
  return fourth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeclensionInfo::release_fourth() {
  // @@protoc_insertion_point(field_release:converterd.pb.DeclensionInfo.fourth)
  clear_has_fourth();
  return fourth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeclensionInfo::set_allocated_fourth(::std::string* fourth) {
  if (fourth != NULL) {
    set_has_fourth();
  } else {
    clear_has_fourth();
  }
  fourth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fourth);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.DeclensionInfo.fourth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencySourceInfo::kIdFieldNumber;
const int CurrencySourceInfo::kNameFieldNumber;
const int CurrencySourceInfo::kLinkFieldNumber;
const int CurrencySourceInfo::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencySourceInfo::CurrencySourceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.CurrencySourceInfo)
}
CurrencySourceInfo::CurrencySourceInfo(const CurrencySourceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region_id()) {
    region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
  }
  // @@protoc_insertion_point(copy_constructor:converterd.pb.CurrencySourceInfo)
}

void CurrencySourceInfo::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CurrencySourceInfo::~CurrencySourceInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.CurrencySourceInfo)
  SharedDtor();
}

void CurrencySourceInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CurrencySourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencySourceInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CurrencySourceInfo& CurrencySourceInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CurrencySourceInfo* CurrencySourceInfo::New(::google::protobuf::Arena* arena) const {
  CurrencySourceInfo* n = new CurrencySourceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencySourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.CurrencySourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!region_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*region_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CurrencySourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.CurrencySourceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencySourceInfo.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencySourceInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencySourceInfo.link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_id().data(), static_cast<int>(this->region_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencySourceInfo.region_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.CurrencySourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.CurrencySourceInfo)
  return false;
#undef DO_
}

void CurrencySourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.CurrencySourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string link = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link(), output);
  }

  // optional string region_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.region_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->region_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.CurrencySourceInfo)
}

::google::protobuf::uint8* CurrencySourceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.CurrencySourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string link = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link(), target);
  }

  // optional string region_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencySourceInfo.region_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->region_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.CurrencySourceInfo)
  return target;
}

size_t CurrencySourceInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.CurrencySourceInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_link()) {
    // required string link = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  return total_size;
}
size_t CurrencySourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.CurrencySourceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string link = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string region_id = 4;
  if (has_region_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencySourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.CurrencySourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencySourceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencySourceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.CurrencySourceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.CurrencySourceInfo)
    MergeFrom(*source);
  }
}

void CurrencySourceInfo::MergeFrom(const CurrencySourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.CurrencySourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_region_id();
      region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
    }
  }
}

void CurrencySourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.CurrencySourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencySourceInfo::CopyFrom(const CurrencySourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.CurrencySourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencySourceInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CurrencySourceInfo::Swap(CurrencySourceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencySourceInfo::InternalSwap(CurrencySourceInfo* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  link_.Swap(&other->link_);
  region_id_.Swap(&other->region_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencySourceInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CurrencySourceInfo

// required string id = 1;
bool CurrencySourceInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CurrencySourceInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CurrencySourceInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CurrencySourceInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& CurrencySourceInfo::id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencySourceInfo.id)
  return id_.GetNoArena();
}
void CurrencySourceInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencySourceInfo.id)
}
#if LANG_CXX11
void CurrencySourceInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencySourceInfo.id)
}
#endif
void CurrencySourceInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencySourceInfo.id)
}
void CurrencySourceInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencySourceInfo.id)
}
::std::string* CurrencySourceInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencySourceInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencySourceInfo::release_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencySourceInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencySourceInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencySourceInfo.id)
}

// required string name = 2;
bool CurrencySourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CurrencySourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CurrencySourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CurrencySourceInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CurrencySourceInfo::name() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencySourceInfo.name)
  return name_.GetNoArena();
}
void CurrencySourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencySourceInfo.name)
}
#if LANG_CXX11
void CurrencySourceInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencySourceInfo.name)
}
#endif
void CurrencySourceInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencySourceInfo.name)
}
void CurrencySourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencySourceInfo.name)
}
::std::string* CurrencySourceInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencySourceInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencySourceInfo::release_name() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencySourceInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencySourceInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencySourceInfo.name)
}

// required string link = 3;
bool CurrencySourceInfo::has_link() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CurrencySourceInfo::set_has_link() {
  _has_bits_[0] |= 0x00000004u;
}
void CurrencySourceInfo::clear_has_link() {
  _has_bits_[0] &= ~0x00000004u;
}
void CurrencySourceInfo::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& CurrencySourceInfo::link() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencySourceInfo.link)
  return link_.GetNoArena();
}
void CurrencySourceInfo::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencySourceInfo.link)
}
#if LANG_CXX11
void CurrencySourceInfo::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencySourceInfo.link)
}
#endif
void CurrencySourceInfo::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencySourceInfo.link)
}
void CurrencySourceInfo::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencySourceInfo.link)
}
::std::string* CurrencySourceInfo::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencySourceInfo.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencySourceInfo::release_link() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencySourceInfo.link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencySourceInfo::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencySourceInfo.link)
}

// optional string region_id = 4;
bool CurrencySourceInfo::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CurrencySourceInfo::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CurrencySourceInfo::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CurrencySourceInfo::clear_region_id() {
  region_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_id();
}
const ::std::string& CurrencySourceInfo::region_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencySourceInfo.region_id)
  return region_id_.GetNoArena();
}
void CurrencySourceInfo::set_region_id(const ::std::string& value) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencySourceInfo.region_id)
}
#if LANG_CXX11
void CurrencySourceInfo::set_region_id(::std::string&& value) {
  set_has_region_id();
  region_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencySourceInfo.region_id)
}
#endif
void CurrencySourceInfo::set_region_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencySourceInfo.region_id)
}
void CurrencySourceInfo::set_region_id(const char* value, size_t size) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencySourceInfo.region_id)
}
::std::string* CurrencySourceInfo::mutable_region_id() {
  set_has_region_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencySourceInfo.region_id)
  return region_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencySourceInfo::release_region_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencySourceInfo.region_id)
  clear_has_region_id();
  return region_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencySourceInfo::set_allocated_region_id(::std::string* region_id) {
  if (region_id != NULL) {
    set_has_region_id();
  } else {
    clear_has_region_id();
  }
  region_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencySourceInfo.region_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencyInfo::kIdFieldNumber;
const int CurrencyInfo::kDeclensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencyInfo::CurrencyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.CurrencyInfo)
}
CurrencyInfo::CurrencyInfo(const CurrencyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_declensions()) {
    declensions_ = new ::converterd::pb::DeclensionInfo(*from.declensions_);
  } else {
    declensions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:converterd.pb.CurrencyInfo)
}

void CurrencyInfo::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  declensions_ = NULL;
}

CurrencyInfo::~CurrencyInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.CurrencyInfo)
  SharedDtor();
}

void CurrencyInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete declensions_;
}

void CurrencyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencyInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CurrencyInfo& CurrencyInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CurrencyInfo* CurrencyInfo::New(::google::protobuf::Arena* arena) const {
  CurrencyInfo* n = new CurrencyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.CurrencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(declensions_ != NULL);
      declensions_->::converterd::pb::DeclensionInfo::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CurrencyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.CurrencyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyInfo.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .converterd.pb.DeclensionInfo declensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_declensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.CurrencyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.CurrencyInfo)
  return false;
#undef DO_
}

void CurrencyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.CurrencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .converterd.pb.DeclensionInfo declensions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->declensions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.CurrencyInfo)
}

::google::protobuf::uint8* CurrencyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.CurrencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .converterd.pb.DeclensionInfo declensions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->declensions_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.CurrencyInfo)
  return target;
}

size_t CurrencyInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.CurrencyInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_declensions()) {
    // required .converterd.pb.DeclensionInfo declensions = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->declensions_);
  }

  return total_size;
}
size_t CurrencyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.CurrencyInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .converterd.pb.DeclensionInfo declensions = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->declensions_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.CurrencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.CurrencyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.CurrencyInfo)
    MergeFrom(*source);
  }
}

void CurrencyInfo::MergeFrom(const CurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.CurrencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_declensions()->::converterd::pb::DeclensionInfo::MergeFrom(from.declensions());
    }
  }
}

void CurrencyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.CurrencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyInfo::CopyFrom(const CurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.CurrencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_declensions()) {
    if (!this->declensions_->IsInitialized()) return false;
  }
  return true;
}

void CurrencyInfo::Swap(CurrencyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencyInfo::InternalSwap(CurrencyInfo* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(declensions_, other->declensions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencyInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CurrencyInfo

// required string id = 1;
bool CurrencyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CurrencyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CurrencyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CurrencyInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& CurrencyInfo::id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyInfo.id)
  return id_.GetNoArena();
}
void CurrencyInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyInfo.id)
}
#if LANG_CXX11
void CurrencyInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyInfo.id)
}
#endif
void CurrencyInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyInfo.id)
}
void CurrencyInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyInfo.id)
}
::std::string* CurrencyInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyInfo::release_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyInfo.id)
}

// required .converterd.pb.DeclensionInfo declensions = 2;
bool CurrencyInfo::has_declensions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CurrencyInfo::set_has_declensions() {
  _has_bits_[0] |= 0x00000002u;
}
void CurrencyInfo::clear_has_declensions() {
  _has_bits_[0] &= ~0x00000002u;
}
void CurrencyInfo::clear_declensions() {
  if (declensions_ != NULL) declensions_->::converterd::pb::DeclensionInfo::Clear();
  clear_has_declensions();
}
const ::converterd::pb::DeclensionInfo& CurrencyInfo::declensions() const {
  const ::converterd::pb::DeclensionInfo* p = declensions_;
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyInfo.declensions)
  return p != NULL ? *p : *reinterpret_cast<const ::converterd::pb::DeclensionInfo*>(
      &::converterd::pb::_DeclensionInfo_default_instance_);
}
::converterd::pb::DeclensionInfo* CurrencyInfo::mutable_declensions() {
  set_has_declensions();
  if (declensions_ == NULL) {
    declensions_ = new ::converterd::pb::DeclensionInfo;
  }
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyInfo.declensions)
  return declensions_;
}
::converterd::pb::DeclensionInfo* CurrencyInfo::release_declensions() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyInfo.declensions)
  clear_has_declensions();
  ::converterd::pb::DeclensionInfo* temp = declensions_;
  declensions_ = NULL;
  return temp;
}
void CurrencyInfo::set_allocated_declensions(::converterd::pb::DeclensionInfo* declensions) {
  delete declensions_;
  declensions_ = declensions;
  if (declensions) {
    set_has_declensions();
  } else {
    clear_has_declensions();
  }
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyInfo.declensions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CurrencyConvertionInfo::kFromIdFieldNumber;
const int CurrencyConvertionInfo::kToIdFieldNumber;
const int CurrencyConvertionInfo::kACoeffNumeratorFieldNumber;
const int CurrencyConvertionInfo::kACoeffDenominatorFieldNumber;
const int CurrencyConvertionInfo::kTimeFieldNumber;
const int CurrencyConvertionInfo::kSourceIdFieldNumber;
const int CurrencyConvertionInfo::kLinkFieldNumber;
const int CurrencyConvertionInfo::kIsLiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CurrencyConvertionInfo::CurrencyConvertionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.CurrencyConvertionInfo)
}
CurrencyConvertionInfo::CurrencyConvertionInfo(const CurrencyConvertionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_id()) {
    from_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_id_);
  }
  to_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_id()) {
    to_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_id_);
  }
  a_coeff_numerator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a_coeff_numerator()) {
    a_coeff_numerator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_numerator_);
  }
  a_coeff_denominator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a_coeff_denominator()) {
    a_coeff_denominator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_denominator_);
  }
  source_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_id()) {
    source_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_id_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_live_) -
    reinterpret_cast<char*>(&time_)) + sizeof(is_live_));
  // @@protoc_insertion_point(copy_constructor:converterd.pb.CurrencyConvertionInfo)
}

void CurrencyConvertionInfo::SharedCtor() {
  _cached_size_ = 0;
  from_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_numerator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_denominator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_live_) -
      reinterpret_cast<char*>(&time_)) + sizeof(is_live_));
}

CurrencyConvertionInfo::~CurrencyConvertionInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.CurrencyConvertionInfo)
  SharedDtor();
}

void CurrencyConvertionInfo::SharedDtor() {
  from_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_numerator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_denominator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CurrencyConvertionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CurrencyConvertionInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CurrencyConvertionInfo& CurrencyConvertionInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

CurrencyConvertionInfo* CurrencyConvertionInfo::New(::google::protobuf::Arena* arena) const {
  CurrencyConvertionInfo* n = new CurrencyConvertionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CurrencyConvertionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.CurrencyConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!from_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!to_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!a_coeff_numerator_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*a_coeff_numerator_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!a_coeff_denominator_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*a_coeff_denominator_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!source_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*source_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_live_) -
        reinterpret_cast<char*>(&time_)) + sizeof(is_live_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CurrencyConvertionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.CurrencyConvertionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_id().data(), static_cast<int>(this->from_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.from_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_id().data(), static_cast<int>(this->to_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.to_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string a_coeff_numerator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a_coeff_numerator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a_coeff_numerator().data(), static_cast<int>(this->a_coeff_numerator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.a_coeff_numerator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string a_coeff_denominator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a_coeff_denominator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a_coeff_denominator().data(), static_cast<int>(this->a_coeff_denominator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.a_coeff_denominator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_id().data(), static_cast<int>(this->source_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.source_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.CurrencyConvertionInfo.link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_live = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_is_live();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_live_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.CurrencyConvertionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.CurrencyConvertionInfo)
  return false;
#undef DO_
}

void CurrencyConvertionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.CurrencyConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_id().data(), static_cast<int>(this->from_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.from_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_id(), output);
  }

  // required string to_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_id().data(), static_cast<int>(this->to_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.to_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_id(), output);
  }

  // required string a_coeff_numerator = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff_numerator().data(), static_cast<int>(this->a_coeff_numerator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.a_coeff_numerator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->a_coeff_numerator(), output);
  }

  // required string a_coeff_denominator = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff_denominator().data(), static_cast<int>(this->a_coeff_denominator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.a_coeff_denominator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->a_coeff_denominator(), output);
  }

  // required uint64 time = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time(), output);
  }

  // optional string source_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_id().data(), static_cast<int>(this->source_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.source_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->source_id(), output);
  }

  // optional string link = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->link(), output);
  }

  // required bool is_live = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_live(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.CurrencyConvertionInfo)
}

::google::protobuf::uint8* CurrencyConvertionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.CurrencyConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_id().data(), static_cast<int>(this->from_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.from_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_id(), target);
  }

  // required string to_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_id().data(), static_cast<int>(this->to_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.to_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_id(), target);
  }

  // required string a_coeff_numerator = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff_numerator().data(), static_cast<int>(this->a_coeff_numerator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.a_coeff_numerator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->a_coeff_numerator(), target);
  }

  // required string a_coeff_denominator = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff_denominator().data(), static_cast<int>(this->a_coeff_denominator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.a_coeff_denominator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->a_coeff_denominator(), target);
  }

  // required uint64 time = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time(), target);
  }

  // optional string source_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_id().data(), static_cast<int>(this->source_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.source_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->source_id(), target);
  }

  // optional string link = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.CurrencyConvertionInfo.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->link(), target);
  }

  // required bool is_live = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_live(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.CurrencyConvertionInfo)
  return target;
}

size_t CurrencyConvertionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.CurrencyConvertionInfo)
  size_t total_size = 0;

  if (has_from_id()) {
    // required string from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_id());
  }

  if (has_to_id()) {
    // required string to_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_id());
  }

  if (has_a_coeff_numerator()) {
    // required string a_coeff_numerator = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff_numerator());
  }

  if (has_a_coeff_denominator()) {
    // required string a_coeff_denominator = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff_denominator());
  }

  if (has_time()) {
    // required uint64 time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  if (has_is_live()) {
    // required bool is_live = 8;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CurrencyConvertionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.CurrencyConvertionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000cf) ^ 0x000000cf) == 0) {  // All required fields are present.
    // required string from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_id());

    // required string to_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_id());

    // required string a_coeff_numerator = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff_numerator());

    // required string a_coeff_denominator = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff_denominator());

    // required uint64 time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

    // required bool is_live = 8;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional string source_id = 6;
    if (has_source_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_id());
    }

    // optional string link = 7;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CurrencyConvertionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.CurrencyConvertionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyConvertionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CurrencyConvertionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.CurrencyConvertionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.CurrencyConvertionInfo)
    MergeFrom(*source);
  }
}

void CurrencyConvertionInfo::MergeFrom(const CurrencyConvertionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.CurrencyConvertionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from_id();
      from_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_to_id();
      to_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_a_coeff_numerator();
      a_coeff_numerator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_numerator_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_a_coeff_denominator();
      a_coeff_denominator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_denominator_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_source_id();
      source_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000040u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_live_ = from.is_live_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CurrencyConvertionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.CurrencyConvertionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyConvertionInfo::CopyFrom(const CurrencyConvertionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.CurrencyConvertionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyConvertionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000cf) != 0x000000cf) return false;
  return true;
}

void CurrencyConvertionInfo::Swap(CurrencyConvertionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CurrencyConvertionInfo::InternalSwap(CurrencyConvertionInfo* other) {
  using std::swap;
  from_id_.Swap(&other->from_id_);
  to_id_.Swap(&other->to_id_);
  a_coeff_numerator_.Swap(&other->a_coeff_numerator_);
  a_coeff_denominator_.Swap(&other->a_coeff_denominator_);
  source_id_.Swap(&other->source_id_);
  link_.Swap(&other->link_);
  swap(time_, other->time_);
  swap(is_live_, other->is_live_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CurrencyConvertionInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CurrencyConvertionInfo

// required string from_id = 1;
bool CurrencyConvertionInfo::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CurrencyConvertionInfo::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CurrencyConvertionInfo::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CurrencyConvertionInfo::clear_from_id() {
  from_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_id();
}
const ::std::string& CurrencyConvertionInfo::from_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.from_id)
  return from_id_.GetNoArena();
}
void CurrencyConvertionInfo::set_from_id(const ::std::string& value) {
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.from_id)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_from_id(::std::string&& value) {
  set_has_from_id();
  from_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.from_id)
}
#endif
void CurrencyConvertionInfo::set_from_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.from_id)
}
void CurrencyConvertionInfo::set_from_id(const char* value, size_t size) {
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.from_id)
}
::std::string* CurrencyConvertionInfo::mutable_from_id() {
  set_has_from_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.from_id)
  return from_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_from_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.from_id)
  clear_has_from_id();
  return from_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_from_id(::std::string* from_id) {
  if (from_id != NULL) {
    set_has_from_id();
  } else {
    clear_has_from_id();
  }
  from_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.from_id)
}

// required string to_id = 2;
bool CurrencyConvertionInfo::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CurrencyConvertionInfo::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CurrencyConvertionInfo::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CurrencyConvertionInfo::clear_to_id() {
  to_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_id();
}
const ::std::string& CurrencyConvertionInfo::to_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.to_id)
  return to_id_.GetNoArena();
}
void CurrencyConvertionInfo::set_to_id(const ::std::string& value) {
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.to_id)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_to_id(::std::string&& value) {
  set_has_to_id();
  to_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.to_id)
}
#endif
void CurrencyConvertionInfo::set_to_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.to_id)
}
void CurrencyConvertionInfo::set_to_id(const char* value, size_t size) {
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.to_id)
}
::std::string* CurrencyConvertionInfo::mutable_to_id() {
  set_has_to_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.to_id)
  return to_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_to_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.to_id)
  clear_has_to_id();
  return to_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_to_id(::std::string* to_id) {
  if (to_id != NULL) {
    set_has_to_id();
  } else {
    clear_has_to_id();
  }
  to_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.to_id)
}

// required string a_coeff_numerator = 3;
bool CurrencyConvertionInfo::has_a_coeff_numerator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CurrencyConvertionInfo::set_has_a_coeff_numerator() {
  _has_bits_[0] |= 0x00000004u;
}
void CurrencyConvertionInfo::clear_has_a_coeff_numerator() {
  _has_bits_[0] &= ~0x00000004u;
}
void CurrencyConvertionInfo::clear_a_coeff_numerator() {
  a_coeff_numerator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a_coeff_numerator();
}
const ::std::string& CurrencyConvertionInfo::a_coeff_numerator() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
  return a_coeff_numerator_.GetNoArena();
}
void CurrencyConvertionInfo::set_a_coeff_numerator(const ::std::string& value) {
  set_has_a_coeff_numerator();
  a_coeff_numerator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_a_coeff_numerator(::std::string&& value) {
  set_has_a_coeff_numerator();
  a_coeff_numerator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
}
#endif
void CurrencyConvertionInfo::set_a_coeff_numerator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_a_coeff_numerator();
  a_coeff_numerator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
}
void CurrencyConvertionInfo::set_a_coeff_numerator(const char* value, size_t size) {
  set_has_a_coeff_numerator();
  a_coeff_numerator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
}
::std::string* CurrencyConvertionInfo::mutable_a_coeff_numerator() {
  set_has_a_coeff_numerator();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
  return a_coeff_numerator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_a_coeff_numerator() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
  clear_has_a_coeff_numerator();
  return a_coeff_numerator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_a_coeff_numerator(::std::string* a_coeff_numerator) {
  if (a_coeff_numerator != NULL) {
    set_has_a_coeff_numerator();
  } else {
    clear_has_a_coeff_numerator();
  }
  a_coeff_numerator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a_coeff_numerator);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.a_coeff_numerator)
}

// required string a_coeff_denominator = 4;
bool CurrencyConvertionInfo::has_a_coeff_denominator() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CurrencyConvertionInfo::set_has_a_coeff_denominator() {
  _has_bits_[0] |= 0x00000008u;
}
void CurrencyConvertionInfo::clear_has_a_coeff_denominator() {
  _has_bits_[0] &= ~0x00000008u;
}
void CurrencyConvertionInfo::clear_a_coeff_denominator() {
  a_coeff_denominator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a_coeff_denominator();
}
const ::std::string& CurrencyConvertionInfo::a_coeff_denominator() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
  return a_coeff_denominator_.GetNoArena();
}
void CurrencyConvertionInfo::set_a_coeff_denominator(const ::std::string& value) {
  set_has_a_coeff_denominator();
  a_coeff_denominator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_a_coeff_denominator(::std::string&& value) {
  set_has_a_coeff_denominator();
  a_coeff_denominator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
}
#endif
void CurrencyConvertionInfo::set_a_coeff_denominator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_a_coeff_denominator();
  a_coeff_denominator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
}
void CurrencyConvertionInfo::set_a_coeff_denominator(const char* value, size_t size) {
  set_has_a_coeff_denominator();
  a_coeff_denominator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
}
::std::string* CurrencyConvertionInfo::mutable_a_coeff_denominator() {
  set_has_a_coeff_denominator();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
  return a_coeff_denominator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_a_coeff_denominator() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
  clear_has_a_coeff_denominator();
  return a_coeff_denominator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_a_coeff_denominator(::std::string* a_coeff_denominator) {
  if (a_coeff_denominator != NULL) {
    set_has_a_coeff_denominator();
  } else {
    clear_has_a_coeff_denominator();
  }
  a_coeff_denominator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a_coeff_denominator);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.a_coeff_denominator)
}

// required uint64 time = 5;
bool CurrencyConvertionInfo::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CurrencyConvertionInfo::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
void CurrencyConvertionInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void CurrencyConvertionInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 CurrencyConvertionInfo::time() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.time)
  return time_;
}
void CurrencyConvertionInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.time)
}

// optional string source_id = 6;
bool CurrencyConvertionInfo::has_source_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CurrencyConvertionInfo::set_has_source_id() {
  _has_bits_[0] |= 0x00000010u;
}
void CurrencyConvertionInfo::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void CurrencyConvertionInfo::clear_source_id() {
  source_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_id();
}
const ::std::string& CurrencyConvertionInfo::source_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.source_id)
  return source_id_.GetNoArena();
}
void CurrencyConvertionInfo::set_source_id(const ::std::string& value) {
  set_has_source_id();
  source_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.source_id)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_source_id(::std::string&& value) {
  set_has_source_id();
  source_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.source_id)
}
#endif
void CurrencyConvertionInfo::set_source_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source_id();
  source_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.source_id)
}
void CurrencyConvertionInfo::set_source_id(const char* value, size_t size) {
  set_has_source_id();
  source_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.source_id)
}
::std::string* CurrencyConvertionInfo::mutable_source_id() {
  set_has_source_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.source_id)
  return source_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_source_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.source_id)
  clear_has_source_id();
  return source_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_source_id(::std::string* source_id) {
  if (source_id != NULL) {
    set_has_source_id();
  } else {
    clear_has_source_id();
  }
  source_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.source_id)
}

// optional string link = 7;
bool CurrencyConvertionInfo::has_link() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CurrencyConvertionInfo::set_has_link() {
  _has_bits_[0] |= 0x00000020u;
}
void CurrencyConvertionInfo::clear_has_link() {
  _has_bits_[0] &= ~0x00000020u;
}
void CurrencyConvertionInfo::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& CurrencyConvertionInfo::link() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.link)
  return link_.GetNoArena();
}
void CurrencyConvertionInfo::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.link)
}
#if LANG_CXX11
void CurrencyConvertionInfo::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.CurrencyConvertionInfo.link)
}
#endif
void CurrencyConvertionInfo::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.CurrencyConvertionInfo.link)
}
void CurrencyConvertionInfo::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.CurrencyConvertionInfo.link)
}
::std::string* CurrencyConvertionInfo::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:converterd.pb.CurrencyConvertionInfo.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CurrencyConvertionInfo::release_link() {
  // @@protoc_insertion_point(field_release:converterd.pb.CurrencyConvertionInfo.link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CurrencyConvertionInfo::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.CurrencyConvertionInfo.link)
}

// required bool is_live = 8;
bool CurrencyConvertionInfo::has_is_live() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CurrencyConvertionInfo::set_has_is_live() {
  _has_bits_[0] |= 0x00000080u;
}
void CurrencyConvertionInfo::clear_has_is_live() {
  _has_bits_[0] &= ~0x00000080u;
}
void CurrencyConvertionInfo::clear_is_live() {
  is_live_ = false;
  clear_has_is_live();
}
bool CurrencyConvertionInfo::is_live() const {
  // @@protoc_insertion_point(field_get:converterd.pb.CurrencyConvertionInfo.is_live)
  return is_live_;
}
void CurrencyConvertionInfo::set_is_live(bool value) {
  set_has_is_live();
  is_live_ = value;
  // @@protoc_insertion_point(field_set:converterd.pb.CurrencyConvertionInfo.is_live)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasureTypeInfo::kIdFieldNumber;
const int MeasureTypeInfo::kNameFieldNumber;
const int MeasureTypeInfo::kBaseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasureTypeInfo::MeasureTypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.MeasureTypeInfo)
}
MeasureTypeInfo::MeasureTypeInfo(const MeasureTypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  base_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_base_id()) {
    base_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_id_);
  }
  // @@protoc_insertion_point(copy_constructor:converterd.pb.MeasureTypeInfo)
}

void MeasureTypeInfo::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MeasureTypeInfo::~MeasureTypeInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.MeasureTypeInfo)
  SharedDtor();
}

void MeasureTypeInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeasureTypeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeasureTypeInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeasureTypeInfo& MeasureTypeInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MeasureTypeInfo* MeasureTypeInfo::New(::google::protobuf::Arena* arena) const {
  MeasureTypeInfo* n = new MeasureTypeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeasureTypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.MeasureTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!base_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*base_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeasureTypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.MeasureTypeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureTypeInfo.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureTypeInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string base_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->base_id().data(), static_cast<int>(this->base_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureTypeInfo.base_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.MeasureTypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.MeasureTypeInfo)
  return false;
#undef DO_
}

void MeasureTypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.MeasureTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string base_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base_id().data(), static_cast<int>(this->base_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.base_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->base_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.MeasureTypeInfo)
}

::google::protobuf::uint8* MeasureTypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.MeasureTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string base_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base_id().data(), static_cast<int>(this->base_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureTypeInfo.base_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->base_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.MeasureTypeInfo)
  return target;
}

size_t MeasureTypeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.MeasureTypeInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_base_id()) {
    // required string base_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_id());
  }

  return total_size;
}
size_t MeasureTypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.MeasureTypeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string base_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeasureTypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.MeasureTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasureTypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeasureTypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.MeasureTypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.MeasureTypeInfo)
    MergeFrom(*source);
  }
}

void MeasureTypeInfo::MergeFrom(const MeasureTypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.MeasureTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_base_id();
      base_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_id_);
    }
  }
}

void MeasureTypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.MeasureTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasureTypeInfo::CopyFrom(const MeasureTypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.MeasureTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasureTypeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MeasureTypeInfo::Swap(MeasureTypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasureTypeInfo::InternalSwap(MeasureTypeInfo* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  base_id_.Swap(&other->base_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeasureTypeInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeasureTypeInfo

// required string id = 1;
bool MeasureTypeInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MeasureTypeInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MeasureTypeInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MeasureTypeInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& MeasureTypeInfo::id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureTypeInfo.id)
  return id_.GetNoArena();
}
void MeasureTypeInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureTypeInfo.id)
}
#if LANG_CXX11
void MeasureTypeInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureTypeInfo.id)
}
#endif
void MeasureTypeInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureTypeInfo.id)
}
void MeasureTypeInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureTypeInfo.id)
}
::std::string* MeasureTypeInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureTypeInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureTypeInfo::release_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureTypeInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureTypeInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureTypeInfo.id)
}

// required string name = 2;
bool MeasureTypeInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MeasureTypeInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void MeasureTypeInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void MeasureTypeInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MeasureTypeInfo::name() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureTypeInfo.name)
  return name_.GetNoArena();
}
void MeasureTypeInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureTypeInfo.name)
}
#if LANG_CXX11
void MeasureTypeInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureTypeInfo.name)
}
#endif
void MeasureTypeInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureTypeInfo.name)
}
void MeasureTypeInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureTypeInfo.name)
}
::std::string* MeasureTypeInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureTypeInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureTypeInfo::release_name() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureTypeInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureTypeInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureTypeInfo.name)
}

// required string base_id = 3;
bool MeasureTypeInfo::has_base_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MeasureTypeInfo::set_has_base_id() {
  _has_bits_[0] |= 0x00000004u;
}
void MeasureTypeInfo::clear_has_base_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void MeasureTypeInfo::clear_base_id() {
  base_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base_id();
}
const ::std::string& MeasureTypeInfo::base_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureTypeInfo.base_id)
  return base_id_.GetNoArena();
}
void MeasureTypeInfo::set_base_id(const ::std::string& value) {
  set_has_base_id();
  base_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureTypeInfo.base_id)
}
#if LANG_CXX11
void MeasureTypeInfo::set_base_id(::std::string&& value) {
  set_has_base_id();
  base_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureTypeInfo.base_id)
}
#endif
void MeasureTypeInfo::set_base_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_base_id();
  base_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureTypeInfo.base_id)
}
void MeasureTypeInfo::set_base_id(const char* value, size_t size) {
  set_has_base_id();
  base_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureTypeInfo.base_id)
}
::std::string* MeasureTypeInfo::mutable_base_id() {
  set_has_base_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureTypeInfo.base_id)
  return base_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureTypeInfo::release_base_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureTypeInfo.base_id)
  clear_has_base_id();
  return base_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureTypeInfo::set_allocated_base_id(::std::string* base_id) {
  if (base_id != NULL) {
    set_has_base_id();
  } else {
    clear_has_base_id();
  }
  base_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureTypeInfo.base_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasureInfo::kIdFieldNumber;
const int MeasureInfo::kDeclensionsFieldNumber;
const int MeasureInfo::kIsOptionalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasureInfo::MeasureInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.MeasureInfo)
}
MeasureInfo::MeasureInfo(const MeasureInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_declensions()) {
    declensions_ = new ::converterd::pb::DeclensionInfo(*from.declensions_);
  } else {
    declensions_ = NULL;
  }
  is_optional_ = from.is_optional_;
  // @@protoc_insertion_point(copy_constructor:converterd.pb.MeasureInfo)
}

void MeasureInfo::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&declensions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_optional_) -
      reinterpret_cast<char*>(&declensions_)) + sizeof(is_optional_));
}

MeasureInfo::~MeasureInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.MeasureInfo)
  SharedDtor();
}

void MeasureInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete declensions_;
}

void MeasureInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeasureInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeasureInfo& MeasureInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MeasureInfo* MeasureInfo::New(::google::protobuf::Arena* arena) const {
  MeasureInfo* n = new MeasureInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeasureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.MeasureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(declensions_ != NULL);
      declensions_->::converterd::pb::DeclensionInfo::Clear();
    }
  }
  is_optional_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeasureInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.MeasureInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureInfo.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .converterd.pb.DeclensionInfo declensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_declensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_optional = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_optional();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_optional_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.MeasureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.MeasureInfo)
  return false;
#undef DO_
}

void MeasureInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.MeasureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .converterd.pb.DeclensionInfo declensions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->declensions_, output);
  }

  // required bool is_optional = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_optional(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.MeasureInfo)
}

::google::protobuf::uint8* MeasureInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.MeasureInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .converterd.pb.DeclensionInfo declensions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->declensions_, deterministic, target);
  }

  // required bool is_optional = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_optional(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.MeasureInfo)
  return target;
}

size_t MeasureInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.MeasureInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_declensions()) {
    // required .converterd.pb.DeclensionInfo declensions = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->declensions_);
  }

  if (has_is_optional()) {
    // required bool is_optional = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t MeasureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.MeasureInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .converterd.pb.DeclensionInfo declensions = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->declensions_);

    // required bool is_optional = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeasureInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.MeasureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasureInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeasureInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.MeasureInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.MeasureInfo)
    MergeFrom(*source);
  }
}

void MeasureInfo::MergeFrom(const MeasureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.MeasureInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_declensions()->::converterd::pb::DeclensionInfo::MergeFrom(from.declensions());
    }
    if (cached_has_bits & 0x00000004u) {
      is_optional_ = from.is_optional_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MeasureInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.MeasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasureInfo::CopyFrom(const MeasureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.MeasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasureInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_declensions()) {
    if (!this->declensions_->IsInitialized()) return false;
  }
  return true;
}

void MeasureInfo::Swap(MeasureInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasureInfo::InternalSwap(MeasureInfo* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(declensions_, other->declensions_);
  swap(is_optional_, other->is_optional_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeasureInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeasureInfo

// required string id = 1;
bool MeasureInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MeasureInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MeasureInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MeasureInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& MeasureInfo::id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureInfo.id)
  return id_.GetNoArena();
}
void MeasureInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureInfo.id)
}
#if LANG_CXX11
void MeasureInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureInfo.id)
}
#endif
void MeasureInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureInfo.id)
}
void MeasureInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureInfo.id)
}
::std::string* MeasureInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureInfo::release_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureInfo.id)
}

// required .converterd.pb.DeclensionInfo declensions = 2;
bool MeasureInfo::has_declensions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MeasureInfo::set_has_declensions() {
  _has_bits_[0] |= 0x00000002u;
}
void MeasureInfo::clear_has_declensions() {
  _has_bits_[0] &= ~0x00000002u;
}
void MeasureInfo::clear_declensions() {
  if (declensions_ != NULL) declensions_->::converterd::pb::DeclensionInfo::Clear();
  clear_has_declensions();
}
const ::converterd::pb::DeclensionInfo& MeasureInfo::declensions() const {
  const ::converterd::pb::DeclensionInfo* p = declensions_;
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureInfo.declensions)
  return p != NULL ? *p : *reinterpret_cast<const ::converterd::pb::DeclensionInfo*>(
      &::converterd::pb::_DeclensionInfo_default_instance_);
}
::converterd::pb::DeclensionInfo* MeasureInfo::mutable_declensions() {
  set_has_declensions();
  if (declensions_ == NULL) {
    declensions_ = new ::converterd::pb::DeclensionInfo;
  }
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureInfo.declensions)
  return declensions_;
}
::converterd::pb::DeclensionInfo* MeasureInfo::release_declensions() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureInfo.declensions)
  clear_has_declensions();
  ::converterd::pb::DeclensionInfo* temp = declensions_;
  declensions_ = NULL;
  return temp;
}
void MeasureInfo::set_allocated_declensions(::converterd::pb::DeclensionInfo* declensions) {
  delete declensions_;
  declensions_ = declensions;
  if (declensions) {
    set_has_declensions();
  } else {
    clear_has_declensions();
  }
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureInfo.declensions)
}

// required bool is_optional = 3;
bool MeasureInfo::has_is_optional() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MeasureInfo::set_has_is_optional() {
  _has_bits_[0] |= 0x00000004u;
}
void MeasureInfo::clear_has_is_optional() {
  _has_bits_[0] &= ~0x00000004u;
}
void MeasureInfo::clear_is_optional() {
  is_optional_ = false;
  clear_has_is_optional();
}
bool MeasureInfo::is_optional() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureInfo.is_optional)
  return is_optional_;
}
void MeasureInfo::set_is_optional(bool value) {
  set_has_is_optional();
  is_optional_ = value;
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureInfo.is_optional)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasureConvertionInfo::kFromIdFieldNumber;
const int MeasureConvertionInfo::kToIdFieldNumber;
const int MeasureConvertionInfo::kACoeffFieldNumber;
const int MeasureConvertionInfo::kBCoeffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasureConvertionInfo::MeasureConvertionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:converterd.pb.MeasureConvertionInfo)
}
MeasureConvertionInfo::MeasureConvertionInfo(const MeasureConvertionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_id()) {
    from_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_id_);
  }
  to_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_id()) {
    to_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_id_);
  }
  a_coeff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a_coeff()) {
    a_coeff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_);
  }
  b_coeff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_b_coeff()) {
    b_coeff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_coeff_);
  }
  // @@protoc_insertion_point(copy_constructor:converterd.pb.MeasureConvertionInfo)
}

void MeasureConvertionInfo::SharedCtor() {
  _cached_size_ = 0;
  from_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_coeff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MeasureConvertionInfo::~MeasureConvertionInfo() {
  // @@protoc_insertion_point(destructor:converterd.pb.MeasureConvertionInfo)
  SharedDtor();
}

void MeasureConvertionInfo::SharedDtor() {
  from_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_coeff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_coeff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeasureConvertionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeasureConvertionInfo::descriptor() {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeasureConvertionInfo& MeasureConvertionInfo::default_instance() {
  protobuf_converter_5fadditive_5fstorage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MeasureConvertionInfo* MeasureConvertionInfo::New(::google::protobuf::Arena* arena) const {
  MeasureConvertionInfo* n = new MeasureConvertionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeasureConvertionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:converterd.pb.MeasureConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!from_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!to_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!a_coeff_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*a_coeff_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!b_coeff_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*b_coeff_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeasureConvertionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:converterd.pb.MeasureConvertionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_id().data(), static_cast<int>(this->from_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureConvertionInfo.from_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_id().data(), static_cast<int>(this->to_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureConvertionInfo.to_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string a_coeff = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a_coeff()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a_coeff().data(), static_cast<int>(this->a_coeff().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureConvertionInfo.a_coeff");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string b_coeff = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b_coeff()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b_coeff().data(), static_cast<int>(this->b_coeff().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "converterd.pb.MeasureConvertionInfo.b_coeff");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:converterd.pb.MeasureConvertionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:converterd.pb.MeasureConvertionInfo)
  return false;
#undef DO_
}

void MeasureConvertionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:converterd.pb.MeasureConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_id().data(), static_cast<int>(this->from_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.from_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_id(), output);
  }

  // required string to_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_id().data(), static_cast<int>(this->to_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.to_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_id(), output);
  }

  // required string a_coeff = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff().data(), static_cast<int>(this->a_coeff().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.a_coeff");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->a_coeff(), output);
  }

  // required string b_coeff = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b_coeff().data(), static_cast<int>(this->b_coeff().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.b_coeff");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->b_coeff(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:converterd.pb.MeasureConvertionInfo)
}

::google::protobuf::uint8* MeasureConvertionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:converterd.pb.MeasureConvertionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_id().data(), static_cast<int>(this->from_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.from_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_id(), target);
  }

  // required string to_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_id().data(), static_cast<int>(this->to_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.to_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_id(), target);
  }

  // required string a_coeff = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_coeff().data(), static_cast<int>(this->a_coeff().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.a_coeff");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->a_coeff(), target);
  }

  // required string b_coeff = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b_coeff().data(), static_cast<int>(this->b_coeff().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "converterd.pb.MeasureConvertionInfo.b_coeff");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->b_coeff(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:converterd.pb.MeasureConvertionInfo)
  return target;
}

size_t MeasureConvertionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:converterd.pb.MeasureConvertionInfo)
  size_t total_size = 0;

  if (has_from_id()) {
    // required string from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_id());
  }

  if (has_to_id()) {
    // required string to_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_id());
  }

  if (has_a_coeff()) {
    // required string a_coeff = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff());
  }

  if (has_b_coeff()) {
    // required string b_coeff = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b_coeff());
  }

  return total_size;
}
size_t MeasureConvertionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:converterd.pb.MeasureConvertionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_id());

    // required string to_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_id());

    // required string a_coeff = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->a_coeff());

    // required string b_coeff = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b_coeff());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeasureConvertionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:converterd.pb.MeasureConvertionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasureConvertionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeasureConvertionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:converterd.pb.MeasureConvertionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:converterd.pb.MeasureConvertionInfo)
    MergeFrom(*source);
  }
}

void MeasureConvertionInfo::MergeFrom(const MeasureConvertionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:converterd.pb.MeasureConvertionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from_id();
      from_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_to_id();
      to_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_a_coeff();
      a_coeff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_coeff_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_b_coeff();
      b_coeff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_coeff_);
    }
  }
}

void MeasureConvertionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:converterd.pb.MeasureConvertionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasureConvertionInfo::CopyFrom(const MeasureConvertionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:converterd.pb.MeasureConvertionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasureConvertionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void MeasureConvertionInfo::Swap(MeasureConvertionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasureConvertionInfo::InternalSwap(MeasureConvertionInfo* other) {
  using std::swap;
  from_id_.Swap(&other->from_id_);
  to_id_.Swap(&other->to_id_);
  a_coeff_.Swap(&other->a_coeff_);
  b_coeff_.Swap(&other->b_coeff_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeasureConvertionInfo::GetMetadata() const {
  protobuf_converter_5fadditive_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_converter_5fadditive_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeasureConvertionInfo

// required string from_id = 1;
bool MeasureConvertionInfo::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MeasureConvertionInfo::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MeasureConvertionInfo::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MeasureConvertionInfo::clear_from_id() {
  from_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_id();
}
const ::std::string& MeasureConvertionInfo::from_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureConvertionInfo.from_id)
  return from_id_.GetNoArena();
}
void MeasureConvertionInfo::set_from_id(const ::std::string& value) {
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureConvertionInfo.from_id)
}
#if LANG_CXX11
void MeasureConvertionInfo::set_from_id(::std::string&& value) {
  set_has_from_id();
  from_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureConvertionInfo.from_id)
}
#endif
void MeasureConvertionInfo::set_from_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureConvertionInfo.from_id)
}
void MeasureConvertionInfo::set_from_id(const char* value, size_t size) {
  set_has_from_id();
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureConvertionInfo.from_id)
}
::std::string* MeasureConvertionInfo::mutable_from_id() {
  set_has_from_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureConvertionInfo.from_id)
  return from_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureConvertionInfo::release_from_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureConvertionInfo.from_id)
  clear_has_from_id();
  return from_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureConvertionInfo::set_allocated_from_id(::std::string* from_id) {
  if (from_id != NULL) {
    set_has_from_id();
  } else {
    clear_has_from_id();
  }
  from_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureConvertionInfo.from_id)
}

// required string to_id = 2;
bool MeasureConvertionInfo::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MeasureConvertionInfo::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MeasureConvertionInfo::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MeasureConvertionInfo::clear_to_id() {
  to_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_id();
}
const ::std::string& MeasureConvertionInfo::to_id() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureConvertionInfo.to_id)
  return to_id_.GetNoArena();
}
void MeasureConvertionInfo::set_to_id(const ::std::string& value) {
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureConvertionInfo.to_id)
}
#if LANG_CXX11
void MeasureConvertionInfo::set_to_id(::std::string&& value) {
  set_has_to_id();
  to_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureConvertionInfo.to_id)
}
#endif
void MeasureConvertionInfo::set_to_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureConvertionInfo.to_id)
}
void MeasureConvertionInfo::set_to_id(const char* value, size_t size) {
  set_has_to_id();
  to_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureConvertionInfo.to_id)
}
::std::string* MeasureConvertionInfo::mutable_to_id() {
  set_has_to_id();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureConvertionInfo.to_id)
  return to_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureConvertionInfo::release_to_id() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureConvertionInfo.to_id)
  clear_has_to_id();
  return to_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureConvertionInfo::set_allocated_to_id(::std::string* to_id) {
  if (to_id != NULL) {
    set_has_to_id();
  } else {
    clear_has_to_id();
  }
  to_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_id);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureConvertionInfo.to_id)
}

// required string a_coeff = 3;
bool MeasureConvertionInfo::has_a_coeff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MeasureConvertionInfo::set_has_a_coeff() {
  _has_bits_[0] |= 0x00000004u;
}
void MeasureConvertionInfo::clear_has_a_coeff() {
  _has_bits_[0] &= ~0x00000004u;
}
void MeasureConvertionInfo::clear_a_coeff() {
  a_coeff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a_coeff();
}
const ::std::string& MeasureConvertionInfo::a_coeff() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureConvertionInfo.a_coeff)
  return a_coeff_.GetNoArena();
}
void MeasureConvertionInfo::set_a_coeff(const ::std::string& value) {
  set_has_a_coeff();
  a_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureConvertionInfo.a_coeff)
}
#if LANG_CXX11
void MeasureConvertionInfo::set_a_coeff(::std::string&& value) {
  set_has_a_coeff();
  a_coeff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureConvertionInfo.a_coeff)
}
#endif
void MeasureConvertionInfo::set_a_coeff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_a_coeff();
  a_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureConvertionInfo.a_coeff)
}
void MeasureConvertionInfo::set_a_coeff(const char* value, size_t size) {
  set_has_a_coeff();
  a_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureConvertionInfo.a_coeff)
}
::std::string* MeasureConvertionInfo::mutable_a_coeff() {
  set_has_a_coeff();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureConvertionInfo.a_coeff)
  return a_coeff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureConvertionInfo::release_a_coeff() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureConvertionInfo.a_coeff)
  clear_has_a_coeff();
  return a_coeff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureConvertionInfo::set_allocated_a_coeff(::std::string* a_coeff) {
  if (a_coeff != NULL) {
    set_has_a_coeff();
  } else {
    clear_has_a_coeff();
  }
  a_coeff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a_coeff);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureConvertionInfo.a_coeff)
}

// required string b_coeff = 4;
bool MeasureConvertionInfo::has_b_coeff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MeasureConvertionInfo::set_has_b_coeff() {
  _has_bits_[0] |= 0x00000008u;
}
void MeasureConvertionInfo::clear_has_b_coeff() {
  _has_bits_[0] &= ~0x00000008u;
}
void MeasureConvertionInfo::clear_b_coeff() {
  b_coeff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b_coeff();
}
const ::std::string& MeasureConvertionInfo::b_coeff() const {
  // @@protoc_insertion_point(field_get:converterd.pb.MeasureConvertionInfo.b_coeff)
  return b_coeff_.GetNoArena();
}
void MeasureConvertionInfo::set_b_coeff(const ::std::string& value) {
  set_has_b_coeff();
  b_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:converterd.pb.MeasureConvertionInfo.b_coeff)
}
#if LANG_CXX11
void MeasureConvertionInfo::set_b_coeff(::std::string&& value) {
  set_has_b_coeff();
  b_coeff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:converterd.pb.MeasureConvertionInfo.b_coeff)
}
#endif
void MeasureConvertionInfo::set_b_coeff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_b_coeff();
  b_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:converterd.pb.MeasureConvertionInfo.b_coeff)
}
void MeasureConvertionInfo::set_b_coeff(const char* value, size_t size) {
  set_has_b_coeff();
  b_coeff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:converterd.pb.MeasureConvertionInfo.b_coeff)
}
::std::string* MeasureConvertionInfo::mutable_b_coeff() {
  set_has_b_coeff();
  // @@protoc_insertion_point(field_mutable:converterd.pb.MeasureConvertionInfo.b_coeff)
  return b_coeff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeasureConvertionInfo::release_b_coeff() {
  // @@protoc_insertion_point(field_release:converterd.pb.MeasureConvertionInfo.b_coeff)
  clear_has_b_coeff();
  return b_coeff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeasureConvertionInfo::set_allocated_b_coeff(::std::string* b_coeff) {
  if (b_coeff != NULL) {
    set_has_b_coeff();
  } else {
    clear_has_b_coeff();
  }
  b_coeff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b_coeff);
  // @@protoc_insertion_point(field_set_allocated:converterd.pb.MeasureConvertionInfo.b_coeff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace converterd

// @@protoc_insertion_point(global_scope)
