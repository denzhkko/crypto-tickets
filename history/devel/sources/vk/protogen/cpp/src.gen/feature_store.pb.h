// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feature_store.proto

#ifndef PROTOBUF_feature_5fstore_2eproto__INCLUDED
#define PROTOBUF_feature_5fstore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace feature_store {
namespace pb {
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class Feature;
class FeatureDefaultTypeInternal;
extern FeatureDefaultTypeInternal _Feature_default_instance_;
class FeatureSet;
class FeatureSetDefaultTypeInternal;
extern FeatureSetDefaultTypeInternal _FeatureSet_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class ValidationStatus;
class ValidationStatusDefaultTypeInternal;
extern ValidationStatusDefaultTypeInternal _ValidationStatus_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
class WriteFeatureSetResponse;
class WriteFeatureSetResponseDefaultTypeInternal;
extern WriteFeatureSetResponseDefaultTypeInternal _WriteFeatureSetResponse_default_instance_;
class WriteRequest;
class WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
class WriteResponse;
class WriteResponseDefaultTypeInternal;
extern WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
class WriteStatus;
class WriteStatusDefaultTypeInternal;
extern WriteStatusDefaultTypeInternal _WriteStatus_default_instance_;
}  // namespace pb
}  // namespace feature_store

namespace feature_store {
namespace pb {

namespace protobuf_feature_5fstore_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_feature_5fstore_2eproto

enum ValidationStatus_Code {
  ValidationStatus_Code_OK = 1,
  ValidationStatus_Code_UNKNOWN_FEATURE_SET = 2,
  ValidationStatus_Code_UNKNOWN_FEATURE = 3,
  ValidationStatus_Code_MISSING_REQUIRED_FEATURE = 4
};
bool ValidationStatus_Code_IsValid(int value);
const ValidationStatus_Code ValidationStatus_Code_Code_MIN = ValidationStatus_Code_OK;
const ValidationStatus_Code ValidationStatus_Code_Code_MAX = ValidationStatus_Code_MISSING_REQUIRED_FEATURE;
const int ValidationStatus_Code_Code_ARRAYSIZE = ValidationStatus_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* ValidationStatus_Code_descriptor();
inline const ::std::string& ValidationStatus_Code_Name(ValidationStatus_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    ValidationStatus_Code_descriptor(), value);
}
inline bool ValidationStatus_Code_Parse(
    const ::std::string& name, ValidationStatus_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ValidationStatus_Code>(
    ValidationStatus_Code_descriptor(), name, value);
}
enum WriteStatus_Code {
  WriteStatus_Code_OK = 1
};
bool WriteStatus_Code_IsValid(int value);
const WriteStatus_Code WriteStatus_Code_Code_MIN = WriteStatus_Code_OK;
const WriteStatus_Code WriteStatus_Code_Code_MAX = WriteStatus_Code_OK;
const int WriteStatus_Code_Code_ARRAYSIZE = WriteStatus_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* WriteStatus_Code_descriptor();
inline const ::std::string& WriteStatus_Code_Name(WriteStatus_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    WriteStatus_Code_descriptor(), value);
}
inline bool WriteStatus_Code_Parse(
    const ::std::string& name, WriteStatus_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WriteStatus_Code>(
    WriteStatus_Code_descriptor(), name, value);
}
enum Response_Status {
  Response_Status_OK = 1,
  Response_Status_NO_PAYLOAD = 2,
  Response_Status_INVALID_PROTOBUF = 3,
  Response_Status_UNKNOWN_ERROR = 64
};
bool Response_Status_IsValid(int value);
const Response_Status Response_Status_Status_MIN = Response_Status_OK;
const Response_Status Response_Status_Status_MAX = Response_Status_UNKNOWN_ERROR;
const int Response_Status_Status_ARRAYSIZE = Response_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_Status_descriptor();
inline const ::std::string& Response_Status_Name(Response_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_Status_descriptor(), value);
}
inline bool Response_Status_Parse(
    const ::std::string& name, Response_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_Status>(
    Response_Status_descriptor(), name, value);
}
// ===================================================================

class Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value(Value&& from) noexcept
    : Value() {
    *this = ::std::move(from);
  }

  inline Value& operator=(Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Value* other);
  friend void swap(Value& a, Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value* New() const PROTOBUF_FINAL { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 8;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 8;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional double dbl = 2;
  bool has_dbl() const;
  void clear_dbl();
  static const int kDblFieldNumber = 2;
  double dbl() const;
  void set_dbl(double value);

  // optional float flt = 1;
  bool has_flt() const;
  void clear_flt();
  static const int kFltFieldNumber = 1;
  float flt() const;
  void set_flt(float value);

  // optional int32 i32 = 3;
  bool has_i32() const;
  void clear_i32();
  static const int kI32FieldNumber = 3;
  ::google::protobuf::int32 i32() const;
  void set_i32(::google::protobuf::int32 value);

  // optional int64 i64 = 4;
  bool has_i64() const;
  void clear_i64();
  static const int kI64FieldNumber = 4;
  ::google::protobuf::int64 i64() const;
  void set_i64(::google::protobuf::int64 value);

  // optional uint64 ui64 = 6;
  bool has_ui64() const;
  void clear_ui64();
  static const int kUi64FieldNumber = 6;
  ::google::protobuf::uint64 ui64() const;
  void set_ui64(::google::protobuf::uint64 value);

  // optional uint32 ui32 = 5;
  bool has_ui32() const;
  void clear_ui32();
  static const int kUi32FieldNumber = 5;
  ::google::protobuf::uint32 ui32() const;
  void set_ui32(::google::protobuf::uint32 value);

  // optional bool bl = 7;
  bool has_bl() const;
  void clear_bl();
  static const int kBlFieldNumber = 7;
  bool bl() const;
  void set_bl(bool value);

  // @@protoc_insertion_point(class_scope:feature_store.pb.Value)
 private:
  void set_has_flt();
  void clear_has_flt();
  void set_has_dbl();
  void clear_has_dbl();
  void set_has_i32();
  void clear_has_i32();
  void set_has_i64();
  void clear_has_i64();
  void set_has_ui32();
  void clear_has_ui32();
  void set_has_ui64();
  void clear_has_ui64();
  void set_has_bl();
  void clear_has_bl();
  void set_has_str();
  void clear_has_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  double dbl_;
  float flt_;
  ::google::protobuf::int32 i32_;
  ::google::protobuf::int64 i64_;
  ::google::protobuf::uint64 ui64_;
  ::google::protobuf::uint32 ui32_;
  bool bl_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Feature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.Feature) */ {
 public:
  Feature();
  virtual ~Feature();

  Feature(const Feature& from);

  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Feature(Feature&& from) noexcept
    : Feature() {
    *this = ::std::move(from);
  }

  inline Feature& operator=(Feature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Feature& default_instance();

  static inline const Feature* internal_default_instance() {
    return reinterpret_cast<const Feature*>(
               &_Feature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Feature* other);
  friend void swap(Feature& a, Feature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Feature* New() const PROTOBUF_FINAL { return New(NULL); }

  Feature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Feature& from);
  void MergeFrom(const Feature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Feature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .feature_store.pb.Value value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::feature_store::pb::Value& value() const;
  ::feature_store::pb::Value* mutable_value();
  ::feature_store::pb::Value* release_value();
  void set_allocated_value(::feature_store::pb::Value* value);

  // optional uint64 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:feature_store.pb.Feature)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::feature_store::pb::Value* value_;
  ::google::protobuf::uint64 index_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Entity* other);
  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const PROTOBUF_FINAL { return New(NULL); }

  Entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:feature_store.pb.Entity)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_id();
  void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.FeatureSet) */ {
 public:
  FeatureSet();
  virtual ~FeatureSet();

  FeatureSet(const FeatureSet& from);

  inline FeatureSet& operator=(const FeatureSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureSet(FeatureSet&& from) noexcept
    : FeatureSet() {
    *this = ::std::move(from);
  }

  inline FeatureSet& operator=(FeatureSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureSet& default_instance();

  static inline const FeatureSet* internal_default_instance() {
    return reinterpret_cast<const FeatureSet*>(
               &_FeatureSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FeatureSet* other);
  friend void swap(FeatureSet& a, FeatureSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureSet* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureSet& from);
  void MergeFrom(const FeatureSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_store.pb.Entity entities = 3;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 3;
  const ::feature_store::pb::Entity& entities(int index) const;
  ::feature_store::pb::Entity* mutable_entities(int index);
  ::feature_store::pb::Entity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Entity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Entity >&
      entities() const;

  // repeated .feature_store.pb.Feature features = 4;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 4;
  const ::feature_store::pb::Feature& features(int index) const;
  ::feature_store::pb::Feature* mutable_features(int index);
  ::feature_store::pb::Feature* add_features();
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Feature >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Feature >&
      features() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* mutable_timestamp();
  ::google::protobuf::Timestamp* release_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // @@protoc_insertion_point(class_scope:feature_store.pb.FeatureSet)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Entity > entities_;
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Feature > features_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::Timestamp* timestamp_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValidationStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.ValidationStatus) */ {
 public:
  ValidationStatus();
  virtual ~ValidationStatus();

  ValidationStatus(const ValidationStatus& from);

  inline ValidationStatus& operator=(const ValidationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidationStatus(ValidationStatus&& from) noexcept
    : ValidationStatus() {
    *this = ::std::move(from);
  }

  inline ValidationStatus& operator=(ValidationStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidationStatus& default_instance();

  static inline const ValidationStatus* internal_default_instance() {
    return reinterpret_cast<const ValidationStatus*>(
               &_ValidationStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ValidationStatus* other);
  friend void swap(ValidationStatus& a, ValidationStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidationStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ValidationStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValidationStatus& from);
  void MergeFrom(const ValidationStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValidationStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ValidationStatus_Code Code;
  static const Code OK =
    ValidationStatus_Code_OK;
  static const Code UNKNOWN_FEATURE_SET =
    ValidationStatus_Code_UNKNOWN_FEATURE_SET;
  static const Code UNKNOWN_FEATURE =
    ValidationStatus_Code_UNKNOWN_FEATURE;
  static const Code MISSING_REQUIRED_FEATURE =
    ValidationStatus_Code_MISSING_REQUIRED_FEATURE;
  static inline bool Code_IsValid(int value) {
    return ValidationStatus_Code_IsValid(value);
  }
  static const Code Code_MIN =
    ValidationStatus_Code_Code_MIN;
  static const Code Code_MAX =
    ValidationStatus_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    ValidationStatus_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return ValidationStatus_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return ValidationStatus_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return ValidationStatus_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional .feature_store.pb.ValidationStatus.Code code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::feature_store::pb::ValidationStatus_Code code() const;
  void set_code(::feature_store::pb::ValidationStatus_Code value);

  // @@protoc_insertion_point(class_scope:feature_store.pb.ValidationStatus)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_description();
  void clear_has_description();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int code_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.WriteStatus) */ {
 public:
  WriteStatus();
  virtual ~WriteStatus();

  WriteStatus(const WriteStatus& from);

  inline WriteStatus& operator=(const WriteStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteStatus(WriteStatus&& from) noexcept
    : WriteStatus() {
    *this = ::std::move(from);
  }

  inline WriteStatus& operator=(WriteStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteStatus& default_instance();

  static inline const WriteStatus* internal_default_instance() {
    return reinterpret_cast<const WriteStatus*>(
               &_WriteStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(WriteStatus* other);
  friend void swap(WriteStatus& a, WriteStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteStatus& from);
  void MergeFrom(const WriteStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WriteStatus_Code Code;
  static const Code OK =
    WriteStatus_Code_OK;
  static inline bool Code_IsValid(int value) {
    return WriteStatus_Code_IsValid(value);
  }
  static const Code Code_MIN =
    WriteStatus_Code_Code_MIN;
  static const Code Code_MAX =
    WriteStatus_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    WriteStatus_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return WriteStatus_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return WriteStatus_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return WriteStatus_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional .feature_store.pb.WriteStatus.Code code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::feature_store::pb::WriteStatus_Code code() const;
  void set_code(::feature_store::pb::WriteStatus_Code value);

  // @@protoc_insertion_point(class_scope:feature_store.pb.WriteStatus)
 private:
  void set_has_tag();
  void clear_has_tag();
  void set_has_code();
  void clear_has_code();
  void set_has_description();
  void clear_has_description();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int code_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRequest(WriteRequest&& from) noexcept
    : WriteRequest() {
    *this = ::std::move(from);
  }

  inline WriteRequest& operator=(WriteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();

  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
               &_WriteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(WriteRequest* other);
  friend void swap(WriteRequest& a, WriteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_store.pb.FeatureSet feature_sets = 1;
  int feature_sets_size() const;
  void clear_feature_sets();
  static const int kFeatureSetsFieldNumber = 1;
  const ::feature_store::pb::FeatureSet& feature_sets(int index) const;
  ::feature_store::pb::FeatureSet* mutable_feature_sets(int index);
  ::feature_store::pb::FeatureSet* add_feature_sets();
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::FeatureSet >*
      mutable_feature_sets();
  const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::FeatureSet >&
      feature_sets() const;

  // @@protoc_insertion_point(class_scope:feature_store.pb.WriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::FeatureSet > feature_sets_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteFeatureSetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.WriteFeatureSetResponse) */ {
 public:
  WriteFeatureSetResponse();
  virtual ~WriteFeatureSetResponse();

  WriteFeatureSetResponse(const WriteFeatureSetResponse& from);

  inline WriteFeatureSetResponse& operator=(const WriteFeatureSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteFeatureSetResponse(WriteFeatureSetResponse&& from) noexcept
    : WriteFeatureSetResponse() {
    *this = ::std::move(from);
  }

  inline WriteFeatureSetResponse& operator=(WriteFeatureSetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteFeatureSetResponse& default_instance();

  static inline const WriteFeatureSetResponse* internal_default_instance() {
    return reinterpret_cast<const WriteFeatureSetResponse*>(
               &_WriteFeatureSetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(WriteFeatureSetResponse* other);
  friend void swap(WriteFeatureSetResponse& a, WriteFeatureSetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteFeatureSetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteFeatureSetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteFeatureSetResponse& from);
  void MergeFrom(const WriteFeatureSetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteFeatureSetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_store.pb.WriteStatus write_statuses = 2;
  int write_statuses_size() const;
  void clear_write_statuses();
  static const int kWriteStatusesFieldNumber = 2;
  const ::feature_store::pb::WriteStatus& write_statuses(int index) const;
  ::feature_store::pb::WriteStatus* mutable_write_statuses(int index);
  ::feature_store::pb::WriteStatus* add_write_statuses();
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteStatus >*
      mutable_write_statuses();
  const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteStatus >&
      write_statuses() const;

  // optional .feature_store.pb.ValidationStatus validation_status = 1;
  bool has_validation_status() const;
  void clear_validation_status();
  static const int kValidationStatusFieldNumber = 1;
  const ::feature_store::pb::ValidationStatus& validation_status() const;
  ::feature_store::pb::ValidationStatus* mutable_validation_status();
  ::feature_store::pb::ValidationStatus* release_validation_status();
  void set_allocated_validation_status(::feature_store::pb::ValidationStatus* validation_status);

  // @@protoc_insertion_point(class_scope:feature_store.pb.WriteFeatureSetResponse)
 private:
  void set_has_validation_status();
  void clear_has_validation_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteStatus > write_statuses_;
  ::feature_store::pb::ValidationStatus* validation_status_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.WriteResponse) */ {
 public:
  WriteResponse();
  virtual ~WriteResponse();

  WriteResponse(const WriteResponse& from);

  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteResponse(WriteResponse&& from) noexcept
    : WriteResponse() {
    *this = ::std::move(from);
  }

  inline WriteResponse& operator=(WriteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteResponse& default_instance();

  static inline const WriteResponse* internal_default_instance() {
    return reinterpret_cast<const WriteResponse*>(
               &_WriteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(WriteResponse* other);
  friend void swap(WriteResponse& a, WriteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_store.pb.WriteFeatureSetResponse responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  const ::feature_store::pb::WriteFeatureSetResponse& responses(int index) const;
  ::feature_store::pb::WriteFeatureSetResponse* mutable_responses(int index);
  ::feature_store::pb::WriteFeatureSetResponse* add_responses();
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteFeatureSetResponse >*
      mutable_responses();
  const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteFeatureSetResponse >&
      responses() const;

  // @@protoc_insertion_point(class_scope:feature_store.pb.WriteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteFeatureSetResponse > responses_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_store.pb.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Response_Status Status;
  static const Status OK =
    Response_Status_OK;
  static const Status NO_PAYLOAD =
    Response_Status_NO_PAYLOAD;
  static const Status INVALID_PROTOBUF =
    Response_Status_INVALID_PROTOBUF;
  static const Status UNKNOWN_ERROR =
    Response_Status_UNKNOWN_ERROR;
  static inline bool Status_IsValid(int value) {
    return Response_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Response_Status_Status_MIN;
  static const Status Status_MAX =
    Response_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Response_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Response_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Response_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Response_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .feature_store.pb.WriteResponse write_response = 2;
  bool has_write_response() const;
  void clear_write_response();
  static const int kWriteResponseFieldNumber = 2;
  const ::feature_store::pb::WriteResponse& write_response() const;
  ::feature_store::pb::WriteResponse* mutable_write_response();
  ::feature_store::pb::WriteResponse* release_write_response();
  void set_allocated_write_response(::feature_store::pb::WriteResponse* write_response);

  // optional .feature_store.pb.Response.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::feature_store::pb::Response_Status status() const;
  void set_status(::feature_store::pb::Response_Status value);

  // @@protoc_insertion_point(class_scope:feature_store.pb.Response)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_write_response();
  void clear_has_write_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::feature_store::pb::WriteResponse* write_response_;
  int status_;
  friend struct protobuf_feature_5fstore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Value

// optional float flt = 1;
inline bool Value::has_flt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Value::set_has_flt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Value::clear_has_flt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Value::clear_flt() {
  flt_ = 0;
  clear_has_flt();
}
inline float Value::flt() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.flt)
  return flt_;
}
inline void Value::set_flt(float value) {
  set_has_flt();
  flt_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.flt)
}

// optional double dbl = 2;
inline bool Value::has_dbl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Value::set_has_dbl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Value::clear_has_dbl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Value::clear_dbl() {
  dbl_ = 0;
  clear_has_dbl();
}
inline double Value::dbl() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.dbl)
  return dbl_;
}
inline void Value::set_dbl(double value) {
  set_has_dbl();
  dbl_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.dbl)
}

// optional int32 i32 = 3;
inline bool Value::has_i32() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Value::set_has_i32() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Value::clear_has_i32() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Value::clear_i32() {
  i32_ = 0;
  clear_has_i32();
}
inline ::google::protobuf::int32 Value::i32() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.i32)
  return i32_;
}
inline void Value::set_i32(::google::protobuf::int32 value) {
  set_has_i32();
  i32_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.i32)
}

// optional int64 i64 = 4;
inline bool Value::has_i64() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Value::set_has_i64() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Value::clear_has_i64() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Value::clear_i64() {
  i64_ = GOOGLE_LONGLONG(0);
  clear_has_i64();
}
inline ::google::protobuf::int64 Value::i64() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.i64)
  return i64_;
}
inline void Value::set_i64(::google::protobuf::int64 value) {
  set_has_i64();
  i64_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.i64)
}

// optional uint32 ui32 = 5;
inline bool Value::has_ui32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Value::set_has_ui32() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Value::clear_has_ui32() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Value::clear_ui32() {
  ui32_ = 0u;
  clear_has_ui32();
}
inline ::google::protobuf::uint32 Value::ui32() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.ui32)
  return ui32_;
}
inline void Value::set_ui32(::google::protobuf::uint32 value) {
  set_has_ui32();
  ui32_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.ui32)
}

// optional uint64 ui64 = 6;
inline bool Value::has_ui64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Value::set_has_ui64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Value::clear_has_ui64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Value::clear_ui64() {
  ui64_ = GOOGLE_ULONGLONG(0);
  clear_has_ui64();
}
inline ::google::protobuf::uint64 Value::ui64() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.ui64)
  return ui64_;
}
inline void Value::set_ui64(::google::protobuf::uint64 value) {
  set_has_ui64();
  ui64_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.ui64)
}

// optional bool bl = 7;
inline bool Value::has_bl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Value::set_has_bl() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Value::clear_has_bl() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Value::clear_bl() {
  bl_ = false;
  clear_has_bl();
}
inline bool Value::bl() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.bl)
  return bl_;
}
inline void Value::set_bl(bool value) {
  set_has_bl();
  bl_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.bl)
}

// optional string str = 8;
inline bool Value::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Value::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Value::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Value::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Value::str() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Value.str)
  return str_.GetNoArena();
}
inline void Value::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.Value.str)
}
#if LANG_CXX11
inline void Value::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.Value.str)
}
#endif
inline void Value::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.Value.str)
}
inline void Value::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.Value.str)
}
inline ::std::string* Value::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.Value.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_str() {
  // @@protoc_insertion_point(field_release:feature_store.pb.Value.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.Value.str)
}

// -------------------------------------------------------------------

// Feature

// optional uint64 index = 1;
inline bool Feature::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Feature::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Feature::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Feature::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 Feature::index() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Feature.index)
  return index_;
}
inline void Feature::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Feature.index)
}

// optional .feature_store.pb.Value value = 2;
inline bool Feature::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Feature::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Feature::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Feature::clear_value() {
  if (value_ != NULL) value_->::feature_store::pb::Value::Clear();
  clear_has_value();
}
inline const ::feature_store::pb::Value& Feature::value() const {
  const ::feature_store::pb::Value* p = value_;
  // @@protoc_insertion_point(field_get:feature_store.pb.Feature.value)
  return p != NULL ? *p : *reinterpret_cast<const ::feature_store::pb::Value*>(
      &::feature_store::pb::_Value_default_instance_);
}
inline ::feature_store::pb::Value* Feature::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::feature_store::pb::Value;
  }
  // @@protoc_insertion_point(field_mutable:feature_store.pb.Feature.value)
  return value_;
}
inline ::feature_store::pb::Value* Feature::release_value() {
  // @@protoc_insertion_point(field_release:feature_store.pb.Feature.value)
  clear_has_value();
  ::feature_store::pb::Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Feature::set_allocated_value(::feature_store::pb::Value* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.Feature.value)
}

// -------------------------------------------------------------------

// Entity

// required string name = 1;
inline bool Entity::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entity::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entity::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entity::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Entity::name() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Entity.name)
  return name_.GetNoArena();
}
inline void Entity::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.Entity.name)
}
#if LANG_CXX11
inline void Entity::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.Entity.name)
}
#endif
inline void Entity::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.Entity.name)
}
inline void Entity::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.Entity.name)
}
inline ::std::string* Entity::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.Entity.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_name() {
  // @@protoc_insertion_point(field_release:feature_store.pb.Entity.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.Entity.name)
}

// required string id = 2;
inline bool Entity::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entity::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entity::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entity::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Entity::id() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Entity.id)
  return id_.GetNoArena();
}
inline void Entity::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.Entity.id)
}
#if LANG_CXX11
inline void Entity::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.Entity.id)
}
#endif
inline void Entity::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.Entity.id)
}
inline void Entity::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.Entity.id)
}
inline ::std::string* Entity::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.Entity.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_id() {
  // @@protoc_insertion_point(field_release:feature_store.pb.Entity.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.Entity.id)
}

// -------------------------------------------------------------------

// FeatureSet

// required string id = 1;
inline bool FeatureSet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureSet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureSet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureSet::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& FeatureSet::id() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.FeatureSet.id)
  return id_.GetNoArena();
}
inline void FeatureSet::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.FeatureSet.id)
}
#if LANG_CXX11
inline void FeatureSet::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.FeatureSet.id)
}
#endif
inline void FeatureSet::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.FeatureSet.id)
}
inline void FeatureSet::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.FeatureSet.id)
}
inline ::std::string* FeatureSet::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.FeatureSet.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FeatureSet::release_id() {
  // @@protoc_insertion_point(field_release:feature_store.pb.FeatureSet.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FeatureSet::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.FeatureSet.id)
}

// optional .google.protobuf.Timestamp timestamp = 2;
inline bool FeatureSet::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureSet::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureSet::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureSet::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->::google::protobuf::Timestamp::Clear();
  clear_has_timestamp();
}
inline const ::google::protobuf::Timestamp& FeatureSet::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:feature_store.pb.FeatureSet.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* FeatureSet::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:feature_store.pb.FeatureSet.timestamp)
  return timestamp_;
}
inline ::google::protobuf::Timestamp* FeatureSet::release_timestamp() {
  // @@protoc_insertion_point(field_release:feature_store.pb.FeatureSet.timestamp)
  clear_has_timestamp();
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void FeatureSet::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.FeatureSet.timestamp)
}

// repeated .feature_store.pb.Entity entities = 3;
inline int FeatureSet::entities_size() const {
  return entities_.size();
}
inline void FeatureSet::clear_entities() {
  entities_.Clear();
}
inline const ::feature_store::pb::Entity& FeatureSet::entities(int index) const {
  // @@protoc_insertion_point(field_get:feature_store.pb.FeatureSet.entities)
  return entities_.Get(index);
}
inline ::feature_store::pb::Entity* FeatureSet::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:feature_store.pb.FeatureSet.entities)
  return entities_.Mutable(index);
}
inline ::feature_store::pb::Entity* FeatureSet::add_entities() {
  // @@protoc_insertion_point(field_add:feature_store.pb.FeatureSet.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Entity >*
FeatureSet::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:feature_store.pb.FeatureSet.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Entity >&
FeatureSet::entities() const {
  // @@protoc_insertion_point(field_list:feature_store.pb.FeatureSet.entities)
  return entities_;
}

// repeated .feature_store.pb.Feature features = 4;
inline int FeatureSet::features_size() const {
  return features_.size();
}
inline void FeatureSet::clear_features() {
  features_.Clear();
}
inline const ::feature_store::pb::Feature& FeatureSet::features(int index) const {
  // @@protoc_insertion_point(field_get:feature_store.pb.FeatureSet.features)
  return features_.Get(index);
}
inline ::feature_store::pb::Feature* FeatureSet::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:feature_store.pb.FeatureSet.features)
  return features_.Mutable(index);
}
inline ::feature_store::pb::Feature* FeatureSet::add_features() {
  // @@protoc_insertion_point(field_add:feature_store.pb.FeatureSet.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Feature >*
FeatureSet::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:feature_store.pb.FeatureSet.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::Feature >&
FeatureSet::features() const {
  // @@protoc_insertion_point(field_list:feature_store.pb.FeatureSet.features)
  return features_;
}

// -------------------------------------------------------------------

// ValidationStatus

// optional .feature_store.pb.ValidationStatus.Code code = 1;
inline bool ValidationStatus::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ValidationStatus::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ValidationStatus::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ValidationStatus::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::feature_store::pb::ValidationStatus_Code ValidationStatus::code() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.ValidationStatus.code)
  return static_cast< ::feature_store::pb::ValidationStatus_Code >(code_);
}
inline void ValidationStatus::set_code(::feature_store::pb::ValidationStatus_Code value) {
  assert(::feature_store::pb::ValidationStatus_Code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.ValidationStatus.code)
}

// optional string description = 2;
inline bool ValidationStatus::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ValidationStatus::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ValidationStatus::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ValidationStatus::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& ValidationStatus::description() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.ValidationStatus.description)
  return description_.GetNoArena();
}
inline void ValidationStatus::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.ValidationStatus.description)
}
#if LANG_CXX11
inline void ValidationStatus::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.ValidationStatus.description)
}
#endif
inline void ValidationStatus::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.ValidationStatus.description)
}
inline void ValidationStatus::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.ValidationStatus.description)
}
inline ::std::string* ValidationStatus::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.ValidationStatus.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValidationStatus::release_description() {
  // @@protoc_insertion_point(field_release:feature_store.pb.ValidationStatus.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValidationStatus::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.ValidationStatus.description)
}

// -------------------------------------------------------------------

// WriteStatus

// optional string tag = 1;
inline bool WriteStatus::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteStatus::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteStatus::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteStatus::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
inline const ::std::string& WriteStatus::tag() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteStatus.tag)
  return tag_.GetNoArena();
}
inline void WriteStatus::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.WriteStatus.tag)
}
#if LANG_CXX11
inline void WriteStatus::set_tag(::std::string&& value) {
  set_has_tag();
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.WriteStatus.tag)
}
#endif
inline void WriteStatus::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.WriteStatus.tag)
}
inline void WriteStatus::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.WriteStatus.tag)
}
inline ::std::string* WriteStatus::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteStatus.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteStatus::release_tag() {
  // @@protoc_insertion_point(field_release:feature_store.pb.WriteStatus.tag)
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteStatus::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.WriteStatus.tag)
}

// optional .feature_store.pb.WriteStatus.Code code = 2;
inline bool WriteStatus::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WriteStatus::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WriteStatus::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WriteStatus::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::feature_store::pb::WriteStatus_Code WriteStatus::code() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteStatus.code)
  return static_cast< ::feature_store::pb::WriteStatus_Code >(code_);
}
inline void WriteStatus::set_code(::feature_store::pb::WriteStatus_Code value) {
  assert(::feature_store::pb::WriteStatus_Code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.WriteStatus.code)
}

// optional string description = 3;
inline bool WriteStatus::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteStatus::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteStatus::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteStatus::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& WriteStatus::description() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteStatus.description)
  return description_.GetNoArena();
}
inline void WriteStatus::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_store.pb.WriteStatus.description)
}
#if LANG_CXX11
inline void WriteStatus::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_store.pb.WriteStatus.description)
}
#endif
inline void WriteStatus::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_store.pb.WriteStatus.description)
}
inline void WriteStatus::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_store.pb.WriteStatus.description)
}
inline ::std::string* WriteStatus::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteStatus.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteStatus::release_description() {
  // @@protoc_insertion_point(field_release:feature_store.pb.WriteStatus.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteStatus::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.WriteStatus.description)
}

// -------------------------------------------------------------------

// WriteRequest

// repeated .feature_store.pb.FeatureSet feature_sets = 1;
inline int WriteRequest::feature_sets_size() const {
  return feature_sets_.size();
}
inline void WriteRequest::clear_feature_sets() {
  feature_sets_.Clear();
}
inline const ::feature_store::pb::FeatureSet& WriteRequest::feature_sets(int index) const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteRequest.feature_sets)
  return feature_sets_.Get(index);
}
inline ::feature_store::pb::FeatureSet* WriteRequest::mutable_feature_sets(int index) {
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteRequest.feature_sets)
  return feature_sets_.Mutable(index);
}
inline ::feature_store::pb::FeatureSet* WriteRequest::add_feature_sets() {
  // @@protoc_insertion_point(field_add:feature_store.pb.WriteRequest.feature_sets)
  return feature_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::feature_store::pb::FeatureSet >*
WriteRequest::mutable_feature_sets() {
  // @@protoc_insertion_point(field_mutable_list:feature_store.pb.WriteRequest.feature_sets)
  return &feature_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::FeatureSet >&
WriteRequest::feature_sets() const {
  // @@protoc_insertion_point(field_list:feature_store.pb.WriteRequest.feature_sets)
  return feature_sets_;
}

// -------------------------------------------------------------------

// WriteFeatureSetResponse

// optional .feature_store.pb.ValidationStatus validation_status = 1;
inline bool WriteFeatureSetResponse::has_validation_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteFeatureSetResponse::set_has_validation_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteFeatureSetResponse::clear_has_validation_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteFeatureSetResponse::clear_validation_status() {
  if (validation_status_ != NULL) validation_status_->::feature_store::pb::ValidationStatus::Clear();
  clear_has_validation_status();
}
inline const ::feature_store::pb::ValidationStatus& WriteFeatureSetResponse::validation_status() const {
  const ::feature_store::pb::ValidationStatus* p = validation_status_;
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteFeatureSetResponse.validation_status)
  return p != NULL ? *p : *reinterpret_cast<const ::feature_store::pb::ValidationStatus*>(
      &::feature_store::pb::_ValidationStatus_default_instance_);
}
inline ::feature_store::pb::ValidationStatus* WriteFeatureSetResponse::mutable_validation_status() {
  set_has_validation_status();
  if (validation_status_ == NULL) {
    validation_status_ = new ::feature_store::pb::ValidationStatus;
  }
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteFeatureSetResponse.validation_status)
  return validation_status_;
}
inline ::feature_store::pb::ValidationStatus* WriteFeatureSetResponse::release_validation_status() {
  // @@protoc_insertion_point(field_release:feature_store.pb.WriteFeatureSetResponse.validation_status)
  clear_has_validation_status();
  ::feature_store::pb::ValidationStatus* temp = validation_status_;
  validation_status_ = NULL;
  return temp;
}
inline void WriteFeatureSetResponse::set_allocated_validation_status(::feature_store::pb::ValidationStatus* validation_status) {
  delete validation_status_;
  validation_status_ = validation_status;
  if (validation_status) {
    set_has_validation_status();
  } else {
    clear_has_validation_status();
  }
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.WriteFeatureSetResponse.validation_status)
}

// repeated .feature_store.pb.WriteStatus write_statuses = 2;
inline int WriteFeatureSetResponse::write_statuses_size() const {
  return write_statuses_.size();
}
inline void WriteFeatureSetResponse::clear_write_statuses() {
  write_statuses_.Clear();
}
inline const ::feature_store::pb::WriteStatus& WriteFeatureSetResponse::write_statuses(int index) const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteFeatureSetResponse.write_statuses)
  return write_statuses_.Get(index);
}
inline ::feature_store::pb::WriteStatus* WriteFeatureSetResponse::mutable_write_statuses(int index) {
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteFeatureSetResponse.write_statuses)
  return write_statuses_.Mutable(index);
}
inline ::feature_store::pb::WriteStatus* WriteFeatureSetResponse::add_write_statuses() {
  // @@protoc_insertion_point(field_add:feature_store.pb.WriteFeatureSetResponse.write_statuses)
  return write_statuses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteStatus >*
WriteFeatureSetResponse::mutable_write_statuses() {
  // @@protoc_insertion_point(field_mutable_list:feature_store.pb.WriteFeatureSetResponse.write_statuses)
  return &write_statuses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteStatus >&
WriteFeatureSetResponse::write_statuses() const {
  // @@protoc_insertion_point(field_list:feature_store.pb.WriteFeatureSetResponse.write_statuses)
  return write_statuses_;
}

// -------------------------------------------------------------------

// WriteResponse

// repeated .feature_store.pb.WriteFeatureSetResponse responses = 1;
inline int WriteResponse::responses_size() const {
  return responses_.size();
}
inline void WriteResponse::clear_responses() {
  responses_.Clear();
}
inline const ::feature_store::pb::WriteFeatureSetResponse& WriteResponse::responses(int index) const {
  // @@protoc_insertion_point(field_get:feature_store.pb.WriteResponse.responses)
  return responses_.Get(index);
}
inline ::feature_store::pb::WriteFeatureSetResponse* WriteResponse::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:feature_store.pb.WriteResponse.responses)
  return responses_.Mutable(index);
}
inline ::feature_store::pb::WriteFeatureSetResponse* WriteResponse::add_responses() {
  // @@protoc_insertion_point(field_add:feature_store.pb.WriteResponse.responses)
  return responses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteFeatureSetResponse >*
WriteResponse::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:feature_store.pb.WriteResponse.responses)
  return &responses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_store::pb::WriteFeatureSetResponse >&
WriteResponse::responses() const {
  // @@protoc_insertion_point(field_list:feature_store.pb.WriteResponse.responses)
  return responses_;
}

// -------------------------------------------------------------------

// Response

// optional .feature_store.pb.Response.Status status = 1;
inline bool Response::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::feature_store::pb::Response_Status Response::status() const {
  // @@protoc_insertion_point(field_get:feature_store.pb.Response.status)
  return static_cast< ::feature_store::pb::Response_Status >(status_);
}
inline void Response::set_status(::feature_store::pb::Response_Status value) {
  assert(::feature_store::pb::Response_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:feature_store.pb.Response.status)
}

// optional .feature_store.pb.WriteResponse write_response = 2;
inline bool Response::has_write_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_write_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_write_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_write_response() {
  if (write_response_ != NULL) write_response_->::feature_store::pb::WriteResponse::Clear();
  clear_has_write_response();
}
inline const ::feature_store::pb::WriteResponse& Response::write_response() const {
  const ::feature_store::pb::WriteResponse* p = write_response_;
  // @@protoc_insertion_point(field_get:feature_store.pb.Response.write_response)
  return p != NULL ? *p : *reinterpret_cast<const ::feature_store::pb::WriteResponse*>(
      &::feature_store::pb::_WriteResponse_default_instance_);
}
inline ::feature_store::pb::WriteResponse* Response::mutable_write_response() {
  set_has_write_response();
  if (write_response_ == NULL) {
    write_response_ = new ::feature_store::pb::WriteResponse;
  }
  // @@protoc_insertion_point(field_mutable:feature_store.pb.Response.write_response)
  return write_response_;
}
inline ::feature_store::pb::WriteResponse* Response::release_write_response() {
  // @@protoc_insertion_point(field_release:feature_store.pb.Response.write_response)
  clear_has_write_response();
  ::feature_store::pb::WriteResponse* temp = write_response_;
  write_response_ = NULL;
  return temp;
}
inline void Response::set_allocated_write_response(::feature_store::pb::WriteResponse* write_response) {
  delete write_response_;
  write_response_ = write_response;
  if (write_response) {
    set_has_write_response();
  } else {
    clear_has_write_response();
  }
  // @@protoc_insertion_point(field_set_allocated:feature_store.pb.Response.write_response)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace feature_store

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::feature_store::pb::ValidationStatus_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::feature_store::pb::ValidationStatus_Code>() {
  return ::feature_store::pb::ValidationStatus_Code_descriptor();
}
template <> struct is_proto_enum< ::feature_store::pb::WriteStatus_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::feature_store::pb::WriteStatus_Code>() {
  return ::feature_store::pb::WriteStatus_Code_descriptor();
}
template <> struct is_proto_enum< ::feature_store::pb::Response_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::feature_store::pb::Response_Status>() {
  return ::feature_store::pb::Response_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_feature_5fstore_2eproto__INCLUDED
