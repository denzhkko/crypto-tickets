// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: haystack_result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "haystack_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace haystack {
namespace pb {
class HaystackResult_DocumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HaystackResult_Document>
     _instance;
} _HaystackResult_Document_default_instance_;
class HaystackResult_ErrorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HaystackResult_Error>
     _instance;
} _HaystackResult_Error_default_instance_;
class HaystackResult_Stats_MicrobaseIDDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HaystackResult_Stats_MicrobaseID>
     _instance;
} _HaystackResult_Stats_MicrobaseID_default_instance_;
class HaystackResult_StatsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HaystackResult_Stats>
     _instance;
} _HaystackResult_Stats_default_instance_;
class HaystackResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HaystackResult>
     _instance;
} _HaystackResult_default_instance_;

namespace protobuf_haystack_5fresult_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, microbase_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Document, extra_data_),
  1,
  2,
  3,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Error, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Error, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats_MicrobaseID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats_MicrobaseID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats_MicrobaseID, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats_MicrobaseID, version_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats, missed_microbases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats, failed_microbases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult_Stats, found_microbases_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, documents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HaystackResult, backends_quality_),
  ~0u,
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(HaystackResult_Document)},
  { 15, 21, sizeof(HaystackResult_Error)},
  { 22, 29, sizeof(HaystackResult_Stats_MicrobaseID)},
  { 31, 39, sizeof(HaystackResult_Stats)},
  { 42, 51, sizeof(HaystackResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HaystackResult_Document_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HaystackResult_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HaystackResult_Stats_MicrobaseID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HaystackResult_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HaystackResult_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "haystack_result.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::backends_quality::pb::protobuf_backends_5fquality_2eproto::InitDefaults();
  _HaystackResult_Document_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HaystackResult_Document_default_instance_);_HaystackResult_Error_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HaystackResult_Error_default_instance_);_HaystackResult_Stats_MicrobaseID_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HaystackResult_Stats_MicrobaseID_default_instance_);_HaystackResult_Stats_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HaystackResult_Stats_default_instance_);_HaystackResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HaystackResult_default_instance_);_HaystackResult_default_instance_._instance.get_mutable()->error_ = const_cast< ::haystack::pb::HaystackResult_Error*>(
      ::haystack::pb::HaystackResult_Error::internal_default_instance());
  _HaystackResult_default_instance_._instance.get_mutable()->stats_ = const_cast< ::haystack::pb::HaystackResult_Stats*>(
      ::haystack::pb::HaystackResult_Stats::internal_default_instance());
  _HaystackResult_default_instance_._instance.get_mutable()->backends_quality_ = const_cast< ::backends_quality::pb::BackendsQuality*>(
      ::backends_quality::pb::BackendsQuality::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025haystack_result.proto\022\013haystack.pb\032\026ba"
      "ckends_quality.proto\"\204\005\n\016HaystackResult\022"
      "7\n\tdocuments\030\001 \003(\0132$.haystack.pb.Haystac"
      "kResult.Document\0220\n\005error\030\002 \001(\0132!.haysta"
      "ck.pb.HaystackResult.Error\0220\n\005stats\030\003 \001("
      "\0132!.haystack.pb.HaystackResult.Stats\022>\n\020"
      "backends_quality\030\004 \001(\0132$.backends_qualit"
      "y.pb.BackendsQuality\032h\n\010Document\022\016\n\006doc_"
      "id\030\001 \002(\003\022\024\n\014microbase_id\030\002 \002(\005\022\020\n\010distan"
      "ce\030\003 \002(\002\022\020\n\010features\030\004 \003(\002\022\022\n\nextra_data"
      "\030\005 \001(\t\032\030\n\005Error\022\017\n\007message\030\001 \001(\t\032\220\002\n\005Sta"
      "ts\022H\n\021missed_microbases\030\001 \003(\0132-.haystack"
      ".pb.HaystackResult.Stats.MicrobaseID\022H\n\021"
      "failed_microbases\030\002 \003(\0132-.haystack.pb.Ha"
      "ystackResult.Stats.MicrobaseID\022G\n\020found_"
      "microbases\030\003 \003(\0132-.haystack.pb.HaystackR"
      "esult.Stats.MicrobaseID\032*\n\013MicrobaseID\022\n"
      "\n\002id\030\001 \002(\005\022\017\n\007version\030\002 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 707);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "haystack_result.proto", &protobuf_RegisterTypes);
  ::backends_quality::pb::protobuf_backends_5fquality_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_haystack_5fresult_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HaystackResult_Document::kDocIdFieldNumber;
const int HaystackResult_Document::kMicrobaseIdFieldNumber;
const int HaystackResult_Document::kDistanceFieldNumber;
const int HaystackResult_Document::kFeaturesFieldNumber;
const int HaystackResult_Document::kExtraDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HaystackResult_Document::HaystackResult_Document()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_haystack_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:haystack.pb.HaystackResult.Document)
}
HaystackResult_Document::HaystackResult_Document(const HaystackResult_Document& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra_data()) {
    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  ::memcpy(&doc_id_, &from.doc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:haystack.pb.HaystackResult.Document)
}

void HaystackResult_Document::SharedCtor() {
  _cached_size_ = 0;
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
}

HaystackResult_Document::~HaystackResult_Document() {
  // @@protoc_insertion_point(destructor:haystack.pb.HaystackResult.Document)
  SharedDtor();
}

void HaystackResult_Document::SharedDtor() {
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HaystackResult_Document::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HaystackResult_Document::descriptor() {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HaystackResult_Document& HaystackResult_Document::default_instance() {
  protobuf_haystack_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

HaystackResult_Document* HaystackResult_Document::New(::google::protobuf::Arena* arena) const {
  HaystackResult_Document* n = new HaystackResult_Document;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HaystackResult_Document::Clear() {
// @@protoc_insertion_point(message_clear_start:haystack.pb.HaystackResult.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  if (has_extra_data()) {
    GOOGLE_DCHECK(!extra_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*extra_data_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    ::memset(&doc_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&doc_id_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HaystackResult_Document::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:haystack.pb.HaystackResult.Document)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_doc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 microbase_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_microbase_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &microbase_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float features = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_features())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_features())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string extra_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extra_data().data(), static_cast<int>(this->extra_data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "haystack.pb.HaystackResult.Document.extra_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:haystack.pb.HaystackResult.Document)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:haystack.pb.HaystackResult.Document)
  return false;
#undef DO_
}

void HaystackResult_Document::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:haystack.pb.HaystackResult.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 doc_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->doc_id(), output);
  }

  // required int32 microbase_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->microbase_id(), output);
  }

  // required float distance = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance(), output);
  }

  // repeated float features = 4;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->features(i), output);
  }

  // optional string extra_data = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "haystack.pb.HaystackResult.Document.extra_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extra_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:haystack.pb.HaystackResult.Document)
}

::google::protobuf::uint8* HaystackResult_Document::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:haystack.pb.HaystackResult.Document)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 doc_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->doc_id(), target);
  }

  // required int32 microbase_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->microbase_id(), target);
  }

  // required float distance = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->distance(), target);
  }

  // repeated float features = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->features_, target);

  // optional string extra_data = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "haystack.pb.HaystackResult.Document.extra_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extra_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:haystack.pb.HaystackResult.Document)
  return target;
}

size_t HaystackResult_Document::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:haystack.pb.HaystackResult.Document)
  size_t total_size = 0;

  if (has_doc_id()) {
    // required int64 doc_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());
  }

  if (has_microbase_id()) {
    // required int32 microbase_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->microbase_id());
  }

  if (has_distance()) {
    // required float distance = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t HaystackResult_Document::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:haystack.pb.HaystackResult.Document)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required int64 doc_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());

    // required int32 microbase_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->microbase_id());

    // required float distance = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated float features = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->features_size());
    total_size += data_size;
  }

  // optional string extra_data = 5;
  if (has_extra_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HaystackResult_Document::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:haystack.pb.HaystackResult.Document)
  GOOGLE_DCHECK_NE(&from, this);
  const HaystackResult_Document* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HaystackResult_Document>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:haystack.pb.HaystackResult.Document)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:haystack.pb.HaystackResult.Document)
    MergeFrom(*source);
  }
}

void HaystackResult_Document::MergeFrom(const HaystackResult_Document& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:haystack.pb.HaystackResult.Document)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_extra_data();
      extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      doc_id_ = from.doc_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      microbase_id_ = from.microbase_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HaystackResult_Document::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:haystack.pb.HaystackResult.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HaystackResult_Document::CopyFrom(const HaystackResult_Document& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:haystack.pb.HaystackResult.Document)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HaystackResult_Document::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void HaystackResult_Document::Swap(HaystackResult_Document* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HaystackResult_Document::InternalSwap(HaystackResult_Document* other) {
  using std::swap;
  features_.InternalSwap(&other->features_);
  extra_data_.Swap(&other->extra_data_);
  swap(doc_id_, other->doc_id_);
  swap(microbase_id_, other->microbase_id_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HaystackResult_Document::GetMetadata() const {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HaystackResult_Document

// required int64 doc_id = 1;
bool HaystackResult_Document::has_doc_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HaystackResult_Document::set_has_doc_id() {
  _has_bits_[0] |= 0x00000002u;
}
void HaystackResult_Document::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void HaystackResult_Document::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
::google::protobuf::int64 HaystackResult_Document::doc_id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.doc_id)
  return doc_id_;
}
void HaystackResult_Document::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.doc_id)
}

// required int32 microbase_id = 2;
bool HaystackResult_Document::has_microbase_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HaystackResult_Document::set_has_microbase_id() {
  _has_bits_[0] |= 0x00000004u;
}
void HaystackResult_Document::clear_has_microbase_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void HaystackResult_Document::clear_microbase_id() {
  microbase_id_ = 0;
  clear_has_microbase_id();
}
::google::protobuf::int32 HaystackResult_Document::microbase_id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.microbase_id)
  return microbase_id_;
}
void HaystackResult_Document::set_microbase_id(::google::protobuf::int32 value) {
  set_has_microbase_id();
  microbase_id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.microbase_id)
}

// required float distance = 3;
bool HaystackResult_Document::has_distance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HaystackResult_Document::set_has_distance() {
  _has_bits_[0] |= 0x00000008u;
}
void HaystackResult_Document::clear_has_distance() {
  _has_bits_[0] &= ~0x00000008u;
}
void HaystackResult_Document::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
float HaystackResult_Document::distance() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.distance)
  return distance_;
}
void HaystackResult_Document::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.distance)
}

// repeated float features = 4;
int HaystackResult_Document::features_size() const {
  return features_.size();
}
void HaystackResult_Document::clear_features() {
  features_.Clear();
}
float HaystackResult_Document::features(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.features)
  return features_.Get(index);
}
void HaystackResult_Document::set_features(int index, float value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.features)
}
void HaystackResult_Document::add_features(float value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Document.features)
}
const ::google::protobuf::RepeatedField< float >&
HaystackResult_Document::features() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Document.features)
  return features_;
}
::google::protobuf::RepeatedField< float >*
HaystackResult_Document::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Document.features)
  return &features_;
}

// optional string extra_data = 5;
bool HaystackResult_Document::has_extra_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HaystackResult_Document::set_has_extra_data() {
  _has_bits_[0] |= 0x00000001u;
}
void HaystackResult_Document::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void HaystackResult_Document::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra_data();
}
const ::std::string& HaystackResult_Document::extra_data() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.extra_data)
  return extra_data_.GetNoArena();
}
void HaystackResult_Document::set_extra_data(const ::std::string& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.extra_data)
}
#if LANG_CXX11
void HaystackResult_Document::set_extra_data(::std::string&& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:haystack.pb.HaystackResult.Document.extra_data)
}
#endif
void HaystackResult_Document::set_extra_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:haystack.pb.HaystackResult.Document.extra_data)
}
void HaystackResult_Document::set_extra_data(const char* value, size_t size) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:haystack.pb.HaystackResult.Document.extra_data)
}
::std::string* HaystackResult_Document::mutable_extra_data() {
  set_has_extra_data();
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Document.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HaystackResult_Document::release_extra_data() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.Document.extra_data)
  clear_has_extra_data();
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HaystackResult_Document::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    set_has_extra_data();
  } else {
    clear_has_extra_data();
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.Document.extra_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HaystackResult_Error::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HaystackResult_Error::HaystackResult_Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_haystack_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:haystack.pb.HaystackResult.Error)
}
HaystackResult_Error::HaystackResult_Error(const HaystackResult_Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:haystack.pb.HaystackResult.Error)
}

void HaystackResult_Error::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HaystackResult_Error::~HaystackResult_Error() {
  // @@protoc_insertion_point(destructor:haystack.pb.HaystackResult.Error)
  SharedDtor();
}

void HaystackResult_Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HaystackResult_Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HaystackResult_Error::descriptor() {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HaystackResult_Error& HaystackResult_Error::default_instance() {
  protobuf_haystack_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

HaystackResult_Error* HaystackResult_Error::New(::google::protobuf::Arena* arena) const {
  HaystackResult_Error* n = new HaystackResult_Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HaystackResult_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:haystack.pb.HaystackResult.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_message()) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HaystackResult_Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:haystack.pb.HaystackResult.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "haystack.pb.HaystackResult.Error.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:haystack.pb.HaystackResult.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:haystack.pb.HaystackResult.Error)
  return false;
#undef DO_
}

void HaystackResult_Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:haystack.pb.HaystackResult.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "haystack.pb.HaystackResult.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:haystack.pb.HaystackResult.Error)
}

::google::protobuf::uint8* HaystackResult_Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:haystack.pb.HaystackResult.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "haystack.pb.HaystackResult.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:haystack.pb.HaystackResult.Error)
  return target;
}

size_t HaystackResult_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:haystack.pb.HaystackResult.Error)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HaystackResult_Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:haystack.pb.HaystackResult.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const HaystackResult_Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HaystackResult_Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:haystack.pb.HaystackResult.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:haystack.pb.HaystackResult.Error)
    MergeFrom(*source);
  }
}

void HaystackResult_Error::MergeFrom(const HaystackResult_Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:haystack.pb.HaystackResult.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HaystackResult_Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:haystack.pb.HaystackResult.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HaystackResult_Error::CopyFrom(const HaystackResult_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:haystack.pb.HaystackResult.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HaystackResult_Error::IsInitialized() const {
  return true;
}

void HaystackResult_Error::Swap(HaystackResult_Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HaystackResult_Error::InternalSwap(HaystackResult_Error* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HaystackResult_Error::GetMetadata() const {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HaystackResult_Error

// optional string message = 1;
bool HaystackResult_Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HaystackResult_Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void HaystackResult_Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void HaystackResult_Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& HaystackResult_Error::message() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Error.message)
  return message_.GetNoArena();
}
void HaystackResult_Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Error.message)
}
#if LANG_CXX11
void HaystackResult_Error::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:haystack.pb.HaystackResult.Error.message)
}
#endif
void HaystackResult_Error::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:haystack.pb.HaystackResult.Error.message)
}
void HaystackResult_Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:haystack.pb.HaystackResult.Error.message)
}
::std::string* HaystackResult_Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HaystackResult_Error::release_message() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HaystackResult_Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.Error.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HaystackResult_Stats_MicrobaseID::kIdFieldNumber;
const int HaystackResult_Stats_MicrobaseID::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HaystackResult_Stats_MicrobaseID::HaystackResult_Stats_MicrobaseID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_haystack_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:haystack.pb.HaystackResult.Stats.MicrobaseID)
}
HaystackResult_Stats_MicrobaseID::HaystackResult_Stats_MicrobaseID(const HaystackResult_Stats_MicrobaseID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:haystack.pb.HaystackResult.Stats.MicrobaseID)
}

void HaystackResult_Stats_MicrobaseID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&id_)) + sizeof(version_));
}

HaystackResult_Stats_MicrobaseID::~HaystackResult_Stats_MicrobaseID() {
  // @@protoc_insertion_point(destructor:haystack.pb.HaystackResult.Stats.MicrobaseID)
  SharedDtor();
}

void HaystackResult_Stats_MicrobaseID::SharedDtor() {
}

void HaystackResult_Stats_MicrobaseID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HaystackResult_Stats_MicrobaseID::descriptor() {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HaystackResult_Stats_MicrobaseID& HaystackResult_Stats_MicrobaseID::default_instance() {
  protobuf_haystack_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

HaystackResult_Stats_MicrobaseID* HaystackResult_Stats_MicrobaseID::New(::google::protobuf::Arena* arena) const {
  HaystackResult_Stats_MicrobaseID* n = new HaystackResult_Stats_MicrobaseID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HaystackResult_Stats_MicrobaseID::Clear() {
// @@protoc_insertion_point(message_clear_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&id_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HaystackResult_Stats_MicrobaseID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:haystack.pb.HaystackResult.Stats.MicrobaseID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:haystack.pb.HaystackResult.Stats.MicrobaseID)
  return false;
#undef DO_
}

void HaystackResult_Stats_MicrobaseID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:haystack.pb.HaystackResult.Stats.MicrobaseID)
}

::google::protobuf::uint8* HaystackResult_Stats_MicrobaseID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:haystack.pb.HaystackResult.Stats.MicrobaseID)
  return target;
}

size_t HaystackResult_Stats_MicrobaseID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_version()) {
    // required int32 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  return total_size;
}
size_t HaystackResult_Stats_MicrobaseID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HaystackResult_Stats_MicrobaseID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  GOOGLE_DCHECK_NE(&from, this);
  const HaystackResult_Stats_MicrobaseID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HaystackResult_Stats_MicrobaseID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:haystack.pb.HaystackResult.Stats.MicrobaseID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:haystack.pb.HaystackResult.Stats.MicrobaseID)
    MergeFrom(*source);
  }
}

void HaystackResult_Stats_MicrobaseID::MergeFrom(const HaystackResult_Stats_MicrobaseID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HaystackResult_Stats_MicrobaseID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HaystackResult_Stats_MicrobaseID::CopyFrom(const HaystackResult_Stats_MicrobaseID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:haystack.pb.HaystackResult.Stats.MicrobaseID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HaystackResult_Stats_MicrobaseID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void HaystackResult_Stats_MicrobaseID::Swap(HaystackResult_Stats_MicrobaseID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HaystackResult_Stats_MicrobaseID::InternalSwap(HaystackResult_Stats_MicrobaseID* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HaystackResult_Stats_MicrobaseID::GetMetadata() const {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HaystackResult_Stats_MicrobaseID

// required int32 id = 1;
bool HaystackResult_Stats_MicrobaseID::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HaystackResult_Stats_MicrobaseID::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void HaystackResult_Stats_MicrobaseID::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void HaystackResult_Stats_MicrobaseID::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 HaystackResult_Stats_MicrobaseID::id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.MicrobaseID.id)
  return id_;
}
void HaystackResult_Stats_MicrobaseID::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Stats.MicrobaseID.id)
}

// required int32 version = 2;
bool HaystackResult_Stats_MicrobaseID::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HaystackResult_Stats_MicrobaseID::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void HaystackResult_Stats_MicrobaseID::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void HaystackResult_Stats_MicrobaseID::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 HaystackResult_Stats_MicrobaseID::version() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.MicrobaseID.version)
  return version_;
}
void HaystackResult_Stats_MicrobaseID::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Stats.MicrobaseID.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HaystackResult_Stats::kMissedMicrobasesFieldNumber;
const int HaystackResult_Stats::kFailedMicrobasesFieldNumber;
const int HaystackResult_Stats::kFoundMicrobasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HaystackResult_Stats::HaystackResult_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_haystack_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:haystack.pb.HaystackResult.Stats)
}
HaystackResult_Stats::HaystackResult_Stats(const HaystackResult_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      missed_microbases_(from.missed_microbases_),
      failed_microbases_(from.failed_microbases_),
      found_microbases_(from.found_microbases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:haystack.pb.HaystackResult.Stats)
}

void HaystackResult_Stats::SharedCtor() {
  _cached_size_ = 0;
}

HaystackResult_Stats::~HaystackResult_Stats() {
  // @@protoc_insertion_point(destructor:haystack.pb.HaystackResult.Stats)
  SharedDtor();
}

void HaystackResult_Stats::SharedDtor() {
}

void HaystackResult_Stats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HaystackResult_Stats::descriptor() {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HaystackResult_Stats& HaystackResult_Stats::default_instance() {
  protobuf_haystack_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

HaystackResult_Stats* HaystackResult_Stats::New(::google::protobuf::Arena* arena) const {
  HaystackResult_Stats* n = new HaystackResult_Stats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HaystackResult_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:haystack.pb.HaystackResult.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missed_microbases_.Clear();
  failed_microbases_.Clear();
  found_microbases_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HaystackResult_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:haystack.pb.HaystackResult.Stats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_missed_microbases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_failed_microbases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_found_microbases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:haystack.pb.HaystackResult.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:haystack.pb.HaystackResult.Stats)
  return false;
#undef DO_
}

void HaystackResult_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:haystack.pb.HaystackResult.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missed_microbases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->missed_microbases(static_cast<int>(i)), output);
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failed_microbases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->failed_microbases(static_cast<int>(i)), output);
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_microbases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->found_microbases(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:haystack.pb.HaystackResult.Stats)
}

::google::protobuf::uint8* HaystackResult_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:haystack.pb.HaystackResult.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->missed_microbases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->missed_microbases(static_cast<int>(i)), deterministic, target);
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failed_microbases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->failed_microbases(static_cast<int>(i)), deterministic, target);
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->found_microbases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->found_microbases(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:haystack.pb.HaystackResult.Stats)
  return target;
}

size_t HaystackResult_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:haystack.pb.HaystackResult.Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->missed_microbases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missed_microbases(static_cast<int>(i)));
    }
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->failed_microbases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->failed_microbases(static_cast<int>(i)));
    }
  }

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->found_microbases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->found_microbases(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HaystackResult_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:haystack.pb.HaystackResult.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const HaystackResult_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HaystackResult_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:haystack.pb.HaystackResult.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:haystack.pb.HaystackResult.Stats)
    MergeFrom(*source);
  }
}

void HaystackResult_Stats::MergeFrom(const HaystackResult_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:haystack.pb.HaystackResult.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  missed_microbases_.MergeFrom(from.missed_microbases_);
  failed_microbases_.MergeFrom(from.failed_microbases_);
  found_microbases_.MergeFrom(from.found_microbases_);
}

void HaystackResult_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:haystack.pb.HaystackResult.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HaystackResult_Stats::CopyFrom(const HaystackResult_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:haystack.pb.HaystackResult.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HaystackResult_Stats::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->missed_microbases())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->failed_microbases())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->found_microbases())) return false;
  return true;
}

void HaystackResult_Stats::Swap(HaystackResult_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HaystackResult_Stats::InternalSwap(HaystackResult_Stats* other) {
  using std::swap;
  missed_microbases_.InternalSwap(&other->missed_microbases_);
  failed_microbases_.InternalSwap(&other->failed_microbases_);
  found_microbases_.InternalSwap(&other->found_microbases_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HaystackResult_Stats::GetMetadata() const {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HaystackResult_Stats

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
int HaystackResult_Stats::missed_microbases_size() const {
  return missed_microbases_.size();
}
void HaystackResult_Stats::clear_missed_microbases() {
  missed_microbases_.Clear();
}
const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::missed_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Get(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_missed_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Mutable(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_missed_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Add();
}
::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_missed_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.missed_microbases)
  return &missed_microbases_;
}
const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::missed_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_;
}

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
int HaystackResult_Stats::failed_microbases_size() const {
  return failed_microbases_.size();
}
void HaystackResult_Stats::clear_failed_microbases() {
  failed_microbases_.Clear();
}
const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::failed_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Get(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_failed_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Mutable(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_failed_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Add();
}
::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_failed_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.failed_microbases)
  return &failed_microbases_;
}
const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::failed_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_;
}

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
int HaystackResult_Stats::found_microbases_size() const {
  return found_microbases_.size();
}
void HaystackResult_Stats::clear_found_microbases() {
  found_microbases_.Clear();
}
const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::found_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Get(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_found_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Mutable(index);
}
::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_found_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Add();
}
::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_found_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.found_microbases)
  return &found_microbases_;
}
const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::found_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HaystackResult::kDocumentsFieldNumber;
const int HaystackResult::kErrorFieldNumber;
const int HaystackResult::kStatsFieldNumber;
const int HaystackResult::kBackendsQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HaystackResult::HaystackResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_haystack_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:haystack.pb.HaystackResult)
}
HaystackResult::HaystackResult(const HaystackResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      documents_(from.documents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::haystack::pb::HaystackResult_Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_stats()) {
    stats_ = new ::haystack::pb::HaystackResult_Stats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  if (from.has_backends_quality()) {
    backends_quality_ = new ::backends_quality::pb::BackendsQuality(*from.backends_quality_);
  } else {
    backends_quality_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:haystack.pb.HaystackResult)
}

void HaystackResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&backends_quality_) -
      reinterpret_cast<char*>(&error_)) + sizeof(backends_quality_));
}

HaystackResult::~HaystackResult() {
  // @@protoc_insertion_point(destructor:haystack.pb.HaystackResult)
  SharedDtor();
}

void HaystackResult::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete stats_;
  if (this != internal_default_instance()) delete backends_quality_;
}

void HaystackResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HaystackResult::descriptor() {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HaystackResult& HaystackResult::default_instance() {
  protobuf_haystack_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

HaystackResult* HaystackResult::New(::google::protobuf::Arena* arena) const {
  HaystackResult* n = new HaystackResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HaystackResult::Clear() {
// @@protoc_insertion_point(message_clear_start:haystack.pb.HaystackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documents_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(error_ != NULL);
      error_->::haystack::pb::HaystackResult_Error::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stats_ != NULL);
      stats_->::haystack::pb::HaystackResult_Stats::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(backends_quality_ != NULL);
      backends_quality_->::backends_quality::pb::BackendsQuality::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HaystackResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:haystack.pb.HaystackResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .haystack.pb.HaystackResult.Document documents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_documents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .haystack.pb.HaystackResult.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .haystack.pb.HaystackResult.Stats stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .backends_quality.pb.BackendsQuality backends_quality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_backends_quality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:haystack.pb.HaystackResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:haystack.pb.HaystackResult)
  return false;
#undef DO_
}

void HaystackResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:haystack.pb.HaystackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .haystack.pb.HaystackResult.Document documents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->documents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->documents(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .haystack.pb.HaystackResult.Error error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // optional .haystack.pb.HaystackResult.Stats stats = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stats_, output);
  }

  // optional .backends_quality.pb.BackendsQuality backends_quality = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->backends_quality_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:haystack.pb.HaystackResult)
}

::google::protobuf::uint8* HaystackResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:haystack.pb.HaystackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .haystack.pb.HaystackResult.Document documents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->documents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->documents(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .haystack.pb.HaystackResult.Error error = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, deterministic, target);
  }

  // optional .haystack.pb.HaystackResult.Stats stats = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->stats_, deterministic, target);
  }

  // optional .backends_quality.pb.BackendsQuality backends_quality = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->backends_quality_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:haystack.pb.HaystackResult)
  return target;
}

size_t HaystackResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:haystack.pb.HaystackResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .haystack.pb.HaystackResult.Document documents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->documents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->documents(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .haystack.pb.HaystackResult.Error error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->error_);
    }

    // optional .haystack.pb.HaystackResult.Stats stats = 3;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->stats_);
    }

    // optional .backends_quality.pb.BackendsQuality backends_quality = 4;
    if (has_backends_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->backends_quality_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HaystackResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:haystack.pb.HaystackResult)
  GOOGLE_DCHECK_NE(&from, this);
  const HaystackResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HaystackResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:haystack.pb.HaystackResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:haystack.pb.HaystackResult)
    MergeFrom(*source);
  }
}

void HaystackResult::MergeFrom(const HaystackResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:haystack.pb.HaystackResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documents_.MergeFrom(from.documents_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_error()->::haystack::pb::HaystackResult_Error::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stats()->::haystack::pb::HaystackResult_Stats::MergeFrom(from.stats());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_backends_quality()->::backends_quality::pb::BackendsQuality::MergeFrom(from.backends_quality());
    }
  }
}

void HaystackResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:haystack.pb.HaystackResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HaystackResult::CopyFrom(const HaystackResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:haystack.pb.HaystackResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HaystackResult::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->documents())) return false;
  if (has_stats()) {
    if (!this->stats_->IsInitialized()) return false;
  }
  return true;
}

void HaystackResult::Swap(HaystackResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HaystackResult::InternalSwap(HaystackResult* other) {
  using std::swap;
  documents_.InternalSwap(&other->documents_);
  swap(error_, other->error_);
  swap(stats_, other->stats_);
  swap(backends_quality_, other->backends_quality_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HaystackResult::GetMetadata() const {
  protobuf_haystack_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_haystack_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HaystackResult

// repeated .haystack.pb.HaystackResult.Document documents = 1;
int HaystackResult::documents_size() const {
  return documents_.size();
}
void HaystackResult::clear_documents() {
  documents_.Clear();
}
const ::haystack::pb::HaystackResult_Document& HaystackResult::documents(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.documents)
  return documents_.Get(index);
}
::haystack::pb::HaystackResult_Document* HaystackResult::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.documents)
  return documents_.Mutable(index);
}
::haystack::pb::HaystackResult_Document* HaystackResult::add_documents() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.documents)
  return documents_.Add();
}
::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >*
HaystackResult::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.documents)
  return &documents_;
}
const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >&
HaystackResult::documents() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.documents)
  return documents_;
}

// optional .haystack.pb.HaystackResult.Error error = 2;
bool HaystackResult::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HaystackResult::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void HaystackResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void HaystackResult::clear_error() {
  if (error_ != NULL) error_->::haystack::pb::HaystackResult_Error::Clear();
  clear_has_error();
}
const ::haystack::pb::HaystackResult_Error& HaystackResult::error() const {
  const ::haystack::pb::HaystackResult_Error* p = error_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.error)
  return p != NULL ? *p : *reinterpret_cast<const ::haystack::pb::HaystackResult_Error*>(
      &::haystack::pb::_HaystackResult_Error_default_instance_);
}
::haystack::pb::HaystackResult_Error* HaystackResult::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::haystack::pb::HaystackResult_Error;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.error)
  return error_;
}
::haystack::pb::HaystackResult_Error* HaystackResult::release_error() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.error)
  clear_has_error();
  ::haystack::pb::HaystackResult_Error* temp = error_;
  error_ = NULL;
  return temp;
}
void HaystackResult::set_allocated_error(::haystack::pb::HaystackResult_Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.error)
}

// optional .haystack.pb.HaystackResult.Stats stats = 3;
bool HaystackResult::has_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HaystackResult::set_has_stats() {
  _has_bits_[0] |= 0x00000002u;
}
void HaystackResult::clear_has_stats() {
  _has_bits_[0] &= ~0x00000002u;
}
void HaystackResult::clear_stats() {
  if (stats_ != NULL) stats_->::haystack::pb::HaystackResult_Stats::Clear();
  clear_has_stats();
}
const ::haystack::pb::HaystackResult_Stats& HaystackResult::stats() const {
  const ::haystack::pb::HaystackResult_Stats* p = stats_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.stats)
  return p != NULL ? *p : *reinterpret_cast<const ::haystack::pb::HaystackResult_Stats*>(
      &::haystack::pb::_HaystackResult_Stats_default_instance_);
}
::haystack::pb::HaystackResult_Stats* HaystackResult::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::haystack::pb::HaystackResult_Stats;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.stats)
  return stats_;
}
::haystack::pb::HaystackResult_Stats* HaystackResult::release_stats() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.stats)
  clear_has_stats();
  ::haystack::pb::HaystackResult_Stats* temp = stats_;
  stats_ = NULL;
  return temp;
}
void HaystackResult::set_allocated_stats(::haystack::pb::HaystackResult_Stats* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.stats)
}

// optional .backends_quality.pb.BackendsQuality backends_quality = 4;
bool HaystackResult::has_backends_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HaystackResult::set_has_backends_quality() {
  _has_bits_[0] |= 0x00000004u;
}
void HaystackResult::clear_has_backends_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
void HaystackResult::clear_backends_quality() {
  if (backends_quality_ != NULL) backends_quality_->::backends_quality::pb::BackendsQuality::Clear();
  clear_has_backends_quality();
}
const ::backends_quality::pb::BackendsQuality& HaystackResult::backends_quality() const {
  const ::backends_quality::pb::BackendsQuality* p = backends_quality_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.backends_quality)
  return p != NULL ? *p : *reinterpret_cast<const ::backends_quality::pb::BackendsQuality*>(
      &::backends_quality::pb::_BackendsQuality_default_instance_);
}
::backends_quality::pb::BackendsQuality* HaystackResult::mutable_backends_quality() {
  set_has_backends_quality();
  if (backends_quality_ == NULL) {
    backends_quality_ = new ::backends_quality::pb::BackendsQuality;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.backends_quality)
  return backends_quality_;
}
::backends_quality::pb::BackendsQuality* HaystackResult::release_backends_quality() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.backends_quality)
  clear_has_backends_quality();
  ::backends_quality::pb::BackendsQuality* temp = backends_quality_;
  backends_quality_ = NULL;
  return temp;
}
void HaystackResult::set_allocated_backends_quality(::backends_quality::pb::BackendsQuality* backends_quality) {
  delete backends_quality_;
  backends_quality_ = backends_quality;
  if (backends_quality) {
    set_has_backends_quality();
  } else {
    clear_has_backends_quality();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.backends_quality)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace haystack

// @@protoc_insertion_point(global_scope)
