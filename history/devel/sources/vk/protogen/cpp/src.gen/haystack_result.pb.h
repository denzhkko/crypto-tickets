// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: haystack_result.proto

#ifndef PROTOBUF_haystack_5fresult_2eproto__INCLUDED
#define PROTOBUF_haystack_5fresult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "backends_quality.pb.h"
// @@protoc_insertion_point(includes)
namespace haystack {
namespace pb {
class HaystackResult;
class HaystackResultDefaultTypeInternal;
extern HaystackResultDefaultTypeInternal _HaystackResult_default_instance_;
class HaystackResult_Document;
class HaystackResult_DocumentDefaultTypeInternal;
extern HaystackResult_DocumentDefaultTypeInternal _HaystackResult_Document_default_instance_;
class HaystackResult_Error;
class HaystackResult_ErrorDefaultTypeInternal;
extern HaystackResult_ErrorDefaultTypeInternal _HaystackResult_Error_default_instance_;
class HaystackResult_Stats;
class HaystackResult_StatsDefaultTypeInternal;
extern HaystackResult_StatsDefaultTypeInternal _HaystackResult_Stats_default_instance_;
class HaystackResult_Stats_MicrobaseID;
class HaystackResult_Stats_MicrobaseIDDefaultTypeInternal;
extern HaystackResult_Stats_MicrobaseIDDefaultTypeInternal _HaystackResult_Stats_MicrobaseID_default_instance_;
}  // namespace pb
}  // namespace haystack

namespace haystack {
namespace pb {

namespace protobuf_haystack_5fresult_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_haystack_5fresult_2eproto

// ===================================================================

class HaystackResult_Document : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:haystack.pb.HaystackResult.Document) */ {
 public:
  HaystackResult_Document();
  virtual ~HaystackResult_Document();

  HaystackResult_Document(const HaystackResult_Document& from);

  inline HaystackResult_Document& operator=(const HaystackResult_Document& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HaystackResult_Document(HaystackResult_Document&& from) noexcept
    : HaystackResult_Document() {
    *this = ::std::move(from);
  }

  inline HaystackResult_Document& operator=(HaystackResult_Document&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaystackResult_Document& default_instance();

  static inline const HaystackResult_Document* internal_default_instance() {
    return reinterpret_cast<const HaystackResult_Document*>(
               &_HaystackResult_Document_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HaystackResult_Document* other);
  friend void swap(HaystackResult_Document& a, HaystackResult_Document& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HaystackResult_Document* New() const PROTOBUF_FINAL { return New(NULL); }

  HaystackResult_Document* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HaystackResult_Document& from);
  void MergeFrom(const HaystackResult_Document& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HaystackResult_Document* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float features = 4;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 4;
  float features(int index) const;
  void set_features(int index, float value);
  void add_features(float value);
  const ::google::protobuf::RepeatedField< float >&
      features() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_features();

  // optional string extra_data = 5;
  bool has_extra_data() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 5;
  const ::std::string& extra_data() const;
  void set_extra_data(const ::std::string& value);
  #if LANG_CXX11
  void set_extra_data(::std::string&& value);
  #endif
  void set_extra_data(const char* value);
  void set_extra_data(const char* value, size_t size);
  ::std::string* mutable_extra_data();
  ::std::string* release_extra_data();
  void set_allocated_extra_data(::std::string* extra_data);

  // required int64 doc_id = 1;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 1;
  ::google::protobuf::int64 doc_id() const;
  void set_doc_id(::google::protobuf::int64 value);

  // required int32 microbase_id = 2;
  bool has_microbase_id() const;
  void clear_microbase_id();
  static const int kMicrobaseIdFieldNumber = 2;
  ::google::protobuf::int32 microbase_id() const;
  void set_microbase_id(::google::protobuf::int32 value);

  // required float distance = 3;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 3;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:haystack.pb.HaystackResult.Document)
 private:
  void set_has_doc_id();
  void clear_has_doc_id();
  void set_has_microbase_id();
  void clear_has_microbase_id();
  void set_has_distance();
  void clear_has_distance();
  void set_has_extra_data();
  void clear_has_extra_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > features_;
  ::google::protobuf::internal::ArenaStringPtr extra_data_;
  ::google::protobuf::int64 doc_id_;
  ::google::protobuf::int32 microbase_id_;
  float distance_;
  friend struct protobuf_haystack_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HaystackResult_Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:haystack.pb.HaystackResult.Error) */ {
 public:
  HaystackResult_Error();
  virtual ~HaystackResult_Error();

  HaystackResult_Error(const HaystackResult_Error& from);

  inline HaystackResult_Error& operator=(const HaystackResult_Error& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HaystackResult_Error(HaystackResult_Error&& from) noexcept
    : HaystackResult_Error() {
    *this = ::std::move(from);
  }

  inline HaystackResult_Error& operator=(HaystackResult_Error&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaystackResult_Error& default_instance();

  static inline const HaystackResult_Error* internal_default_instance() {
    return reinterpret_cast<const HaystackResult_Error*>(
               &_HaystackResult_Error_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HaystackResult_Error* other);
  friend void swap(HaystackResult_Error& a, HaystackResult_Error& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HaystackResult_Error* New() const PROTOBUF_FINAL { return New(NULL); }

  HaystackResult_Error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HaystackResult_Error& from);
  void MergeFrom(const HaystackResult_Error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HaystackResult_Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:haystack.pb.HaystackResult.Error)
 private:
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct protobuf_haystack_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HaystackResult_Stats_MicrobaseID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:haystack.pb.HaystackResult.Stats.MicrobaseID) */ {
 public:
  HaystackResult_Stats_MicrobaseID();
  virtual ~HaystackResult_Stats_MicrobaseID();

  HaystackResult_Stats_MicrobaseID(const HaystackResult_Stats_MicrobaseID& from);

  inline HaystackResult_Stats_MicrobaseID& operator=(const HaystackResult_Stats_MicrobaseID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HaystackResult_Stats_MicrobaseID(HaystackResult_Stats_MicrobaseID&& from) noexcept
    : HaystackResult_Stats_MicrobaseID() {
    *this = ::std::move(from);
  }

  inline HaystackResult_Stats_MicrobaseID& operator=(HaystackResult_Stats_MicrobaseID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaystackResult_Stats_MicrobaseID& default_instance();

  static inline const HaystackResult_Stats_MicrobaseID* internal_default_instance() {
    return reinterpret_cast<const HaystackResult_Stats_MicrobaseID*>(
               &_HaystackResult_Stats_MicrobaseID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(HaystackResult_Stats_MicrobaseID* other);
  friend void swap(HaystackResult_Stats_MicrobaseID& a, HaystackResult_Stats_MicrobaseID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HaystackResult_Stats_MicrobaseID* New() const PROTOBUF_FINAL { return New(NULL); }

  HaystackResult_Stats_MicrobaseID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HaystackResult_Stats_MicrobaseID& from);
  void MergeFrom(const HaystackResult_Stats_MicrobaseID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HaystackResult_Stats_MicrobaseID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:haystack.pb.HaystackResult.Stats.MicrobaseID)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_version();
  void clear_has_version();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 version_;
  friend struct protobuf_haystack_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HaystackResult_Stats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:haystack.pb.HaystackResult.Stats) */ {
 public:
  HaystackResult_Stats();
  virtual ~HaystackResult_Stats();

  HaystackResult_Stats(const HaystackResult_Stats& from);

  inline HaystackResult_Stats& operator=(const HaystackResult_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HaystackResult_Stats(HaystackResult_Stats&& from) noexcept
    : HaystackResult_Stats() {
    *this = ::std::move(from);
  }

  inline HaystackResult_Stats& operator=(HaystackResult_Stats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaystackResult_Stats& default_instance();

  static inline const HaystackResult_Stats* internal_default_instance() {
    return reinterpret_cast<const HaystackResult_Stats*>(
               &_HaystackResult_Stats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(HaystackResult_Stats* other);
  friend void swap(HaystackResult_Stats& a, HaystackResult_Stats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HaystackResult_Stats* New() const PROTOBUF_FINAL { return New(NULL); }

  HaystackResult_Stats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HaystackResult_Stats& from);
  void MergeFrom(const HaystackResult_Stats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HaystackResult_Stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HaystackResult_Stats_MicrobaseID MicrobaseID;

  // accessors -------------------------------------------------------

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
  int missed_microbases_size() const;
  void clear_missed_microbases();
  static const int kMissedMicrobasesFieldNumber = 1;
  const ::haystack::pb::HaystackResult_Stats_MicrobaseID& missed_microbases(int index) const;
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* mutable_missed_microbases(int index);
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* add_missed_microbases();
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
      mutable_missed_microbases();
  const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
      missed_microbases() const;

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
  int failed_microbases_size() const;
  void clear_failed_microbases();
  static const int kFailedMicrobasesFieldNumber = 2;
  const ::haystack::pb::HaystackResult_Stats_MicrobaseID& failed_microbases(int index) const;
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* mutable_failed_microbases(int index);
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* add_failed_microbases();
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
      mutable_failed_microbases();
  const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
      failed_microbases() const;

  // repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
  int found_microbases_size() const;
  void clear_found_microbases();
  static const int kFoundMicrobasesFieldNumber = 3;
  const ::haystack::pb::HaystackResult_Stats_MicrobaseID& found_microbases(int index) const;
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* mutable_found_microbases(int index);
  ::haystack::pb::HaystackResult_Stats_MicrobaseID* add_found_microbases();
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
      mutable_found_microbases();
  const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
      found_microbases() const;

  // @@protoc_insertion_point(class_scope:haystack.pb.HaystackResult.Stats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID > missed_microbases_;
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID > failed_microbases_;
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID > found_microbases_;
  friend struct protobuf_haystack_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HaystackResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:haystack.pb.HaystackResult) */ {
 public:
  HaystackResult();
  virtual ~HaystackResult();

  HaystackResult(const HaystackResult& from);

  inline HaystackResult& operator=(const HaystackResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HaystackResult(HaystackResult&& from) noexcept
    : HaystackResult() {
    *this = ::std::move(from);
  }

  inline HaystackResult& operator=(HaystackResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaystackResult& default_instance();

  static inline const HaystackResult* internal_default_instance() {
    return reinterpret_cast<const HaystackResult*>(
               &_HaystackResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(HaystackResult* other);
  friend void swap(HaystackResult& a, HaystackResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HaystackResult* New() const PROTOBUF_FINAL { return New(NULL); }

  HaystackResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HaystackResult& from);
  void MergeFrom(const HaystackResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HaystackResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HaystackResult_Document Document;
  typedef HaystackResult_Error Error;
  typedef HaystackResult_Stats Stats;

  // accessors -------------------------------------------------------

  // repeated .haystack.pb.HaystackResult.Document documents = 1;
  int documents_size() const;
  void clear_documents();
  static const int kDocumentsFieldNumber = 1;
  const ::haystack::pb::HaystackResult_Document& documents(int index) const;
  ::haystack::pb::HaystackResult_Document* mutable_documents(int index);
  ::haystack::pb::HaystackResult_Document* add_documents();
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >*
      mutable_documents();
  const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >&
      documents() const;

  // optional .haystack.pb.HaystackResult.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::haystack::pb::HaystackResult_Error& error() const;
  ::haystack::pb::HaystackResult_Error* mutable_error();
  ::haystack::pb::HaystackResult_Error* release_error();
  void set_allocated_error(::haystack::pb::HaystackResult_Error* error);

  // optional .haystack.pb.HaystackResult.Stats stats = 3;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 3;
  const ::haystack::pb::HaystackResult_Stats& stats() const;
  ::haystack::pb::HaystackResult_Stats* mutable_stats();
  ::haystack::pb::HaystackResult_Stats* release_stats();
  void set_allocated_stats(::haystack::pb::HaystackResult_Stats* stats);

  // optional .backends_quality.pb.BackendsQuality backends_quality = 4;
  bool has_backends_quality() const;
  void clear_backends_quality();
  static const int kBackendsQualityFieldNumber = 4;
  const ::backends_quality::pb::BackendsQuality& backends_quality() const;
  ::backends_quality::pb::BackendsQuality* mutable_backends_quality();
  ::backends_quality::pb::BackendsQuality* release_backends_quality();
  void set_allocated_backends_quality(::backends_quality::pb::BackendsQuality* backends_quality);

  // @@protoc_insertion_point(class_scope:haystack.pb.HaystackResult)
 private:
  void set_has_error();
  void clear_has_error();
  void set_has_stats();
  void clear_has_stats();
  void set_has_backends_quality();
  void clear_has_backends_quality();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document > documents_;
  ::haystack::pb::HaystackResult_Error* error_;
  ::haystack::pb::HaystackResult_Stats* stats_;
  ::backends_quality::pb::BackendsQuality* backends_quality_;
  friend struct protobuf_haystack_5fresult_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HaystackResult_Document

// required int64 doc_id = 1;
inline bool HaystackResult_Document::has_doc_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaystackResult_Document::set_has_doc_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaystackResult_Document::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaystackResult_Document::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
inline ::google::protobuf::int64 HaystackResult_Document::doc_id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.doc_id)
  return doc_id_;
}
inline void HaystackResult_Document::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.doc_id)
}

// required int32 microbase_id = 2;
inline bool HaystackResult_Document::has_microbase_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HaystackResult_Document::set_has_microbase_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HaystackResult_Document::clear_has_microbase_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HaystackResult_Document::clear_microbase_id() {
  microbase_id_ = 0;
  clear_has_microbase_id();
}
inline ::google::protobuf::int32 HaystackResult_Document::microbase_id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.microbase_id)
  return microbase_id_;
}
inline void HaystackResult_Document::set_microbase_id(::google::protobuf::int32 value) {
  set_has_microbase_id();
  microbase_id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.microbase_id)
}

// required float distance = 3;
inline bool HaystackResult_Document::has_distance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HaystackResult_Document::set_has_distance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HaystackResult_Document::clear_has_distance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HaystackResult_Document::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float HaystackResult_Document::distance() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.distance)
  return distance_;
}
inline void HaystackResult_Document::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.distance)
}

// repeated float features = 4;
inline int HaystackResult_Document::features_size() const {
  return features_.size();
}
inline void HaystackResult_Document::clear_features() {
  features_.Clear();
}
inline float HaystackResult_Document::features(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.features)
  return features_.Get(index);
}
inline void HaystackResult_Document::set_features(int index, float value) {
  features_.Set(index, value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.features)
}
inline void HaystackResult_Document::add_features(float value) {
  features_.Add(value);
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Document.features)
}
inline const ::google::protobuf::RepeatedField< float >&
HaystackResult_Document::features() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Document.features)
  return features_;
}
inline ::google::protobuf::RepeatedField< float >*
HaystackResult_Document::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Document.features)
  return &features_;
}

// optional string extra_data = 5;
inline bool HaystackResult_Document::has_extra_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaystackResult_Document::set_has_extra_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaystackResult_Document::clear_has_extra_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaystackResult_Document::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra_data();
}
inline const ::std::string& HaystackResult_Document::extra_data() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Document.extra_data)
  return extra_data_.GetNoArena();
}
inline void HaystackResult_Document::set_extra_data(const ::std::string& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Document.extra_data)
}
#if LANG_CXX11
inline void HaystackResult_Document::set_extra_data(::std::string&& value) {
  set_has_extra_data();
  extra_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:haystack.pb.HaystackResult.Document.extra_data)
}
#endif
inline void HaystackResult_Document::set_extra_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:haystack.pb.HaystackResult.Document.extra_data)
}
inline void HaystackResult_Document::set_extra_data(const char* value, size_t size) {
  set_has_extra_data();
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:haystack.pb.HaystackResult.Document.extra_data)
}
inline ::std::string* HaystackResult_Document::mutable_extra_data() {
  set_has_extra_data();
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Document.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HaystackResult_Document::release_extra_data() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.Document.extra_data)
  clear_has_extra_data();
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HaystackResult_Document::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    set_has_extra_data();
  } else {
    clear_has_extra_data();
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.Document.extra_data)
}

// -------------------------------------------------------------------

// HaystackResult_Error

// optional string message = 1;
inline bool HaystackResult_Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaystackResult_Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaystackResult_Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaystackResult_Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& HaystackResult_Error::message() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Error.message)
  return message_.GetNoArena();
}
inline void HaystackResult_Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Error.message)
}
#if LANG_CXX11
inline void HaystackResult_Error::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:haystack.pb.HaystackResult.Error.message)
}
#endif
inline void HaystackResult_Error::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:haystack.pb.HaystackResult.Error.message)
}
inline void HaystackResult_Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:haystack.pb.HaystackResult.Error.message)
}
inline ::std::string* HaystackResult_Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HaystackResult_Error::release_message() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HaystackResult_Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.Error.message)
}

// -------------------------------------------------------------------

// HaystackResult_Stats_MicrobaseID

// required int32 id = 1;
inline bool HaystackResult_Stats_MicrobaseID::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaystackResult_Stats_MicrobaseID::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaystackResult_Stats_MicrobaseID::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaystackResult_Stats_MicrobaseID::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HaystackResult_Stats_MicrobaseID::id() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.MicrobaseID.id)
  return id_;
}
inline void HaystackResult_Stats_MicrobaseID::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Stats.MicrobaseID.id)
}

// required int32 version = 2;
inline bool HaystackResult_Stats_MicrobaseID::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaystackResult_Stats_MicrobaseID::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaystackResult_Stats_MicrobaseID::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaystackResult_Stats_MicrobaseID::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 HaystackResult_Stats_MicrobaseID::version() const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.MicrobaseID.version)
  return version_;
}
inline void HaystackResult_Stats_MicrobaseID::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:haystack.pb.HaystackResult.Stats.MicrobaseID.version)
}

// -------------------------------------------------------------------

// HaystackResult_Stats

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID missed_microbases = 1;
inline int HaystackResult_Stats::missed_microbases_size() const {
  return missed_microbases_.size();
}
inline void HaystackResult_Stats::clear_missed_microbases() {
  missed_microbases_.Clear();
}
inline const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::missed_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Get(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_missed_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Mutable(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_missed_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_missed_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.missed_microbases)
  return &missed_microbases_;
}
inline const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::missed_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.missed_microbases)
  return missed_microbases_;
}

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID failed_microbases = 2;
inline int HaystackResult_Stats::failed_microbases_size() const {
  return failed_microbases_.size();
}
inline void HaystackResult_Stats::clear_failed_microbases() {
  failed_microbases_.Clear();
}
inline const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::failed_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Get(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_failed_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Mutable(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_failed_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_failed_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.failed_microbases)
  return &failed_microbases_;
}
inline const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::failed_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.failed_microbases)
  return failed_microbases_;
}

// repeated .haystack.pb.HaystackResult.Stats.MicrobaseID found_microbases = 3;
inline int HaystackResult_Stats::found_microbases_size() const {
  return found_microbases_.size();
}
inline void HaystackResult_Stats::clear_found_microbases() {
  found_microbases_.Clear();
}
inline const ::haystack::pb::HaystackResult_Stats_MicrobaseID& HaystackResult_Stats::found_microbases(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Get(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::mutable_found_microbases(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Mutable(index);
}
inline ::haystack::pb::HaystackResult_Stats_MicrobaseID* HaystackResult_Stats::add_found_microbases() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >*
HaystackResult_Stats::mutable_found_microbases() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.Stats.found_microbases)
  return &found_microbases_;
}
inline const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Stats_MicrobaseID >&
HaystackResult_Stats::found_microbases() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.Stats.found_microbases)
  return found_microbases_;
}

// -------------------------------------------------------------------

// HaystackResult

// repeated .haystack.pb.HaystackResult.Document documents = 1;
inline int HaystackResult::documents_size() const {
  return documents_.size();
}
inline void HaystackResult::clear_documents() {
  documents_.Clear();
}
inline const ::haystack::pb::HaystackResult_Document& HaystackResult::documents(int index) const {
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.documents)
  return documents_.Get(index);
}
inline ::haystack::pb::HaystackResult_Document* HaystackResult::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.documents)
  return documents_.Mutable(index);
}
inline ::haystack::pb::HaystackResult_Document* HaystackResult::add_documents() {
  // @@protoc_insertion_point(field_add:haystack.pb.HaystackResult.documents)
  return documents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >*
HaystackResult::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:haystack.pb.HaystackResult.documents)
  return &documents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::haystack::pb::HaystackResult_Document >&
HaystackResult::documents() const {
  // @@protoc_insertion_point(field_list:haystack.pb.HaystackResult.documents)
  return documents_;
}

// optional .haystack.pb.HaystackResult.Error error = 2;
inline bool HaystackResult::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaystackResult::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaystackResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaystackResult::clear_error() {
  if (error_ != NULL) error_->::haystack::pb::HaystackResult_Error::Clear();
  clear_has_error();
}
inline const ::haystack::pb::HaystackResult_Error& HaystackResult::error() const {
  const ::haystack::pb::HaystackResult_Error* p = error_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.error)
  return p != NULL ? *p : *reinterpret_cast<const ::haystack::pb::HaystackResult_Error*>(
      &::haystack::pb::_HaystackResult_Error_default_instance_);
}
inline ::haystack::pb::HaystackResult_Error* HaystackResult::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::haystack::pb::HaystackResult_Error;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.error)
  return error_;
}
inline ::haystack::pb::HaystackResult_Error* HaystackResult::release_error() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.error)
  clear_has_error();
  ::haystack::pb::HaystackResult_Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void HaystackResult::set_allocated_error(::haystack::pb::HaystackResult_Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.error)
}

// optional .haystack.pb.HaystackResult.Stats stats = 3;
inline bool HaystackResult::has_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaystackResult::set_has_stats() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaystackResult::clear_has_stats() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaystackResult::clear_stats() {
  if (stats_ != NULL) stats_->::haystack::pb::HaystackResult_Stats::Clear();
  clear_has_stats();
}
inline const ::haystack::pb::HaystackResult_Stats& HaystackResult::stats() const {
  const ::haystack::pb::HaystackResult_Stats* p = stats_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.stats)
  return p != NULL ? *p : *reinterpret_cast<const ::haystack::pb::HaystackResult_Stats*>(
      &::haystack::pb::_HaystackResult_Stats_default_instance_);
}
inline ::haystack::pb::HaystackResult_Stats* HaystackResult::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::haystack::pb::HaystackResult_Stats;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.stats)
  return stats_;
}
inline ::haystack::pb::HaystackResult_Stats* HaystackResult::release_stats() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.stats)
  clear_has_stats();
  ::haystack::pb::HaystackResult_Stats* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void HaystackResult::set_allocated_stats(::haystack::pb::HaystackResult_Stats* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.stats)
}

// optional .backends_quality.pb.BackendsQuality backends_quality = 4;
inline bool HaystackResult::has_backends_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HaystackResult::set_has_backends_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HaystackResult::clear_has_backends_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HaystackResult::clear_backends_quality() {
  if (backends_quality_ != NULL) backends_quality_->::backends_quality::pb::BackendsQuality::Clear();
  clear_has_backends_quality();
}
inline const ::backends_quality::pb::BackendsQuality& HaystackResult::backends_quality() const {
  const ::backends_quality::pb::BackendsQuality* p = backends_quality_;
  // @@protoc_insertion_point(field_get:haystack.pb.HaystackResult.backends_quality)
  return p != NULL ? *p : *reinterpret_cast<const ::backends_quality::pb::BackendsQuality*>(
      &::backends_quality::pb::_BackendsQuality_default_instance_);
}
inline ::backends_quality::pb::BackendsQuality* HaystackResult::mutable_backends_quality() {
  set_has_backends_quality();
  if (backends_quality_ == NULL) {
    backends_quality_ = new ::backends_quality::pb::BackendsQuality;
  }
  // @@protoc_insertion_point(field_mutable:haystack.pb.HaystackResult.backends_quality)
  return backends_quality_;
}
inline ::backends_quality::pb::BackendsQuality* HaystackResult::release_backends_quality() {
  // @@protoc_insertion_point(field_release:haystack.pb.HaystackResult.backends_quality)
  clear_has_backends_quality();
  ::backends_quality::pb::BackendsQuality* temp = backends_quality_;
  backends_quality_ = NULL;
  return temp;
}
inline void HaystackResult::set_allocated_backends_quality(::backends_quality::pb::BackendsQuality* backends_quality) {
  delete backends_quality_;
  backends_quality_ = backends_quality;
  if (backends_quality) {
    set_has_backends_quality();
  } else {
    clear_has_backends_quality();
  }
  // @@protoc_insertion_point(field_set_allocated:haystack.pb.HaystackResult.backends_quality)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace haystack

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_haystack_5fresult_2eproto__INCLUDED
