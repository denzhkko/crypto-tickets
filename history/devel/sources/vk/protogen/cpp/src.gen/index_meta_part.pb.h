// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: index_meta_part.proto

#ifndef PROTOBUF_index_5fmeta_5fpart_2eproto__INCLUDED
#define PROTOBUF_index_5fmeta_5fpart_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gogo {
namespace index_meta_part {
class meta_item;
class meta_itemDefaultTypeInternal;
extern meta_itemDefaultTypeInternal _meta_item_default_instance_;
class meta_part;
class meta_partDefaultTypeInternal;
extern meta_partDefaultTypeInternal _meta_part_default_instance_;
class sentence;
class sentenceDefaultTypeInternal;
extern sentenceDefaultTypeInternal _sentence_default_instance_;
class sentence2;
class sentence2DefaultTypeInternal;
extern sentence2DefaultTypeInternal _sentence2_default_instance_;
class sentence_extension_info;
class sentence_extension_infoDefaultTypeInternal;
extern sentence_extension_infoDefaultTypeInternal _sentence_extension_info_default_instance_;
}  // namespace index_meta_part
}  // namespace gogo

namespace gogo {
namespace index_meta_part {

namespace protobuf_index_5fmeta_5fpart_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_index_5fmeta_5fpart_2eproto

enum meta_item_ItemType {
  meta_item_ItemType_ITEM = 0,
  meta_item_ItemType_RANGE = 1,
  meta_item_ItemType_SENTENCE = 2,
  meta_item_ItemType_DOCUMENT = 3
};
bool meta_item_ItemType_IsValid(int value);
const meta_item_ItemType meta_item_ItemType_ItemType_MIN = meta_item_ItemType_ITEM;
const meta_item_ItemType meta_item_ItemType_ItemType_MAX = meta_item_ItemType_DOCUMENT;
const int meta_item_ItemType_ItemType_ARRAYSIZE = meta_item_ItemType_ItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* meta_item_ItemType_descriptor();
inline const ::std::string& meta_item_ItemType_Name(meta_item_ItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    meta_item_ItemType_descriptor(), value);
}
inline bool meta_item_ItemType_Parse(
    const ::std::string& name, meta_item_ItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<meta_item_ItemType>(
    meta_item_ItemType_descriptor(), name, value);
}
enum sentence_InfQualityType {
  sentence_InfQualityType_OK = 0,
  sentence_InfQualityType_POOR = 1,
  sentence_InfQualityType_NON = 2
};
bool sentence_InfQualityType_IsValid(int value);
const sentence_InfQualityType sentence_InfQualityType_InfQualityType_MIN = sentence_InfQualityType_OK;
const sentence_InfQualityType sentence_InfQualityType_InfQualityType_MAX = sentence_InfQualityType_NON;
const int sentence_InfQualityType_InfQualityType_ARRAYSIZE = sentence_InfQualityType_InfQualityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* sentence_InfQualityType_descriptor();
inline const ::std::string& sentence_InfQualityType_Name(sentence_InfQualityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    sentence_InfQualityType_descriptor(), value);
}
inline bool sentence_InfQualityType_Parse(
    const ::std::string& name, sentence_InfQualityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<sentence_InfQualityType>(
    sentence_InfQualityType_descriptor(), name, value);
}
// ===================================================================

class meta_item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.index_meta_part.meta_item) */ {
 public:
  meta_item();
  virtual ~meta_item();

  meta_item(const meta_item& from);

  inline meta_item& operator=(const meta_item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  meta_item(meta_item&& from) noexcept
    : meta_item() {
    *this = ::std::move(from);
  }

  inline meta_item& operator=(meta_item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const meta_item& default_instance();

  static inline const meta_item* internal_default_instance() {
    return reinterpret_cast<const meta_item*>(
               &_meta_item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(meta_item* other);
  friend void swap(meta_item& a, meta_item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline meta_item* New() const PROTOBUF_FINAL { return New(NULL); }

  meta_item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const meta_item& from);
  void MergeFrom(const meta_item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(meta_item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef meta_item_ItemType ItemType;
  static const ItemType ITEM =
    meta_item_ItemType_ITEM;
  static const ItemType RANGE =
    meta_item_ItemType_RANGE;
  static const ItemType SENTENCE =
    meta_item_ItemType_SENTENCE;
  static const ItemType DOCUMENT =
    meta_item_ItemType_DOCUMENT;
  static inline bool ItemType_IsValid(int value) {
    return meta_item_ItemType_IsValid(value);
  }
  static const ItemType ItemType_MIN =
    meta_item_ItemType_ItemType_MIN;
  static const ItemType ItemType_MAX =
    meta_item_ItemType_ItemType_MAX;
  static const int ItemType_ARRAYSIZE =
    meta_item_ItemType_ItemType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ItemType_descriptor() {
    return meta_item_ItemType_descriptor();
  }
  static inline const ::std::string& ItemType_Name(ItemType value) {
    return meta_item_ItemType_Name(value);
  }
  static inline bool ItemType_Parse(const ::std::string& name,
      ItemType* value) {
    return meta_item_ItemType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required bytes content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required .gogo.index_meta_part.meta_item.ItemType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::gogo::index_meta_part::meta_item_ItemType type() const;
  void set_type(::gogo::index_meta_part::meta_item_ItemType value);

  // @@protoc_insertion_point(class_scope:gogo.index_meta_part.meta_item)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  int type_;
  friend struct protobuf_index_5fmeta_5fpart_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class meta_part : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.index_meta_part.meta_part) */ {
 public:
  meta_part();
  virtual ~meta_part();

  meta_part(const meta_part& from);

  inline meta_part& operator=(const meta_part& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  meta_part(meta_part&& from) noexcept
    : meta_part() {
    *this = ::std::move(from);
  }

  inline meta_part& operator=(meta_part&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const meta_part& default_instance();

  static inline const meta_part* internal_default_instance() {
    return reinterpret_cast<const meta_part*>(
               &_meta_part_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(meta_part* other);
  friend void swap(meta_part& a, meta_part& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline meta_part* New() const PROTOBUF_FINAL { return New(NULL); }

  meta_part* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const meta_part& from);
  void MergeFrom(const meta_part& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(meta_part* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gogo.index_meta_part.meta_item items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::gogo::index_meta_part::meta_item& items(int index) const;
  ::gogo::index_meta_part::meta_item* mutable_items(int index);
  ::gogo::index_meta_part::meta_item* add_items();
  ::google::protobuf::RepeatedPtrField< ::gogo::index_meta_part::meta_item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::gogo::index_meta_part::meta_item >&
      items() const;

  // optional int32 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gogo.index_meta_part.meta_part)
 private:
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gogo::index_meta_part::meta_item > items_;
  ::google::protobuf::int32 version_;
  friend struct protobuf_index_5fmeta_5fpart_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sentence_extension_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.index_meta_part.sentence.extension_info) */ {
 public:
  sentence_extension_info();
  virtual ~sentence_extension_info();

  sentence_extension_info(const sentence_extension_info& from);

  inline sentence_extension_info& operator=(const sentence_extension_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sentence_extension_info(sentence_extension_info&& from) noexcept
    : sentence_extension_info() {
    *this = ::std::move(from);
  }

  inline sentence_extension_info& operator=(sentence_extension_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sentence_extension_info& default_instance();

  static inline const sentence_extension_info* internal_default_instance() {
    return reinterpret_cast<const sentence_extension_info*>(
               &_sentence_extension_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(sentence_extension_info* other);
  friend void swap(sentence_extension_info& a, sentence_extension_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sentence_extension_info* New() const PROTOBUF_FINAL { return New(NULL); }

  sentence_extension_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sentence_extension_info& from);
  void MergeFrom(const sentence_extension_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sentence_extension_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 pipes_positions = 4;
  int pipes_positions_size() const;
  void clear_pipes_positions();
  static const int kPipesPositionsFieldNumber = 4;
  ::google::protobuf::uint32 pipes_positions(int index) const;
  void set_pipes_positions(int index, ::google::protobuf::uint32 value);
  void add_pipes_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pipes_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pipes_positions();

  // repeated uint32 right_angle_positions = 5;
  int right_angle_positions_size() const;
  void clear_right_angle_positions();
  static const int kRightAnglePositionsFieldNumber = 5;
  ::google::protobuf::uint32 right_angle_positions(int index) const;
  void set_right_angle_positions(int index, ::google::protobuf::uint32 value);
  void add_right_angle_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      right_angle_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_right_angle_positions();

  // repeated uint32 slash_positions = 6;
  int slash_positions_size() const;
  void clear_slash_positions();
  static const int kSlashPositionsFieldNumber = 6;
  ::google::protobuf::uint32 slash_positions(int index) const;
  void set_slash_positions(int index, ::google::protobuf::uint32 value);
  void add_slash_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      slash_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_slash_positions();

  // repeated uint32 back_slash_positions = 7;
  int back_slash_positions_size() const;
  void clear_back_slash_positions();
  static const int kBackSlashPositionsFieldNumber = 7;
  ::google::protobuf::uint32 back_slash_positions(int index) const;
  void set_back_slash_positions(int index, ::google::protobuf::uint32 value);
  void add_back_slash_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      back_slash_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_back_slash_positions();

  // repeated uint32 left_parentheses_positions = 8;
  int left_parentheses_positions_size() const;
  void clear_left_parentheses_positions();
  static const int kLeftParenthesesPositionsFieldNumber = 8;
  ::google::protobuf::uint32 left_parentheses_positions(int index) const;
  void set_left_parentheses_positions(int index, ::google::protobuf::uint32 value);
  void add_left_parentheses_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      left_parentheses_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_left_parentheses_positions();

  // repeated uint32 right_parentheses_positiosn = 9;
  int right_parentheses_positiosn_size() const;
  void clear_right_parentheses_positiosn();
  static const int kRightParenthesesPositiosnFieldNumber = 9;
  ::google::protobuf::uint32 right_parentheses_positiosn(int index) const;
  void set_right_parentheses_positiosn(int index, ::google::protobuf::uint32 value);
  void add_right_parentheses_positiosn(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      right_parentheses_positiosn() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_right_parentheses_positiosn();

  // repeated uint32 em_dash_positions = 10;
  int em_dash_positions_size() const;
  void clear_em_dash_positions();
  static const int kEmDashPositionsFieldNumber = 10;
  ::google::protobuf::uint32 em_dash_positions(int index) const;
  void set_em_dash_positions(int index, ::google::protobuf::uint32 value);
  void add_em_dash_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      em_dash_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_em_dash_positions();

  // repeated uint32 en_dash_positions = 11;
  int en_dash_positions_size() const;
  void clear_en_dash_positions();
  static const int kEnDashPositionsFieldNumber = 11;
  ::google::protobuf::uint32 en_dash_positions(int index) const;
  void set_en_dash_positions(int index, ::google::protobuf::uint32 value);
  void add_en_dash_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      en_dash_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_en_dash_positions();

  // repeated uint32 bullet_positions = 12;
  int bullet_positions_size() const;
  void clear_bullet_positions();
  static const int kBulletPositionsFieldNumber = 12;
  ::google::protobuf::uint32 bullet_positions(int index) const;
  void set_bullet_positions(int index, ::google::protobuf::uint32 value);
  void add_bullet_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bullet_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bullet_positions();

  // repeated uint32 url_part_positions = 13;
  int url_part_positions_size() const;
  void clear_url_part_positions();
  static const int kUrlPartPositionsFieldNumber = 13;
  ::google::protobuf::uint32 url_part_positions(int index) const;
  void set_url_part_positions(int index, ::google::protobuf::uint32 value);
  void add_url_part_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      url_part_positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_url_part_positions();

  // optional uint32 terms_count = 1;
  bool has_terms_count() const;
  void clear_terms_count();
  static const int kTermsCountFieldNumber = 1;
  ::google::protobuf::uint32 terms_count() const;
  void set_terms_count(::google::protobuf::uint32 value);

  // optional uint32 numbers_count = 2;
  bool has_numbers_count() const;
  void clear_numbers_count();
  static const int kNumbersCountFieldNumber = 2;
  ::google::protobuf::uint32 numbers_count() const;
  void set_numbers_count(::google::protobuf::uint32 value);

  // optional uint32 puncts_count = 3;
  bool has_puncts_count() const;
  void clear_puncts_count();
  static const int kPunctsCountFieldNumber = 3;
  ::google::protobuf::uint32 puncts_count() const;
  void set_puncts_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gogo.index_meta_part.sentence.extension_info)
 private:
  void set_has_terms_count();
  void clear_has_terms_count();
  void set_has_numbers_count();
  void clear_has_numbers_count();
  void set_has_puncts_count();
  void clear_has_puncts_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pipes_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > right_angle_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slash_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > back_slash_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > left_parentheses_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > right_parentheses_positiosn_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > em_dash_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > en_dash_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bullet_positions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > url_part_positions_;
  ::google::protobuf::uint32 terms_count_;
  ::google::protobuf::uint32 numbers_count_;
  ::google::protobuf::uint32 puncts_count_;
  friend struct protobuf_index_5fmeta_5fpart_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sentence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.index_meta_part.sentence) */ {
 public:
  sentence();
  virtual ~sentence();

  sentence(const sentence& from);

  inline sentence& operator=(const sentence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sentence(sentence&& from) noexcept
    : sentence() {
    *this = ::std::move(from);
  }

  inline sentence& operator=(sentence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sentence& default_instance();

  static inline const sentence* internal_default_instance() {
    return reinterpret_cast<const sentence*>(
               &_sentence_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(sentence* other);
  friend void swap(sentence& a, sentence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sentence* New() const PROTOBUF_FINAL { return New(NULL); }

  sentence* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sentence& from);
  void MergeFrom(const sentence& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sentence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef sentence_extension_info extension_info;

  typedef sentence_InfQualityType InfQualityType;
  static const InfQualityType OK =
    sentence_InfQualityType_OK;
  static const InfQualityType POOR =
    sentence_InfQualityType_POOR;
  static const InfQualityType NON =
    sentence_InfQualityType_NON;
  static inline bool InfQualityType_IsValid(int value) {
    return sentence_InfQualityType_IsValid(value);
  }
  static const InfQualityType InfQualityType_MIN =
    sentence_InfQualityType_InfQualityType_MIN;
  static const InfQualityType InfQualityType_MAX =
    sentence_InfQualityType_InfQualityType_MAX;
  static const int InfQualityType_ARRAYSIZE =
    sentence_InfQualityType_InfQualityType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InfQualityType_descriptor() {
    return sentence_InfQualityType_descriptor();
  }
  static inline const ::std::string& InfQualityType_Name(InfQualityType value) {
    return sentence_InfQualityType_Name(value);
  }
  static inline bool InfQualityType_Parse(const ::std::string& name,
      InfQualityType* value) {
    return sentence_InfQualityType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string paragraph_tag = 9;
  bool has_paragraph_tag() const;
  void clear_paragraph_tag();
  static const int kParagraphTagFieldNumber = 9;
  const ::std::string& paragraph_tag() const;
  void set_paragraph_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_paragraph_tag(::std::string&& value);
  #endif
  void set_paragraph_tag(const char* value);
  void set_paragraph_tag(const char* value, size_t size);
  ::std::string* mutable_paragraph_tag();
  ::std::string* release_paragraph_tag();
  void set_allocated_paragraph_tag(::std::string* paragraph_tag);

  // optional .gogo.index_meta_part.sentence.extension_info extension = 10;
  bool has_extension() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 10;
  const ::gogo::index_meta_part::sentence_extension_info& extension() const;
  ::gogo::index_meta_part::sentence_extension_info* mutable_extension();
  ::gogo::index_meta_part::sentence_extension_info* release_extension();
  void set_allocated_extension(::gogo::index_meta_part::sentence_extension_info* extension);

  // required uint32 sentence_index = 1;
  bool has_sentence_index() const;
  void clear_sentence_index();
  static const int kSentenceIndexFieldNumber = 1;
  ::google::protobuf::uint32 sentence_index() const;
  void set_sentence_index(::google::protobuf::uint32 value);

  // required uint32 first_item_index = 2;
  bool has_first_item_index() const;
  void clear_first_item_index();
  static const int kFirstItemIndexFieldNumber = 2;
  ::google::protobuf::uint32 first_item_index() const;
  void set_first_item_index(::google::protobuf::uint32 value);

  // required uint32 last_item_index = 3;
  bool has_last_item_index() const;
  void clear_last_item_index();
  static const int kLastItemIndexFieldNumber = 3;
  ::google::protobuf::uint32 last_item_index() const;
  void set_last_item_index(::google::protobuf::uint32 value);

  // optional float lexical_density = 4;
  bool has_lexical_density() const;
  void clear_lexical_density();
  static const int kLexicalDensityFieldNumber = 4;
  float lexical_density() const;
  void set_lexical_density(float value);

  // optional float readability = 5;
  bool has_readability() const;
  void clear_readability();
  static const int kReadabilityFieldNumber = 5;
  float readability() const;
  void set_readability(float value);

  // optional .gogo.index_meta_part.sentence.InfQualityType quality = 6;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 6;
  ::gogo::index_meta_part::sentence_InfQualityType quality() const;
  void set_quality(::gogo::index_meta_part::sentence_InfQualityType value);

  // optional bool has_invectives = 7;
  bool has_has_invectives() const;
  void clear_has_invectives();
  static const int kHasInvectivesFieldNumber = 7;
  bool has_invectives() const;
  void set_has_invectives(bool value);

  // optional uint32 paragraph_index = 8;
  bool has_paragraph_index() const;
  void clear_paragraph_index();
  static const int kParagraphIndexFieldNumber = 8;
  ::google::protobuf::uint32 paragraph_index() const;
  void set_paragraph_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gogo.index_meta_part.sentence)
 private:
  void set_has_sentence_index();
  void clear_has_sentence_index();
  void set_has_first_item_index();
  void clear_has_first_item_index();
  void set_has_last_item_index();
  void clear_has_last_item_index();
  void set_has_lexical_density();
  void clear_has_lexical_density();
  void set_has_readability();
  void clear_has_readability();
  void set_has_quality();
  void clear_has_quality();
  void set_has_has_invectives();
  void clear_has_has_invectives();
  void set_has_paragraph_index();
  void clear_has_paragraph_index();
  void set_has_paragraph_tag();
  void clear_has_paragraph_tag();
  void set_has_extension();
  void clear_has_extension();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr paragraph_tag_;
  ::gogo::index_meta_part::sentence_extension_info* extension_;
  ::google::protobuf::uint32 sentence_index_;
  ::google::protobuf::uint32 first_item_index_;
  ::google::protobuf::uint32 last_item_index_;
  float lexical_density_;
  float readability_;
  int quality_;
  bool has_invectives_;
  ::google::protobuf::uint32 paragraph_index_;
  friend struct protobuf_index_5fmeta_5fpart_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sentence2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.index_meta_part.sentence2) */ {
 public:
  sentence2();
  virtual ~sentence2();

  sentence2(const sentence2& from);

  inline sentence2& operator=(const sentence2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sentence2(sentence2&& from) noexcept
    : sentence2() {
    *this = ::std::move(from);
  }

  inline sentence2& operator=(sentence2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sentence2& default_instance();

  static inline const sentence2* internal_default_instance() {
    return reinterpret_cast<const sentence2*>(
               &_sentence2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(sentence2* other);
  friend void swap(sentence2& a, sentence2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sentence2* New() const PROTOBUF_FINAL { return New(NULL); }

  sentence2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sentence2& from);
  void MergeFrom(const sentence2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sentence2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sentence_index = 1;
  bool has_sentence_index() const;
  void clear_sentence_index();
  static const int kSentenceIndexFieldNumber = 1;
  ::google::protobuf::uint32 sentence_index() const;
  void set_sentence_index(::google::protobuf::uint32 value);

  // required uint32 first_item_index = 2;
  bool has_first_item_index() const;
  void clear_first_item_index();
  static const int kFirstItemIndexFieldNumber = 2;
  ::google::protobuf::uint32 first_item_index() const;
  void set_first_item_index(::google::protobuf::uint32 value);

  // required uint32 last_item_index = 3;
  bool has_last_item_index() const;
  void clear_last_item_index();
  static const int kLastItemIndexFieldNumber = 3;
  ::google::protobuf::uint32 last_item_index() const;
  void set_last_item_index(::google::protobuf::uint32 value);

  // optional .gogo.index_meta_part.sentence.InfQualityType quality = 4;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 4;
  ::gogo::index_meta_part::sentence_InfQualityType quality() const;
  void set_quality(::gogo::index_meta_part::sentence_InfQualityType value);

  // optional bool has_invectives = 5;
  bool has_has_invectives() const;
  void clear_has_invectives();
  static const int kHasInvectivesFieldNumber = 5;
  bool has_invectives() const;
  void set_has_invectives(bool value);

  // @@protoc_insertion_point(class_scope:gogo.index_meta_part.sentence2)
 private:
  void set_has_sentence_index();
  void clear_has_sentence_index();
  void set_has_first_item_index();
  void clear_has_first_item_index();
  void set_has_last_item_index();
  void clear_has_last_item_index();
  void set_has_quality();
  void clear_has_quality();
  void set_has_has_invectives();
  void clear_has_has_invectives();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sentence_index_;
  ::google::protobuf::uint32 first_item_index_;
  ::google::protobuf::uint32 last_item_index_;
  int quality_;
  bool has_invectives_;
  friend struct protobuf_index_5fmeta_5fpart_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// meta_item

// required .gogo.index_meta_part.meta_item.ItemType type = 1;
inline bool meta_item::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void meta_item::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void meta_item::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void meta_item::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::gogo::index_meta_part::meta_item_ItemType meta_item::type() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.meta_item.type)
  return static_cast< ::gogo::index_meta_part::meta_item_ItemType >(type_);
}
inline void meta_item::set_type(::gogo::index_meta_part::meta_item_ItemType value) {
  assert(::gogo::index_meta_part::meta_item_ItemType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.meta_item.type)
}

// required bytes content = 2;
inline bool meta_item::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void meta_item::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void meta_item::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void meta_item::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& meta_item::content() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.meta_item.content)
  return content_.GetNoArena();
}
inline void meta_item::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.meta_item.content)
}
#if LANG_CXX11
inline void meta_item::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gogo.index_meta_part.meta_item.content)
}
#endif
inline void meta_item::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gogo.index_meta_part.meta_item.content)
}
inline void meta_item::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gogo.index_meta_part.meta_item.content)
}
inline ::std::string* meta_item::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:gogo.index_meta_part.meta_item.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* meta_item::release_content() {
  // @@protoc_insertion_point(field_release:gogo.index_meta_part.meta_item.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void meta_item::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:gogo.index_meta_part.meta_item.content)
}

// -------------------------------------------------------------------

// meta_part

// repeated .gogo.index_meta_part.meta_item items = 1;
inline int meta_part::items_size() const {
  return items_.size();
}
inline void meta_part::clear_items() {
  items_.Clear();
}
inline const ::gogo::index_meta_part::meta_item& meta_part::items(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.meta_part.items)
  return items_.Get(index);
}
inline ::gogo::index_meta_part::meta_item* meta_part::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.index_meta_part.meta_part.items)
  return items_.Mutable(index);
}
inline ::gogo::index_meta_part::meta_item* meta_part::add_items() {
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.meta_part.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gogo::index_meta_part::meta_item >*
meta_part::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.meta_part.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gogo::index_meta_part::meta_item >&
meta_part::items() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.meta_part.items)
  return items_;
}

// optional int32 version = 2;
inline bool meta_part::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void meta_part::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void meta_part::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void meta_part::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 meta_part::version() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.meta_part.version)
  return version_;
}
inline void meta_part::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.meta_part.version)
}

// -------------------------------------------------------------------

// sentence_extension_info

// optional uint32 terms_count = 1;
inline bool sentence_extension_info::has_terms_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sentence_extension_info::set_has_terms_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sentence_extension_info::clear_has_terms_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sentence_extension_info::clear_terms_count() {
  terms_count_ = 0u;
  clear_has_terms_count();
}
inline ::google::protobuf::uint32 sentence_extension_info::terms_count() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.terms_count)
  return terms_count_;
}
inline void sentence_extension_info::set_terms_count(::google::protobuf::uint32 value) {
  set_has_terms_count();
  terms_count_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.terms_count)
}

// optional uint32 numbers_count = 2;
inline bool sentence_extension_info::has_numbers_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sentence_extension_info::set_has_numbers_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sentence_extension_info::clear_has_numbers_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sentence_extension_info::clear_numbers_count() {
  numbers_count_ = 0u;
  clear_has_numbers_count();
}
inline ::google::protobuf::uint32 sentence_extension_info::numbers_count() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.numbers_count)
  return numbers_count_;
}
inline void sentence_extension_info::set_numbers_count(::google::protobuf::uint32 value) {
  set_has_numbers_count();
  numbers_count_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.numbers_count)
}

// optional uint32 puncts_count = 3;
inline bool sentence_extension_info::has_puncts_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sentence_extension_info::set_has_puncts_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sentence_extension_info::clear_has_puncts_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sentence_extension_info::clear_puncts_count() {
  puncts_count_ = 0u;
  clear_has_puncts_count();
}
inline ::google::protobuf::uint32 sentence_extension_info::puncts_count() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.puncts_count)
  return puncts_count_;
}
inline void sentence_extension_info::set_puncts_count(::google::protobuf::uint32 value) {
  set_has_puncts_count();
  puncts_count_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.puncts_count)
}

// repeated uint32 pipes_positions = 4;
inline int sentence_extension_info::pipes_positions_size() const {
  return pipes_positions_.size();
}
inline void sentence_extension_info::clear_pipes_positions() {
  pipes_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::pipes_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.pipes_positions)
  return pipes_positions_.Get(index);
}
inline void sentence_extension_info::set_pipes_positions(int index, ::google::protobuf::uint32 value) {
  pipes_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.pipes_positions)
}
inline void sentence_extension_info::add_pipes_positions(::google::protobuf::uint32 value) {
  pipes_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.pipes_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::pipes_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.pipes_positions)
  return pipes_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_pipes_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.pipes_positions)
  return &pipes_positions_;
}

// repeated uint32 right_angle_positions = 5;
inline int sentence_extension_info::right_angle_positions_size() const {
  return right_angle_positions_.size();
}
inline void sentence_extension_info::clear_right_angle_positions() {
  right_angle_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::right_angle_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.right_angle_positions)
  return right_angle_positions_.Get(index);
}
inline void sentence_extension_info::set_right_angle_positions(int index, ::google::protobuf::uint32 value) {
  right_angle_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.right_angle_positions)
}
inline void sentence_extension_info::add_right_angle_positions(::google::protobuf::uint32 value) {
  right_angle_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.right_angle_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::right_angle_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.right_angle_positions)
  return right_angle_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_right_angle_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.right_angle_positions)
  return &right_angle_positions_;
}

// repeated uint32 slash_positions = 6;
inline int sentence_extension_info::slash_positions_size() const {
  return slash_positions_.size();
}
inline void sentence_extension_info::clear_slash_positions() {
  slash_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::slash_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.slash_positions)
  return slash_positions_.Get(index);
}
inline void sentence_extension_info::set_slash_positions(int index, ::google::protobuf::uint32 value) {
  slash_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.slash_positions)
}
inline void sentence_extension_info::add_slash_positions(::google::protobuf::uint32 value) {
  slash_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.slash_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::slash_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.slash_positions)
  return slash_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_slash_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.slash_positions)
  return &slash_positions_;
}

// repeated uint32 back_slash_positions = 7;
inline int sentence_extension_info::back_slash_positions_size() const {
  return back_slash_positions_.size();
}
inline void sentence_extension_info::clear_back_slash_positions() {
  back_slash_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::back_slash_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.back_slash_positions)
  return back_slash_positions_.Get(index);
}
inline void sentence_extension_info::set_back_slash_positions(int index, ::google::protobuf::uint32 value) {
  back_slash_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.back_slash_positions)
}
inline void sentence_extension_info::add_back_slash_positions(::google::protobuf::uint32 value) {
  back_slash_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.back_slash_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::back_slash_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.back_slash_positions)
  return back_slash_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_back_slash_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.back_slash_positions)
  return &back_slash_positions_;
}

// repeated uint32 left_parentheses_positions = 8;
inline int sentence_extension_info::left_parentheses_positions_size() const {
  return left_parentheses_positions_.size();
}
inline void sentence_extension_info::clear_left_parentheses_positions() {
  left_parentheses_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::left_parentheses_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.left_parentheses_positions)
  return left_parentheses_positions_.Get(index);
}
inline void sentence_extension_info::set_left_parentheses_positions(int index, ::google::protobuf::uint32 value) {
  left_parentheses_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.left_parentheses_positions)
}
inline void sentence_extension_info::add_left_parentheses_positions(::google::protobuf::uint32 value) {
  left_parentheses_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.left_parentheses_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::left_parentheses_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.left_parentheses_positions)
  return left_parentheses_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_left_parentheses_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.left_parentheses_positions)
  return &left_parentheses_positions_;
}

// repeated uint32 right_parentheses_positiosn = 9;
inline int sentence_extension_info::right_parentheses_positiosn_size() const {
  return right_parentheses_positiosn_.size();
}
inline void sentence_extension_info::clear_right_parentheses_positiosn() {
  right_parentheses_positiosn_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::right_parentheses_positiosn(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.right_parentheses_positiosn)
  return right_parentheses_positiosn_.Get(index);
}
inline void sentence_extension_info::set_right_parentheses_positiosn(int index, ::google::protobuf::uint32 value) {
  right_parentheses_positiosn_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.right_parentheses_positiosn)
}
inline void sentence_extension_info::add_right_parentheses_positiosn(::google::protobuf::uint32 value) {
  right_parentheses_positiosn_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.right_parentheses_positiosn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::right_parentheses_positiosn() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.right_parentheses_positiosn)
  return right_parentheses_positiosn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_right_parentheses_positiosn() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.right_parentheses_positiosn)
  return &right_parentheses_positiosn_;
}

// repeated uint32 em_dash_positions = 10;
inline int sentence_extension_info::em_dash_positions_size() const {
  return em_dash_positions_.size();
}
inline void sentence_extension_info::clear_em_dash_positions() {
  em_dash_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::em_dash_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.em_dash_positions)
  return em_dash_positions_.Get(index);
}
inline void sentence_extension_info::set_em_dash_positions(int index, ::google::protobuf::uint32 value) {
  em_dash_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.em_dash_positions)
}
inline void sentence_extension_info::add_em_dash_positions(::google::protobuf::uint32 value) {
  em_dash_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.em_dash_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::em_dash_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.em_dash_positions)
  return em_dash_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_em_dash_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.em_dash_positions)
  return &em_dash_positions_;
}

// repeated uint32 en_dash_positions = 11;
inline int sentence_extension_info::en_dash_positions_size() const {
  return en_dash_positions_.size();
}
inline void sentence_extension_info::clear_en_dash_positions() {
  en_dash_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::en_dash_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.en_dash_positions)
  return en_dash_positions_.Get(index);
}
inline void sentence_extension_info::set_en_dash_positions(int index, ::google::protobuf::uint32 value) {
  en_dash_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.en_dash_positions)
}
inline void sentence_extension_info::add_en_dash_positions(::google::protobuf::uint32 value) {
  en_dash_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.en_dash_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::en_dash_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.en_dash_positions)
  return en_dash_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_en_dash_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.en_dash_positions)
  return &en_dash_positions_;
}

// repeated uint32 bullet_positions = 12;
inline int sentence_extension_info::bullet_positions_size() const {
  return bullet_positions_.size();
}
inline void sentence_extension_info::clear_bullet_positions() {
  bullet_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::bullet_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.bullet_positions)
  return bullet_positions_.Get(index);
}
inline void sentence_extension_info::set_bullet_positions(int index, ::google::protobuf::uint32 value) {
  bullet_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.bullet_positions)
}
inline void sentence_extension_info::add_bullet_positions(::google::protobuf::uint32 value) {
  bullet_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.bullet_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::bullet_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.bullet_positions)
  return bullet_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_bullet_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.bullet_positions)
  return &bullet_positions_;
}

// repeated uint32 url_part_positions = 13;
inline int sentence_extension_info::url_part_positions_size() const {
  return url_part_positions_.size();
}
inline void sentence_extension_info::clear_url_part_positions() {
  url_part_positions_.Clear();
}
inline ::google::protobuf::uint32 sentence_extension_info::url_part_positions(int index) const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension_info.url_part_positions)
  return url_part_positions_.Get(index);
}
inline void sentence_extension_info::set_url_part_positions(int index, ::google::protobuf::uint32 value) {
  url_part_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.extension_info.url_part_positions)
}
inline void sentence_extension_info::add_url_part_positions(::google::protobuf::uint32 value) {
  url_part_positions_.Add(value);
  // @@protoc_insertion_point(field_add:gogo.index_meta_part.sentence.extension_info.url_part_positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sentence_extension_info::url_part_positions() const {
  // @@protoc_insertion_point(field_list:gogo.index_meta_part.sentence.extension_info.url_part_positions)
  return url_part_positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sentence_extension_info::mutable_url_part_positions() {
  // @@protoc_insertion_point(field_mutable_list:gogo.index_meta_part.sentence.extension_info.url_part_positions)
  return &url_part_positions_;
}

// -------------------------------------------------------------------

// sentence

// required uint32 sentence_index = 1;
inline bool sentence::has_sentence_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sentence::set_has_sentence_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sentence::clear_has_sentence_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sentence::clear_sentence_index() {
  sentence_index_ = 0u;
  clear_has_sentence_index();
}
inline ::google::protobuf::uint32 sentence::sentence_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.sentence_index)
  return sentence_index_;
}
inline void sentence::set_sentence_index(::google::protobuf::uint32 value) {
  set_has_sentence_index();
  sentence_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.sentence_index)
}

// required uint32 first_item_index = 2;
inline bool sentence::has_first_item_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sentence::set_has_first_item_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sentence::clear_has_first_item_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sentence::clear_first_item_index() {
  first_item_index_ = 0u;
  clear_has_first_item_index();
}
inline ::google::protobuf::uint32 sentence::first_item_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.first_item_index)
  return first_item_index_;
}
inline void sentence::set_first_item_index(::google::protobuf::uint32 value) {
  set_has_first_item_index();
  first_item_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.first_item_index)
}

// required uint32 last_item_index = 3;
inline bool sentence::has_last_item_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sentence::set_has_last_item_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sentence::clear_has_last_item_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sentence::clear_last_item_index() {
  last_item_index_ = 0u;
  clear_has_last_item_index();
}
inline ::google::protobuf::uint32 sentence::last_item_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.last_item_index)
  return last_item_index_;
}
inline void sentence::set_last_item_index(::google::protobuf::uint32 value) {
  set_has_last_item_index();
  last_item_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.last_item_index)
}

// optional float lexical_density = 4;
inline bool sentence::has_lexical_density() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void sentence::set_has_lexical_density() {
  _has_bits_[0] |= 0x00000020u;
}
inline void sentence::clear_has_lexical_density() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void sentence::clear_lexical_density() {
  lexical_density_ = 0;
  clear_has_lexical_density();
}
inline float sentence::lexical_density() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.lexical_density)
  return lexical_density_;
}
inline void sentence::set_lexical_density(float value) {
  set_has_lexical_density();
  lexical_density_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.lexical_density)
}

// optional float readability = 5;
inline bool sentence::has_readability() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void sentence::set_has_readability() {
  _has_bits_[0] |= 0x00000040u;
}
inline void sentence::clear_has_readability() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void sentence::clear_readability() {
  readability_ = 0;
  clear_has_readability();
}
inline float sentence::readability() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.readability)
  return readability_;
}
inline void sentence::set_readability(float value) {
  set_has_readability();
  readability_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.readability)
}

// optional .gogo.index_meta_part.sentence.InfQualityType quality = 6;
inline bool sentence::has_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void sentence::set_has_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void sentence::clear_has_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void sentence::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::gogo::index_meta_part::sentence_InfQualityType sentence::quality() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.quality)
  return static_cast< ::gogo::index_meta_part::sentence_InfQualityType >(quality_);
}
inline void sentence::set_quality(::gogo::index_meta_part::sentence_InfQualityType value) {
  assert(::gogo::index_meta_part::sentence_InfQualityType_IsValid(value));
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.quality)
}

// optional bool has_invectives = 7;
inline bool sentence::has_has_invectives() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void sentence::set_has_has_invectives() {
  _has_bits_[0] |= 0x00000100u;
}
inline void sentence::clear_has_has_invectives() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void sentence::clear_has_invectives() {
  has_invectives_ = false;
  clear_has_has_invectives();
}
inline bool sentence::has_invectives() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.has_invectives)
  return has_invectives_;
}
inline void sentence::set_has_invectives(bool value) {
  set_has_has_invectives();
  has_invectives_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.has_invectives)
}

// optional uint32 paragraph_index = 8;
inline bool sentence::has_paragraph_index() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void sentence::set_has_paragraph_index() {
  _has_bits_[0] |= 0x00000200u;
}
inline void sentence::clear_has_paragraph_index() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void sentence::clear_paragraph_index() {
  paragraph_index_ = 0u;
  clear_has_paragraph_index();
}
inline ::google::protobuf::uint32 sentence::paragraph_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.paragraph_index)
  return paragraph_index_;
}
inline void sentence::set_paragraph_index(::google::protobuf::uint32 value) {
  set_has_paragraph_index();
  paragraph_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.paragraph_index)
}

// optional string paragraph_tag = 9;
inline bool sentence::has_paragraph_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sentence::set_has_paragraph_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sentence::clear_has_paragraph_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sentence::clear_paragraph_tag() {
  paragraph_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paragraph_tag();
}
inline const ::std::string& sentence::paragraph_tag() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.paragraph_tag)
  return paragraph_tag_.GetNoArena();
}
inline void sentence::set_paragraph_tag(const ::std::string& value) {
  set_has_paragraph_tag();
  paragraph_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence.paragraph_tag)
}
#if LANG_CXX11
inline void sentence::set_paragraph_tag(::std::string&& value) {
  set_has_paragraph_tag();
  paragraph_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gogo.index_meta_part.sentence.paragraph_tag)
}
#endif
inline void sentence::set_paragraph_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paragraph_tag();
  paragraph_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gogo.index_meta_part.sentence.paragraph_tag)
}
inline void sentence::set_paragraph_tag(const char* value, size_t size) {
  set_has_paragraph_tag();
  paragraph_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gogo.index_meta_part.sentence.paragraph_tag)
}
inline ::std::string* sentence::mutable_paragraph_tag() {
  set_has_paragraph_tag();
  // @@protoc_insertion_point(field_mutable:gogo.index_meta_part.sentence.paragraph_tag)
  return paragraph_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sentence::release_paragraph_tag() {
  // @@protoc_insertion_point(field_release:gogo.index_meta_part.sentence.paragraph_tag)
  clear_has_paragraph_tag();
  return paragraph_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sentence::set_allocated_paragraph_tag(::std::string* paragraph_tag) {
  if (paragraph_tag != NULL) {
    set_has_paragraph_tag();
  } else {
    clear_has_paragraph_tag();
  }
  paragraph_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paragraph_tag);
  // @@protoc_insertion_point(field_set_allocated:gogo.index_meta_part.sentence.paragraph_tag)
}

// optional .gogo.index_meta_part.sentence.extension_info extension = 10;
inline bool sentence::has_extension() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sentence::set_has_extension() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sentence::clear_has_extension() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sentence::clear_extension() {
  if (extension_ != NULL) extension_->::gogo::index_meta_part::sentence_extension_info::Clear();
  clear_has_extension();
}
inline const ::gogo::index_meta_part::sentence_extension_info& sentence::extension() const {
  const ::gogo::index_meta_part::sentence_extension_info* p = extension_;
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence.extension)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::index_meta_part::sentence_extension_info*>(
      &::gogo::index_meta_part::_sentence_extension_info_default_instance_);
}
inline ::gogo::index_meta_part::sentence_extension_info* sentence::mutable_extension() {
  set_has_extension();
  if (extension_ == NULL) {
    extension_ = new ::gogo::index_meta_part::sentence_extension_info;
  }
  // @@protoc_insertion_point(field_mutable:gogo.index_meta_part.sentence.extension)
  return extension_;
}
inline ::gogo::index_meta_part::sentence_extension_info* sentence::release_extension() {
  // @@protoc_insertion_point(field_release:gogo.index_meta_part.sentence.extension)
  clear_has_extension();
  ::gogo::index_meta_part::sentence_extension_info* temp = extension_;
  extension_ = NULL;
  return temp;
}
inline void sentence::set_allocated_extension(::gogo::index_meta_part::sentence_extension_info* extension) {
  delete extension_;
  extension_ = extension;
  if (extension) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.index_meta_part.sentence.extension)
}

// -------------------------------------------------------------------

// sentence2

// required uint32 sentence_index = 1;
inline bool sentence2::has_sentence_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sentence2::set_has_sentence_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sentence2::clear_has_sentence_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sentence2::clear_sentence_index() {
  sentence_index_ = 0u;
  clear_has_sentence_index();
}
inline ::google::protobuf::uint32 sentence2::sentence_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence2.sentence_index)
  return sentence_index_;
}
inline void sentence2::set_sentence_index(::google::protobuf::uint32 value) {
  set_has_sentence_index();
  sentence_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence2.sentence_index)
}

// required uint32 first_item_index = 2;
inline bool sentence2::has_first_item_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sentence2::set_has_first_item_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sentence2::clear_has_first_item_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sentence2::clear_first_item_index() {
  first_item_index_ = 0u;
  clear_has_first_item_index();
}
inline ::google::protobuf::uint32 sentence2::first_item_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence2.first_item_index)
  return first_item_index_;
}
inline void sentence2::set_first_item_index(::google::protobuf::uint32 value) {
  set_has_first_item_index();
  first_item_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence2.first_item_index)
}

// required uint32 last_item_index = 3;
inline bool sentence2::has_last_item_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sentence2::set_has_last_item_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sentence2::clear_has_last_item_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sentence2::clear_last_item_index() {
  last_item_index_ = 0u;
  clear_has_last_item_index();
}
inline ::google::protobuf::uint32 sentence2::last_item_index() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence2.last_item_index)
  return last_item_index_;
}
inline void sentence2::set_last_item_index(::google::protobuf::uint32 value) {
  set_has_last_item_index();
  last_item_index_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence2.last_item_index)
}

// optional .gogo.index_meta_part.sentence.InfQualityType quality = 4;
inline bool sentence2::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sentence2::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sentence2::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sentence2::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::gogo::index_meta_part::sentence_InfQualityType sentence2::quality() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence2.quality)
  return static_cast< ::gogo::index_meta_part::sentence_InfQualityType >(quality_);
}
inline void sentence2::set_quality(::gogo::index_meta_part::sentence_InfQualityType value) {
  assert(::gogo::index_meta_part::sentence_InfQualityType_IsValid(value));
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence2.quality)
}

// optional bool has_invectives = 5;
inline bool sentence2::has_has_invectives() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sentence2::set_has_has_invectives() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sentence2::clear_has_has_invectives() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sentence2::clear_has_invectives() {
  has_invectives_ = false;
  clear_has_has_invectives();
}
inline bool sentence2::has_invectives() const {
  // @@protoc_insertion_point(field_get:gogo.index_meta_part.sentence2.has_invectives)
  return has_invectives_;
}
inline void sentence2::set_has_invectives(bool value) {
  set_has_has_invectives();
  has_invectives_ = value;
  // @@protoc_insertion_point(field_set:gogo.index_meta_part.sentence2.has_invectives)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace index_meta_part
}  // namespace gogo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gogo::index_meta_part::meta_item_ItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gogo::index_meta_part::meta_item_ItemType>() {
  return ::gogo::index_meta_part::meta_item_ItemType_descriptor();
}
template <> struct is_proto_enum< ::gogo::index_meta_part::sentence_InfQualityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gogo::index_meta_part::sentence_InfQualityType>() {
  return ::gogo::index_meta_part::sentence_InfQualityType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_index_5fmeta_5fpart_2eproto__INCLUDED
