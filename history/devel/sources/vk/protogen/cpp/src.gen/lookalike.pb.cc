// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lookalike.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lookalike.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lookalike {
namespace pb {
class UserActionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserAction>
     _instance;
} _UserAction_default_instance_;
class UserData_AlsFeaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserData_AlsFea>
     _instance;
} _UserData_AlsFea_default_instance_;
class UserDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserData>
     _instance;
} _UserData_default_instance_;
class LookalikeEvent_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LookalikeEvent_Data>
     _instance;
} _LookalikeEvent_Data_default_instance_;
class LookalikeEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LookalikeEvent>
     _instance;
} _LookalikeEvent_default_instance_;

namespace protobuf_lookalike_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, vid_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserAction, doc_id_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_AlsFea, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_AlsFea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_AlsFea, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData_AlsFea, weight_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, als_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserData, version_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent_Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent_Data, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent_Data, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent_Data, user_data_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookalikeEvent, data_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(UserAction)},
  { 13, 20, sizeof(UserData_AlsFea)},
  { 22, 29, sizeof(UserData)},
  { 31, 39, sizeof(LookalikeEvent_Data)},
  { 42, 49, sizeof(LookalikeEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserData_AlsFea_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LookalikeEvent_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LookalikeEvent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "lookalike.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserAction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserAction_default_instance_);_UserData_AlsFea_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserData_AlsFea_default_instance_);_UserData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserData_default_instance_);_LookalikeEvent_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LookalikeEvent_Data_default_instance_);_LookalikeEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LookalikeEvent_default_instance_);_LookalikeEvent_Data_default_instance_._instance.get_mutable()->user_data_ = const_cast< ::lookalike::pb::UserData*>(
      ::lookalike::pb::UserData::internal_default_instance());
  _LookalikeEvent_default_instance_._instance.get_mutable()->data_ = const_cast< ::lookalike::pb::LookalikeEvent_Data*>(
      ::lookalike::pb::LookalikeEvent_Data::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017lookalike.proto\022\014lookalike.pb\"\224\001\n\nUser"
      "Action\0229\n\004type\030\001 \001(\0162\035.lookalike.pb.User"
      "Action.Type:\014ACTION_CLICK\022\021\n\ttimestamp\030\002"
      " \002(\003\022\016\n\006vid_id\030\003 \002(\003\022\016\n\006doc_id\030\004 \002(\003\"\030\n\004"
      "Type\022\020\n\014ACTION_CLICK\020\001\"p\n\010UserData\022*\n\003al"
      "s\030\001 \003(\0132\035.lookalike.pb.UserData.AlsFea\022\017"
      "\n\007version\030\002 \001(\003\032\'\n\006AlsFea\022\r\n\005index\030\001 \002(\005"
      "\022\016\n\006weight\030\002 \002(\002\"\220\002\n\016LookalikeEvent\022E\n\006a"
      "ction\030\001 \001(\0162#.lookalike.pb.LookalikeEven"
      "t.Action:\020CREATE_OR_UPDATE\022/\n\004data\030\002 \002(\013"
      "2!.lookalike.pb.LookalikeEvent.Data\032O\n\004D"
      "ata\022\017\n\007user_id\030\001 \002(\003\022\013\n\003tag\030\002 \002(\t\022)\n\tuse"
      "r_data\030\003 \002(\0132\026.lookalike.pb.UserData\"5\n\006"
      "Action\022\024\n\020CREATE_OR_UPDATE\020\001\022\025\n\021CREATE_O"
      "R_REPLACE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 571);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lookalike.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_lookalike_2eproto

const ::google::protobuf::EnumDescriptor* UserAction_Type_descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_enum_descriptors[0];
}
bool UserAction_Type_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserAction_Type UserAction::ACTION_CLICK;
const UserAction_Type UserAction::Type_MIN;
const UserAction_Type UserAction::Type_MAX;
const int UserAction::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LookalikeEvent_Action_descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_enum_descriptors[1];
}
bool LookalikeEvent_Action_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LookalikeEvent_Action LookalikeEvent::CREATE_OR_UPDATE;
const LookalikeEvent_Action LookalikeEvent::CREATE_OR_REPLACE;
const LookalikeEvent_Action LookalikeEvent::Action_MIN;
const LookalikeEvent_Action LookalikeEvent::Action_MAX;
const int LookalikeEvent::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAction::kTypeFieldNumber;
const int UserAction::kTimestampFieldNumber;
const int UserAction::kVidIdFieldNumber;
const int UserAction::kDocIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAction::UserAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lookalike_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lookalike.pb.UserAction)
}
UserAction::UserAction(const UserAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:lookalike.pb.UserAction)
}

void UserAction::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&doc_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(doc_id_));
  type_ = 1;
}

UserAction::~UserAction() {
  // @@protoc_insertion_point(destructor:lookalike.pb.UserAction)
  SharedDtor();
}

void UserAction::SharedDtor() {
}

void UserAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserAction::descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAction& UserAction::default_instance() {
  protobuf_lookalike_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserAction* UserAction::New(::google::protobuf::Arena* arena) const {
  UserAction* n = new UserAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:lookalike.pb.UserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&doc_id_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(doc_id_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lookalike.pb.UserAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::lookalike::pb::UserAction_Type_IsValid(value)) {
            set_type(static_cast< ::lookalike::pb::UserAction_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 vid_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vid_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vid_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 doc_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_doc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lookalike.pb.UserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lookalike.pb.UserAction)
  return false;
#undef DO_
}

void UserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lookalike.pb.UserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // required int64 vid_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->vid_id(), output);
  }

  // required int64 doc_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->doc_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lookalike.pb.UserAction)
}

::google::protobuf::uint8* UserAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lookalike.pb.UserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // required int64 vid_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->vid_id(), target);
  }

  // required int64 doc_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->doc_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lookalike.pb.UserAction)
  return target;
}

size_t UserAction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lookalike.pb.UserAction)
  size_t total_size = 0;

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  if (has_vid_id()) {
    // required int64 vid_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vid_id());
  }

  if (has_doc_id()) {
    // required int64 doc_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());
  }

  return total_size;
}
size_t UserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lookalike.pb.UserAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

    // required int64 vid_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->vid_id());

    // required int64 doc_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->doc_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lookalike.pb.UserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lookalike.pb.UserAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lookalike.pb.UserAction)
    MergeFrom(*source);
  }
}

void UserAction::MergeFrom(const UserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lookalike.pb.UserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      vid_id_ = from.vid_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      doc_id_ = from.doc_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lookalike.pb.UserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAction::CopyFrom(const UserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lookalike.pb.UserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UserAction::Swap(UserAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAction::InternalSwap(UserAction* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(vid_id_, other->vid_id_);
  swap(doc_id_, other->doc_id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserAction::GetMetadata() const {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserAction

// optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
bool UserAction::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UserAction::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void UserAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void UserAction::clear_type() {
  type_ = 1;
  clear_has_type();
}
::lookalike::pb::UserAction_Type UserAction::type() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.type)
  return static_cast< ::lookalike::pb::UserAction_Type >(type_);
}
void UserAction::set_type(::lookalike::pb::UserAction_Type value) {
  assert(::lookalike::pb::UserAction_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.type)
}

// required int64 timestamp = 2;
bool UserAction::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserAction::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void UserAction::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserAction::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
::google::protobuf::int64 UserAction::timestamp() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.timestamp)
  return timestamp_;
}
void UserAction::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.timestamp)
}

// required int64 vid_id = 3;
bool UserAction::has_vid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserAction::set_has_vid_id() {
  _has_bits_[0] |= 0x00000002u;
}
void UserAction::clear_has_vid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserAction::clear_vid_id() {
  vid_id_ = GOOGLE_LONGLONG(0);
  clear_has_vid_id();
}
::google::protobuf::int64 UserAction::vid_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.vid_id)
  return vid_id_;
}
void UserAction::set_vid_id(::google::protobuf::int64 value) {
  set_has_vid_id();
  vid_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.vid_id)
}

// required int64 doc_id = 4;
bool UserAction::has_doc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserAction::set_has_doc_id() {
  _has_bits_[0] |= 0x00000004u;
}
void UserAction::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserAction::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
::google::protobuf::int64 UserAction::doc_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.doc_id)
  return doc_id_;
}
void UserAction::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.doc_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserData_AlsFea::kIndexFieldNumber;
const int UserData_AlsFea::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserData_AlsFea::UserData_AlsFea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lookalike_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lookalike.pb.UserData.AlsFea)
}
UserData_AlsFea::UserData_AlsFea(const UserData_AlsFea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&index_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:lookalike.pb.UserData.AlsFea)
}

void UserData_AlsFea::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&index_)) + sizeof(weight_));
}

UserData_AlsFea::~UserData_AlsFea() {
  // @@protoc_insertion_point(destructor:lookalike.pb.UserData.AlsFea)
  SharedDtor();
}

void UserData_AlsFea::SharedDtor() {
}

void UserData_AlsFea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserData_AlsFea::descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserData_AlsFea& UserData_AlsFea::default_instance() {
  protobuf_lookalike_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserData_AlsFea* UserData_AlsFea::New(::google::protobuf::Arena* arena) const {
  UserData_AlsFea* n = new UserData_AlsFea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserData_AlsFea::Clear() {
// @@protoc_insertion_point(message_clear_start:lookalike.pb.UserData.AlsFea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weight_) -
        reinterpret_cast<char*>(&index_)) + sizeof(weight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserData_AlsFea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lookalike.pb.UserData.AlsFea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lookalike.pb.UserData.AlsFea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lookalike.pb.UserData.AlsFea)
  return false;
#undef DO_
}

void UserData_AlsFea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lookalike.pb.UserData.AlsFea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required float weight = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lookalike.pb.UserData.AlsFea)
}

::google::protobuf::uint8* UserData_AlsFea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lookalike.pb.UserData.AlsFea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required float weight = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lookalike.pb.UserData.AlsFea)
  return target;
}

size_t UserData_AlsFea::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lookalike.pb.UserData.AlsFea)
  size_t total_size = 0;

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_weight()) {
    // required float weight = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t UserData_AlsFea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lookalike.pb.UserData.AlsFea)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required float weight = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserData_AlsFea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lookalike.pb.UserData.AlsFea)
  GOOGLE_DCHECK_NE(&from, this);
  const UserData_AlsFea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserData_AlsFea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lookalike.pb.UserData.AlsFea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lookalike.pb.UserData.AlsFea)
    MergeFrom(*source);
  }
}

void UserData_AlsFea::MergeFrom(const UserData_AlsFea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lookalike.pb.UserData.AlsFea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      weight_ = from.weight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserData_AlsFea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lookalike.pb.UserData.AlsFea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData_AlsFea::CopyFrom(const UserData_AlsFea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lookalike.pb.UserData.AlsFea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData_AlsFea::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserData_AlsFea::Swap(UserData_AlsFea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserData_AlsFea::InternalSwap(UserData_AlsFea* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(weight_, other->weight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserData_AlsFea::GetMetadata() const {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserData_AlsFea

// required int32 index = 1;
bool UserData_AlsFea::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserData_AlsFea::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void UserData_AlsFea::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserData_AlsFea::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 UserData_AlsFea::index() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.AlsFea.index)
  return index_;
}
void UserData_AlsFea::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.AlsFea.index)
}

// required float weight = 2;
bool UserData_AlsFea::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserData_AlsFea::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void UserData_AlsFea::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserData_AlsFea::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
float UserData_AlsFea::weight() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.AlsFea.weight)
  return weight_;
}
void UserData_AlsFea::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.AlsFea.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserData::kAlsFieldNumber;
const int UserData::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserData::UserData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lookalike_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lookalike.pb.UserData)
}
UserData::UserData(const UserData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      als_(from.als_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:lookalike.pb.UserData)
}

void UserData::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_LONGLONG(0);
}

UserData::~UserData() {
  // @@protoc_insertion_point(destructor:lookalike.pb.UserData)
  SharedDtor();
}

void UserData::SharedDtor() {
}

void UserData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserData::descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserData& UserData::default_instance() {
  protobuf_lookalike_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserData* UserData::New(::google::protobuf::Arena* arena) const {
  UserData* n = new UserData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:lookalike.pb.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  als_.Clear();
  version_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lookalike.pb.UserData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lookalike.pb.UserData.AlsFea als = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_als()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lookalike.pb.UserData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lookalike.pb.UserData)
  return false;
#undef DO_
}

void UserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lookalike.pb.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lookalike.pb.UserData.AlsFea als = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->als_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->als(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lookalike.pb.UserData)
}

::google::protobuf::uint8* UserData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lookalike.pb.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lookalike.pb.UserData.AlsFea als = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->als_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->als(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 version = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lookalike.pb.UserData)
  return target;
}

size_t UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lookalike.pb.UserData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .lookalike.pb.UserData.AlsFea als = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->als_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->als(static_cast<int>(i)));
    }
  }

  // optional int64 version = 2;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lookalike.pb.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lookalike.pb.UserData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lookalike.pb.UserData)
    MergeFrom(*source);
  }
}

void UserData::MergeFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lookalike.pb.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  als_.MergeFrom(from.als_);
  if (from.has_version()) {
    set_version(from.version());
  }
}

void UserData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lookalike.pb.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData::CopyFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lookalike.pb.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->als())) return false;
  return true;
}

void UserData::Swap(UserData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserData::InternalSwap(UserData* other) {
  using std::swap;
  als_.InternalSwap(&other->als_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserData::GetMetadata() const {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserData

// repeated .lookalike.pb.UserData.AlsFea als = 1;
int UserData::als_size() const {
  return als_.size();
}
void UserData::clear_als() {
  als_.Clear();
}
const ::lookalike::pb::UserData_AlsFea& UserData::als(int index) const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.als)
  return als_.Get(index);
}
::lookalike::pb::UserData_AlsFea* UserData::mutable_als(int index) {
  // @@protoc_insertion_point(field_mutable:lookalike.pb.UserData.als)
  return als_.Mutable(index);
}
::lookalike::pb::UserData_AlsFea* UserData::add_als() {
  // @@protoc_insertion_point(field_add:lookalike.pb.UserData.als)
  return als_.Add();
}
::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >*
UserData::mutable_als() {
  // @@protoc_insertion_point(field_mutable_list:lookalike.pb.UserData.als)
  return &als_;
}
const ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >&
UserData::als() const {
  // @@protoc_insertion_point(field_list:lookalike.pb.UserData.als)
  return als_;
}

// optional int64 version = 2;
bool UserData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserData::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void UserData::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserData::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
::google::protobuf::int64 UserData::version() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.version)
  return version_;
}
void UserData::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookalikeEvent_Data::kUserIdFieldNumber;
const int LookalikeEvent_Data::kTagFieldNumber;
const int LookalikeEvent_Data::kUserDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookalikeEvent_Data::LookalikeEvent_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lookalike_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lookalike.pb.LookalikeEvent.Data)
}
LookalikeEvent_Data::LookalikeEvent_Data(const LookalikeEvent_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.has_user_data()) {
    user_data_ = new ::lookalike::pb::UserData(*from.user_data_);
  } else {
    user_data_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:lookalike.pb.LookalikeEvent.Data)
}

void LookalikeEvent_Data::SharedCtor() {
  _cached_size_ = 0;
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&user_data_)) + sizeof(user_id_));
}

LookalikeEvent_Data::~LookalikeEvent_Data() {
  // @@protoc_insertion_point(destructor:lookalike.pb.LookalikeEvent.Data)
  SharedDtor();
}

void LookalikeEvent_Data::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_data_;
}

void LookalikeEvent_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookalikeEvent_Data::descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LookalikeEvent_Data& LookalikeEvent_Data::default_instance() {
  protobuf_lookalike_2eproto::InitDefaults();
  return *internal_default_instance();
}

LookalikeEvent_Data* LookalikeEvent_Data::New(::google::protobuf::Arena* arena) const {
  LookalikeEvent_Data* n = new LookalikeEvent_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookalikeEvent_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:lookalike.pb.LookalikeEvent.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!tag_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(user_data_ != NULL);
      user_data_->::lookalike::pb::UserData::Clear();
    }
  }
  user_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LookalikeEvent_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lookalike.pb.LookalikeEvent.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string tag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lookalike.pb.LookalikeEvent.Data.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .lookalike.pb.UserData user_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lookalike.pb.LookalikeEvent.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lookalike.pb.LookalikeEvent.Data)
  return false;
#undef DO_
}

void LookalikeEvent_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lookalike.pb.LookalikeEvent.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 user_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // required string tag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lookalike.pb.LookalikeEvent.Data.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag(), output);
  }

  // required .lookalike.pb.UserData user_data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->user_data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lookalike.pb.LookalikeEvent.Data)
}

::google::protobuf::uint8* LookalikeEvent_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lookalike.pb.LookalikeEvent.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 user_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // required string tag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lookalike.pb.LookalikeEvent.Data.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag(), target);
  }

  // required .lookalike.pb.UserData user_data = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->user_data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lookalike.pb.LookalikeEvent.Data)
  return target;
}

size_t LookalikeEvent_Data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lookalike.pb.LookalikeEvent.Data)
  size_t total_size = 0;

  if (has_tag()) {
    // required string tag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  if (has_user_data()) {
    // required .lookalike.pb.UserData user_data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_data_);
  }

  if (has_user_id()) {
    // required int64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  return total_size;
}
size_t LookalikeEvent_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lookalike.pb.LookalikeEvent.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string tag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());

    // required .lookalike.pb.UserData user_data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_data_);

    // required int64 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookalikeEvent_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lookalike.pb.LookalikeEvent.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const LookalikeEvent_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookalikeEvent_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lookalike.pb.LookalikeEvent.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lookalike.pb.LookalikeEvent.Data)
    MergeFrom(*source);
  }
}

void LookalikeEvent_Data::MergeFrom(const LookalikeEvent_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lookalike.pb.LookalikeEvent.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag();
      tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_user_data()->::lookalike::pb::UserData::MergeFrom(from.user_data());
    }
    if (cached_has_bits & 0x00000004u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LookalikeEvent_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lookalike.pb.LookalikeEvent.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookalikeEvent_Data::CopyFrom(const LookalikeEvent_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lookalike.pb.LookalikeEvent.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookalikeEvent_Data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_user_data()) {
    if (!this->user_data_->IsInitialized()) return false;
  }
  return true;
}

void LookalikeEvent_Data::Swap(LookalikeEvent_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookalikeEvent_Data::InternalSwap(LookalikeEvent_Data* other) {
  using std::swap;
  tag_.Swap(&other->tag_);
  swap(user_data_, other->user_data_);
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookalikeEvent_Data::GetMetadata() const {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookalikeEvent_Data

// required int64 user_id = 1;
bool LookalikeEvent_Data::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LookalikeEvent_Data::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
void LookalikeEvent_Data::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void LookalikeEvent_Data::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
::google::protobuf::int64 LookalikeEvent_Data::user_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.user_id)
  return user_id_;
}
void LookalikeEvent_Data::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.Data.user_id)
}

// required string tag = 2;
bool LookalikeEvent_Data::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LookalikeEvent_Data::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
void LookalikeEvent_Data::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
void LookalikeEvent_Data::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
const ::std::string& LookalikeEvent_Data::tag() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.tag)
  return tag_.GetNoArena();
}
void LookalikeEvent_Data::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.Data.tag)
}
#if LANG_CXX11
void LookalikeEvent_Data::set_tag(::std::string&& value) {
  set_has_tag();
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookalike.pb.LookalikeEvent.Data.tag)
}
#endif
void LookalikeEvent_Data::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookalike.pb.LookalikeEvent.Data.tag)
}
void LookalikeEvent_Data::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookalike.pb.LookalikeEvent.Data.tag)
}
::std::string* LookalikeEvent_Data::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.Data.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LookalikeEvent_Data::release_tag() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.Data.tag)
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LookalikeEvent_Data::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.Data.tag)
}

// required .lookalike.pb.UserData user_data = 3;
bool LookalikeEvent_Data::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LookalikeEvent_Data::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
void LookalikeEvent_Data::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void LookalikeEvent_Data::clear_user_data() {
  if (user_data_ != NULL) user_data_->::lookalike::pb::UserData::Clear();
  clear_has_user_data();
}
const ::lookalike::pb::UserData& LookalikeEvent_Data::user_data() const {
  const ::lookalike::pb::UserData* p = user_data_;
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.user_data)
  return p != NULL ? *p : *reinterpret_cast<const ::lookalike::pb::UserData*>(
      &::lookalike::pb::_UserData_default_instance_);
}
::lookalike::pb::UserData* LookalikeEvent_Data::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == NULL) {
    user_data_ = new ::lookalike::pb::UserData;
  }
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.Data.user_data)
  return user_data_;
}
::lookalike::pb::UserData* LookalikeEvent_Data::release_user_data() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.Data.user_data)
  clear_has_user_data();
  ::lookalike::pb::UserData* temp = user_data_;
  user_data_ = NULL;
  return temp;
}
void LookalikeEvent_Data::set_allocated_user_data(::lookalike::pb::UserData* user_data) {
  delete user_data_;
  user_data_ = user_data;
  if (user_data) {
    set_has_user_data();
  } else {
    clear_has_user_data();
  }
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.Data.user_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookalikeEvent::kActionFieldNumber;
const int LookalikeEvent::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookalikeEvent::LookalikeEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lookalike_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lookalike.pb.LookalikeEvent)
}
LookalikeEvent::LookalikeEvent(const LookalikeEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::lookalike::pb::LookalikeEvent_Data(*from.data_);
  } else {
    data_ = NULL;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:lookalike.pb.LookalikeEvent)
}

void LookalikeEvent::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  action_ = 1;
}

LookalikeEvent::~LookalikeEvent() {
  // @@protoc_insertion_point(destructor:lookalike.pb.LookalikeEvent)
  SharedDtor();
}

void LookalikeEvent::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void LookalikeEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookalikeEvent::descriptor() {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LookalikeEvent& LookalikeEvent::default_instance() {
  protobuf_lookalike_2eproto::InitDefaults();
  return *internal_default_instance();
}

LookalikeEvent* LookalikeEvent::New(::google::protobuf::Arena* arena) const {
  LookalikeEvent* n = new LookalikeEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookalikeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:lookalike.pb.LookalikeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->::lookalike::pb::LookalikeEvent_Data::Clear();
    }
    action_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LookalikeEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lookalike.pb.LookalikeEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::lookalike::pb::LookalikeEvent_Action_IsValid(value)) {
            set_action(static_cast< ::lookalike::pb::LookalikeEvent_Action >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .lookalike.pb.LookalikeEvent.Data data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lookalike.pb.LookalikeEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lookalike.pb.LookalikeEvent)
  return false;
#undef DO_
}

void LookalikeEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lookalike.pb.LookalikeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // required .lookalike.pb.LookalikeEvent.Data data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lookalike.pb.LookalikeEvent)
}

::google::protobuf::uint8* LookalikeEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lookalike.pb.LookalikeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // required .lookalike.pb.LookalikeEvent.Data data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lookalike.pb.LookalikeEvent)
  return target;
}

size_t LookalikeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lookalike.pb.LookalikeEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .lookalike.pb.LookalikeEvent.Data data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  // optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
  if (has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookalikeEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lookalike.pb.LookalikeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const LookalikeEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookalikeEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lookalike.pb.LookalikeEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lookalike.pb.LookalikeEvent)
    MergeFrom(*source);
  }
}

void LookalikeEvent::MergeFrom(const LookalikeEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lookalike.pb.LookalikeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_data()->::lookalike::pb::LookalikeEvent_Data::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LookalikeEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lookalike.pb.LookalikeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookalikeEvent::CopyFrom(const LookalikeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lookalike.pb.LookalikeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookalikeEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void LookalikeEvent::Swap(LookalikeEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookalikeEvent::InternalSwap(LookalikeEvent* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookalikeEvent::GetMetadata() const {
  protobuf_lookalike_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lookalike_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookalikeEvent

// optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
bool LookalikeEvent::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LookalikeEvent::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
void LookalikeEvent::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
void LookalikeEvent::clear_action() {
  action_ = 1;
  clear_has_action();
}
::lookalike::pb::LookalikeEvent_Action LookalikeEvent::action() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.action)
  return static_cast< ::lookalike::pb::LookalikeEvent_Action >(action_);
}
void LookalikeEvent::set_action(::lookalike::pb::LookalikeEvent_Action value) {
  assert(::lookalike::pb::LookalikeEvent_Action_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.action)
}

// required .lookalike.pb.LookalikeEvent.Data data = 2;
bool LookalikeEvent::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LookalikeEvent::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void LookalikeEvent::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void LookalikeEvent::clear_data() {
  if (data_ != NULL) data_->::lookalike::pb::LookalikeEvent_Data::Clear();
  clear_has_data();
}
const ::lookalike::pb::LookalikeEvent_Data& LookalikeEvent::data() const {
  const ::lookalike::pb::LookalikeEvent_Data* p = data_;
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.data)
  return p != NULL ? *p : *reinterpret_cast<const ::lookalike::pb::LookalikeEvent_Data*>(
      &::lookalike::pb::_LookalikeEvent_Data_default_instance_);
}
::lookalike::pb::LookalikeEvent_Data* LookalikeEvent::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::lookalike::pb::LookalikeEvent_Data;
  }
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.data)
  return data_;
}
::lookalike::pb::LookalikeEvent_Data* LookalikeEvent::release_data() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.data)
  clear_has_data();
  ::lookalike::pb::LookalikeEvent_Data* temp = data_;
  data_ = NULL;
  return temp;
}
void LookalikeEvent::set_allocated_data(::lookalike::pb::LookalikeEvent_Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace lookalike

// @@protoc_insertion_point(global_scope)
