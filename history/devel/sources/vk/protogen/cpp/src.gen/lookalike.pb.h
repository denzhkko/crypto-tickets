// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lookalike.proto

#ifndef PROTOBUF_lookalike_2eproto__INCLUDED
#define PROTOBUF_lookalike_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace lookalike {
namespace pb {
class LookalikeEvent;
class LookalikeEventDefaultTypeInternal;
extern LookalikeEventDefaultTypeInternal _LookalikeEvent_default_instance_;
class LookalikeEvent_Data;
class LookalikeEvent_DataDefaultTypeInternal;
extern LookalikeEvent_DataDefaultTypeInternal _LookalikeEvent_Data_default_instance_;
class UserAction;
class UserActionDefaultTypeInternal;
extern UserActionDefaultTypeInternal _UserAction_default_instance_;
class UserData;
class UserDataDefaultTypeInternal;
extern UserDataDefaultTypeInternal _UserData_default_instance_;
class UserData_AlsFea;
class UserData_AlsFeaDefaultTypeInternal;
extern UserData_AlsFeaDefaultTypeInternal _UserData_AlsFea_default_instance_;
}  // namespace pb
}  // namespace lookalike

namespace lookalike {
namespace pb {

namespace protobuf_lookalike_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_lookalike_2eproto

enum UserAction_Type {
  UserAction_Type_ACTION_CLICK = 1
};
bool UserAction_Type_IsValid(int value);
const UserAction_Type UserAction_Type_Type_MIN = UserAction_Type_ACTION_CLICK;
const UserAction_Type UserAction_Type_Type_MAX = UserAction_Type_ACTION_CLICK;
const int UserAction_Type_Type_ARRAYSIZE = UserAction_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserAction_Type_descriptor();
inline const ::std::string& UserAction_Type_Name(UserAction_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserAction_Type_descriptor(), value);
}
inline bool UserAction_Type_Parse(
    const ::std::string& name, UserAction_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserAction_Type>(
    UserAction_Type_descriptor(), name, value);
}
enum LookalikeEvent_Action {
  LookalikeEvent_Action_CREATE_OR_UPDATE = 1,
  LookalikeEvent_Action_CREATE_OR_REPLACE = 2
};
bool LookalikeEvent_Action_IsValid(int value);
const LookalikeEvent_Action LookalikeEvent_Action_Action_MIN = LookalikeEvent_Action_CREATE_OR_UPDATE;
const LookalikeEvent_Action LookalikeEvent_Action_Action_MAX = LookalikeEvent_Action_CREATE_OR_REPLACE;
const int LookalikeEvent_Action_Action_ARRAYSIZE = LookalikeEvent_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* LookalikeEvent_Action_descriptor();
inline const ::std::string& LookalikeEvent_Action_Name(LookalikeEvent_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    LookalikeEvent_Action_descriptor(), value);
}
inline bool LookalikeEvent_Action_Parse(
    const ::std::string& name, LookalikeEvent_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LookalikeEvent_Action>(
    LookalikeEvent_Action_descriptor(), name, value);
}
// ===================================================================

class UserAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookalike.pb.UserAction) */ {
 public:
  UserAction();
  virtual ~UserAction();

  UserAction(const UserAction& from);

  inline UserAction& operator=(const UserAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserAction(UserAction&& from) noexcept
    : UserAction() {
    *this = ::std::move(from);
  }

  inline UserAction& operator=(UserAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAction& default_instance();

  static inline const UserAction* internal_default_instance() {
    return reinterpret_cast<const UserAction*>(
               &_UserAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserAction* other);
  friend void swap(UserAction& a, UserAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserAction* New() const PROTOBUF_FINAL { return New(NULL); }

  UserAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserAction& from);
  void MergeFrom(const UserAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UserAction_Type Type;
  static const Type ACTION_CLICK =
    UserAction_Type_ACTION_CLICK;
  static inline bool Type_IsValid(int value) {
    return UserAction_Type_IsValid(value);
  }
  static const Type Type_MIN =
    UserAction_Type_Type_MIN;
  static const Type Type_MAX =
    UserAction_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    UserAction_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return UserAction_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return UserAction_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return UserAction_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required int64 vid_id = 3;
  bool has_vid_id() const;
  void clear_vid_id();
  static const int kVidIdFieldNumber = 3;
  ::google::protobuf::int64 vid_id() const;
  void set_vid_id(::google::protobuf::int64 value);

  // required int64 doc_id = 4;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 4;
  ::google::protobuf::int64 doc_id() const;
  void set_doc_id(::google::protobuf::int64 value);

  // optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::lookalike::pb::UserAction_Type type() const;
  void set_type(::lookalike::pb::UserAction_Type value);

  // @@protoc_insertion_point(class_scope:lookalike.pb.UserAction)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_vid_id();
  void clear_has_vid_id();
  void set_has_doc_id();
  void clear_has_doc_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 vid_id_;
  ::google::protobuf::int64 doc_id_;
  int type_;
  friend struct protobuf_lookalike_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserData_AlsFea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookalike.pb.UserData.AlsFea) */ {
 public:
  UserData_AlsFea();
  virtual ~UserData_AlsFea();

  UserData_AlsFea(const UserData_AlsFea& from);

  inline UserData_AlsFea& operator=(const UserData_AlsFea& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserData_AlsFea(UserData_AlsFea&& from) noexcept
    : UserData_AlsFea() {
    *this = ::std::move(from);
  }

  inline UserData_AlsFea& operator=(UserData_AlsFea&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserData_AlsFea& default_instance();

  static inline const UserData_AlsFea* internal_default_instance() {
    return reinterpret_cast<const UserData_AlsFea*>(
               &_UserData_AlsFea_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserData_AlsFea* other);
  friend void swap(UserData_AlsFea& a, UserData_AlsFea& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserData_AlsFea* New() const PROTOBUF_FINAL { return New(NULL); }

  UserData_AlsFea* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserData_AlsFea& from);
  void MergeFrom(const UserData_AlsFea& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserData_AlsFea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // required float weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:lookalike.pb.UserData.AlsFea)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_weight();
  void clear_has_weight();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  float weight_;
  friend struct protobuf_lookalike_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookalike.pb.UserData) */ {
 public:
  UserData();
  virtual ~UserData();

  UserData(const UserData& from);

  inline UserData& operator=(const UserData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserData(UserData&& from) noexcept
    : UserData() {
    *this = ::std::move(from);
  }

  inline UserData& operator=(UserData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserData& default_instance();

  static inline const UserData* internal_default_instance() {
    return reinterpret_cast<const UserData*>(
               &_UserData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UserData* other);
  friend void swap(UserData& a, UserData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserData* New() const PROTOBUF_FINAL { return New(NULL); }

  UserData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserData& from);
  void MergeFrom(const UserData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UserData_AlsFea AlsFea;

  // accessors -------------------------------------------------------

  // repeated .lookalike.pb.UserData.AlsFea als = 1;
  int als_size() const;
  void clear_als();
  static const int kAlsFieldNumber = 1;
  const ::lookalike::pb::UserData_AlsFea& als(int index) const;
  ::lookalike::pb::UserData_AlsFea* mutable_als(int index);
  ::lookalike::pb::UserData_AlsFea* add_als();
  ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >*
      mutable_als();
  const ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >&
      als() const;

  // optional int64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:lookalike.pb.UserData)
 private:
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea > als_;
  ::google::protobuf::int64 version_;
  friend struct protobuf_lookalike_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LookalikeEvent_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookalike.pb.LookalikeEvent.Data) */ {
 public:
  LookalikeEvent_Data();
  virtual ~LookalikeEvent_Data();

  LookalikeEvent_Data(const LookalikeEvent_Data& from);

  inline LookalikeEvent_Data& operator=(const LookalikeEvent_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LookalikeEvent_Data(LookalikeEvent_Data&& from) noexcept
    : LookalikeEvent_Data() {
    *this = ::std::move(from);
  }

  inline LookalikeEvent_Data& operator=(LookalikeEvent_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LookalikeEvent_Data& default_instance();

  static inline const LookalikeEvent_Data* internal_default_instance() {
    return reinterpret_cast<const LookalikeEvent_Data*>(
               &_LookalikeEvent_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LookalikeEvent_Data* other);
  friend void swap(LookalikeEvent_Data& a, LookalikeEvent_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LookalikeEvent_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  LookalikeEvent_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LookalikeEvent_Data& from);
  void MergeFrom(const LookalikeEvent_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LookalikeEvent_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string tag = 2;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // required .lookalike.pb.UserData user_data = 3;
  bool has_user_data() const;
  void clear_user_data();
  static const int kUserDataFieldNumber = 3;
  const ::lookalike::pb::UserData& user_data() const;
  ::lookalike::pb::UserData* mutable_user_data();
  ::lookalike::pb::UserData* release_user_data();
  void set_allocated_user_data(::lookalike::pb::UserData* user_data);

  // required int64 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:lookalike.pb.LookalikeEvent.Data)
 private:
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_tag();
  void clear_has_tag();
  void set_has_user_data();
  void clear_has_user_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::lookalike::pb::UserData* user_data_;
  ::google::protobuf::int64 user_id_;
  friend struct protobuf_lookalike_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LookalikeEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookalike.pb.LookalikeEvent) */ {
 public:
  LookalikeEvent();
  virtual ~LookalikeEvent();

  LookalikeEvent(const LookalikeEvent& from);

  inline LookalikeEvent& operator=(const LookalikeEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LookalikeEvent(LookalikeEvent&& from) noexcept
    : LookalikeEvent() {
    *this = ::std::move(from);
  }

  inline LookalikeEvent& operator=(LookalikeEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LookalikeEvent& default_instance();

  static inline const LookalikeEvent* internal_default_instance() {
    return reinterpret_cast<const LookalikeEvent*>(
               &_LookalikeEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LookalikeEvent* other);
  friend void swap(LookalikeEvent& a, LookalikeEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LookalikeEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  LookalikeEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LookalikeEvent& from);
  void MergeFrom(const LookalikeEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LookalikeEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LookalikeEvent_Data Data;

  typedef LookalikeEvent_Action Action;
  static const Action CREATE_OR_UPDATE =
    LookalikeEvent_Action_CREATE_OR_UPDATE;
  static const Action CREATE_OR_REPLACE =
    LookalikeEvent_Action_CREATE_OR_REPLACE;
  static inline bool Action_IsValid(int value) {
    return LookalikeEvent_Action_IsValid(value);
  }
  static const Action Action_MIN =
    LookalikeEvent_Action_Action_MIN;
  static const Action Action_MAX =
    LookalikeEvent_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    LookalikeEvent_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return LookalikeEvent_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return LookalikeEvent_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return LookalikeEvent_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .lookalike.pb.LookalikeEvent.Data data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::lookalike::pb::LookalikeEvent_Data& data() const;
  ::lookalike::pb::LookalikeEvent_Data* mutable_data();
  ::lookalike::pb::LookalikeEvent_Data* release_data();
  void set_allocated_data(::lookalike::pb::LookalikeEvent_Data* data);

  // optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::lookalike::pb::LookalikeEvent_Action action() const;
  void set_action(::lookalike::pb::LookalikeEvent_Action value);

  // @@protoc_insertion_point(class_scope:lookalike.pb.LookalikeEvent)
 private:
  void set_has_action();
  void clear_has_action();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::lookalike::pb::LookalikeEvent_Data* data_;
  int action_;
  friend struct protobuf_lookalike_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserAction

// optional .lookalike.pb.UserAction.Type type = 1 [default = ACTION_CLICK];
inline bool UserAction::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserAction::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserAction::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::lookalike::pb::UserAction_Type UserAction::type() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.type)
  return static_cast< ::lookalike::pb::UserAction_Type >(type_);
}
inline void UserAction::set_type(::lookalike::pb::UserAction_Type value) {
  assert(::lookalike::pb::UserAction_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.type)
}

// required int64 timestamp = 2;
inline bool UserAction::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAction::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAction::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAction::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 UserAction::timestamp() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.timestamp)
  return timestamp_;
}
inline void UserAction::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.timestamp)
}

// required int64 vid_id = 3;
inline bool UserAction::has_vid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAction::set_has_vid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAction::clear_has_vid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAction::clear_vid_id() {
  vid_id_ = GOOGLE_LONGLONG(0);
  clear_has_vid_id();
}
inline ::google::protobuf::int64 UserAction::vid_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.vid_id)
  return vid_id_;
}
inline void UserAction::set_vid_id(::google::protobuf::int64 value) {
  set_has_vid_id();
  vid_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.vid_id)
}

// required int64 doc_id = 4;
inline bool UserAction::has_doc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserAction::set_has_doc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserAction::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserAction::clear_doc_id() {
  doc_id_ = GOOGLE_LONGLONG(0);
  clear_has_doc_id();
}
inline ::google::protobuf::int64 UserAction::doc_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserAction.doc_id)
  return doc_id_;
}
inline void UserAction::set_doc_id(::google::protobuf::int64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserAction.doc_id)
}

// -------------------------------------------------------------------

// UserData_AlsFea

// required int32 index = 1;
inline bool UserData_AlsFea::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserData_AlsFea::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserData_AlsFea::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserData_AlsFea::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 UserData_AlsFea::index() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.AlsFea.index)
  return index_;
}
inline void UserData_AlsFea::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.AlsFea.index)
}

// required float weight = 2;
inline bool UserData_AlsFea::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserData_AlsFea::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserData_AlsFea::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserData_AlsFea::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float UserData_AlsFea::weight() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.AlsFea.weight)
  return weight_;
}
inline void UserData_AlsFea::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.AlsFea.weight)
}

// -------------------------------------------------------------------

// UserData

// repeated .lookalike.pb.UserData.AlsFea als = 1;
inline int UserData::als_size() const {
  return als_.size();
}
inline void UserData::clear_als() {
  als_.Clear();
}
inline const ::lookalike::pb::UserData_AlsFea& UserData::als(int index) const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.als)
  return als_.Get(index);
}
inline ::lookalike::pb::UserData_AlsFea* UserData::mutable_als(int index) {
  // @@protoc_insertion_point(field_mutable:lookalike.pb.UserData.als)
  return als_.Mutable(index);
}
inline ::lookalike::pb::UserData_AlsFea* UserData::add_als() {
  // @@protoc_insertion_point(field_add:lookalike.pb.UserData.als)
  return als_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >*
UserData::mutable_als() {
  // @@protoc_insertion_point(field_mutable_list:lookalike.pb.UserData.als)
  return &als_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lookalike::pb::UserData_AlsFea >&
UserData::als() const {
  // @@protoc_insertion_point(field_list:lookalike.pb.UserData.als)
  return als_;
}

// optional int64 version = 2;
inline bool UserData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserData::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserData::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserData::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::int64 UserData::version() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.UserData.version)
  return version_;
}
inline void UserData::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.UserData.version)
}

// -------------------------------------------------------------------

// LookalikeEvent_Data

// required int64 user_id = 1;
inline bool LookalikeEvent_Data::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LookalikeEvent_Data::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LookalikeEvent_Data::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LookalikeEvent_Data::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 LookalikeEvent_Data::user_id() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.user_id)
  return user_id_;
}
inline void LookalikeEvent_Data::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.Data.user_id)
}

// required string tag = 2;
inline bool LookalikeEvent_Data::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LookalikeEvent_Data::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LookalikeEvent_Data::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LookalikeEvent_Data::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
inline const ::std::string& LookalikeEvent_Data::tag() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.tag)
  return tag_.GetNoArena();
}
inline void LookalikeEvent_Data::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.Data.tag)
}
#if LANG_CXX11
inline void LookalikeEvent_Data::set_tag(::std::string&& value) {
  set_has_tag();
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookalike.pb.LookalikeEvent.Data.tag)
}
#endif
inline void LookalikeEvent_Data::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookalike.pb.LookalikeEvent.Data.tag)
}
inline void LookalikeEvent_Data::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookalike.pb.LookalikeEvent.Data.tag)
}
inline ::std::string* LookalikeEvent_Data::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.Data.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LookalikeEvent_Data::release_tag() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.Data.tag)
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LookalikeEvent_Data::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.Data.tag)
}

// required .lookalike.pb.UserData user_data = 3;
inline bool LookalikeEvent_Data::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LookalikeEvent_Data::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LookalikeEvent_Data::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LookalikeEvent_Data::clear_user_data() {
  if (user_data_ != NULL) user_data_->::lookalike::pb::UserData::Clear();
  clear_has_user_data();
}
inline const ::lookalike::pb::UserData& LookalikeEvent_Data::user_data() const {
  const ::lookalike::pb::UserData* p = user_data_;
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.Data.user_data)
  return p != NULL ? *p : *reinterpret_cast<const ::lookalike::pb::UserData*>(
      &::lookalike::pb::_UserData_default_instance_);
}
inline ::lookalike::pb::UserData* LookalikeEvent_Data::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == NULL) {
    user_data_ = new ::lookalike::pb::UserData;
  }
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.Data.user_data)
  return user_data_;
}
inline ::lookalike::pb::UserData* LookalikeEvent_Data::release_user_data() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.Data.user_data)
  clear_has_user_data();
  ::lookalike::pb::UserData* temp = user_data_;
  user_data_ = NULL;
  return temp;
}
inline void LookalikeEvent_Data::set_allocated_user_data(::lookalike::pb::UserData* user_data) {
  delete user_data_;
  user_data_ = user_data;
  if (user_data) {
    set_has_user_data();
  } else {
    clear_has_user_data();
  }
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.Data.user_data)
}

// -------------------------------------------------------------------

// LookalikeEvent

// optional .lookalike.pb.LookalikeEvent.Action action = 1 [default = CREATE_OR_UPDATE];
inline bool LookalikeEvent::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LookalikeEvent::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LookalikeEvent::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LookalikeEvent::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::lookalike::pb::LookalikeEvent_Action LookalikeEvent::action() const {
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.action)
  return static_cast< ::lookalike::pb::LookalikeEvent_Action >(action_);
}
inline void LookalikeEvent::set_action(::lookalike::pb::LookalikeEvent_Action value) {
  assert(::lookalike::pb::LookalikeEvent_Action_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:lookalike.pb.LookalikeEvent.action)
}

// required .lookalike.pb.LookalikeEvent.Data data = 2;
inline bool LookalikeEvent::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LookalikeEvent::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LookalikeEvent::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LookalikeEvent::clear_data() {
  if (data_ != NULL) data_->::lookalike::pb::LookalikeEvent_Data::Clear();
  clear_has_data();
}
inline const ::lookalike::pb::LookalikeEvent_Data& LookalikeEvent::data() const {
  const ::lookalike::pb::LookalikeEvent_Data* p = data_;
  // @@protoc_insertion_point(field_get:lookalike.pb.LookalikeEvent.data)
  return p != NULL ? *p : *reinterpret_cast<const ::lookalike::pb::LookalikeEvent_Data*>(
      &::lookalike::pb::_LookalikeEvent_Data_default_instance_);
}
inline ::lookalike::pb::LookalikeEvent_Data* LookalikeEvent::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::lookalike::pb::LookalikeEvent_Data;
  }
  // @@protoc_insertion_point(field_mutable:lookalike.pb.LookalikeEvent.data)
  return data_;
}
inline ::lookalike::pb::LookalikeEvent_Data* LookalikeEvent::release_data() {
  // @@protoc_insertion_point(field_release:lookalike.pb.LookalikeEvent.data)
  clear_has_data();
  ::lookalike::pb::LookalikeEvent_Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void LookalikeEvent::set_allocated_data(::lookalike::pb::LookalikeEvent_Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:lookalike.pb.LookalikeEvent.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace lookalike

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::lookalike::pb::UserAction_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lookalike::pb::UserAction_Type>() {
  return ::lookalike::pb::UserAction_Type_descriptor();
}
template <> struct is_proto_enum< ::lookalike::pb::LookalikeEvent_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lookalike::pb::LookalikeEvent_Action>() {
  return ::lookalike::pb::LookalikeEvent_Action_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lookalike_2eproto__INCLUDED
