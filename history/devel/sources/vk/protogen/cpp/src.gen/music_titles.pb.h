// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: music_titles.proto

#ifndef PROTOBUF_music_5ftitles_2eproto__INCLUDED
#define PROTOBUF_music_5ftitles_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "music_response.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
namespace srch {
namespace music {
class TitlesStorageDocument;
class TitlesStorageDocumentDefaultTypeInternal;
extern TitlesStorageDocumentDefaultTypeInternal _TitlesStorageDocument_default_instance_;
}  // namespace music
}  // namespace srch
}  // namespace pb

namespace pb {
namespace srch {
namespace music {

namespace protobuf_music_5ftitles_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_music_5ftitles_2eproto

// ===================================================================

class TitlesStorageDocument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.srch.music.TitlesStorageDocument) */ {
 public:
  TitlesStorageDocument();
  virtual ~TitlesStorageDocument();

  TitlesStorageDocument(const TitlesStorageDocument& from);

  inline TitlesStorageDocument& operator=(const TitlesStorageDocument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TitlesStorageDocument(TitlesStorageDocument&& from) noexcept
    : TitlesStorageDocument() {
    *this = ::std::move(from);
  }

  inline TitlesStorageDocument& operator=(TitlesStorageDocument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitlesStorageDocument& default_instance();

  static inline const TitlesStorageDocument* internal_default_instance() {
    return reinterpret_cast<const TitlesStorageDocument*>(
               &_TitlesStorageDocument_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TitlesStorageDocument* other);
  friend void swap(TitlesStorageDocument& a, TitlesStorageDocument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TitlesStorageDocument* New() const PROTOBUF_FINAL { return New(NULL); }

  TitlesStorageDocument* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TitlesStorageDocument& from);
  void MergeFrom(const TitlesStorageDocument& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TitlesStorageDocument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string query_text = 1;
  bool has_query_text() const;
  void clear_query_text();
  static const int kQueryTextFieldNumber = 1;
  const ::std::string& query_text() const;
  void set_query_text(const ::std::string& value);
  #if LANG_CXX11
  void set_query_text(::std::string&& value);
  #endif
  void set_query_text(const char* value);
  void set_query_text(const char* value, size_t size);
  ::std::string* mutable_query_text();
  ::std::string* release_query_text();
  void set_allocated_query_text(::std::string* query_text);

  // optional .pb.srch.music.TitlesDocument value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::pb::srch::music::TitlesDocument& value() const;
  ::pb::srch::music::TitlesDocument* mutable_value();
  ::pb::srch::music::TitlesDocument* release_value();
  void set_allocated_value(::pb::srch::music::TitlesDocument* value);

  // @@protoc_insertion_point(class_scope:pb.srch.music.TitlesStorageDocument)
 private:
  void set_has_query_text();
  void clear_has_query_text();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr query_text_;
  ::pb::srch::music::TitlesDocument* value_;
  friend struct protobuf_music_5ftitles_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TitlesStorageDocument

// optional string query_text = 1;
inline bool TitlesStorageDocument::has_query_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitlesStorageDocument::set_has_query_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitlesStorageDocument::clear_has_query_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitlesStorageDocument::clear_query_text() {
  query_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query_text();
}
inline const ::std::string& TitlesStorageDocument::query_text() const {
  // @@protoc_insertion_point(field_get:pb.srch.music.TitlesStorageDocument.query_text)
  return query_text_.GetNoArena();
}
inline void TitlesStorageDocument::set_query_text(const ::std::string& value) {
  set_has_query_text();
  query_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.srch.music.TitlesStorageDocument.query_text)
}
#if LANG_CXX11
inline void TitlesStorageDocument::set_query_text(::std::string&& value) {
  set_has_query_text();
  query_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.srch.music.TitlesStorageDocument.query_text)
}
#endif
inline void TitlesStorageDocument::set_query_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_query_text();
  query_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.srch.music.TitlesStorageDocument.query_text)
}
inline void TitlesStorageDocument::set_query_text(const char* value, size_t size) {
  set_has_query_text();
  query_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.srch.music.TitlesStorageDocument.query_text)
}
inline ::std::string* TitlesStorageDocument::mutable_query_text() {
  set_has_query_text();
  // @@protoc_insertion_point(field_mutable:pb.srch.music.TitlesStorageDocument.query_text)
  return query_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TitlesStorageDocument::release_query_text() {
  // @@protoc_insertion_point(field_release:pb.srch.music.TitlesStorageDocument.query_text)
  clear_has_query_text();
  return query_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TitlesStorageDocument::set_allocated_query_text(::std::string* query_text) {
  if (query_text != NULL) {
    set_has_query_text();
  } else {
    clear_has_query_text();
  }
  query_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_text);
  // @@protoc_insertion_point(field_set_allocated:pb.srch.music.TitlesStorageDocument.query_text)
}

// optional .pb.srch.music.TitlesDocument value = 2;
inline bool TitlesStorageDocument::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitlesStorageDocument::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitlesStorageDocument::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitlesStorageDocument::clear_value() {
  if (value_ != NULL) value_->::pb::srch::music::TitlesDocument::Clear();
  clear_has_value();
}
inline const ::pb::srch::music::TitlesDocument& TitlesStorageDocument::value() const {
  const ::pb::srch::music::TitlesDocument* p = value_;
  // @@protoc_insertion_point(field_get:pb.srch.music.TitlesStorageDocument.value)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::srch::music::TitlesDocument*>(
      &::pb::srch::music::_TitlesDocument_default_instance_);
}
inline ::pb::srch::music::TitlesDocument* TitlesStorageDocument::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::pb::srch::music::TitlesDocument;
  }
  // @@protoc_insertion_point(field_mutable:pb.srch.music.TitlesStorageDocument.value)
  return value_;
}
inline ::pb::srch::music::TitlesDocument* TitlesStorageDocument::release_value() {
  // @@protoc_insertion_point(field_release:pb.srch.music.TitlesStorageDocument.value)
  clear_has_value();
  ::pb::srch::music::TitlesDocument* temp = value_;
  value_ = NULL;
  return temp;
}
inline void TitlesStorageDocument::set_allocated_value(::pb::srch::music::TitlesDocument* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.srch.music.TitlesStorageDocument.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace music
}  // namespace srch
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_music_5ftitles_2eproto__INCLUDED
