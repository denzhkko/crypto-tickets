// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mycroft.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mycroft.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mycroft {
namespace v1 {
class UserActivitySummaryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserActivitySummary>
     _instance;
} _UserActivitySummary_default_instance_;

namespace protobuf_mycroft_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActivitySummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActivitySummary, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActivitySummary, last_reaction_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActivitySummary, reaction_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActivitySummary, sites_for_user_total_cnt_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UserActivitySummary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserActivitySummary_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mycroft.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserActivitySummary_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserActivitySummary_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmycroft.proto\022\nmycroft.v1\"z\n\023UserActiv"
      "itySummary\022\017\n\007user_id\030\001 \001(\003\022\032\n\022last_reac"
      "tion_time\030\002 \001(\003\022\024\n\014reaction_cnt\030\003 \001(\004\022 \n"
      "\030sites_for_user_total_cnt\030\004 \001(\004B\003\370\001\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 164);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mycroft.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mycroft_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActivitySummary::kUserIdFieldNumber;
const int UserActivitySummary::kLastReactionTimeFieldNumber;
const int UserActivitySummary::kReactionCntFieldNumber;
const int UserActivitySummary::kSitesForUserTotalCntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActivitySummary::UserActivitySummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mycroft_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mycroft.v1.UserActivitySummary)
}
UserActivitySummary::UserActivitySummary(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_mycroft_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mycroft.v1.UserActivitySummary)
}
UserActivitySummary::UserActivitySummary(const UserActivitySummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sites_for_user_total_cnt_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(sites_for_user_total_cnt_));
  // @@protoc_insertion_point(copy_constructor:mycroft.v1.UserActivitySummary)
}

void UserActivitySummary::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sites_for_user_total_cnt_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(sites_for_user_total_cnt_));
  _cached_size_ = 0;
}

UserActivitySummary::~UserActivitySummary() {
  // @@protoc_insertion_point(destructor:mycroft.v1.UserActivitySummary)
  SharedDtor();
}

void UserActivitySummary::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void UserActivitySummary::ArenaDtor(void* object) {
  UserActivitySummary* _this = reinterpret_cast< UserActivitySummary* >(object);
  (void)_this;
}
void UserActivitySummary::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserActivitySummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserActivitySummary::descriptor() {
  protobuf_mycroft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mycroft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserActivitySummary& UserActivitySummary::default_instance() {
  protobuf_mycroft_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserActivitySummary* UserActivitySummary::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UserActivitySummary>(arena);
}

void UserActivitySummary::Clear() {
// @@protoc_insertion_point(message_clear_start:mycroft.v1.UserActivitySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sites_for_user_total_cnt_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(sites_for_user_total_cnt_));
  _internal_metadata_.Clear();
}

bool UserActivitySummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mycroft.v1.UserActivitySummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_reaction_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_reaction_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 reaction_cnt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reaction_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sites_for_user_total_cnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sites_for_user_total_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mycroft.v1.UserActivitySummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mycroft.v1.UserActivitySummary)
  return false;
#undef DO_
}

void UserActivitySummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mycroft.v1.UserActivitySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // int64 last_reaction_time = 2;
  if (this->last_reaction_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_reaction_time(), output);
  }

  // uint64 reaction_cnt = 3;
  if (this->reaction_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->reaction_cnt(), output);
  }

  // uint64 sites_for_user_total_cnt = 4;
  if (this->sites_for_user_total_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sites_for_user_total_cnt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mycroft.v1.UserActivitySummary)
}

::google::protobuf::uint8* UserActivitySummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mycroft.v1.UserActivitySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // int64 last_reaction_time = 2;
  if (this->last_reaction_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->last_reaction_time(), target);
  }

  // uint64 reaction_cnt = 3;
  if (this->reaction_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->reaction_cnt(), target);
  }

  // uint64 sites_for_user_total_cnt = 4;
  if (this->sites_for_user_total_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sites_for_user_total_cnt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mycroft.v1.UserActivitySummary)
  return target;
}

size_t UserActivitySummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mycroft.v1.UserActivitySummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // int64 last_reaction_time = 2;
  if (this->last_reaction_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_reaction_time());
  }

  // uint64 reaction_cnt = 3;
  if (this->reaction_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reaction_cnt());
  }

  // uint64 sites_for_user_total_cnt = 4;
  if (this->sites_for_user_total_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sites_for_user_total_cnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserActivitySummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mycroft.v1.UserActivitySummary)
  GOOGLE_DCHECK_NE(&from, this);
  const UserActivitySummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserActivitySummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mycroft.v1.UserActivitySummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mycroft.v1.UserActivitySummary)
    MergeFrom(*source);
  }
}

void UserActivitySummary::MergeFrom(const UserActivitySummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mycroft.v1.UserActivitySummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.last_reaction_time() != 0) {
    set_last_reaction_time(from.last_reaction_time());
  }
  if (from.reaction_cnt() != 0) {
    set_reaction_cnt(from.reaction_cnt());
  }
  if (from.sites_for_user_total_cnt() != 0) {
    set_sites_for_user_total_cnt(from.sites_for_user_total_cnt());
  }
}

void UserActivitySummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mycroft.v1.UserActivitySummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserActivitySummary::CopyFrom(const UserActivitySummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mycroft.v1.UserActivitySummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserActivitySummary::IsInitialized() const {
  return true;
}

void UserActivitySummary::Swap(UserActivitySummary* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserActivitySummary* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserActivitySummary::UnsafeArenaSwap(UserActivitySummary* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserActivitySummary::InternalSwap(UserActivitySummary* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(last_reaction_time_, other->last_reaction_time_);
  swap(reaction_cnt_, other->reaction_cnt_);
  swap(sites_for_user_total_cnt_, other->sites_for_user_total_cnt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserActivitySummary::GetMetadata() const {
  protobuf_mycroft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mycroft_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserActivitySummary

// int64 user_id = 1;
void UserActivitySummary::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserActivitySummary::user_id() const {
  // @@protoc_insertion_point(field_get:mycroft.v1.UserActivitySummary.user_id)
  return user_id_;
}
void UserActivitySummary::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mycroft.v1.UserActivitySummary.user_id)
}

// int64 last_reaction_time = 2;
void UserActivitySummary::clear_last_reaction_time() {
  last_reaction_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserActivitySummary::last_reaction_time() const {
  // @@protoc_insertion_point(field_get:mycroft.v1.UserActivitySummary.last_reaction_time)
  return last_reaction_time_;
}
void UserActivitySummary::set_last_reaction_time(::google::protobuf::int64 value) {
  
  last_reaction_time_ = value;
  // @@protoc_insertion_point(field_set:mycroft.v1.UserActivitySummary.last_reaction_time)
}

// uint64 reaction_cnt = 3;
void UserActivitySummary::clear_reaction_cnt() {
  reaction_cnt_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserActivitySummary::reaction_cnt() const {
  // @@protoc_insertion_point(field_get:mycroft.v1.UserActivitySummary.reaction_cnt)
  return reaction_cnt_;
}
void UserActivitySummary::set_reaction_cnt(::google::protobuf::uint64 value) {
  
  reaction_cnt_ = value;
  // @@protoc_insertion_point(field_set:mycroft.v1.UserActivitySummary.reaction_cnt)
}

// uint64 sites_for_user_total_cnt = 4;
void UserActivitySummary::clear_sites_for_user_total_cnt() {
  sites_for_user_total_cnt_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserActivitySummary::sites_for_user_total_cnt() const {
  // @@protoc_insertion_point(field_get:mycroft.v1.UserActivitySummary.sites_for_user_total_cnt)
  return sites_for_user_total_cnt_;
}
void UserActivitySummary::set_sites_for_user_total_cnt(::google::protobuf::uint64 value) {
  
  sites_for_user_total_cnt_ = value;
  // @@protoc_insertion_point(field_set:mycroft.v1.UserActivitySummary.sites_for_user_total_cnt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace mycroft

// @@protoc_insertion_point(global_scope)
