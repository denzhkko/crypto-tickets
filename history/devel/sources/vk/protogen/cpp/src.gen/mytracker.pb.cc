// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mytracker.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mytracker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace rb {
class MytrackerAppUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerAppUser>
     _instance;
} _MytrackerAppUser_default_instance_;
class MytrackerEvent_PairMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerEvent_PairMsg>
     _instance;
} _MytrackerEvent_PairMsg_default_instance_;
class MytrackerEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerEvent>
     _instance;
} _MytrackerEvent_default_instance_;
class MytrackerMessage_Event_PairMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_Event_PairMsg>
     _instance;
} _MytrackerMessage_Event_PairMsg_default_instance_;
class MytrackerMessage_Event_SessionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_Event_Session>
     _instance;
} _MytrackerMessage_Event_Session_default_instance_;
class MytrackerMessage_EventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_Event>
     _instance;
} _MytrackerMessage_Event_default_instance_;
class MytrackerMessage_AppDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_App>
     _instance;
} _MytrackerMessage_App_default_instance_;
class MytrackerMessage_WifiDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_Wifi>
     _instance;
} _MytrackerMessage_Wifi_default_instance_;
class MytrackerMessage_CellDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage_Cell>
     _instance;
} _MytrackerMessage_Cell_default_instance_;
class MytrackerMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MytrackerMessage>
     _instance;
} _MytrackerMessage_default_instance_;

namespace protobuf_mytracker_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, app_version_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, geo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, adman_version_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, mytracker_version_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, am_stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerAppUser, pm_stat_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent_PairMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent_PairMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent_PairMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent_PairMsg, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerEvent, timestamp_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_PairMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_PairMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_PairMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_PairMsg, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_Session, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_Session, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event_Session, end_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, app_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, first_install_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, referrer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, timestamps_skipped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, from_app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, from_app_build_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, revenue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, receipt_gz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, transaction_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, original_transaction_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, purchase_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, data_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, packagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, productdataid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, purchasetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, purchasestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, developerpayload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, purchasetoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, autorenewing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, installer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, has_iad_attribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, get_attribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, deeplink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, deeplink_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, deeplink_key_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, deeplink_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, not_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, click_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Event, install_timestamp_),
  22,
  ~0u,
  0,
  ~0u,
  23,
  1,
  24,
  2,
  16,
  17,
  3,
  4,
  5,
  18,
  6,
  7,
  19,
  8,
  9,
  11,
  12,
  13,
  26,
  25,
  14,
  15,
  27,
  ~0u,
  10,
  28,
  29,
  20,
  31,
  32,
  30,
  33,
  21,
  34,
  35,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_App, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_App, bundle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_App, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_App, app_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, bssid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, ssid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, wifi_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Wifi, link_speed_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, lac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, mcc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, mnc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, dbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, asu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, ta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, rfcn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, bsic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, psc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, tac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, system_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, base_station_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cdma_lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cdma_lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cdma_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, evdo_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cdma_dbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, evdo_dbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, evdo_ecio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, cdma_ecio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage_Cell, evdo_snr_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mytracker_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mobile_app_pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, banner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, src_ip_chain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, timestamp_base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, user_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, user_ipv6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, remote_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, x_forwarded_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, geo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, hacks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, tracker_v1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, timestamp_send_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, custom_events_skipped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, app_build_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, app_language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, app_bundle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mrgs_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mrgs_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, ok_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, vk_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, icq_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, custom_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, idfa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, advertising_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, android_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, android_device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, waid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, wna_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mna_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mrgs_device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, open_udid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, ios_vendor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, ios_vendor_id_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, advertising_tracking_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, euname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, manufacture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, os_ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, os_lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, screen_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, screen_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, dpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, xdpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, ydpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, sim_loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, operator_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, operator_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, sim_operator_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, sim_loc_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, operator_id_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, sim_operator_id_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, connection_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, bluetooth_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, location_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, location_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, location_provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, wifi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, wifi_around_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MytrackerMessage, cell_),
  0,
  33,
  ~0u,
  34,
  ~0u,
  ~0u,
  35,
  1,
  36,
  37,
  2,
  58,
  59,
  55,
  56,
  61,
  57,
  65,
  66,
  3,
  4,
  5,
  6,
  38,
  39,
  40,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  8,
  9,
  10,
  11,
  21,
  25,
  26,
  12,
  28,
  23,
  24,
  27,
  60,
  41,
  13,
  14,
  15,
  42,
  16,
  17,
  18,
  43,
  44,
  62,
  63,
  64,
  19,
  45,
  20,
  46,
  29,
  30,
  31,
  47,
  22,
  51,
  49,
  50,
  54,
  53,
  52,
  48,
  32,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(MytrackerAppUser)},
  { 17, 24, sizeof(MytrackerEvent_PairMsg)},
  { 26, 34, sizeof(MytrackerEvent)},
  { 37, 44, sizeof(MytrackerMessage_Event_PairMsg)},
  { 46, 53, sizeof(MytrackerMessage_Event_Session)},
  { 55, 99, sizeof(MytrackerMessage_Event)},
  { 138, 146, sizeof(MytrackerMessage_App)},
  { 149, 159, sizeof(MytrackerMessage_Wifi)},
  { 164, 194, sizeof(MytrackerMessage_Cell)},
  { 219, 302, sizeof(MytrackerMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerAppUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerEvent_PairMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_Event_PairMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_Event_Session_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_App_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_Wifi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_Cell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MytrackerMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mytracker.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MytrackerAppUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerAppUser_default_instance_);_MytrackerEvent_PairMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerEvent_PairMsg_default_instance_);_MytrackerEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerEvent_default_instance_);_MytrackerMessage_Event_PairMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_Event_PairMsg_default_instance_);_MytrackerMessage_Event_Session_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_Event_Session_default_instance_);_MytrackerMessage_Event_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_Event_default_instance_);_MytrackerMessage_App_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_App_default_instance_);_MytrackerMessage_Wifi_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_Wifi_default_instance_);_MytrackerMessage_Cell_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_Cell_default_instance_);_MytrackerMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MytrackerMessage_default_instance_);_MytrackerMessage_default_instance_._instance.get_mutable()->wifi_ = const_cast< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi*>(
      ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017mytracker.proto\022\025ru.mail.go.webbase.rb"
      "\"\221\001\n\020MytrackerAppUser\022\026\n\016app_version_id\030"
      "\001 \001(\r\022\013\n\003geo\030\002 \001(\r\022\030\n\020adman_version_id\030\003"
      " \001(\r\022\034\n\024mytracker_version_id\030\004 \001(\r\022\017\n\007am"
      "_stat\030\005 \001(\004\022\017\n\007pm_stat\030\006 \001(\004\"\226\001\n\016Mytrack"
      "erEvent\022\014\n\004name\030\001 \001(\014\022<\n\005param\030\002 \003(\0132-.r"
      "u.mail.go.webbase.rb.MytrackerEvent.Pair"
      "Msg\022\021\n\ttimestamp\030\003 \001(\r\032%\n\007PairMsg\022\013\n\003key"
      "\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\"\311\032\n\020MytrackerMessa"
      "ge\022\031\n\021mytracker_version\030\001 \001(\014\022\025\n\rmobile_"
      "app_pk\030\002 \001(\r\022=\n\006events\030\003 \003(\0132-.ru.mail.g"
      "o.webbase.rb.MytrackerMessage.Event\022\016\n\006b"
      "anner\030\004 \001(\r\0229\n\004apps\030\t \003(\0132+.ru.mail.go.w"
      "ebbase.rb.MytrackerMessage.App\022\024\n\014src_ip"
      "_chain\030\016 \003(\007\022\021\n\ttimestamp\030\017 \001(\007\022\016\n\006app_i"
      "d\030\020 \001(\014\022\026\n\016timestamp_base\030\021 \001(\r\022\017\n\007user_"
      "ip\030\022 \001(\007\022\021\n\tuser_ipv6\030\023 \001(\014\022\023\n\013remote_ad"
      "dr\030S \001(\r\022\027\n\017x_forwarded_for\030T \001(\r\022\013\n\003geo"
      "\030P \001(\r\022\r\n\005hacks\030Q \001(\r\022\022\n\ntracker_v1\030X \001("
      "\010\022\026\n\016timestamp_send\030R \001(\007\022\035\n\025custom_even"
      "ts_skipped\030g \001(\r\022\016\n\006random\030h \001(\r\022\023\n\013app_"
      "version\030\024 \001(\014\022\021\n\tapp_build\030\025 \001(\014\022\024\n\014app_"
      "language\030\026 \001(\014\022\022\n\napp_bundle\030\027 \001(\014\022\023\n\013mr"
      "gs_app_id\030\030 \001(\r\022\016\n\006gender\030\036 \001(\r\022\013\n\003age\030\037"
      " \001(\r\022\024\n\014mrgs_user_id\030  \001(\014\022\r\n\005ok_id\030! \003("
      "\003\022\r\n\005vk_id\030\" \003(\r\022\r\n\005email\030# \003(\014\022\016\n\006icq_i"
      "d\030$ \003(\r\022\026\n\016custom_user_id\030% \003(\014\022\r\n\005phone"
      "\030f \003(\014\022\014\n\004idfa\030( \001(\014\022\026\n\016advertising_id\030)"
      " \001(\014\022\022\n\nandroid_id\030* \001(\014\022\031\n\021android_devi"
      "ce_id\030+ \001(\014\022\014\n\004waid\030J \001(\014\022\016\n\006wna_id\030Y \001("
      "\014\022\016\n\006mna_id\030] \001(\014\022\026\n\016mrgs_device_id\030, \001("
      "\014\022\013\n\003mac\030` \001(\014\022\021\n\topen_udid\030U \001(\014\022\025\n\rios"
      "_vendor_id\030V \001(\014\022\034\n\024ios_vendor_id_cached"
      "\030_ \001(\014\022\013\n\003mid\030W \001(\r\022$\n\034advertising_track"
      "ing_enabled\030- \001(\005\022\016\n\006device\030. \001(\014\022\016\n\006eun"
      "ame\030/ \001(\014\022\023\n\013manufacture\0300 \001(\014\022\n\n\002os\0301 \001"
      "(\r\022\016\n\006os_ver\0302 \001(\014\022\017\n\007os_lang\0303 \001(\014\022\020\n\010t"
      "imezone\0304 \001(\014\022\024\n\014screen_width\0305 \001(\r\022\025\n\rs"
      "creen_height\0306 \001(\r\022\013\n\003dpi\030^ \001(\r\022\014\n\004xdpi\030"
      "a \001(\r\022\014\n\004ydpi\030b \001(\r\022\017\n\007sim_loc\030< \001(\014\022\023\n\013"
      "operator_id\030= \001(\r\022\025\n\roperator_name\030> \001(\014"
      "\022\027\n\017sim_operator_id\030\? \001(\r\022\023\n\013sim_loc_str"
      "\030c \001(\014\022\027\n\017operator_id_str\030d \001(\014\022\033\n\023sim_o"
      "perator_id_str\030e \001(\014\022\022\n\nconnection\030@ \001(\r"
      "\022\027\n\017connection_type\030N \001(\014\022\031\n\021bluetooth_e"
      "nabled\030I \001(\r\022\013\n\003lat\030F \001(\001\022\013\n\003lon\030G \001(\001\022\r"
      "\n\005speed\030M \001(\001\022\031\n\021location_accuracy\030K \001(\001"
      "\022\032\n\022location_timestamp\030L \001(\r\022\031\n\021location"
      "_provider\030H \001(\r\022:\n\004wifi\030Z \001(\0132,.ru.mail."
      "go.webbase.rb.MytrackerMessage.Wifi\022A\n\013w"
      "ifi_around\030[ \003(\0132,.ru.mail.go.webbase.rb"
      ".MytrackerMessage.Wifi\022:\n\004cell\030\\ \003(\0132,.r"
      "u.mail.go.webbase.rb.MytrackerMessage.Ce"
      "ll\032\246\010\n\005Event\022\021\n\tapp_event\030\001 \001(\r\022\021\n\ttimes"
      "tamp\030\002 \003(\005\022\014\n\004name\030\003 \001(\014\022E\n\006params\030\004 \003(\013"
      "25.ru.mail.go.webbase.rb.MytrackerMessag"
      "e.Event.PairMsg\022\032\n\022first_install_time\030\020 "
      "\001(\005\022\020\n\010referrer\030\021 \001(\014\022\032\n\022timestamps_skip"
      "ped\030\023 \001(\r\022\023\n\013app_version\030\022 \001(\014\022\030\n\020from_a"
      "pp_version\0300 \001(\014\022\026\n\016from_app_build\0301 \001(\014"
      "\022\017\n\007revenue\030\036 \001(\014\022\020\n\010currency\030\037 \001(\014\022\017\n\007r"
      "eceipt\030  \001(\014\022\022\n\nreceipt_gz\0302 \001(\014\022\022\n\nprod"
      "uct_id\030! \001(\014\022\026\n\016transaction_id\030\" \001(\014\022\037\n\027"
      "original_transaction_id\0303 \001(\014\022\025\n\rpurchas"
      "e_data\030# \001(\014\022\026\n\016data_signature\030$ \001(\014\022\017\n\007"
      "orderId\030\' \001(\014\022\023\n\013packageName\030( \001(\014\022\025\n\rpr"
      "oductDataId\030) \001(\014\022\024\n\014purchaseTime\030* \001(\004\022"
      "\025\n\rpurchaseState\030+ \001(\r\022\030\n\020developerPaylo"
      "ad\030, \001(\014\022\025\n\rpurchaseToken\030- \001(\014\022\024\n\014autoR"
      "enewing\030. \001(\010\022G\n\010sessions\030% \003(\01325.ru.mai"
      "l.go.webbase.rb.MytrackerMessage.Event.S"
      "ession\022\021\n\tinstaller\030& \001(\014\022\033\n\023has_iad_att"
      "ribution\030/ \001(\010\022\027\n\017get_attribution\0304 \001(\010\022"
      "\020\n\010deeplink\0305 \001(\014\022\032\n\022deeplink_timestamp\030"
      "6 \001(\r\022\031\n\021deeplink_key_type\0307 \001(\r\022\026\n\016deep"
      "link_error\0308 \001(\010\022\024\n\014not_verified\030: \001(\010\022\r"
      "\n\005level\030; \001(\014\022\027\n\017click_timestamp\030< \001(\r\022\031"
      "\n\021install_timestamp\030= \001(\r\032%\n\007PairMsg\022\013\n\003"
      "key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\032)\n\007Session\022\r\n\005s"
      "tart\030\001 \001(\005\022\017\n\003end\030\002 \001(\005:\002-1\0321\n\003App\022\016\n\006bu"
      "ndle\030\001 \001(\014\022\n\n\002id\030\006 \001(\r\022\016\n\006app_id\030\007 \001(\014\032W"
      "\n\004Wifi\022\r\n\005bssid\030\001 \001(\014\022\014\n\004ssid\030\002 \001(\014\022\r\n\005l"
      "evel\030\003 \001(\005\022\017\n\007wifi_id\030\005 \001(\r\022\022\n\nlink_spee"
      "d\030\006 \001(\r\032\237\003\n\004Cell\022\014\n\004type\030\001 \001(\014\022\017\n\007cell_i"
      "d\030\002 \001(\r\022\013\n\003lac\030\003 \001(\r\022\013\n\003mcc\030\004 \001(\r\022\013\n\003mnc"
      "\030\005 \001(\r\022\r\n\005level\030\006 \001(\r\022\013\n\003dbm\030\007 \001(\005\022\013\n\003as"
      "u\030\010 \001(\r\022\n\n\002ta\030\t \001(\r\022\014\n\004rfcn\030\n \001(\r\022\014\n\004bsi"
      "c\030\013 \001(\r\022\013\n\003psc\030\014 \001(\r\022\013\n\003tac\030\r \001(\r\022\022\n\nnet"
      "work_id\030\016 \001(\r\022\021\n\tsystem_id\030\017 \001(\r\022\027\n\017base"
      "_station_id\030\020 \001(\r\022\020\n\010cdma_lat\030\021 \001(\005\022\020\n\010c"
      "dma_lon\030\022 \001(\005\022\022\n\ncdma_level\030\023 \001(\r\022\022\n\nevd"
      "o_level\030\024 \001(\r\022\020\n\010cdma_dbm\030\025 \001(\005\022\020\n\010evdo_"
      "dbm\030\026 \001(\005\022\021\n\tevdo_ecio\030\027 \001(\r\022\021\n\tcdma_eci"
      "o\030\030 \001(\r\022\020\n\010evdo_snr\030\031 \001(\rB\013B\tMytracker"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3758);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mytracker.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mytracker_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerAppUser::kAppVersionIdFieldNumber;
const int MytrackerAppUser::kGeoFieldNumber;
const int MytrackerAppUser::kAdmanVersionIdFieldNumber;
const int MytrackerAppUser::kMytrackerVersionIdFieldNumber;
const int MytrackerAppUser::kAmStatFieldNumber;
const int MytrackerAppUser::kPmStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerAppUser::MytrackerAppUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerAppUser)
}
MytrackerAppUser::MytrackerAppUser(const MytrackerAppUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_version_id_, &from.app_version_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pm_stat_) -
    reinterpret_cast<char*>(&app_version_id_)) + sizeof(pm_stat_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerAppUser)
}

void MytrackerAppUser::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_version_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pm_stat_) -
      reinterpret_cast<char*>(&app_version_id_)) + sizeof(pm_stat_));
}

MytrackerAppUser::~MytrackerAppUser() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerAppUser)
  SharedDtor();
}

void MytrackerAppUser::SharedDtor() {
}

void MytrackerAppUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerAppUser::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerAppUser& MytrackerAppUser::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerAppUser* MytrackerAppUser::New(::google::protobuf::Arena* arena) const {
  MytrackerAppUser* n = new MytrackerAppUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerAppUser::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&app_version_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pm_stat_) -
        reinterpret_cast<char*>(&app_version_id_)) + sizeof(pm_stat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerAppUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_version_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_version_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_version_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 geo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_geo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 adman_version_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_adman_version_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adman_version_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mytracker_version_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_mytracker_version_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mytracker_version_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 am_stat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_am_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &am_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pm_stat = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pm_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pm_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerAppUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerAppUser)
  return false;
#undef DO_
}

void MytrackerAppUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_version_id(), output);
  }

  // optional uint32 geo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->geo(), output);
  }

  // optional uint32 adman_version_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->adman_version_id(), output);
  }

  // optional uint32 mytracker_version_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mytracker_version_id(), output);
  }

  // optional uint64 am_stat = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->am_stat(), output);
  }

  // optional uint64 pm_stat = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->pm_stat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerAppUser)
}

::google::protobuf::uint8* MytrackerAppUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_version_id(), target);
  }

  // optional uint32 geo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->geo(), target);
  }

  // optional uint32 adman_version_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->adman_version_id(), target);
  }

  // optional uint32 mytracker_version_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mytracker_version_id(), target);
  }

  // optional uint64 am_stat = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->am_stat(), target);
  }

  // optional uint64 pm_stat = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->pm_stat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerAppUser)
  return target;
}

size_t MytrackerAppUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 app_version_id = 1;
    if (has_app_version_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_version_id());
    }

    // optional uint32 geo = 2;
    if (has_geo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geo());
    }

    // optional uint32 adman_version_id = 3;
    if (has_adman_version_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adman_version_id());
    }

    // optional uint32 mytracker_version_id = 4;
    if (has_mytracker_version_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mytracker_version_id());
    }

    // optional uint64 am_stat = 5;
    if (has_am_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->am_stat());
    }

    // optional uint64 pm_stat = 6;
    if (has_pm_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pm_stat());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerAppUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerAppUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerAppUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerAppUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerAppUser)
    MergeFrom(*source);
  }
}

void MytrackerAppUser::MergeFrom(const MytrackerAppUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      app_version_id_ = from.app_version_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      geo_ = from.geo_;
    }
    if (cached_has_bits & 0x00000004u) {
      adman_version_id_ = from.adman_version_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      mytracker_version_id_ = from.mytracker_version_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      am_stat_ = from.am_stat_;
    }
    if (cached_has_bits & 0x00000020u) {
      pm_stat_ = from.pm_stat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MytrackerAppUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerAppUser::CopyFrom(const MytrackerAppUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerAppUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerAppUser::IsInitialized() const {
  return true;
}

void MytrackerAppUser::Swap(MytrackerAppUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerAppUser::InternalSwap(MytrackerAppUser* other) {
  using std::swap;
  swap(app_version_id_, other->app_version_id_);
  swap(geo_, other->geo_);
  swap(adman_version_id_, other->adman_version_id_);
  swap(mytracker_version_id_, other->mytracker_version_id_);
  swap(am_stat_, other->am_stat_);
  swap(pm_stat_, other->pm_stat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerAppUser::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerAppUser

// optional uint32 app_version_id = 1;
bool MytrackerAppUser::has_app_version_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerAppUser::set_has_app_version_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerAppUser::clear_has_app_version_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerAppUser::clear_app_version_id() {
  app_version_id_ = 0u;
  clear_has_app_version_id();
}
::google::protobuf::uint32 MytrackerAppUser::app_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.app_version_id)
  return app_version_id_;
}
void MytrackerAppUser::set_app_version_id(::google::protobuf::uint32 value) {
  set_has_app_version_id();
  app_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.app_version_id)
}

// optional uint32 geo = 2;
bool MytrackerAppUser::has_geo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerAppUser::set_has_geo() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerAppUser::clear_has_geo() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerAppUser::clear_geo() {
  geo_ = 0u;
  clear_has_geo();
}
::google::protobuf::uint32 MytrackerAppUser::geo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.geo)
  return geo_;
}
void MytrackerAppUser::set_geo(::google::protobuf::uint32 value) {
  set_has_geo();
  geo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.geo)
}

// optional uint32 adman_version_id = 3;
bool MytrackerAppUser::has_adman_version_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerAppUser::set_has_adman_version_id() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerAppUser::clear_has_adman_version_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerAppUser::clear_adman_version_id() {
  adman_version_id_ = 0u;
  clear_has_adman_version_id();
}
::google::protobuf::uint32 MytrackerAppUser::adman_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.adman_version_id)
  return adman_version_id_;
}
void MytrackerAppUser::set_adman_version_id(::google::protobuf::uint32 value) {
  set_has_adman_version_id();
  adman_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.adman_version_id)
}

// optional uint32 mytracker_version_id = 4;
bool MytrackerAppUser::has_mytracker_version_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MytrackerAppUser::set_has_mytracker_version_id() {
  _has_bits_[0] |= 0x00000008u;
}
void MytrackerAppUser::clear_has_mytracker_version_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void MytrackerAppUser::clear_mytracker_version_id() {
  mytracker_version_id_ = 0u;
  clear_has_mytracker_version_id();
}
::google::protobuf::uint32 MytrackerAppUser::mytracker_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.mytracker_version_id)
  return mytracker_version_id_;
}
void MytrackerAppUser::set_mytracker_version_id(::google::protobuf::uint32 value) {
  set_has_mytracker_version_id();
  mytracker_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.mytracker_version_id)
}

// optional uint64 am_stat = 5;
bool MytrackerAppUser::has_am_stat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MytrackerAppUser::set_has_am_stat() {
  _has_bits_[0] |= 0x00000010u;
}
void MytrackerAppUser::clear_has_am_stat() {
  _has_bits_[0] &= ~0x00000010u;
}
void MytrackerAppUser::clear_am_stat() {
  am_stat_ = GOOGLE_ULONGLONG(0);
  clear_has_am_stat();
}
::google::protobuf::uint64 MytrackerAppUser::am_stat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.am_stat)
  return am_stat_;
}
void MytrackerAppUser::set_am_stat(::google::protobuf::uint64 value) {
  set_has_am_stat();
  am_stat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.am_stat)
}

// optional uint64 pm_stat = 6;
bool MytrackerAppUser::has_pm_stat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MytrackerAppUser::set_has_pm_stat() {
  _has_bits_[0] |= 0x00000020u;
}
void MytrackerAppUser::clear_has_pm_stat() {
  _has_bits_[0] &= ~0x00000020u;
}
void MytrackerAppUser::clear_pm_stat() {
  pm_stat_ = GOOGLE_ULONGLONG(0);
  clear_has_pm_stat();
}
::google::protobuf::uint64 MytrackerAppUser::pm_stat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.pm_stat)
  return pm_stat_;
}
void MytrackerAppUser::set_pm_stat(::google::protobuf::uint64 value) {
  set_has_pm_stat();
  pm_stat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.pm_stat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerEvent_PairMsg::kKeyFieldNumber;
const int MytrackerEvent_PairMsg::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerEvent_PairMsg::MytrackerEvent_PairMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
}
MytrackerEvent_PairMsg::MytrackerEvent_PairMsg(const MytrackerEvent_PairMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
}

void MytrackerEvent_PairMsg::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MytrackerEvent_PairMsg::~MytrackerEvent_PairMsg() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  SharedDtor();
}

void MytrackerEvent_PairMsg::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerEvent_PairMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerEvent_PairMsg::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerEvent_PairMsg& MytrackerEvent_PairMsg::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerEvent_PairMsg* MytrackerEvent_PairMsg::New(::google::protobuf::Arena* arena) const {
  MytrackerEvent_PairMsg* n = new MytrackerEvent_PairMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerEvent_PairMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerEvent_PairMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  return false;
#undef DO_
}

void MytrackerEvent_PairMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
}

::google::protobuf::uint8* MytrackerEvent_PairMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  return target;
}

size_t MytrackerEvent_PairMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerEvent_PairMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerEvent_PairMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerEvent_PairMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
    MergeFrom(*source);
  }
}

void MytrackerEvent_PairMsg::MergeFrom(const MytrackerEvent_PairMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MytrackerEvent_PairMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerEvent_PairMsg::CopyFrom(const MytrackerEvent_PairMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerEvent_PairMsg::IsInitialized() const {
  return true;
}

void MytrackerEvent_PairMsg::Swap(MytrackerEvent_PairMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerEvent_PairMsg::InternalSwap(MytrackerEvent_PairMsg* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerEvent_PairMsg::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerEvent_PairMsg

// optional bytes key = 1;
bool MytrackerEvent_PairMsg::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerEvent_PairMsg::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerEvent_PairMsg::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerEvent_PairMsg::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& MytrackerEvent_PairMsg::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  return key_.GetNoArena();
}
void MytrackerEvent_PairMsg::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
#if LANG_CXX11
void MytrackerEvent_PairMsg::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
#endif
void MytrackerEvent_PairMsg::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
void MytrackerEvent_PairMsg::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
::std::string* MytrackerEvent_PairMsg::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerEvent_PairMsg::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerEvent_PairMsg::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}

// optional bytes value = 2;
bool MytrackerEvent_PairMsg::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerEvent_PairMsg::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerEvent_PairMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerEvent_PairMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& MytrackerEvent_PairMsg::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  return value_.GetNoArena();
}
void MytrackerEvent_PairMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
#if LANG_CXX11
void MytrackerEvent_PairMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
#endif
void MytrackerEvent_PairMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
void MytrackerEvent_PairMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
::std::string* MytrackerEvent_PairMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerEvent_PairMsg::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerEvent_PairMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerEvent::kNameFieldNumber;
const int MytrackerEvent::kParamFieldNumber;
const int MytrackerEvent::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerEvent::MytrackerEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerEvent)
}
MytrackerEvent::MytrackerEvent(const MytrackerEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      param_(from.param_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerEvent)
}

void MytrackerEvent::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = 0u;
}

MytrackerEvent::~MytrackerEvent() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerEvent)
  SharedDtor();
}

void MytrackerEvent::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerEvent::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerEvent& MytrackerEvent::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerEvent* MytrackerEvent::New(::google::protobuf::Arena* arena) const {
  MytrackerEvent* n = new MytrackerEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  timestamp_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerEvent)
  return false;
#undef DO_
}

void MytrackerEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->param(static_cast<int>(i)), output);
  }

  // optional uint32 timestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerEvent)
}

::google::protobuf::uint8* MytrackerEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->param(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 timestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerEvent)
  return target;
}

size_t MytrackerEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->param(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional uint32 timestamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerEvent)
    MergeFrom(*source);
  }
}

void MytrackerEvent::MergeFrom(const MytrackerEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_.MergeFrom(from.param_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MytrackerEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerEvent::CopyFrom(const MytrackerEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerEvent::IsInitialized() const {
  return true;
}

void MytrackerEvent::Swap(MytrackerEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerEvent::InternalSwap(MytrackerEvent* other) {
  using std::swap;
  param_.InternalSwap(&other->param_);
  name_.Swap(&other->name_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerEvent::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerEvent

// optional bytes name = 1;
bool MytrackerEvent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerEvent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerEvent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerEvent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MytrackerEvent::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.name)
  return name_.GetNoArena();
}
void MytrackerEvent::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
#if LANG_CXX11
void MytrackerEvent::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
#endif
void MytrackerEvent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
void MytrackerEvent::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
::std::string* MytrackerEvent::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerEvent::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerEvent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.name)
}

// repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
int MytrackerEvent::param_size() const {
  return param_.size();
}
void MytrackerEvent::clear_param() {
  param_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg& MytrackerEvent::param(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* MytrackerEvent::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* MytrackerEvent::add_param() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >*
MytrackerEvent::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >&
MytrackerEvent::param() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_;
}

// optional uint32 timestamp = 3;
bool MytrackerEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 MytrackerEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.timestamp)
  return timestamp_;
}
void MytrackerEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_Event_PairMsg::kKeyFieldNumber;
const int MytrackerMessage_Event_PairMsg::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_Event_PairMsg::MytrackerMessage_Event_PairMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
}
MytrackerMessage_Event_PairMsg::MytrackerMessage_Event_PairMsg(const MytrackerMessage_Event_PairMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
}

void MytrackerMessage_Event_PairMsg::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MytrackerMessage_Event_PairMsg::~MytrackerMessage_Event_PairMsg() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  SharedDtor();
}

void MytrackerMessage_Event_PairMsg::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerMessage_Event_PairMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_Event_PairMsg::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_Event_PairMsg& MytrackerMessage_Event_PairMsg::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_Event_PairMsg* MytrackerMessage_Event_PairMsg::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_Event_PairMsg* n = new MytrackerMessage_Event_PairMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_Event_PairMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_Event_PairMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  return false;
#undef DO_
}

void MytrackerMessage_Event_PairMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
}

::google::protobuf::uint8* MytrackerMessage_Event_PairMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  return target;
}

size_t MytrackerMessage_Event_PairMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_Event_PairMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_Event_PairMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_Event_PairMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
    MergeFrom(*source);
  }
}

void MytrackerMessage_Event_PairMsg::MergeFrom(const MytrackerMessage_Event_PairMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MytrackerMessage_Event_PairMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_Event_PairMsg::CopyFrom(const MytrackerMessage_Event_PairMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_Event_PairMsg::IsInitialized() const {
  return true;
}

void MytrackerMessage_Event_PairMsg::Swap(MytrackerMessage_Event_PairMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_Event_PairMsg::InternalSwap(MytrackerMessage_Event_PairMsg* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_Event_PairMsg::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_Event_PairMsg

// optional bytes key = 1;
bool MytrackerMessage_Event_PairMsg::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_Event_PairMsg::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_Event_PairMsg::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_Event_PairMsg::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& MytrackerMessage_Event_PairMsg::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  return key_.GetNoArena();
}
void MytrackerMessage_Event_PairMsg::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
#if LANG_CXX11
void MytrackerMessage_Event_PairMsg::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
#endif
void MytrackerMessage_Event_PairMsg::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
void MytrackerMessage_Event_PairMsg::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
::std::string* MytrackerMessage_Event_PairMsg::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event_PairMsg::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event_PairMsg::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}

// optional bytes value = 2;
bool MytrackerMessage_Event_PairMsg::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_Event_PairMsg::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_Event_PairMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_Event_PairMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& MytrackerMessage_Event_PairMsg::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  return value_.GetNoArena();
}
void MytrackerMessage_Event_PairMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
#if LANG_CXX11
void MytrackerMessage_Event_PairMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
#endif
void MytrackerMessage_Event_PairMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
void MytrackerMessage_Event_PairMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
::std::string* MytrackerMessage_Event_PairMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event_PairMsg::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event_PairMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_Event_Session::kStartFieldNumber;
const int MytrackerMessage_Event_Session::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_Event_Session::MytrackerMessage_Event_Session()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
}
MytrackerMessage_Event_Session::MytrackerMessage_Event_Session(const MytrackerMessage_Event_Session& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&start_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
}

void MytrackerMessage_Event_Session::SharedCtor() {
  _cached_size_ = 0;
  start_ = 0;
  end_ = -1;
}

MytrackerMessage_Event_Session::~MytrackerMessage_Event_Session() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  SharedDtor();
}

void MytrackerMessage_Event_Session::SharedDtor() {
}

void MytrackerMessage_Event_Session::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_Event_Session::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_Event_Session& MytrackerMessage_Event_Session::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_Event_Session* MytrackerMessage_Event_Session::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_Event_Session* n = new MytrackerMessage_Event_Session;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_Event_Session::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    start_ = 0;
    end_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_Event_Session::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  return false;
#undef DO_
}

void MytrackerMessage_Event_Session::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start(), output);
  }

  // optional int32 end = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
}

::google::protobuf::uint8* MytrackerMessage_Event_Session::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start(), target);
  }

  // optional int32 end = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  return target;
}

size_t MytrackerMessage_Event_Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 start = 1;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start());
    }

    // optional int32 end = 2 [default = -1];
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_Event_Session::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_Event_Session* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_Event_Session>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
    MergeFrom(*source);
  }
}

void MytrackerMessage_Event_Session::MergeFrom(const MytrackerMessage_Event_Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      start_ = from.start_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_ = from.end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MytrackerMessage_Event_Session::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_Event_Session::CopyFrom(const MytrackerMessage_Event_Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_Event_Session::IsInitialized() const {
  return true;
}

void MytrackerMessage_Event_Session::Swap(MytrackerMessage_Event_Session* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_Event_Session::InternalSwap(MytrackerMessage_Event_Session* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_Event_Session::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_Event_Session

// optional int32 start = 1;
bool MytrackerMessage_Event_Session::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_Event_Session::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_Event_Session::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_Event_Session::clear_start() {
  start_ = 0;
  clear_has_start();
}
::google::protobuf::int32 MytrackerMessage_Event_Session::start() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.start)
  return start_;
}
void MytrackerMessage_Event_Session::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.start)
}

// optional int32 end = 2 [default = -1];
bool MytrackerMessage_Event_Session::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_Event_Session::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_Event_Session::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_Event_Session::clear_end() {
  end_ = -1;
  clear_has_end();
}
::google::protobuf::int32 MytrackerMessage_Event_Session::end() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.end)
  return end_;
}
void MytrackerMessage_Event_Session::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_Event::kAppEventFieldNumber;
const int MytrackerMessage_Event::kTimestampFieldNumber;
const int MytrackerMessage_Event::kNameFieldNumber;
const int MytrackerMessage_Event::kParamsFieldNumber;
const int MytrackerMessage_Event::kFirstInstallTimeFieldNumber;
const int MytrackerMessage_Event::kReferrerFieldNumber;
const int MytrackerMessage_Event::kTimestampsSkippedFieldNumber;
const int MytrackerMessage_Event::kAppVersionFieldNumber;
const int MytrackerMessage_Event::kFromAppVersionFieldNumber;
const int MytrackerMessage_Event::kFromAppBuildFieldNumber;
const int MytrackerMessage_Event::kRevenueFieldNumber;
const int MytrackerMessage_Event::kCurrencyFieldNumber;
const int MytrackerMessage_Event::kReceiptFieldNumber;
const int MytrackerMessage_Event::kReceiptGzFieldNumber;
const int MytrackerMessage_Event::kProductIdFieldNumber;
const int MytrackerMessage_Event::kTransactionIdFieldNumber;
const int MytrackerMessage_Event::kOriginalTransactionIdFieldNumber;
const int MytrackerMessage_Event::kPurchaseDataFieldNumber;
const int MytrackerMessage_Event::kDataSignatureFieldNumber;
const int MytrackerMessage_Event::kOrderIdFieldNumber;
const int MytrackerMessage_Event::kPackageNameFieldNumber;
const int MytrackerMessage_Event::kProductDataIdFieldNumber;
const int MytrackerMessage_Event::kPurchaseTimeFieldNumber;
const int MytrackerMessage_Event::kPurchaseStateFieldNumber;
const int MytrackerMessage_Event::kDeveloperPayloadFieldNumber;
const int MytrackerMessage_Event::kPurchaseTokenFieldNumber;
const int MytrackerMessage_Event::kAutoRenewingFieldNumber;
const int MytrackerMessage_Event::kSessionsFieldNumber;
const int MytrackerMessage_Event::kInstallerFieldNumber;
const int MytrackerMessage_Event::kHasIadAttributionFieldNumber;
const int MytrackerMessage_Event::kGetAttributionFieldNumber;
const int MytrackerMessage_Event::kDeeplinkFieldNumber;
const int MytrackerMessage_Event::kDeeplinkTimestampFieldNumber;
const int MytrackerMessage_Event::kDeeplinkKeyTypeFieldNumber;
const int MytrackerMessage_Event::kDeeplinkErrorFieldNumber;
const int MytrackerMessage_Event::kNotVerifiedFieldNumber;
const int MytrackerMessage_Event::kLevelFieldNumber;
const int MytrackerMessage_Event::kClickTimestampFieldNumber;
const int MytrackerMessage_Event::kInstallTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_Event::MytrackerMessage_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event)
}
MytrackerMessage_Event::MytrackerMessage_Event(const MytrackerMessage_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      timestamp_(from.timestamp_),
      params_(from.params_),
      sessions_(from.sessions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_referrer()) {
    referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_version()) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  revenue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_revenue()) {
    revenue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revenue_);
  }
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_currency()) {
    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_receipt()) {
    receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  transaction_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_transaction_id()) {
    transaction_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_id_);
  }
  purchase_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchase_data()) {
    purchase_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_data_);
  }
  data_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_signature()) {
    data_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_signature_);
  }
  installer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_installer()) {
    installer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installer_);
  }
  orderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orderid()) {
    orderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderid_);
  }
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_packagename()) {
    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  productdataid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_productdataid()) {
    productdataid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productdataid_);
  }
  developerpayload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_developerpayload()) {
    developerpayload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.developerpayload_);
  }
  purchasetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchasetoken()) {
    purchasetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchasetoken_);
  }
  from_app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_app_version()) {
    from_app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_app_version_);
  }
  from_app_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_app_build()) {
    from_app_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_app_build_);
  }
  receipt_gz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_receipt_gz()) {
    receipt_gz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_gz_);
  }
  original_transaction_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_original_transaction_id()) {
    original_transaction_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_transaction_id_);
  }
  deeplink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deeplink()) {
    deeplink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deeplink_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_level()) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  ::memcpy(&app_event_, &from.app_event_,
    static_cast<size_t>(reinterpret_cast<char*>(&install_timestamp_) -
    reinterpret_cast<char*>(&app_event_)) + sizeof(install_timestamp_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.Event)
}

void MytrackerMessage_Event::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revenue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchase_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productdataid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  developerpayload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchasetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_app_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_gz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_transaction_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deeplink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&install_timestamp_) -
      reinterpret_cast<char*>(&app_event_)) + sizeof(install_timestamp_));
  _cached_size_ = 0;
}

MytrackerMessage_Event::~MytrackerMessage_Event() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  SharedDtor();
}

void MytrackerMessage_Event::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revenue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchase_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productdataid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  developerpayload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchasetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_app_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_gz_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_transaction_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deeplink_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerMessage_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_Event::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_Event& MytrackerMessage_Event::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_Event* MytrackerMessage_Event::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_Event* n = new MytrackerMessage_Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_.Clear();
  params_.Clear();
  sessions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!referrer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*referrer_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!app_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!revenue_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*revenue_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!currency_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*currency_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!receipt_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*receipt_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!transaction_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*transaction_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!purchase_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*purchase_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!data_signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_signature_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(!installer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*installer_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(!orderid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*orderid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(!packagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*packagename_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(!productdataid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*productdataid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(!developerpayload_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*developerpayload_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(!purchasetoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*purchasetoken_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(!from_app_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_app_version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(!from_app_build_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_app_build_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(!receipt_gz_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*receipt_gz_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(!original_transaction_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*original_transaction_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(!deeplink_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deeplink_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(!level_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*level_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12582912u) {
    ::memset(&app_event_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_install_time_) -
        reinterpret_cast<char*>(&app_event_)) + sizeof(first_install_time_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&timestamps_skipped_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deeplink_timestamp_) -
        reinterpret_cast<char*>(&timestamps_skipped_)) + sizeof(deeplink_timestamp_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 15u) {
    ::memset(&deeplink_key_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&install_timestamp_) -
        reinterpret_cast<char*>(&deeplink_key_type_)) + sizeof(install_timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_event();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_event_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_timestamp())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_timestamp())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_install_time = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_first_install_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_install_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes referrer = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_referrer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_version = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamps_skipped = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_timestamps_skipped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamps_skipped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes revenue = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_revenue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes currency = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_currency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes receipt = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes product_id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_product_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes transaction_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_transaction_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes purchase_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_purchase_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data_signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sessions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes installer = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_installer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes orderId = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_orderid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes packageName = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packagename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes productDataId = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_productdataid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 purchaseTime = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_purchasetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &purchasetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 purchaseState = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_purchasestate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purchasestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes developerPayload = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_developerpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes purchaseToken = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_purchasetoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool autoRenewing = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_autorenewing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autorenewing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_iad_attribution = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          set_has_has_iad_attribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_iad_attribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes from_app_version = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_app_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes from_app_build = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_app_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes receipt_gz = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receipt_gz()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes original_transaction_id = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_original_transaction_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool get_attribution = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          set_has_get_attribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &get_attribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes deeplink = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deeplink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deeplink_timestamp = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          set_has_deeplink_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deeplink_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deeplink_key_type = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {
          set_has_deeplink_key_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deeplink_key_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool deeplink_error = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {
          set_has_deeplink_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deeplink_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool not_verified = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {
          set_has_not_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &not_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes level = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 click_timestamp = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_click_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &click_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 install_timestamp = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {
          set_has_install_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &install_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  return false;
#undef DO_
}

void MytrackerMessage_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_event = 1;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_event(), output);
  }

  // repeated int32 timestamp = 2;
  for (int i = 0, n = this->timestamp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->timestamp(i), output);
  }

  // optional bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->params(static_cast<int>(i)), output);
  }

  // optional int32 first_install_time = 16;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->first_install_time(), output);
  }

  // optional bytes referrer = 17;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->referrer(), output);
  }

  // optional bytes app_version = 18;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->app_version(), output);
  }

  // optional uint32 timestamps_skipped = 19;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->timestamps_skipped(), output);
  }

  // optional bytes revenue = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->revenue(), output);
  }

  // optional bytes currency = 31;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->currency(), output);
  }

  // optional bytes receipt = 32;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->receipt(), output);
  }

  // optional bytes product_id = 33;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      33, this->product_id(), output);
  }

  // optional bytes transaction_id = 34;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      34, this->transaction_id(), output);
  }

  // optional bytes purchase_data = 35;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      35, this->purchase_data(), output);
  }

  // optional bytes data_signature = 36;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      36, this->data_signature(), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->sessions(static_cast<int>(i)), output);
  }

  // optional bytes installer = 38;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      38, this->installer(), output);
  }

  // optional bytes orderId = 39;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      39, this->orderid(), output);
  }

  // optional bytes packageName = 40;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->packagename(), output);
  }

  // optional bytes productDataId = 41;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      41, this->productdataid(), output);
  }

  // optional uint64 purchaseTime = 42;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(42, this->purchasetime(), output);
  }

  // optional uint32 purchaseState = 43;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->purchasestate(), output);
  }

  // optional bytes developerPayload = 44;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      44, this->developerpayload(), output);
  }

  // optional bytes purchaseToken = 45;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      45, this->purchasetoken(), output);
  }

  // optional bool autoRenewing = 46;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->autorenewing(), output);
  }

  // optional bool has_iad_attribution = 47;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->has_iad_attribution(), output);
  }

  // optional bytes from_app_version = 48;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      48, this->from_app_version(), output);
  }

  // optional bytes from_app_build = 49;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      49, this->from_app_build(), output);
  }

  // optional bytes receipt_gz = 50;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->receipt_gz(), output);
  }

  // optional bytes original_transaction_id = 51;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->original_transaction_id(), output);
  }

  // optional bool get_attribution = 52;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(52, this->get_attribution(), output);
  }

  // optional bytes deeplink = 53;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      53, this->deeplink(), output);
  }

  // optional uint32 deeplink_timestamp = 54;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->deeplink_timestamp(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 deeplink_key_type = 55;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->deeplink_key_type(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool deeplink_error = 56;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(56, this->deeplink_error(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool not_verified = 58;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(58, this->not_verified(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes level = 59;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      59, this->level(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 click_timestamp = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->click_timestamp(), output);
  }

  // optional uint32 install_timestamp = 61;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->install_timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.Event)
}

::google::protobuf::uint8* MytrackerMessage_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_event = 1;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_event(), target);
  }

  // repeated int32 timestamp = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->timestamp_, target);

  // optional bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->params(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 first_install_time = 16;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->first_install_time(), target);
  }

  // optional bytes referrer = 17;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->referrer(), target);
  }

  // optional bytes app_version = 18;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->app_version(), target);
  }

  // optional uint32 timestamps_skipped = 19;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->timestamps_skipped(), target);
  }

  // optional bytes revenue = 30;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->revenue(), target);
  }

  // optional bytes currency = 31;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->currency(), target);
  }

  // optional bytes receipt = 32;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->receipt(), target);
  }

  // optional bytes product_id = 33;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        33, this->product_id(), target);
  }

  // optional bytes transaction_id = 34;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        34, this->transaction_id(), target);
  }

  // optional bytes purchase_data = 35;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        35, this->purchase_data(), target);
  }

  // optional bytes data_signature = 36;
  if (cached_has_bits & 0x00000200u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        36, this->data_signature(), target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        37, this->sessions(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes installer = 38;
  if (cached_has_bits & 0x00000400u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        38, this->installer(), target);
  }

  // optional bytes orderId = 39;
  if (cached_has_bits & 0x00000800u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        39, this->orderid(), target);
  }

  // optional bytes packageName = 40;
  if (cached_has_bits & 0x00001000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->packagename(), target);
  }

  // optional bytes productDataId = 41;
  if (cached_has_bits & 0x00002000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        41, this->productdataid(), target);
  }

  // optional uint64 purchaseTime = 42;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(42, this->purchasetime(), target);
  }

  // optional uint32 purchaseState = 43;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->purchasestate(), target);
  }

  // optional bytes developerPayload = 44;
  if (cached_has_bits & 0x00004000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        44, this->developerpayload(), target);
  }

  // optional bytes purchaseToken = 45;
  if (cached_has_bits & 0x00008000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        45, this->purchasetoken(), target);
  }

  // optional bool autoRenewing = 46;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->autorenewing(), target);
  }

  // optional bool has_iad_attribution = 47;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->has_iad_attribution(), target);
  }

  // optional bytes from_app_version = 48;
  if (cached_has_bits & 0x00010000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        48, this->from_app_version(), target);
  }

  // optional bytes from_app_build = 49;
  if (cached_has_bits & 0x00020000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        49, this->from_app_build(), target);
  }

  // optional bytes receipt_gz = 50;
  if (cached_has_bits & 0x00040000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->receipt_gz(), target);
  }

  // optional bytes original_transaction_id = 51;
  if (cached_has_bits & 0x00080000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->original_transaction_id(), target);
  }

  // optional bool get_attribution = 52;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(52, this->get_attribution(), target);
  }

  // optional bytes deeplink = 53;
  if (cached_has_bits & 0x00100000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        53, this->deeplink(), target);
  }

  // optional uint32 deeplink_timestamp = 54;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->deeplink_timestamp(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 deeplink_key_type = 55;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->deeplink_key_type(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool deeplink_error = 56;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(56, this->deeplink_error(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool not_verified = 58;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(58, this->not_verified(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes level = 59;
  if (cached_has_bits & 0x00200000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        59, this->level(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 click_timestamp = 60;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->click_timestamp(), target);
  }

  // optional uint32 install_timestamp = 61;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->install_timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  return target;
}

size_t MytrackerMessage_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 timestamp = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->timestamp_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->timestamp_size());
    total_size += data_size;
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->sessions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sessions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes referrer = 17;
    if (has_referrer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->referrer());
    }

    // optional bytes app_version = 18;
    if (has_app_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_version());
    }

    // optional bytes revenue = 30;
    if (has_revenue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->revenue());
    }

    // optional bytes currency = 31;
    if (has_currency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->currency());
    }

    // optional bytes receipt = 32;
    if (has_receipt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->receipt());
    }

    // optional bytes product_id = 33;
    if (has_product_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->product_id());
    }

    // optional bytes transaction_id = 34;
    if (has_transaction_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->transaction_id());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bytes purchase_data = 35;
    if (has_purchase_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->purchase_data());
    }

    // optional bytes data_signature = 36;
    if (has_data_signature()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data_signature());
    }

    // optional bytes installer = 38;
    if (has_installer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->installer());
    }

    // optional bytes orderId = 39;
    if (has_orderid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->orderid());
    }

    // optional bytes packageName = 40;
    if (has_packagename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packagename());
    }

    // optional bytes productDataId = 41;
    if (has_productdataid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->productdataid());
    }

    // optional bytes developerPayload = 44;
    if (has_developerpayload()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->developerpayload());
    }

    // optional bytes purchaseToken = 45;
    if (has_purchasetoken()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->purchasetoken());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bytes from_app_version = 48;
    if (has_from_app_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->from_app_version());
    }

    // optional bytes from_app_build = 49;
    if (has_from_app_build()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->from_app_build());
    }

    // optional bytes receipt_gz = 50;
    if (has_receipt_gz()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->receipt_gz());
    }

    // optional bytes original_transaction_id = 51;
    if (has_original_transaction_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->original_transaction_id());
    }

    // optional bytes deeplink = 53;
    if (has_deeplink()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->deeplink());
    }

    // optional bytes level = 59;
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->level());
    }

    // optional uint32 app_event = 1;
    if (has_app_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_event());
    }

    // optional int32 first_install_time = 16;
    if (has_first_install_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_install_time());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional uint32 timestamps_skipped = 19;
    if (has_timestamps_skipped()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamps_skipped());
    }

    // optional uint32 purchaseState = 43;
    if (has_purchasestate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purchasestate());
    }

    // optional uint64 purchaseTime = 42;
    if (has_purchasetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->purchasetime());
    }

    // optional bool autoRenewing = 46;
    if (has_autorenewing()) {
      total_size += 2 + 1;
    }

    // optional bool has_iad_attribution = 47;
    if (has_has_iad_attribution()) {
      total_size += 2 + 1;
    }

    // optional bool get_attribution = 52;
    if (has_get_attribution()) {
      total_size += 2 + 1;
    }

    // optional bool deeplink_error = 56;
    if (has_deeplink_error()) {
      total_size += 2 + 1;
    }

    // optional uint32 deeplink_timestamp = 54;
    if (has_deeplink_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deeplink_timestamp());
    }

  }
  if (_has_bits_[32 / 32] & 15u) {
    // optional uint32 deeplink_key_type = 55;
    if (has_deeplink_key_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deeplink_key_type());
    }

    // optional bool not_verified = 58;
    if (has_not_verified()) {
      total_size += 2 + 1;
    }

    // optional uint32 click_timestamp = 60;
    if (has_click_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->click_timestamp());
    }

    // optional uint32 install_timestamp = 61;
    if (has_install_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->install_timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.Event)
    MergeFrom(*source);
  }
}

void MytrackerMessage_Event::MergeFrom(const MytrackerMessage_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timestamp_.MergeFrom(from.timestamp_);
  params_.MergeFrom(from.params_);
  sessions_.MergeFrom(from.sessions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_referrer();
      referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_app_version();
      app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_revenue();
      revenue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revenue_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_currency();
      currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_receipt();
      receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_transaction_id();
      transaction_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_id_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_purchase_data();
      purchase_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_data_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_data_signature();
      data_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_signature_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_installer();
      installer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installer_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_orderid();
      orderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderid_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_packagename();
      packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_productdataid();
      productdataid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productdataid_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_developerpayload();
      developerpayload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.developerpayload_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_purchasetoken();
      purchasetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchasetoken_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_from_app_version();
      from_app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_app_version_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_from_app_build();
      from_app_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_app_build_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_receipt_gz();
      receipt_gz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_gz_);
    }
    if (cached_has_bits & 0x00080000u) {
      set_has_original_transaction_id();
      original_transaction_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_transaction_id_);
    }
    if (cached_has_bits & 0x00100000u) {
      set_has_deeplink();
      deeplink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deeplink_);
    }
    if (cached_has_bits & 0x00200000u) {
      set_has_level();
      level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
    }
    if (cached_has_bits & 0x00400000u) {
      app_event_ = from.app_event_;
    }
    if (cached_has_bits & 0x00800000u) {
      first_install_time_ = from.first_install_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      timestamps_skipped_ = from.timestamps_skipped_;
    }
    if (cached_has_bits & 0x02000000u) {
      purchasestate_ = from.purchasestate_;
    }
    if (cached_has_bits & 0x04000000u) {
      purchasetime_ = from.purchasetime_;
    }
    if (cached_has_bits & 0x08000000u) {
      autorenewing_ = from.autorenewing_;
    }
    if (cached_has_bits & 0x10000000u) {
      has_iad_attribution_ = from.has_iad_attribution_;
    }
    if (cached_has_bits & 0x20000000u) {
      get_attribution_ = from.get_attribution_;
    }
    if (cached_has_bits & 0x40000000u) {
      deeplink_error_ = from.deeplink_error_;
    }
    if (cached_has_bits & 0x80000000u) {
      deeplink_timestamp_ = from.deeplink_timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      deeplink_key_type_ = from.deeplink_key_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      not_verified_ = from.not_verified_;
    }
    if (cached_has_bits & 0x00000004u) {
      click_timestamp_ = from.click_timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      install_timestamp_ = from.install_timestamp_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void MytrackerMessage_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_Event::CopyFrom(const MytrackerMessage_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_Event::IsInitialized() const {
  return true;
}

void MytrackerMessage_Event::Swap(MytrackerMessage_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_Event::InternalSwap(MytrackerMessage_Event* other) {
  using std::swap;
  timestamp_.InternalSwap(&other->timestamp_);
  params_.InternalSwap(&other->params_);
  sessions_.InternalSwap(&other->sessions_);
  name_.Swap(&other->name_);
  referrer_.Swap(&other->referrer_);
  app_version_.Swap(&other->app_version_);
  revenue_.Swap(&other->revenue_);
  currency_.Swap(&other->currency_);
  receipt_.Swap(&other->receipt_);
  product_id_.Swap(&other->product_id_);
  transaction_id_.Swap(&other->transaction_id_);
  purchase_data_.Swap(&other->purchase_data_);
  data_signature_.Swap(&other->data_signature_);
  installer_.Swap(&other->installer_);
  orderid_.Swap(&other->orderid_);
  packagename_.Swap(&other->packagename_);
  productdataid_.Swap(&other->productdataid_);
  developerpayload_.Swap(&other->developerpayload_);
  purchasetoken_.Swap(&other->purchasetoken_);
  from_app_version_.Swap(&other->from_app_version_);
  from_app_build_.Swap(&other->from_app_build_);
  receipt_gz_.Swap(&other->receipt_gz_);
  original_transaction_id_.Swap(&other->original_transaction_id_);
  deeplink_.Swap(&other->deeplink_);
  level_.Swap(&other->level_);
  swap(app_event_, other->app_event_);
  swap(first_install_time_, other->first_install_time_);
  swap(timestamps_skipped_, other->timestamps_skipped_);
  swap(purchasestate_, other->purchasestate_);
  swap(purchasetime_, other->purchasetime_);
  swap(autorenewing_, other->autorenewing_);
  swap(has_iad_attribution_, other->has_iad_attribution_);
  swap(get_attribution_, other->get_attribution_);
  swap(deeplink_error_, other->deeplink_error_);
  swap(deeplink_timestamp_, other->deeplink_timestamp_);
  swap(deeplink_key_type_, other->deeplink_key_type_);
  swap(not_verified_, other->not_verified_);
  swap(click_timestamp_, other->click_timestamp_);
  swap(install_timestamp_, other->install_timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_Event::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_Event

// optional uint32 app_event = 1;
bool MytrackerMessage_Event::has_app_event() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void MytrackerMessage_Event::set_has_app_event() {
  _has_bits_[0] |= 0x00400000u;
}
void MytrackerMessage_Event::clear_has_app_event() {
  _has_bits_[0] &= ~0x00400000u;
}
void MytrackerMessage_Event::clear_app_event() {
  app_event_ = 0u;
  clear_has_app_event();
}
::google::protobuf::uint32 MytrackerMessage_Event::app_event() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_event)
  return app_event_;
}
void MytrackerMessage_Event::set_app_event(::google::protobuf::uint32 value) {
  set_has_app_event();
  app_event_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_event)
}

// repeated int32 timestamp = 2;
int MytrackerMessage_Event::timestamp_size() const {
  return timestamp_.size();
}
void MytrackerMessage_Event::clear_timestamp() {
  timestamp_.Clear();
}
::google::protobuf::int32 MytrackerMessage_Event::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return timestamp_.Get(index);
}
void MytrackerMessage_Event::set_timestamp(int index, ::google::protobuf::int32 value) {
  timestamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
}
void MytrackerMessage_Event::add_timestamp(::google::protobuf::int32 value) {
  timestamp_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MytrackerMessage_Event::timestamp() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return timestamp_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MytrackerMessage_Event::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return &timestamp_;
}

// optional bytes name = 3;
bool MytrackerMessage_Event::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_Event::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_Event::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_Event::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MytrackerMessage_Event::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  return name_.GetNoArena();
}
void MytrackerMessage_Event::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
#endif
void MytrackerMessage_Event::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
void MytrackerMessage_Event::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
::std::string* MytrackerMessage_Event::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
int MytrackerMessage_Event::params_size() const {
  return params_.size();
}
void MytrackerMessage_Event::clear_params() {
  params_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg& MytrackerMessage_Event::params(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* MytrackerMessage_Event::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* MytrackerMessage_Event::add_params() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >*
MytrackerMessage_Event::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >&
MytrackerMessage_Event::params() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_;
}

// optional int32 first_install_time = 16;
bool MytrackerMessage_Event::has_first_install_time() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void MytrackerMessage_Event::set_has_first_install_time() {
  _has_bits_[0] |= 0x00800000u;
}
void MytrackerMessage_Event::clear_has_first_install_time() {
  _has_bits_[0] &= ~0x00800000u;
}
void MytrackerMessage_Event::clear_first_install_time() {
  first_install_time_ = 0;
  clear_has_first_install_time();
}
::google::protobuf::int32 MytrackerMessage_Event::first_install_time() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.first_install_time)
  return first_install_time_;
}
void MytrackerMessage_Event::set_first_install_time(::google::protobuf::int32 value) {
  set_has_first_install_time();
  first_install_time_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.first_install_time)
}

// optional bytes referrer = 17;
bool MytrackerMessage_Event::has_referrer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_Event::set_has_referrer() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_Event::clear_has_referrer() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_Event::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer();
}
const ::std::string& MytrackerMessage_Event::referrer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  return referrer_.GetNoArena();
}
void MytrackerMessage_Event::set_referrer(const ::std::string& value) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_referrer(::std::string&& value) {
  set_has_referrer();
  referrer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
#endif
void MytrackerMessage_Event::set_referrer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
void MytrackerMessage_Event::set_referrer(const void* value, size_t size) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
::std::string* MytrackerMessage_Event::mutable_referrer() {
  set_has_referrer();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_referrer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  clear_has_referrer();
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    set_has_referrer();
  } else {
    clear_has_referrer();
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}

// optional uint32 timestamps_skipped = 19;
bool MytrackerMessage_Event::has_timestamps_skipped() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void MytrackerMessage_Event::set_has_timestamps_skipped() {
  _has_bits_[0] |= 0x01000000u;
}
void MytrackerMessage_Event::clear_has_timestamps_skipped() {
  _has_bits_[0] &= ~0x01000000u;
}
void MytrackerMessage_Event::clear_timestamps_skipped() {
  timestamps_skipped_ = 0u;
  clear_has_timestamps_skipped();
}
::google::protobuf::uint32 MytrackerMessage_Event::timestamps_skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamps_skipped)
  return timestamps_skipped_;
}
void MytrackerMessage_Event::set_timestamps_skipped(::google::protobuf::uint32 value) {
  set_has_timestamps_skipped();
  timestamps_skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamps_skipped)
}

// optional bytes app_version = 18;
bool MytrackerMessage_Event::has_app_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerMessage_Event::set_has_app_version() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerMessage_Event::clear_has_app_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerMessage_Event::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_version();
}
const ::std::string& MytrackerMessage_Event::app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  return app_version_.GetNoArena();
}
void MytrackerMessage_Event::set_app_version(const ::std::string& value) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_app_version(::std::string&& value) {
  set_has_app_version();
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
#endif
void MytrackerMessage_Event::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
void MytrackerMessage_Event::set_app_version(const void* value, size_t size) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
::std::string* MytrackerMessage_Event::mutable_app_version() {
  set_has_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  clear_has_app_version();
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    set_has_app_version();
  } else {
    clear_has_app_version();
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}

// optional bytes from_app_version = 48;
bool MytrackerMessage_Event::has_from_app_version() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void MytrackerMessage_Event::set_has_from_app_version() {
  _has_bits_[0] |= 0x00010000u;
}
void MytrackerMessage_Event::clear_has_from_app_version() {
  _has_bits_[0] &= ~0x00010000u;
}
void MytrackerMessage_Event::clear_from_app_version() {
  from_app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_app_version();
}
const ::std::string& MytrackerMessage_Event::from_app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  return from_app_version_.GetNoArena();
}
void MytrackerMessage_Event::set_from_app_version(const ::std::string& value) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_from_app_version(::std::string&& value) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
#endif
void MytrackerMessage_Event::set_from_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
void MytrackerMessage_Event::set_from_app_version(const void* value, size_t size) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
::std::string* MytrackerMessage_Event::mutable_from_app_version() {
  set_has_from_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  return from_app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_from_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  clear_has_from_app_version();
  return from_app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_from_app_version(::std::string* from_app_version) {
  if (from_app_version != NULL) {
    set_has_from_app_version();
  } else {
    clear_has_from_app_version();
  }
  from_app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}

// optional bytes from_app_build = 49;
bool MytrackerMessage_Event::has_from_app_build() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void MytrackerMessage_Event::set_has_from_app_build() {
  _has_bits_[0] |= 0x00020000u;
}
void MytrackerMessage_Event::clear_has_from_app_build() {
  _has_bits_[0] &= ~0x00020000u;
}
void MytrackerMessage_Event::clear_from_app_build() {
  from_app_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_app_build();
}
const ::std::string& MytrackerMessage_Event::from_app_build() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  return from_app_build_.GetNoArena();
}
void MytrackerMessage_Event::set_from_app_build(const ::std::string& value) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_from_app_build(::std::string&& value) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
#endif
void MytrackerMessage_Event::set_from_app_build(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
void MytrackerMessage_Event::set_from_app_build(const void* value, size_t size) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
::std::string* MytrackerMessage_Event::mutable_from_app_build() {
  set_has_from_app_build();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  return from_app_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_from_app_build() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  clear_has_from_app_build();
  return from_app_build_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_from_app_build(::std::string* from_app_build) {
  if (from_app_build != NULL) {
    set_has_from_app_build();
  } else {
    clear_has_from_app_build();
  }
  from_app_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_app_build);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}

// optional bytes revenue = 30;
bool MytrackerMessage_Event::has_revenue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MytrackerMessage_Event::set_has_revenue() {
  _has_bits_[0] |= 0x00000008u;
}
void MytrackerMessage_Event::clear_has_revenue() {
  _has_bits_[0] &= ~0x00000008u;
}
void MytrackerMessage_Event::clear_revenue() {
  revenue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revenue();
}
const ::std::string& MytrackerMessage_Event::revenue() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  return revenue_.GetNoArena();
}
void MytrackerMessage_Event::set_revenue(const ::std::string& value) {
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_revenue(::std::string&& value) {
  set_has_revenue();
  revenue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
#endif
void MytrackerMessage_Event::set_revenue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
void MytrackerMessage_Event::set_revenue(const void* value, size_t size) {
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
::std::string* MytrackerMessage_Event::mutable_revenue() {
  set_has_revenue();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  return revenue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_revenue() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  clear_has_revenue();
  return revenue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_revenue(::std::string* revenue) {
  if (revenue != NULL) {
    set_has_revenue();
  } else {
    clear_has_revenue();
  }
  revenue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revenue);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}

// optional bytes currency = 31;
bool MytrackerMessage_Event::has_currency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MytrackerMessage_Event::set_has_currency() {
  _has_bits_[0] |= 0x00000010u;
}
void MytrackerMessage_Event::clear_has_currency() {
  _has_bits_[0] &= ~0x00000010u;
}
void MytrackerMessage_Event::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_currency();
}
const ::std::string& MytrackerMessage_Event::currency() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  return currency_.GetNoArena();
}
void MytrackerMessage_Event::set_currency(const ::std::string& value) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_currency(::std::string&& value) {
  set_has_currency();
  currency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
#endif
void MytrackerMessage_Event::set_currency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
void MytrackerMessage_Event::set_currency(const void* value, size_t size) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
::std::string* MytrackerMessage_Event::mutable_currency() {
  set_has_currency();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_currency() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  clear_has_currency();
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    set_has_currency();
  } else {
    clear_has_currency();
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}

// optional bytes receipt = 32;
bool MytrackerMessage_Event::has_receipt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MytrackerMessage_Event::set_has_receipt() {
  _has_bits_[0] |= 0x00000020u;
}
void MytrackerMessage_Event::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000020u;
}
void MytrackerMessage_Event::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
const ::std::string& MytrackerMessage_Event::receipt() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  return receipt_.GetNoArena();
}
void MytrackerMessage_Event::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_receipt(::std::string&& value) {
  set_has_receipt();
  receipt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
#endif
void MytrackerMessage_Event::set_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
void MytrackerMessage_Event::set_receipt(const void* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
::std::string* MytrackerMessage_Event::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_receipt() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}

// optional bytes receipt_gz = 50;
bool MytrackerMessage_Event::has_receipt_gz() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void MytrackerMessage_Event::set_has_receipt_gz() {
  _has_bits_[0] |= 0x00040000u;
}
void MytrackerMessage_Event::clear_has_receipt_gz() {
  _has_bits_[0] &= ~0x00040000u;
}
void MytrackerMessage_Event::clear_receipt_gz() {
  receipt_gz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt_gz();
}
const ::std::string& MytrackerMessage_Event::receipt_gz() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  return receipt_gz_.GetNoArena();
}
void MytrackerMessage_Event::set_receipt_gz(const ::std::string& value) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_receipt_gz(::std::string&& value) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
#endif
void MytrackerMessage_Event::set_receipt_gz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
void MytrackerMessage_Event::set_receipt_gz(const void* value, size_t size) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
::std::string* MytrackerMessage_Event::mutable_receipt_gz() {
  set_has_receipt_gz();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  return receipt_gz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_receipt_gz() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  clear_has_receipt_gz();
  return receipt_gz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_receipt_gz(::std::string* receipt_gz) {
  if (receipt_gz != NULL) {
    set_has_receipt_gz();
  } else {
    clear_has_receipt_gz();
  }
  receipt_gz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt_gz);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}

// optional bytes product_id = 33;
bool MytrackerMessage_Event::has_product_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MytrackerMessage_Event::set_has_product_id() {
  _has_bits_[0] |= 0x00000040u;
}
void MytrackerMessage_Event::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000040u;
}
void MytrackerMessage_Event::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& MytrackerMessage_Event::product_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  return product_id_.GetNoArena();
}
void MytrackerMessage_Event::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
#endif
void MytrackerMessage_Event::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
void MytrackerMessage_Event::set_product_id(const void* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
::std::string* MytrackerMessage_Event::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_product_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}

// optional bytes transaction_id = 34;
bool MytrackerMessage_Event::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MytrackerMessage_Event::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000080u;
}
void MytrackerMessage_Event::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void MytrackerMessage_Event::clear_transaction_id() {
  transaction_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_transaction_id();
}
const ::std::string& MytrackerMessage_Event::transaction_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  return transaction_id_.GetNoArena();
}
void MytrackerMessage_Event::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_transaction_id(::std::string&& value) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
#endif
void MytrackerMessage_Event::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
void MytrackerMessage_Event::set_transaction_id(const void* value, size_t size) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
::std::string* MytrackerMessage_Event::mutable_transaction_id() {
  set_has_transaction_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  return transaction_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_transaction_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  clear_has_transaction_id();
  return transaction_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_transaction_id(::std::string* transaction_id) {
  if (transaction_id != NULL) {
    set_has_transaction_id();
  } else {
    clear_has_transaction_id();
  }
  transaction_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}

// optional bytes original_transaction_id = 51;
bool MytrackerMessage_Event::has_original_transaction_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void MytrackerMessage_Event::set_has_original_transaction_id() {
  _has_bits_[0] |= 0x00080000u;
}
void MytrackerMessage_Event::clear_has_original_transaction_id() {
  _has_bits_[0] &= ~0x00080000u;
}
void MytrackerMessage_Event::clear_original_transaction_id() {
  original_transaction_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_original_transaction_id();
}
const ::std::string& MytrackerMessage_Event::original_transaction_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  return original_transaction_id_.GetNoArena();
}
void MytrackerMessage_Event::set_original_transaction_id(const ::std::string& value) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_original_transaction_id(::std::string&& value) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
#endif
void MytrackerMessage_Event::set_original_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
void MytrackerMessage_Event::set_original_transaction_id(const void* value, size_t size) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
::std::string* MytrackerMessage_Event::mutable_original_transaction_id() {
  set_has_original_transaction_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  return original_transaction_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_original_transaction_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  clear_has_original_transaction_id();
  return original_transaction_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_original_transaction_id(::std::string* original_transaction_id) {
  if (original_transaction_id != NULL) {
    set_has_original_transaction_id();
  } else {
    clear_has_original_transaction_id();
  }
  original_transaction_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_transaction_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}

// optional bytes purchase_data = 35;
bool MytrackerMessage_Event::has_purchase_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MytrackerMessage_Event::set_has_purchase_data() {
  _has_bits_[0] |= 0x00000100u;
}
void MytrackerMessage_Event::clear_has_purchase_data() {
  _has_bits_[0] &= ~0x00000100u;
}
void MytrackerMessage_Event::clear_purchase_data() {
  purchase_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_purchase_data();
}
const ::std::string& MytrackerMessage_Event::purchase_data() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  return purchase_data_.GetNoArena();
}
void MytrackerMessage_Event::set_purchase_data(const ::std::string& value) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_purchase_data(::std::string&& value) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
#endif
void MytrackerMessage_Event::set_purchase_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
void MytrackerMessage_Event::set_purchase_data(const void* value, size_t size) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
::std::string* MytrackerMessage_Event::mutable_purchase_data() {
  set_has_purchase_data();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  return purchase_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_purchase_data() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  clear_has_purchase_data();
  return purchase_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_purchase_data(::std::string* purchase_data) {
  if (purchase_data != NULL) {
    set_has_purchase_data();
  } else {
    clear_has_purchase_data();
  }
  purchase_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), purchase_data);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}

// optional bytes data_signature = 36;
bool MytrackerMessage_Event::has_data_signature() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MytrackerMessage_Event::set_has_data_signature() {
  _has_bits_[0] |= 0x00000200u;
}
void MytrackerMessage_Event::clear_has_data_signature() {
  _has_bits_[0] &= ~0x00000200u;
}
void MytrackerMessage_Event::clear_data_signature() {
  data_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_signature();
}
const ::std::string& MytrackerMessage_Event::data_signature() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  return data_signature_.GetNoArena();
}
void MytrackerMessage_Event::set_data_signature(const ::std::string& value) {
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_data_signature(::std::string&& value) {
  set_has_data_signature();
  data_signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
#endif
void MytrackerMessage_Event::set_data_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
void MytrackerMessage_Event::set_data_signature(const void* value, size_t size) {
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
::std::string* MytrackerMessage_Event::mutable_data_signature() {
  set_has_data_signature();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  return data_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_data_signature() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  clear_has_data_signature();
  return data_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_data_signature(::std::string* data_signature) {
  if (data_signature != NULL) {
    set_has_data_signature();
  } else {
    clear_has_data_signature();
  }
  data_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_signature);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}

// optional bytes orderId = 39;
bool MytrackerMessage_Event::has_orderid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MytrackerMessage_Event::set_has_orderid() {
  _has_bits_[0] |= 0x00000800u;
}
void MytrackerMessage_Event::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000800u;
}
void MytrackerMessage_Event::clear_orderid() {
  orderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderid();
}
const ::std::string& MytrackerMessage_Event::orderid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  return orderid_.GetNoArena();
}
void MytrackerMessage_Event::set_orderid(const ::std::string& value) {
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_orderid(::std::string&& value) {
  set_has_orderid();
  orderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
#endif
void MytrackerMessage_Event::set_orderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
void MytrackerMessage_Event::set_orderid(const void* value, size_t size) {
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
::std::string* MytrackerMessage_Event::mutable_orderid() {
  set_has_orderid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  return orderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_orderid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  clear_has_orderid();
  return orderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_orderid(::std::string* orderid) {
  if (orderid != NULL) {
    set_has_orderid();
  } else {
    clear_has_orderid();
  }
  orderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}

// optional bytes packageName = 40;
bool MytrackerMessage_Event::has_packagename() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MytrackerMessage_Event::set_has_packagename() {
  _has_bits_[0] |= 0x00001000u;
}
void MytrackerMessage_Event::clear_has_packagename() {
  _has_bits_[0] &= ~0x00001000u;
}
void MytrackerMessage_Event::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_packagename();
}
const ::std::string& MytrackerMessage_Event::packagename() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  return packagename_.GetNoArena();
}
void MytrackerMessage_Event::set_packagename(const ::std::string& value) {
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_packagename(::std::string&& value) {
  set_has_packagename();
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
#endif
void MytrackerMessage_Event::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
void MytrackerMessage_Event::set_packagename(const void* value, size_t size) {
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
::std::string* MytrackerMessage_Event::mutable_packagename() {
  set_has_packagename();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_packagename() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  clear_has_packagename();
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    set_has_packagename();
  } else {
    clear_has_packagename();
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}

// optional bytes productDataId = 41;
bool MytrackerMessage_Event::has_productdataid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MytrackerMessage_Event::set_has_productdataid() {
  _has_bits_[0] |= 0x00002000u;
}
void MytrackerMessage_Event::clear_has_productdataid() {
  _has_bits_[0] &= ~0x00002000u;
}
void MytrackerMessage_Event::clear_productdataid() {
  productdataid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productdataid();
}
const ::std::string& MytrackerMessage_Event::productdataid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  return productdataid_.GetNoArena();
}
void MytrackerMessage_Event::set_productdataid(const ::std::string& value) {
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_productdataid(::std::string&& value) {
  set_has_productdataid();
  productdataid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
#endif
void MytrackerMessage_Event::set_productdataid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
void MytrackerMessage_Event::set_productdataid(const void* value, size_t size) {
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
::std::string* MytrackerMessage_Event::mutable_productdataid() {
  set_has_productdataid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  return productdataid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_productdataid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  clear_has_productdataid();
  return productdataid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_productdataid(::std::string* productdataid) {
  if (productdataid != NULL) {
    set_has_productdataid();
  } else {
    clear_has_productdataid();
  }
  productdataid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productdataid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}

// optional uint64 purchaseTime = 42;
bool MytrackerMessage_Event::has_purchasetime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void MytrackerMessage_Event::set_has_purchasetime() {
  _has_bits_[0] |= 0x04000000u;
}
void MytrackerMessage_Event::clear_has_purchasetime() {
  _has_bits_[0] &= ~0x04000000u;
}
void MytrackerMessage_Event::clear_purchasetime() {
  purchasetime_ = GOOGLE_ULONGLONG(0);
  clear_has_purchasetime();
}
::google::protobuf::uint64 MytrackerMessage_Event::purchasetime() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseTime)
  return purchasetime_;
}
void MytrackerMessage_Event::set_purchasetime(::google::protobuf::uint64 value) {
  set_has_purchasetime();
  purchasetime_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseTime)
}

// optional uint32 purchaseState = 43;
bool MytrackerMessage_Event::has_purchasestate() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void MytrackerMessage_Event::set_has_purchasestate() {
  _has_bits_[0] |= 0x02000000u;
}
void MytrackerMessage_Event::clear_has_purchasestate() {
  _has_bits_[0] &= ~0x02000000u;
}
void MytrackerMessage_Event::clear_purchasestate() {
  purchasestate_ = 0u;
  clear_has_purchasestate();
}
::google::protobuf::uint32 MytrackerMessage_Event::purchasestate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseState)
  return purchasestate_;
}
void MytrackerMessage_Event::set_purchasestate(::google::protobuf::uint32 value) {
  set_has_purchasestate();
  purchasestate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseState)
}

// optional bytes developerPayload = 44;
bool MytrackerMessage_Event::has_developerpayload() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MytrackerMessage_Event::set_has_developerpayload() {
  _has_bits_[0] |= 0x00004000u;
}
void MytrackerMessage_Event::clear_has_developerpayload() {
  _has_bits_[0] &= ~0x00004000u;
}
void MytrackerMessage_Event::clear_developerpayload() {
  developerpayload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_developerpayload();
}
const ::std::string& MytrackerMessage_Event::developerpayload() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  return developerpayload_.GetNoArena();
}
void MytrackerMessage_Event::set_developerpayload(const ::std::string& value) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_developerpayload(::std::string&& value) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
#endif
void MytrackerMessage_Event::set_developerpayload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
void MytrackerMessage_Event::set_developerpayload(const void* value, size_t size) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
::std::string* MytrackerMessage_Event::mutable_developerpayload() {
  set_has_developerpayload();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  return developerpayload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_developerpayload() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  clear_has_developerpayload();
  return developerpayload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_developerpayload(::std::string* developerpayload) {
  if (developerpayload != NULL) {
    set_has_developerpayload();
  } else {
    clear_has_developerpayload();
  }
  developerpayload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), developerpayload);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}

// optional bytes purchaseToken = 45;
bool MytrackerMessage_Event::has_purchasetoken() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MytrackerMessage_Event::set_has_purchasetoken() {
  _has_bits_[0] |= 0x00008000u;
}
void MytrackerMessage_Event::clear_has_purchasetoken() {
  _has_bits_[0] &= ~0x00008000u;
}
void MytrackerMessage_Event::clear_purchasetoken() {
  purchasetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_purchasetoken();
}
const ::std::string& MytrackerMessage_Event::purchasetoken() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  return purchasetoken_.GetNoArena();
}
void MytrackerMessage_Event::set_purchasetoken(const ::std::string& value) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_purchasetoken(::std::string&& value) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
#endif
void MytrackerMessage_Event::set_purchasetoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
void MytrackerMessage_Event::set_purchasetoken(const void* value, size_t size) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
::std::string* MytrackerMessage_Event::mutable_purchasetoken() {
  set_has_purchasetoken();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  return purchasetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_purchasetoken() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  clear_has_purchasetoken();
  return purchasetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_purchasetoken(::std::string* purchasetoken) {
  if (purchasetoken != NULL) {
    set_has_purchasetoken();
  } else {
    clear_has_purchasetoken();
  }
  purchasetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), purchasetoken);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}

// optional bool autoRenewing = 46;
bool MytrackerMessage_Event::has_autorenewing() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void MytrackerMessage_Event::set_has_autorenewing() {
  _has_bits_[0] |= 0x08000000u;
}
void MytrackerMessage_Event::clear_has_autorenewing() {
  _has_bits_[0] &= ~0x08000000u;
}
void MytrackerMessage_Event::clear_autorenewing() {
  autorenewing_ = false;
  clear_has_autorenewing();
}
bool MytrackerMessage_Event::autorenewing() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.autoRenewing)
  return autorenewing_;
}
void MytrackerMessage_Event::set_autorenewing(bool value) {
  set_has_autorenewing();
  autorenewing_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.autoRenewing)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
int MytrackerMessage_Event::sessions_size() const {
  return sessions_.size();
}
void MytrackerMessage_Event::clear_sessions() {
  sessions_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session& MytrackerMessage_Event::sessions(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* MytrackerMessage_Event::mutable_sessions(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* MytrackerMessage_Event::add_sessions() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >*
MytrackerMessage_Event::mutable_sessions() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return &sessions_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >&
MytrackerMessage_Event::sessions() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_;
}

// optional bytes installer = 38;
bool MytrackerMessage_Event::has_installer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MytrackerMessage_Event::set_has_installer() {
  _has_bits_[0] |= 0x00000400u;
}
void MytrackerMessage_Event::clear_has_installer() {
  _has_bits_[0] &= ~0x00000400u;
}
void MytrackerMessage_Event::clear_installer() {
  installer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_installer();
}
const ::std::string& MytrackerMessage_Event::installer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  return installer_.GetNoArena();
}
void MytrackerMessage_Event::set_installer(const ::std::string& value) {
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_installer(::std::string&& value) {
  set_has_installer();
  installer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
#endif
void MytrackerMessage_Event::set_installer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
void MytrackerMessage_Event::set_installer(const void* value, size_t size) {
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
::std::string* MytrackerMessage_Event::mutable_installer() {
  set_has_installer();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  return installer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_installer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  clear_has_installer();
  return installer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_installer(::std::string* installer) {
  if (installer != NULL) {
    set_has_installer();
  } else {
    clear_has_installer();
  }
  installer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installer);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}

// optional bool has_iad_attribution = 47;
bool MytrackerMessage_Event::has_has_iad_attribution() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void MytrackerMessage_Event::set_has_has_iad_attribution() {
  _has_bits_[0] |= 0x10000000u;
}
void MytrackerMessage_Event::clear_has_has_iad_attribution() {
  _has_bits_[0] &= ~0x10000000u;
}
void MytrackerMessage_Event::clear_has_iad_attribution() {
  has_iad_attribution_ = false;
  clear_has_has_iad_attribution();
}
bool MytrackerMessage_Event::has_iad_attribution() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.has_iad_attribution)
  return has_iad_attribution_;
}
void MytrackerMessage_Event::set_has_iad_attribution(bool value) {
  set_has_has_iad_attribution();
  has_iad_attribution_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.has_iad_attribution)
}

// optional bool get_attribution = 52;
bool MytrackerMessage_Event::has_get_attribution() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void MytrackerMessage_Event::set_has_get_attribution() {
  _has_bits_[0] |= 0x20000000u;
}
void MytrackerMessage_Event::clear_has_get_attribution() {
  _has_bits_[0] &= ~0x20000000u;
}
void MytrackerMessage_Event::clear_get_attribution() {
  get_attribution_ = false;
  clear_has_get_attribution();
}
bool MytrackerMessage_Event::get_attribution() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.get_attribution)
  return get_attribution_;
}
void MytrackerMessage_Event::set_get_attribution(bool value) {
  set_has_get_attribution();
  get_attribution_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.get_attribution)
}

// optional bytes deeplink = 53;
bool MytrackerMessage_Event::has_deeplink() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void MytrackerMessage_Event::set_has_deeplink() {
  _has_bits_[0] |= 0x00100000u;
}
void MytrackerMessage_Event::clear_has_deeplink() {
  _has_bits_[0] &= ~0x00100000u;
}
void MytrackerMessage_Event::clear_deeplink() {
  deeplink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deeplink();
}
const ::std::string& MytrackerMessage_Event::deeplink() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  return deeplink_.GetNoArena();
}
void MytrackerMessage_Event::set_deeplink(const ::std::string& value) {
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_deeplink(::std::string&& value) {
  set_has_deeplink();
  deeplink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
#endif
void MytrackerMessage_Event::set_deeplink(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
void MytrackerMessage_Event::set_deeplink(const void* value, size_t size) {
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
::std::string* MytrackerMessage_Event::mutable_deeplink() {
  set_has_deeplink();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  return deeplink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_deeplink() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  clear_has_deeplink();
  return deeplink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_deeplink(::std::string* deeplink) {
  if (deeplink != NULL) {
    set_has_deeplink();
  } else {
    clear_has_deeplink();
  }
  deeplink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deeplink);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}

// optional uint32 deeplink_timestamp = 54;
bool MytrackerMessage_Event::has_deeplink_timestamp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void MytrackerMessage_Event::set_has_deeplink_timestamp() {
  _has_bits_[0] |= 0x80000000u;
}
void MytrackerMessage_Event::clear_has_deeplink_timestamp() {
  _has_bits_[0] &= ~0x80000000u;
}
void MytrackerMessage_Event::clear_deeplink_timestamp() {
  deeplink_timestamp_ = 0u;
  clear_has_deeplink_timestamp();
}
::google::protobuf::uint32 MytrackerMessage_Event::deeplink_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_timestamp)
  return deeplink_timestamp_;
}
void MytrackerMessage_Event::set_deeplink_timestamp(::google::protobuf::uint32 value) {
  set_has_deeplink_timestamp();
  deeplink_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_timestamp)
}

// optional uint32 deeplink_key_type = 55;
bool MytrackerMessage_Event::has_deeplink_key_type() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void MytrackerMessage_Event::set_has_deeplink_key_type() {
  _has_bits_[1] |= 0x00000001u;
}
void MytrackerMessage_Event::clear_has_deeplink_key_type() {
  _has_bits_[1] &= ~0x00000001u;
}
void MytrackerMessage_Event::clear_deeplink_key_type() {
  deeplink_key_type_ = 0u;
  clear_has_deeplink_key_type();
}
::google::protobuf::uint32 MytrackerMessage_Event::deeplink_key_type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_key_type)
  return deeplink_key_type_;
}
void MytrackerMessage_Event::set_deeplink_key_type(::google::protobuf::uint32 value) {
  set_has_deeplink_key_type();
  deeplink_key_type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_key_type)
}

// optional bool deeplink_error = 56;
bool MytrackerMessage_Event::has_deeplink_error() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void MytrackerMessage_Event::set_has_deeplink_error() {
  _has_bits_[0] |= 0x40000000u;
}
void MytrackerMessage_Event::clear_has_deeplink_error() {
  _has_bits_[0] &= ~0x40000000u;
}
void MytrackerMessage_Event::clear_deeplink_error() {
  deeplink_error_ = false;
  clear_has_deeplink_error();
}
bool MytrackerMessage_Event::deeplink_error() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_error)
  return deeplink_error_;
}
void MytrackerMessage_Event::set_deeplink_error(bool value) {
  set_has_deeplink_error();
  deeplink_error_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_error)
}

// optional bool not_verified = 58;
bool MytrackerMessage_Event::has_not_verified() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void MytrackerMessage_Event::set_has_not_verified() {
  _has_bits_[1] |= 0x00000002u;
}
void MytrackerMessage_Event::clear_has_not_verified() {
  _has_bits_[1] &= ~0x00000002u;
}
void MytrackerMessage_Event::clear_not_verified() {
  not_verified_ = false;
  clear_has_not_verified();
}
bool MytrackerMessage_Event::not_verified() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.not_verified)
  return not_verified_;
}
void MytrackerMessage_Event::set_not_verified(bool value) {
  set_has_not_verified();
  not_verified_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.not_verified)
}

// optional bytes level = 59;
bool MytrackerMessage_Event::has_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void MytrackerMessage_Event::set_has_level() {
  _has_bits_[0] |= 0x00200000u;
}
void MytrackerMessage_Event::clear_has_level() {
  _has_bits_[0] &= ~0x00200000u;
}
void MytrackerMessage_Event::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_level();
}
const ::std::string& MytrackerMessage_Event::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  return level_.GetNoArena();
}
void MytrackerMessage_Event::set_level(const ::std::string& value) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
#if LANG_CXX11
void MytrackerMessage_Event::set_level(::std::string&& value) {
  set_has_level();
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
#endif
void MytrackerMessage_Event::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
void MytrackerMessage_Event::set_level(const void* value, size_t size) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
::std::string* MytrackerMessage_Event::mutable_level() {
  set_has_level();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Event::release_level() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  clear_has_level();
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Event::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    set_has_level();
  } else {
    clear_has_level();
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}

// optional uint32 click_timestamp = 60;
bool MytrackerMessage_Event::has_click_timestamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void MytrackerMessage_Event::set_has_click_timestamp() {
  _has_bits_[1] |= 0x00000004u;
}
void MytrackerMessage_Event::clear_has_click_timestamp() {
  _has_bits_[1] &= ~0x00000004u;
}
void MytrackerMessage_Event::clear_click_timestamp() {
  click_timestamp_ = 0u;
  clear_has_click_timestamp();
}
::google::protobuf::uint32 MytrackerMessage_Event::click_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.click_timestamp)
  return click_timestamp_;
}
void MytrackerMessage_Event::set_click_timestamp(::google::protobuf::uint32 value) {
  set_has_click_timestamp();
  click_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.click_timestamp)
}

// optional uint32 install_timestamp = 61;
bool MytrackerMessage_Event::has_install_timestamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void MytrackerMessage_Event::set_has_install_timestamp() {
  _has_bits_[1] |= 0x00000008u;
}
void MytrackerMessage_Event::clear_has_install_timestamp() {
  _has_bits_[1] &= ~0x00000008u;
}
void MytrackerMessage_Event::clear_install_timestamp() {
  install_timestamp_ = 0u;
  clear_has_install_timestamp();
}
::google::protobuf::uint32 MytrackerMessage_Event::install_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.install_timestamp)
  return install_timestamp_;
}
void MytrackerMessage_Event::set_install_timestamp(::google::protobuf::uint32 value) {
  set_has_install_timestamp();
  install_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.install_timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_App::kBundleFieldNumber;
const int MytrackerMessage_App::kIdFieldNumber;
const int MytrackerMessage_App::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_App::MytrackerMessage_App()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.App)
}
MytrackerMessage_App::MytrackerMessage_App(const MytrackerMessage_App& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bundle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bundle()) {
    bundle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundle_);
  }
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_id()) {
    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.App)
}

void MytrackerMessage_App::SharedCtor() {
  _cached_size_ = 0;
  bundle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

MytrackerMessage_App::~MytrackerMessage_App() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.App)
  SharedDtor();
}

void MytrackerMessage_App::SharedDtor() {
  bundle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerMessage_App::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_App::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_App& MytrackerMessage_App::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_App* MytrackerMessage_App::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_App* n = new MytrackerMessage_App;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_App::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!bundle_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bundle_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!app_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_id_.UnsafeRawStringPointer())->clear();
    }
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes bundle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bundle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.App)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.App)
  return false;
#undef DO_
}

void MytrackerMessage_App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes bundle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bundle(), output);
  }

  // optional uint32 id = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->id(), output);
  }

  // optional bytes app_id = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.App)
}

::google::protobuf::uint8* MytrackerMessage_App::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes bundle = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bundle(), target);
  }

  // optional uint32 id = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->id(), target);
  }

  // optional bytes app_id = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.App)
  return target;
}

size_t MytrackerMessage_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes bundle = 1;
    if (has_bundle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bundle());
    }

    // optional bytes app_id = 7;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_id());
    }

    // optional uint32 id = 6;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_App::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_App* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_App>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.App)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.App)
    MergeFrom(*source);
  }
}

void MytrackerMessage_App::MergeFrom(const MytrackerMessage_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bundle();
      bundle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundle_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_app_id();
      app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MytrackerMessage_App::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_App::CopyFrom(const MytrackerMessage_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_App::IsInitialized() const {
  return true;
}

void MytrackerMessage_App::Swap(MytrackerMessage_App* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_App::InternalSwap(MytrackerMessage_App* other) {
  using std::swap;
  bundle_.Swap(&other->bundle_);
  app_id_.Swap(&other->app_id_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_App::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_App

// optional bytes bundle = 1;
bool MytrackerMessage_App::has_bundle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_App::set_has_bundle() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_App::clear_has_bundle() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_App::clear_bundle() {
  bundle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bundle();
}
const ::std::string& MytrackerMessage_App::bundle() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  return bundle_.GetNoArena();
}
void MytrackerMessage_App::set_bundle(const ::std::string& value) {
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
#if LANG_CXX11
void MytrackerMessage_App::set_bundle(::std::string&& value) {
  set_has_bundle();
  bundle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
#endif
void MytrackerMessage_App::set_bundle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
void MytrackerMessage_App::set_bundle(const void* value, size_t size) {
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
::std::string* MytrackerMessage_App::mutable_bundle() {
  set_has_bundle();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  return bundle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_App::release_bundle() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  clear_has_bundle();
  return bundle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_App::set_allocated_bundle(::std::string* bundle) {
  if (bundle != NULL) {
    set_has_bundle();
  } else {
    clear_has_bundle();
  }
  bundle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundle);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}

// optional uint32 id = 6;
bool MytrackerMessage_App::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerMessage_App::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerMessage_App::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerMessage_App::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 MytrackerMessage_App::id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.id)
  return id_;
}
void MytrackerMessage_App::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.id)
}

// optional bytes app_id = 7;
bool MytrackerMessage_App::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_App::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_App::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_App::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
const ::std::string& MytrackerMessage_App::app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  return app_id_.GetNoArena();
}
void MytrackerMessage_App::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
#if LANG_CXX11
void MytrackerMessage_App::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
#endif
void MytrackerMessage_App::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
void MytrackerMessage_App::set_app_id(const void* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
::std::string* MytrackerMessage_App::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_App::release_app_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_App::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_Wifi::kBssidFieldNumber;
const int MytrackerMessage_Wifi::kSsidFieldNumber;
const int MytrackerMessage_Wifi::kLevelFieldNumber;
const int MytrackerMessage_Wifi::kWifiIdFieldNumber;
const int MytrackerMessage_Wifi::kLinkSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_Wifi::MytrackerMessage_Wifi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
}
MytrackerMessage_Wifi::MytrackerMessage_Wifi(const MytrackerMessage_Wifi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bssid()) {
    bssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bssid_);
  }
  ssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ssid()) {
    ssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssid_);
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&link_speed_) -
    reinterpret_cast<char*>(&level_)) + sizeof(link_speed_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
}

void MytrackerMessage_Wifi::SharedCtor() {
  _cached_size_ = 0;
  bssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_speed_) -
      reinterpret_cast<char*>(&level_)) + sizeof(link_speed_));
}

MytrackerMessage_Wifi::~MytrackerMessage_Wifi() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  SharedDtor();
}

void MytrackerMessage_Wifi::SharedDtor() {
  bssid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerMessage_Wifi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_Wifi::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_Wifi& MytrackerMessage_Wifi::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_Wifi* MytrackerMessage_Wifi::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_Wifi* n = new MytrackerMessage_Wifi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_Wifi::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!bssid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bssid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!ssid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ssid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&link_speed_) -
        reinterpret_cast<char*>(&level_)) + sizeof(link_speed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_Wifi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes bssid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bssid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ssid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wifi_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_wifi_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wifi_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 link_speed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_link_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  return false;
#undef DO_
}

void MytrackerMessage_Wifi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes bssid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bssid(), output);
  }

  // optional bytes ssid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ssid(), output);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional uint32 wifi_id = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wifi_id(), output);
  }

  // optional uint32 link_speed = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->link_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
}

::google::protobuf::uint8* MytrackerMessage_Wifi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes bssid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bssid(), target);
  }

  // optional bytes ssid = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ssid(), target);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional uint32 wifi_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wifi_id(), target);
  }

  // optional uint32 link_speed = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->link_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  return target;
}

size_t MytrackerMessage_Wifi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes bssid = 1;
    if (has_bssid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bssid());
    }

    // optional bytes ssid = 2;
    if (has_ssid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ssid());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional uint32 wifi_id = 5;
    if (has_wifi_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wifi_id());
    }

    // optional uint32 link_speed = 6;
    if (has_link_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->link_speed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_Wifi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_Wifi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_Wifi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
    MergeFrom(*source);
  }
}

void MytrackerMessage_Wifi::MergeFrom(const MytrackerMessage_Wifi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bssid();
      bssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bssid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ssid();
      ssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssid_);
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      wifi_id_ = from.wifi_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      link_speed_ = from.link_speed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MytrackerMessage_Wifi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_Wifi::CopyFrom(const MytrackerMessage_Wifi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_Wifi::IsInitialized() const {
  return true;
}

void MytrackerMessage_Wifi::Swap(MytrackerMessage_Wifi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_Wifi::InternalSwap(MytrackerMessage_Wifi* other) {
  using std::swap;
  bssid_.Swap(&other->bssid_);
  ssid_.Swap(&other->ssid_);
  swap(level_, other->level_);
  swap(wifi_id_, other->wifi_id_);
  swap(link_speed_, other->link_speed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_Wifi::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_Wifi

// optional bytes bssid = 1;
bool MytrackerMessage_Wifi::has_bssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_Wifi::set_has_bssid() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_Wifi::clear_has_bssid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_Wifi::clear_bssid() {
  bssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bssid();
}
const ::std::string& MytrackerMessage_Wifi::bssid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  return bssid_.GetNoArena();
}
void MytrackerMessage_Wifi::set_bssid(const ::std::string& value) {
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
#if LANG_CXX11
void MytrackerMessage_Wifi::set_bssid(::std::string&& value) {
  set_has_bssid();
  bssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
#endif
void MytrackerMessage_Wifi::set_bssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
void MytrackerMessage_Wifi::set_bssid(const void* value, size_t size) {
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
::std::string* MytrackerMessage_Wifi::mutable_bssid() {
  set_has_bssid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  return bssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Wifi::release_bssid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  clear_has_bssid();
  return bssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Wifi::set_allocated_bssid(::std::string* bssid) {
  if (bssid != NULL) {
    set_has_bssid();
  } else {
    clear_has_bssid();
  }
  bssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bssid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}

// optional bytes ssid = 2;
bool MytrackerMessage_Wifi::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_Wifi::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_Wifi::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_Wifi::clear_ssid() {
  ssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssid();
}
const ::std::string& MytrackerMessage_Wifi::ssid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  return ssid_.GetNoArena();
}
void MytrackerMessage_Wifi::set_ssid(const ::std::string& value) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
#if LANG_CXX11
void MytrackerMessage_Wifi::set_ssid(::std::string&& value) {
  set_has_ssid();
  ssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
#endif
void MytrackerMessage_Wifi::set_ssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
void MytrackerMessage_Wifi::set_ssid(const void* value, size_t size) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
::std::string* MytrackerMessage_Wifi::mutable_ssid() {
  set_has_ssid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  return ssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Wifi::release_ssid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  clear_has_ssid();
  return ssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Wifi::set_allocated_ssid(::std::string* ssid) {
  if (ssid != NULL) {
    set_has_ssid();
  } else {
    clear_has_ssid();
  }
  ssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}

// optional int32 level = 3;
bool MytrackerMessage_Wifi::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerMessage_Wifi::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerMessage_Wifi::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerMessage_Wifi::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 MytrackerMessage_Wifi::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.level)
  return level_;
}
void MytrackerMessage_Wifi::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.level)
}

// optional uint32 wifi_id = 5;
bool MytrackerMessage_Wifi::has_wifi_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MytrackerMessage_Wifi::set_has_wifi_id() {
  _has_bits_[0] |= 0x00000008u;
}
void MytrackerMessage_Wifi::clear_has_wifi_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void MytrackerMessage_Wifi::clear_wifi_id() {
  wifi_id_ = 0u;
  clear_has_wifi_id();
}
::google::protobuf::uint32 MytrackerMessage_Wifi::wifi_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.wifi_id)
  return wifi_id_;
}
void MytrackerMessage_Wifi::set_wifi_id(::google::protobuf::uint32 value) {
  set_has_wifi_id();
  wifi_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.wifi_id)
}

// optional uint32 link_speed = 6;
bool MytrackerMessage_Wifi::has_link_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MytrackerMessage_Wifi::set_has_link_speed() {
  _has_bits_[0] |= 0x00000010u;
}
void MytrackerMessage_Wifi::clear_has_link_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
void MytrackerMessage_Wifi::clear_link_speed() {
  link_speed_ = 0u;
  clear_has_link_speed();
}
::google::protobuf::uint32 MytrackerMessage_Wifi::link_speed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.link_speed)
  return link_speed_;
}
void MytrackerMessage_Wifi::set_link_speed(::google::protobuf::uint32 value) {
  set_has_link_speed();
  link_speed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.link_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage_Cell::kTypeFieldNumber;
const int MytrackerMessage_Cell::kCellIdFieldNumber;
const int MytrackerMessage_Cell::kLacFieldNumber;
const int MytrackerMessage_Cell::kMccFieldNumber;
const int MytrackerMessage_Cell::kMncFieldNumber;
const int MytrackerMessage_Cell::kLevelFieldNumber;
const int MytrackerMessage_Cell::kDbmFieldNumber;
const int MytrackerMessage_Cell::kAsuFieldNumber;
const int MytrackerMessage_Cell::kTaFieldNumber;
const int MytrackerMessage_Cell::kRfcnFieldNumber;
const int MytrackerMessage_Cell::kBsicFieldNumber;
const int MytrackerMessage_Cell::kPscFieldNumber;
const int MytrackerMessage_Cell::kTacFieldNumber;
const int MytrackerMessage_Cell::kNetworkIdFieldNumber;
const int MytrackerMessage_Cell::kSystemIdFieldNumber;
const int MytrackerMessage_Cell::kBaseStationIdFieldNumber;
const int MytrackerMessage_Cell::kCdmaLatFieldNumber;
const int MytrackerMessage_Cell::kCdmaLonFieldNumber;
const int MytrackerMessage_Cell::kCdmaLevelFieldNumber;
const int MytrackerMessage_Cell::kEvdoLevelFieldNumber;
const int MytrackerMessage_Cell::kCdmaDbmFieldNumber;
const int MytrackerMessage_Cell::kEvdoDbmFieldNumber;
const int MytrackerMessage_Cell::kEvdoEcioFieldNumber;
const int MytrackerMessage_Cell::kCdmaEcioFieldNumber;
const int MytrackerMessage_Cell::kEvdoSnrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage_Cell::MytrackerMessage_Cell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
}
MytrackerMessage_Cell::MytrackerMessage_Cell(const MytrackerMessage_Cell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&cell_id_, &from.cell_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&evdo_snr_) -
    reinterpret_cast<char*>(&cell_id_)) + sizeof(evdo_snr_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
}

void MytrackerMessage_Cell::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cell_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evdo_snr_) -
      reinterpret_cast<char*>(&cell_id_)) + sizeof(evdo_snr_));
}

MytrackerMessage_Cell::~MytrackerMessage_Cell() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  SharedDtor();
}

void MytrackerMessage_Cell::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MytrackerMessage_Cell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage_Cell::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage_Cell& MytrackerMessage_Cell::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage_Cell* MytrackerMessage_Cell::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage_Cell* n = new MytrackerMessage_Cell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage_Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_type()) {
    GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*type_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 254u) {
    ::memset(&cell_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&asu_) -
        reinterpret_cast<char*>(&cell_id_)) + sizeof(asu_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&ta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&base_station_id_) -
        reinterpret_cast<char*>(&ta_)) + sizeof(base_station_id_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&cdma_lat_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cdma_ecio_) -
        reinterpret_cast<char*>(&cdma_lat_)) + sizeof(cdma_ecio_));
  }
  evdo_snr_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage_Cell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cell_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lac();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mcc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_mcc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mnc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_mnc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mnc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dbm = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_dbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asu = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_asu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ta = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_ta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rfcn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_rfcn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rfcn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bsic = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_bsic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bsic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 psc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_psc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &psc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tac = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_tac();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 system_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_system_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &system_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 base_station_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_base_station_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_station_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cdma_lat = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_cdma_lat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cdma_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cdma_lon = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_cdma_lon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cdma_lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cdma_level = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_cdma_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cdma_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evdo_level = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_evdo_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evdo_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cdma_dbm = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_cdma_dbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cdma_dbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 evdo_dbm = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_evdo_dbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evdo_dbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evdo_ecio = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_evdo_ecio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evdo_ecio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cdma_ecio = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_cdma_ecio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cdma_ecio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evdo_snr = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_evdo_snr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evdo_snr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  return false;
#undef DO_
}

void MytrackerMessage_Cell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->type(), output);
  }

  // optional uint32 cell_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cell_id(), output);
  }

  // optional uint32 lac = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lac(), output);
  }

  // optional uint32 mcc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mcc(), output);
  }

  // optional uint32 mnc = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mnc(), output);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // optional int32 dbm = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dbm(), output);
  }

  // optional uint32 asu = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->asu(), output);
  }

  // optional uint32 ta = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ta(), output);
  }

  // optional uint32 rfcn = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->rfcn(), output);
  }

  // optional uint32 bsic = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->bsic(), output);
  }

  // optional uint32 psc = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->psc(), output);
  }

  // optional uint32 tac = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->tac(), output);
  }

  // optional uint32 network_id = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->network_id(), output);
  }

  // optional uint32 system_id = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->system_id(), output);
  }

  // optional uint32 base_station_id = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->base_station_id(), output);
  }

  // optional int32 cdma_lat = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->cdma_lat(), output);
  }

  // optional int32 cdma_lon = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->cdma_lon(), output);
  }

  // optional uint32 cdma_level = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->cdma_level(), output);
  }

  // optional uint32 evdo_level = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->evdo_level(), output);
  }

  // optional int32 cdma_dbm = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->cdma_dbm(), output);
  }

  // optional int32 evdo_dbm = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->evdo_dbm(), output);
  }

  // optional uint32 evdo_ecio = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->evdo_ecio(), output);
  }

  // optional uint32 cdma_ecio = 24;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->cdma_ecio(), output);
  }

  // optional uint32 evdo_snr = 25;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->evdo_snr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
}

::google::protobuf::uint8* MytrackerMessage_Cell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes type = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->type(), target);
  }

  // optional uint32 cell_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cell_id(), target);
  }

  // optional uint32 lac = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lac(), target);
  }

  // optional uint32 mcc = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mcc(), target);
  }

  // optional uint32 mnc = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mnc(), target);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // optional int32 dbm = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dbm(), target);
  }

  // optional uint32 asu = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->asu(), target);
  }

  // optional uint32 ta = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ta(), target);
  }

  // optional uint32 rfcn = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->rfcn(), target);
  }

  // optional uint32 bsic = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->bsic(), target);
  }

  // optional uint32 psc = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->psc(), target);
  }

  // optional uint32 tac = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->tac(), target);
  }

  // optional uint32 network_id = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->network_id(), target);
  }

  // optional uint32 system_id = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->system_id(), target);
  }

  // optional uint32 base_station_id = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->base_station_id(), target);
  }

  // optional int32 cdma_lat = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->cdma_lat(), target);
  }

  // optional int32 cdma_lon = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->cdma_lon(), target);
  }

  // optional uint32 cdma_level = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->cdma_level(), target);
  }

  // optional uint32 evdo_level = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->evdo_level(), target);
  }

  // optional int32 cdma_dbm = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->cdma_dbm(), target);
  }

  // optional int32 evdo_dbm = 22;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->evdo_dbm(), target);
  }

  // optional uint32 evdo_ecio = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->evdo_ecio(), target);
  }

  // optional uint32 cdma_ecio = 24;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->cdma_ecio(), target);
  }

  // optional uint32 evdo_snr = 25;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->evdo_snr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  return target;
}

size_t MytrackerMessage_Cell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->type());
    }

    // optional uint32 cell_id = 2;
    if (has_cell_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cell_id());
    }

    // optional uint32 lac = 3;
    if (has_lac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lac());
    }

    // optional uint32 mcc = 4;
    if (has_mcc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mcc());
    }

    // optional uint32 mnc = 5;
    if (has_mnc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mnc());
    }

    // optional uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional int32 dbm = 7;
    if (has_dbm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dbm());
    }

    // optional uint32 asu = 8;
    if (has_asu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asu());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 ta = 9;
    if (has_ta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ta());
    }

    // optional uint32 rfcn = 10;
    if (has_rfcn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rfcn());
    }

    // optional uint32 bsic = 11;
    if (has_bsic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bsic());
    }

    // optional uint32 psc = 12;
    if (has_psc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->psc());
    }

    // optional uint32 tac = 13;
    if (has_tac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tac());
    }

    // optional uint32 network_id = 14;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 system_id = 15;
    if (has_system_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->system_id());
    }

    // optional uint32 base_station_id = 16;
    if (has_base_station_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_station_id());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 cdma_lat = 17;
    if (has_cdma_lat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cdma_lat());
    }

    // optional int32 cdma_lon = 18;
    if (has_cdma_lon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cdma_lon());
    }

    // optional uint32 cdma_level = 19;
    if (has_cdma_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cdma_level());
    }

    // optional uint32 evdo_level = 20;
    if (has_evdo_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evdo_level());
    }

    // optional int32 cdma_dbm = 21;
    if (has_cdma_dbm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cdma_dbm());
    }

    // optional int32 evdo_dbm = 22;
    if (has_evdo_dbm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evdo_dbm());
    }

    // optional uint32 evdo_ecio = 23;
    if (has_evdo_ecio()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evdo_ecio());
    }

    // optional uint32 cdma_ecio = 24;
    if (has_cdma_ecio()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cdma_ecio());
    }

  }
  // optional uint32 evdo_snr = 25;
  if (has_evdo_snr()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->evdo_snr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage_Cell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage_Cell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage_Cell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
    MergeFrom(*source);
  }
}

void MytrackerMessage_Cell::MergeFrom(const MytrackerMessage_Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      cell_id_ = from.cell_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      lac_ = from.lac_;
    }
    if (cached_has_bits & 0x00000008u) {
      mcc_ = from.mcc_;
    }
    if (cached_has_bits & 0x00000010u) {
      mnc_ = from.mnc_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      dbm_ = from.dbm_;
    }
    if (cached_has_bits & 0x00000080u) {
      asu_ = from.asu_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      ta_ = from.ta_;
    }
    if (cached_has_bits & 0x00000200u) {
      rfcn_ = from.rfcn_;
    }
    if (cached_has_bits & 0x00000400u) {
      bsic_ = from.bsic_;
    }
    if (cached_has_bits & 0x00000800u) {
      psc_ = from.psc_;
    }
    if (cached_has_bits & 0x00001000u) {
      tac_ = from.tac_;
    }
    if (cached_has_bits & 0x00002000u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00004000u) {
      system_id_ = from.system_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      base_station_id_ = from.base_station_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      cdma_lat_ = from.cdma_lat_;
    }
    if (cached_has_bits & 0x00020000u) {
      cdma_lon_ = from.cdma_lon_;
    }
    if (cached_has_bits & 0x00040000u) {
      cdma_level_ = from.cdma_level_;
    }
    if (cached_has_bits & 0x00080000u) {
      evdo_level_ = from.evdo_level_;
    }
    if (cached_has_bits & 0x00100000u) {
      cdma_dbm_ = from.cdma_dbm_;
    }
    if (cached_has_bits & 0x00200000u) {
      evdo_dbm_ = from.evdo_dbm_;
    }
    if (cached_has_bits & 0x00400000u) {
      evdo_ecio_ = from.evdo_ecio_;
    }
    if (cached_has_bits & 0x00800000u) {
      cdma_ecio_ = from.cdma_ecio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    set_evdo_snr(from.evdo_snr());
  }
}

void MytrackerMessage_Cell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage_Cell::CopyFrom(const MytrackerMessage_Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage_Cell::IsInitialized() const {
  return true;
}

void MytrackerMessage_Cell::Swap(MytrackerMessage_Cell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage_Cell::InternalSwap(MytrackerMessage_Cell* other) {
  using std::swap;
  type_.Swap(&other->type_);
  swap(cell_id_, other->cell_id_);
  swap(lac_, other->lac_);
  swap(mcc_, other->mcc_);
  swap(mnc_, other->mnc_);
  swap(level_, other->level_);
  swap(dbm_, other->dbm_);
  swap(asu_, other->asu_);
  swap(ta_, other->ta_);
  swap(rfcn_, other->rfcn_);
  swap(bsic_, other->bsic_);
  swap(psc_, other->psc_);
  swap(tac_, other->tac_);
  swap(network_id_, other->network_id_);
  swap(system_id_, other->system_id_);
  swap(base_station_id_, other->base_station_id_);
  swap(cdma_lat_, other->cdma_lat_);
  swap(cdma_lon_, other->cdma_lon_);
  swap(cdma_level_, other->cdma_level_);
  swap(evdo_level_, other->evdo_level_);
  swap(cdma_dbm_, other->cdma_dbm_);
  swap(evdo_dbm_, other->evdo_dbm_);
  swap(evdo_ecio_, other->evdo_ecio_);
  swap(cdma_ecio_, other->cdma_ecio_);
  swap(evdo_snr_, other->evdo_snr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage_Cell::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage_Cell

// optional bytes type = 1;
bool MytrackerMessage_Cell::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage_Cell::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage_Cell::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage_Cell::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& MytrackerMessage_Cell::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  return type_.GetNoArena();
}
void MytrackerMessage_Cell::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
#if LANG_CXX11
void MytrackerMessage_Cell::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
#endif
void MytrackerMessage_Cell::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
void MytrackerMessage_Cell::set_type(const void* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
::std::string* MytrackerMessage_Cell::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage_Cell::release_type() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage_Cell::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}

// optional uint32 cell_id = 2;
bool MytrackerMessage_Cell::has_cell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage_Cell::set_has_cell_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage_Cell::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage_Cell::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
::google::protobuf::uint32 MytrackerMessage_Cell::cell_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cell_id)
  return cell_id_;
}
void MytrackerMessage_Cell::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cell_id)
}

// optional uint32 lac = 3;
bool MytrackerMessage_Cell::has_lac() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerMessage_Cell::set_has_lac() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerMessage_Cell::clear_has_lac() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerMessage_Cell::clear_lac() {
  lac_ = 0u;
  clear_has_lac();
}
::google::protobuf::uint32 MytrackerMessage_Cell::lac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.lac)
  return lac_;
}
void MytrackerMessage_Cell::set_lac(::google::protobuf::uint32 value) {
  set_has_lac();
  lac_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.lac)
}

// optional uint32 mcc = 4;
bool MytrackerMessage_Cell::has_mcc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MytrackerMessage_Cell::set_has_mcc() {
  _has_bits_[0] |= 0x00000008u;
}
void MytrackerMessage_Cell::clear_has_mcc() {
  _has_bits_[0] &= ~0x00000008u;
}
void MytrackerMessage_Cell::clear_mcc() {
  mcc_ = 0u;
  clear_has_mcc();
}
::google::protobuf::uint32 MytrackerMessage_Cell::mcc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mcc)
  return mcc_;
}
void MytrackerMessage_Cell::set_mcc(::google::protobuf::uint32 value) {
  set_has_mcc();
  mcc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mcc)
}

// optional uint32 mnc = 5;
bool MytrackerMessage_Cell::has_mnc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MytrackerMessage_Cell::set_has_mnc() {
  _has_bits_[0] |= 0x00000010u;
}
void MytrackerMessage_Cell::clear_has_mnc() {
  _has_bits_[0] &= ~0x00000010u;
}
void MytrackerMessage_Cell::clear_mnc() {
  mnc_ = 0u;
  clear_has_mnc();
}
::google::protobuf::uint32 MytrackerMessage_Cell::mnc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mnc)
  return mnc_;
}
void MytrackerMessage_Cell::set_mnc(::google::protobuf::uint32 value) {
  set_has_mnc();
  mnc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mnc)
}

// optional uint32 level = 6;
bool MytrackerMessage_Cell::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MytrackerMessage_Cell::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void MytrackerMessage_Cell::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void MytrackerMessage_Cell::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 MytrackerMessage_Cell::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.level)
  return level_;
}
void MytrackerMessage_Cell::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.level)
}

// optional int32 dbm = 7;
bool MytrackerMessage_Cell::has_dbm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MytrackerMessage_Cell::set_has_dbm() {
  _has_bits_[0] |= 0x00000040u;
}
void MytrackerMessage_Cell::clear_has_dbm() {
  _has_bits_[0] &= ~0x00000040u;
}
void MytrackerMessage_Cell::clear_dbm() {
  dbm_ = 0;
  clear_has_dbm();
}
::google::protobuf::int32 MytrackerMessage_Cell::dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.dbm)
  return dbm_;
}
void MytrackerMessage_Cell::set_dbm(::google::protobuf::int32 value) {
  set_has_dbm();
  dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.dbm)
}

// optional uint32 asu = 8;
bool MytrackerMessage_Cell::has_asu() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MytrackerMessage_Cell::set_has_asu() {
  _has_bits_[0] |= 0x00000080u;
}
void MytrackerMessage_Cell::clear_has_asu() {
  _has_bits_[0] &= ~0x00000080u;
}
void MytrackerMessage_Cell::clear_asu() {
  asu_ = 0u;
  clear_has_asu();
}
::google::protobuf::uint32 MytrackerMessage_Cell::asu() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.asu)
  return asu_;
}
void MytrackerMessage_Cell::set_asu(::google::protobuf::uint32 value) {
  set_has_asu();
  asu_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.asu)
}

// optional uint32 ta = 9;
bool MytrackerMessage_Cell::has_ta() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MytrackerMessage_Cell::set_has_ta() {
  _has_bits_[0] |= 0x00000100u;
}
void MytrackerMessage_Cell::clear_has_ta() {
  _has_bits_[0] &= ~0x00000100u;
}
void MytrackerMessage_Cell::clear_ta() {
  ta_ = 0u;
  clear_has_ta();
}
::google::protobuf::uint32 MytrackerMessage_Cell::ta() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.ta)
  return ta_;
}
void MytrackerMessage_Cell::set_ta(::google::protobuf::uint32 value) {
  set_has_ta();
  ta_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.ta)
}

// optional uint32 rfcn = 10;
bool MytrackerMessage_Cell::has_rfcn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MytrackerMessage_Cell::set_has_rfcn() {
  _has_bits_[0] |= 0x00000200u;
}
void MytrackerMessage_Cell::clear_has_rfcn() {
  _has_bits_[0] &= ~0x00000200u;
}
void MytrackerMessage_Cell::clear_rfcn() {
  rfcn_ = 0u;
  clear_has_rfcn();
}
::google::protobuf::uint32 MytrackerMessage_Cell::rfcn() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.rfcn)
  return rfcn_;
}
void MytrackerMessage_Cell::set_rfcn(::google::protobuf::uint32 value) {
  set_has_rfcn();
  rfcn_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.rfcn)
}

// optional uint32 bsic = 11;
bool MytrackerMessage_Cell::has_bsic() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MytrackerMessage_Cell::set_has_bsic() {
  _has_bits_[0] |= 0x00000400u;
}
void MytrackerMessage_Cell::clear_has_bsic() {
  _has_bits_[0] &= ~0x00000400u;
}
void MytrackerMessage_Cell::clear_bsic() {
  bsic_ = 0u;
  clear_has_bsic();
}
::google::protobuf::uint32 MytrackerMessage_Cell::bsic() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.bsic)
  return bsic_;
}
void MytrackerMessage_Cell::set_bsic(::google::protobuf::uint32 value) {
  set_has_bsic();
  bsic_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.bsic)
}

// optional uint32 psc = 12;
bool MytrackerMessage_Cell::has_psc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MytrackerMessage_Cell::set_has_psc() {
  _has_bits_[0] |= 0x00000800u;
}
void MytrackerMessage_Cell::clear_has_psc() {
  _has_bits_[0] &= ~0x00000800u;
}
void MytrackerMessage_Cell::clear_psc() {
  psc_ = 0u;
  clear_has_psc();
}
::google::protobuf::uint32 MytrackerMessage_Cell::psc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.psc)
  return psc_;
}
void MytrackerMessage_Cell::set_psc(::google::protobuf::uint32 value) {
  set_has_psc();
  psc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.psc)
}

// optional uint32 tac = 13;
bool MytrackerMessage_Cell::has_tac() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MytrackerMessage_Cell::set_has_tac() {
  _has_bits_[0] |= 0x00001000u;
}
void MytrackerMessage_Cell::clear_has_tac() {
  _has_bits_[0] &= ~0x00001000u;
}
void MytrackerMessage_Cell::clear_tac() {
  tac_ = 0u;
  clear_has_tac();
}
::google::protobuf::uint32 MytrackerMessage_Cell::tac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.tac)
  return tac_;
}
void MytrackerMessage_Cell::set_tac(::google::protobuf::uint32 value) {
  set_has_tac();
  tac_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.tac)
}

// optional uint32 network_id = 14;
bool MytrackerMessage_Cell::has_network_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MytrackerMessage_Cell::set_has_network_id() {
  _has_bits_[0] |= 0x00002000u;
}
void MytrackerMessage_Cell::clear_has_network_id() {
  _has_bits_[0] &= ~0x00002000u;
}
void MytrackerMessage_Cell::clear_network_id() {
  network_id_ = 0u;
  clear_has_network_id();
}
::google::protobuf::uint32 MytrackerMessage_Cell::network_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.network_id)
  return network_id_;
}
void MytrackerMessage_Cell::set_network_id(::google::protobuf::uint32 value) {
  set_has_network_id();
  network_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.network_id)
}

// optional uint32 system_id = 15;
bool MytrackerMessage_Cell::has_system_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MytrackerMessage_Cell::set_has_system_id() {
  _has_bits_[0] |= 0x00004000u;
}
void MytrackerMessage_Cell::clear_has_system_id() {
  _has_bits_[0] &= ~0x00004000u;
}
void MytrackerMessage_Cell::clear_system_id() {
  system_id_ = 0u;
  clear_has_system_id();
}
::google::protobuf::uint32 MytrackerMessage_Cell::system_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.system_id)
  return system_id_;
}
void MytrackerMessage_Cell::set_system_id(::google::protobuf::uint32 value) {
  set_has_system_id();
  system_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.system_id)
}

// optional uint32 base_station_id = 16;
bool MytrackerMessage_Cell::has_base_station_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MytrackerMessage_Cell::set_has_base_station_id() {
  _has_bits_[0] |= 0x00008000u;
}
void MytrackerMessage_Cell::clear_has_base_station_id() {
  _has_bits_[0] &= ~0x00008000u;
}
void MytrackerMessage_Cell::clear_base_station_id() {
  base_station_id_ = 0u;
  clear_has_base_station_id();
}
::google::protobuf::uint32 MytrackerMessage_Cell::base_station_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.base_station_id)
  return base_station_id_;
}
void MytrackerMessage_Cell::set_base_station_id(::google::protobuf::uint32 value) {
  set_has_base_station_id();
  base_station_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.base_station_id)
}

// optional int32 cdma_lat = 17;
bool MytrackerMessage_Cell::has_cdma_lat() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void MytrackerMessage_Cell::set_has_cdma_lat() {
  _has_bits_[0] |= 0x00010000u;
}
void MytrackerMessage_Cell::clear_has_cdma_lat() {
  _has_bits_[0] &= ~0x00010000u;
}
void MytrackerMessage_Cell::clear_cdma_lat() {
  cdma_lat_ = 0;
  clear_has_cdma_lat();
}
::google::protobuf::int32 MytrackerMessage_Cell::cdma_lat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lat)
  return cdma_lat_;
}
void MytrackerMessage_Cell::set_cdma_lat(::google::protobuf::int32 value) {
  set_has_cdma_lat();
  cdma_lat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lat)
}

// optional int32 cdma_lon = 18;
bool MytrackerMessage_Cell::has_cdma_lon() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void MytrackerMessage_Cell::set_has_cdma_lon() {
  _has_bits_[0] |= 0x00020000u;
}
void MytrackerMessage_Cell::clear_has_cdma_lon() {
  _has_bits_[0] &= ~0x00020000u;
}
void MytrackerMessage_Cell::clear_cdma_lon() {
  cdma_lon_ = 0;
  clear_has_cdma_lon();
}
::google::protobuf::int32 MytrackerMessage_Cell::cdma_lon() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lon)
  return cdma_lon_;
}
void MytrackerMessage_Cell::set_cdma_lon(::google::protobuf::int32 value) {
  set_has_cdma_lon();
  cdma_lon_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lon)
}

// optional uint32 cdma_level = 19;
bool MytrackerMessage_Cell::has_cdma_level() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void MytrackerMessage_Cell::set_has_cdma_level() {
  _has_bits_[0] |= 0x00040000u;
}
void MytrackerMessage_Cell::clear_has_cdma_level() {
  _has_bits_[0] &= ~0x00040000u;
}
void MytrackerMessage_Cell::clear_cdma_level() {
  cdma_level_ = 0u;
  clear_has_cdma_level();
}
::google::protobuf::uint32 MytrackerMessage_Cell::cdma_level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_level)
  return cdma_level_;
}
void MytrackerMessage_Cell::set_cdma_level(::google::protobuf::uint32 value) {
  set_has_cdma_level();
  cdma_level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_level)
}

// optional uint32 evdo_level = 20;
bool MytrackerMessage_Cell::has_evdo_level() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void MytrackerMessage_Cell::set_has_evdo_level() {
  _has_bits_[0] |= 0x00080000u;
}
void MytrackerMessage_Cell::clear_has_evdo_level() {
  _has_bits_[0] &= ~0x00080000u;
}
void MytrackerMessage_Cell::clear_evdo_level() {
  evdo_level_ = 0u;
  clear_has_evdo_level();
}
::google::protobuf::uint32 MytrackerMessage_Cell::evdo_level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_level)
  return evdo_level_;
}
void MytrackerMessage_Cell::set_evdo_level(::google::protobuf::uint32 value) {
  set_has_evdo_level();
  evdo_level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_level)
}

// optional int32 cdma_dbm = 21;
bool MytrackerMessage_Cell::has_cdma_dbm() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void MytrackerMessage_Cell::set_has_cdma_dbm() {
  _has_bits_[0] |= 0x00100000u;
}
void MytrackerMessage_Cell::clear_has_cdma_dbm() {
  _has_bits_[0] &= ~0x00100000u;
}
void MytrackerMessage_Cell::clear_cdma_dbm() {
  cdma_dbm_ = 0;
  clear_has_cdma_dbm();
}
::google::protobuf::int32 MytrackerMessage_Cell::cdma_dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_dbm)
  return cdma_dbm_;
}
void MytrackerMessage_Cell::set_cdma_dbm(::google::protobuf::int32 value) {
  set_has_cdma_dbm();
  cdma_dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_dbm)
}

// optional int32 evdo_dbm = 22;
bool MytrackerMessage_Cell::has_evdo_dbm() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void MytrackerMessage_Cell::set_has_evdo_dbm() {
  _has_bits_[0] |= 0x00200000u;
}
void MytrackerMessage_Cell::clear_has_evdo_dbm() {
  _has_bits_[0] &= ~0x00200000u;
}
void MytrackerMessage_Cell::clear_evdo_dbm() {
  evdo_dbm_ = 0;
  clear_has_evdo_dbm();
}
::google::protobuf::int32 MytrackerMessage_Cell::evdo_dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_dbm)
  return evdo_dbm_;
}
void MytrackerMessage_Cell::set_evdo_dbm(::google::protobuf::int32 value) {
  set_has_evdo_dbm();
  evdo_dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_dbm)
}

// optional uint32 evdo_ecio = 23;
bool MytrackerMessage_Cell::has_evdo_ecio() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void MytrackerMessage_Cell::set_has_evdo_ecio() {
  _has_bits_[0] |= 0x00400000u;
}
void MytrackerMessage_Cell::clear_has_evdo_ecio() {
  _has_bits_[0] &= ~0x00400000u;
}
void MytrackerMessage_Cell::clear_evdo_ecio() {
  evdo_ecio_ = 0u;
  clear_has_evdo_ecio();
}
::google::protobuf::uint32 MytrackerMessage_Cell::evdo_ecio() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_ecio)
  return evdo_ecio_;
}
void MytrackerMessage_Cell::set_evdo_ecio(::google::protobuf::uint32 value) {
  set_has_evdo_ecio();
  evdo_ecio_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_ecio)
}

// optional uint32 cdma_ecio = 24;
bool MytrackerMessage_Cell::has_cdma_ecio() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void MytrackerMessage_Cell::set_has_cdma_ecio() {
  _has_bits_[0] |= 0x00800000u;
}
void MytrackerMessage_Cell::clear_has_cdma_ecio() {
  _has_bits_[0] &= ~0x00800000u;
}
void MytrackerMessage_Cell::clear_cdma_ecio() {
  cdma_ecio_ = 0u;
  clear_has_cdma_ecio();
}
::google::protobuf::uint32 MytrackerMessage_Cell::cdma_ecio() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_ecio)
  return cdma_ecio_;
}
void MytrackerMessage_Cell::set_cdma_ecio(::google::protobuf::uint32 value) {
  set_has_cdma_ecio();
  cdma_ecio_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_ecio)
}

// optional uint32 evdo_snr = 25;
bool MytrackerMessage_Cell::has_evdo_snr() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void MytrackerMessage_Cell::set_has_evdo_snr() {
  _has_bits_[0] |= 0x01000000u;
}
void MytrackerMessage_Cell::clear_has_evdo_snr() {
  _has_bits_[0] &= ~0x01000000u;
}
void MytrackerMessage_Cell::clear_evdo_snr() {
  evdo_snr_ = 0u;
  clear_has_evdo_snr();
}
::google::protobuf::uint32 MytrackerMessage_Cell::evdo_snr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_snr)
  return evdo_snr_;
}
void MytrackerMessage_Cell::set_evdo_snr(::google::protobuf::uint32 value) {
  set_has_evdo_snr();
  evdo_snr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_snr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MytrackerMessage::kMytrackerVersionFieldNumber;
const int MytrackerMessage::kMobileAppPkFieldNumber;
const int MytrackerMessage::kEventsFieldNumber;
const int MytrackerMessage::kBannerFieldNumber;
const int MytrackerMessage::kAppsFieldNumber;
const int MytrackerMessage::kSrcIpChainFieldNumber;
const int MytrackerMessage::kTimestampFieldNumber;
const int MytrackerMessage::kAppIdFieldNumber;
const int MytrackerMessage::kTimestampBaseFieldNumber;
const int MytrackerMessage::kUserIpFieldNumber;
const int MytrackerMessage::kUserIpv6FieldNumber;
const int MytrackerMessage::kRemoteAddrFieldNumber;
const int MytrackerMessage::kXForwardedForFieldNumber;
const int MytrackerMessage::kGeoFieldNumber;
const int MytrackerMessage::kHacksFieldNumber;
const int MytrackerMessage::kTrackerV1FieldNumber;
const int MytrackerMessage::kTimestampSendFieldNumber;
const int MytrackerMessage::kCustomEventsSkippedFieldNumber;
const int MytrackerMessage::kRandomFieldNumber;
const int MytrackerMessage::kAppVersionFieldNumber;
const int MytrackerMessage::kAppBuildFieldNumber;
const int MytrackerMessage::kAppLanguageFieldNumber;
const int MytrackerMessage::kAppBundleFieldNumber;
const int MytrackerMessage::kMrgsAppIdFieldNumber;
const int MytrackerMessage::kGenderFieldNumber;
const int MytrackerMessage::kAgeFieldNumber;
const int MytrackerMessage::kMrgsUserIdFieldNumber;
const int MytrackerMessage::kOkIdFieldNumber;
const int MytrackerMessage::kVkIdFieldNumber;
const int MytrackerMessage::kEmailFieldNumber;
const int MytrackerMessage::kIcqIdFieldNumber;
const int MytrackerMessage::kCustomUserIdFieldNumber;
const int MytrackerMessage::kPhoneFieldNumber;
const int MytrackerMessage::kIdfaFieldNumber;
const int MytrackerMessage::kAdvertisingIdFieldNumber;
const int MytrackerMessage::kAndroidIdFieldNumber;
const int MytrackerMessage::kAndroidDeviceIdFieldNumber;
const int MytrackerMessage::kWaidFieldNumber;
const int MytrackerMessage::kWnaIdFieldNumber;
const int MytrackerMessage::kMnaIdFieldNumber;
const int MytrackerMessage::kMrgsDeviceIdFieldNumber;
const int MytrackerMessage::kMacFieldNumber;
const int MytrackerMessage::kOpenUdidFieldNumber;
const int MytrackerMessage::kIosVendorIdFieldNumber;
const int MytrackerMessage::kIosVendorIdCachedFieldNumber;
const int MytrackerMessage::kMidFieldNumber;
const int MytrackerMessage::kAdvertisingTrackingEnabledFieldNumber;
const int MytrackerMessage::kDeviceFieldNumber;
const int MytrackerMessage::kEunameFieldNumber;
const int MytrackerMessage::kManufactureFieldNumber;
const int MytrackerMessage::kOsFieldNumber;
const int MytrackerMessage::kOsVerFieldNumber;
const int MytrackerMessage::kOsLangFieldNumber;
const int MytrackerMessage::kTimezoneFieldNumber;
const int MytrackerMessage::kScreenWidthFieldNumber;
const int MytrackerMessage::kScreenHeightFieldNumber;
const int MytrackerMessage::kDpiFieldNumber;
const int MytrackerMessage::kXdpiFieldNumber;
const int MytrackerMessage::kYdpiFieldNumber;
const int MytrackerMessage::kSimLocFieldNumber;
const int MytrackerMessage::kOperatorIdFieldNumber;
const int MytrackerMessage::kOperatorNameFieldNumber;
const int MytrackerMessage::kSimOperatorIdFieldNumber;
const int MytrackerMessage::kSimLocStrFieldNumber;
const int MytrackerMessage::kOperatorIdStrFieldNumber;
const int MytrackerMessage::kSimOperatorIdStrFieldNumber;
const int MytrackerMessage::kConnectionFieldNumber;
const int MytrackerMessage::kConnectionTypeFieldNumber;
const int MytrackerMessage::kBluetoothEnabledFieldNumber;
const int MytrackerMessage::kLatFieldNumber;
const int MytrackerMessage::kLonFieldNumber;
const int MytrackerMessage::kSpeedFieldNumber;
const int MytrackerMessage::kLocationAccuracyFieldNumber;
const int MytrackerMessage::kLocationTimestampFieldNumber;
const int MytrackerMessage::kLocationProviderFieldNumber;
const int MytrackerMessage::kWifiFieldNumber;
const int MytrackerMessage::kWifiAroundFieldNumber;
const int MytrackerMessage::kCellFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MytrackerMessage::MytrackerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mytracker_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.rb.MytrackerMessage)
}
MytrackerMessage::MytrackerMessage(const MytrackerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      events_(from.events_),
      apps_(from.apps_),
      src_ip_chain_(from.src_ip_chain_),
      ok_id_(from.ok_id_),
      vk_id_(from.vk_id_),
      email_(from.email_),
      icq_id_(from.icq_id_),
      custom_user_id_(from.custom_user_id_),
      wifi_around_(from.wifi_around_),
      cell_(from.cell_),
      phone_(from.phone_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mytracker_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mytracker_version()) {
    mytracker_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mytracker_version_);
  }
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_id()) {
    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  user_ipv6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_ipv6()) {
    user_ipv6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_ipv6_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_version()) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  app_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_build()) {
    app_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_build_);
  }
  app_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_language()) {
    app_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_language_);
  }
  app_bundle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_bundle()) {
    app_bundle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_bundle_);
  }
  mrgs_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mrgs_user_id()) {
    mrgs_user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrgs_user_id_);
  }
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idfa()) {
    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  advertising_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_advertising_id()) {
    advertising_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertising_id_);
  }
  android_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_android_id()) {
    android_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_id_);
  }
  android_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_android_device_id()) {
    android_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_device_id_);
  }
  mrgs_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mrgs_device_id()) {
    mrgs_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrgs_device_id_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device()) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  euname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_euname()) {
    euname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.euname_);
  }
  manufacture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manufacture()) {
    manufacture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacture_);
  }
  os_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_ver()) {
    os_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_ver_);
  }
  os_lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_lang()) {
    os_lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_lang_);
  }
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timezone()) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  sim_loc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sim_loc()) {
    sim_loc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_loc_);
  }
  operator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_operator_name()) {
    operator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator_name_);
  }
  waid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_waid()) {
    waid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waid_);
  }
  connection_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_connection_type()) {
    connection_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_type_);
  }
  open_udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_open_udid()) {
    open_udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_udid_);
  }
  ios_vendor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ios_vendor_id()) {
    ios_vendor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_vendor_id_);
  }
  wna_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_wna_id()) {
    wna_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wna_id_);
  }
  mna_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mna_id()) {
    mna_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mna_id_);
  }
  ios_vendor_id_cached_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ios_vendor_id_cached()) {
    ios_vendor_id_cached_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_vendor_id_cached_);
  }
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mac()) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  sim_loc_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sim_loc_str()) {
    sim_loc_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_loc_str_);
  }
  operator_id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_operator_id_str()) {
    operator_id_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator_id_str_);
  }
  sim_operator_id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sim_operator_id_str()) {
    sim_operator_id_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_operator_id_str_);
  }
  if (from.has_wifi()) {
    wifi_ = new ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi(*from.wifi_);
  } else {
    wifi_ = NULL;
  }
  ::memcpy(&mobile_app_pk_, &from.mobile_app_pk_,
    static_cast<size_t>(reinterpret_cast<char*>(&random_) -
    reinterpret_cast<char*>(&mobile_app_pk_)) + sizeof(random_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.rb.MytrackerMessage)
}

void MytrackerMessage::SharedCtor() {
  _cached_size_ = 0;
  mytracker_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ipv6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_bundle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrgs_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertising_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrgs_device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  euname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_loc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connection_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_udid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_vendor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wna_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mna_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_vendor_id_cached_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_loc_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator_id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_operator_id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&wifi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_) -
      reinterpret_cast<char*>(&wifi_)) + sizeof(random_));
}

MytrackerMessage::~MytrackerMessage() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.rb.MytrackerMessage)
  SharedDtor();
}

void MytrackerMessage::SharedDtor() {
  mytracker_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ipv6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_bundle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrgs_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertising_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrgs_device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  euname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_loc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connection_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_udid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_vendor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wna_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mna_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_vendor_id_cached_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_loc_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator_id_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sim_operator_id_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete wifi_;
}

void MytrackerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MytrackerMessage::descriptor() {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MytrackerMessage& MytrackerMessage::default_instance() {
  protobuf_mytracker_2eproto::InitDefaults();
  return *internal_default_instance();
}

MytrackerMessage* MytrackerMessage::New(::google::protobuf::Arena* arena) const {
  MytrackerMessage* n = new MytrackerMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MytrackerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.rb.MytrackerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  apps_.Clear();
  src_ip_chain_.Clear();
  ok_id_.Clear();
  vk_id_.Clear();
  email_.Clear();
  icq_id_.Clear();
  custom_user_id_.Clear();
  wifi_around_.Clear();
  cell_.Clear();
  phone_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!mytracker_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mytracker_version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!app_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!user_ipv6_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_ipv6_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!app_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!app_build_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_build_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!app_language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_language_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!app_bundle_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*app_bundle_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!mrgs_user_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mrgs_user_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!idfa_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*idfa_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!advertising_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*advertising_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(!android_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*android_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(!android_device_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*android_device_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(!mrgs_device_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mrgs_device_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(!device_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*device_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(!euname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*euname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(!manufacture_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*manufacture_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(!os_ver_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*os_ver_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(!os_lang_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*os_lang_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(!timezone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*timezone_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(!sim_loc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sim_loc_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(!operator_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*operator_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(!waid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*waid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(!connection_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*connection_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(!open_udid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*open_udid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(!ios_vendor_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ios_vendor_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(!wna_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*wna_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(!mna_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mna_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(!ios_vendor_id_cached_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ios_vendor_id_cached_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(!mac_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mac_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(!sim_loc_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sim_loc_str_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(!operator_id_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*operator_id_str_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(!sim_operator_id_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sim_operator_id_str_.UnsafeRawStringPointer())->clear();
    }
  }
  if (has_wifi()) {
    GOOGLE_DCHECK(wifi_ != NULL);
    wifi_->::ru::mail::go::webbase::rb::MytrackerMessage_Wifi::Clear();
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 254u) {
    ::memset(&mobile_app_pk_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gender_) -
        reinterpret_cast<char*>(&mobile_app_pk_)) + sizeof(gender_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&age_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&connection_) -
        reinterpret_cast<char*>(&age_)) + sizeof(connection_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&location_provider_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&geo_) -
        reinterpret_cast<char*>(&location_provider_)) + sizeof(geo_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&hacks_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&xdpi_) -
        reinterpret_cast<char*>(&hacks_)) + sizeof(xdpi_));
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 7u) {
    ::memset(&ydpi_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&random_) -
        reinterpret_cast<char*>(&ydpi_)) + sizeof(random_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MytrackerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.rb.MytrackerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes mytracker_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mytracker_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mobile_app_pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mobile_app_pk();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobile_app_pk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 banner = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_banner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 src_ip_chain = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 117u, input, this->mutable_src_ip_chain())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_src_ip_chain())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp_base = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_timestamp_base();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_base_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 user_ip = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {
          set_has_user_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes user_ipv6 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_ipv6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_version = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_build = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_language = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes app_bundle = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_bundle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mrgs_app_id = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_mrgs_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrgs_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gender = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_gender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 age = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mrgs_user_id = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mrgs_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ok_id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 264u, input, this->mutable_ok_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ok_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 vk_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 272u, input, this->mutable_vk_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vk_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes email = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 icq_id = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 288u, input, this->mutable_icq_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_icq_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes custom_user_id = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_custom_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes idfa = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_idfa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes advertising_id = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_advertising_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes android_id = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_android_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes android_device_id = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_android_device_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mrgs_device_id = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mrgs_device_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 advertising_tracking_enabled = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_advertising_tracking_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advertising_tracking_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes device = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes euname = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_euname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes manufacture = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manufacture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 os = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          set_has_os();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &os_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes os_ver = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_os_ver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes os_lang = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_os_lang()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes timezone = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_timezone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 screen_width = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {
          set_has_screen_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 screen_height = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          set_has_screen_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sim_loc = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sim_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 operator_id = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {
          set_has_operator_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operator_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes operator_name = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_operator_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sim_operator_id = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 504 & 0xFF */)) {
          set_has_sim_operator_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sim_operator_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 connection = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 512 & 0xFF */)) {
          set_has_connection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lat = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 561 & 0xFF */)) {
          set_has_lat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lon = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 569 & 0xFF */)) {
          set_has_lon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 location_provider = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 576 & 0xFF */)) {
          set_has_location_provider();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_provider_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bluetooth_enabled = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {
          set_has_bluetooth_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bluetooth_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes waid = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_waid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double location_accuracy = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 601 & 0xFF */)) {
          set_has_location_accuracy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &location_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 location_timestamp = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {
          set_has_location_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double speed = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 617 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes connection_type = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_connection_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 geo = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 640 & 0xFF */)) {
          set_has_geo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hacks = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 648 & 0xFF */)) {
          set_has_hacks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hacks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp_send = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 661 & 0xFF */)) {
          set_has_timestamp_send();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_send_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remote_addr = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 664 & 0xFF */)) {
          set_has_remote_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x_forwarded_for = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 672 & 0xFF */)) {
          set_has_x_forwarded_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_forwarded_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes open_udid = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_open_udid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ios_vendor_id = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_vendor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mid = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 696 & 0xFF */)) {
          set_has_mid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool tracker_v1 = 88;
      case 88: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 704 & 0xFF */)) {
          set_has_tracker_v1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tracker_v1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes wna_id = 89;
      case 89: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wna_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wifi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wifi_around()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mna_id = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mna_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 dpi = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 752 & 0xFF */)) {
          set_has_dpi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ios_vendor_id_cached = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_vendor_id_cached()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mac = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xdpi = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 776 & 0xFF */)) {
          set_has_xdpi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xdpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ydpi = 98;
      case 98: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 784 & 0xFF */)) {
          set_has_ydpi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ydpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sim_loc_str = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sim_loc_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes operator_id_str = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_operator_id_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sim_operator_id_str = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sim_operator_id_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes phone = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_phone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 custom_events_skipped = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 824 & 0xFF */)) {
          set_has_custom_events_skipped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &custom_events_skipped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 random = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 832 & 0xFF */)) {
          set_has_random();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.rb.MytrackerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.rb.MytrackerMessage)
  return false;
#undef DO_
}

void MytrackerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.rb.MytrackerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes mytracker_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->mytracker_version(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mobile_app_pk = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mobile_app_pk(), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->events(static_cast<int>(i)), output);
  }

  // optional uint32 banner = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->banner(), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->apps(static_cast<int>(i)), output);
  }

  // repeated fixed32 src_ip_chain = 14;
  for (int i = 0, n = this->src_ip_chain_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      14, this->src_ip_chain(i), output);
  }

  // optional fixed32 timestamp = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(15, this->timestamp(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes app_id = 16;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->app_id(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 timestamp_base = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->timestamp_base(), output);
  }

  // optional fixed32 user_ip = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(18, this->user_ip(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes user_ipv6 = 19;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->user_ipv6(), output);
  }

  // optional bytes app_version = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->app_version(), output);
  }

  // optional bytes app_build = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      21, this->app_build(), output);
  }

  // optional bytes app_language = 22;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->app_language(), output);
  }

  // optional bytes app_bundle = 23;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->app_bundle(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mrgs_app_id = 24;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->mrgs_app_id(), output);
  }

  // optional uint32 gender = 30;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->gender(), output);
  }

  // optional uint32 age = 31;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->age(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes mrgs_user_id = 32;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->mrgs_user_id(), output);
  }

  // repeated int64 ok_id = 33;
  for (int i = 0, n = this->ok_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      33, this->ok_id(i), output);
  }

  // repeated uint32 vk_id = 34;
  for (int i = 0, n = this->vk_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      34, this->vk_id(i), output);
  }

  // repeated bytes email = 35;
  for (int i = 0, n = this->email_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      35, this->email(i), output);
  }

  // repeated uint32 icq_id = 36;
  for (int i = 0, n = this->icq_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      36, this->icq_id(i), output);
  }

  // repeated bytes custom_user_id = 37;
  for (int i = 0, n = this->custom_user_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      37, this->custom_user_id(i), output);
  }

  // optional bytes idfa = 40;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->idfa(), output);
  }

  // optional bytes advertising_id = 41;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      41, this->advertising_id(), output);
  }

  // optional bytes android_id = 42;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      42, this->android_id(), output);
  }

  // optional bytes android_device_id = 43;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      43, this->android_device_id(), output);
  }

  // optional bytes mrgs_device_id = 44;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      44, this->mrgs_device_id(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 advertising_tracking_enabled = 45;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->advertising_tracking_enabled(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes device = 46;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      46, this->device(), output);
  }

  // optional bytes euname = 47;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      47, this->euname(), output);
  }

  // optional bytes manufacture = 48;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      48, this->manufacture(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 os = 49;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->os(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes os_ver = 50;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->os_ver(), output);
  }

  // optional bytes os_lang = 51;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->os_lang(), output);
  }

  // optional bytes timezone = 52;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      52, this->timezone(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 screen_width = 53;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(53, this->screen_width(), output);
  }

  // optional uint32 screen_height = 54;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->screen_height(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes sim_loc = 60;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->sim_loc(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 operator_id = 61;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->operator_id(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes operator_name = 62;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      62, this->operator_name(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 sim_operator_id = 63;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(63, this->sim_operator_id(), output);
  }

  // optional uint32 connection = 64;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(64, this->connection(), output);
  }

  // optional double lat = 70;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(70, this->lat(), output);
  }

  // optional double lon = 71;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(71, this->lon(), output);
  }

  // optional uint32 location_provider = 72;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(72, this->location_provider(), output);
  }

  // optional uint32 bluetooth_enabled = 73;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(73, this->bluetooth_enabled(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes waid = 74;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      74, this->waid(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional double location_accuracy = 75;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(75, this->location_accuracy(), output);
  }

  // optional uint32 location_timestamp = 76;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(76, this->location_timestamp(), output);
  }

  // optional double speed = 77;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(77, this->speed(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes connection_type = 78;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      78, this->connection_type(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 geo = 80;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(80, this->geo(), output);
  }

  // optional uint32 hacks = 81;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(81, this->hacks(), output);
  }

  // optional fixed32 timestamp_send = 82;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(82, this->timestamp_send(), output);
  }

  // optional uint32 remote_addr = 83;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(83, this->remote_addr(), output);
  }

  // optional uint32 x_forwarded_for = 84;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(84, this->x_forwarded_for(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes open_udid = 85;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      85, this->open_udid(), output);
  }

  // optional bytes ios_vendor_id = 86;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      86, this->ios_vendor_id(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mid = 87;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(87, this->mid(), output);
  }

  // optional bool tracker_v1 = 88;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(88, this->tracker_v1(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes wna_id = 89;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      89, this->wna_id(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, *this->wifi_, output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wifi_around_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91, this->wifi_around(static_cast<int>(i)), output);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cell_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92, this->cell(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes mna_id = 93;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      93, this->mna_id(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 dpi = 94;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(94, this->dpi(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes ios_vendor_id_cached = 95;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      95, this->ios_vendor_id_cached(), output);
  }

  // optional bytes mac = 96;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      96, this->mac(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 xdpi = 97;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(97, this->xdpi(), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional uint32 ydpi = 98;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(98, this->ydpi(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes sim_loc_str = 99;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      99, this->sim_loc_str(), output);
  }

  // optional bytes operator_id_str = 100;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      100, this->operator_id_str(), output);
  }

  // optional bytes sim_operator_id_str = 101;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      101, this->sim_operator_id_str(), output);
  }

  // repeated bytes phone = 102;
  for (int i = 0, n = this->phone_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      102, this->phone(i), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional uint32 custom_events_skipped = 103;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(103, this->custom_events_skipped(), output);
  }

  // optional uint32 random = 104;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(104, this->random(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.rb.MytrackerMessage)
}

::google::protobuf::uint8* MytrackerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.rb.MytrackerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes mytracker_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->mytracker_version(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mobile_app_pk = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mobile_app_pk(), target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->events(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 banner = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->banner(), target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->apps(static_cast<int>(i)), deterministic, target);
  }

  // repeated fixed32 src_ip_chain = 14;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(14, this->src_ip_chain_, target);

  // optional fixed32 timestamp = 15;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(15, this->timestamp(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes app_id = 16;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->app_id(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 timestamp_base = 17;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->timestamp_base(), target);
  }

  // optional fixed32 user_ip = 18;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(18, this->user_ip(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes user_ipv6 = 19;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->user_ipv6(), target);
  }

  // optional bytes app_version = 20;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->app_version(), target);
  }

  // optional bytes app_build = 21;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        21, this->app_build(), target);
  }

  // optional bytes app_language = 22;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->app_language(), target);
  }

  // optional bytes app_bundle = 23;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->app_bundle(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mrgs_app_id = 24;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->mrgs_app_id(), target);
  }

  // optional uint32 gender = 30;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->gender(), target);
  }

  // optional uint32 age = 31;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->age(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes mrgs_user_id = 32;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->mrgs_user_id(), target);
  }

  // repeated int64 ok_id = 33;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(33, this->ok_id_, target);

  // repeated uint32 vk_id = 34;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(34, this->vk_id_, target);

  // repeated bytes email = 35;
  for (int i = 0, n = this->email_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(35, this->email(i), target);
  }

  // repeated uint32 icq_id = 36;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(36, this->icq_id_, target);

  // repeated bytes custom_user_id = 37;
  for (int i = 0, n = this->custom_user_id_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(37, this->custom_user_id(i), target);
  }

  // optional bytes idfa = 40;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->idfa(), target);
  }

  // optional bytes advertising_id = 41;
  if (cached_has_bits & 0x00000200u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        41, this->advertising_id(), target);
  }

  // optional bytes android_id = 42;
  if (cached_has_bits & 0x00000400u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        42, this->android_id(), target);
  }

  // optional bytes android_device_id = 43;
  if (cached_has_bits & 0x00000800u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        43, this->android_device_id(), target);
  }

  // optional bytes mrgs_device_id = 44;
  if (cached_has_bits & 0x00001000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        44, this->mrgs_device_id(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 advertising_tracking_enabled = 45;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->advertising_tracking_enabled(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes device = 46;
  if (cached_has_bits & 0x00002000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        46, this->device(), target);
  }

  // optional bytes euname = 47;
  if (cached_has_bits & 0x00004000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        47, this->euname(), target);
  }

  // optional bytes manufacture = 48;
  if (cached_has_bits & 0x00008000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        48, this->manufacture(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 os = 49;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->os(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes os_ver = 50;
  if (cached_has_bits & 0x00010000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->os_ver(), target);
  }

  // optional bytes os_lang = 51;
  if (cached_has_bits & 0x00020000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->os_lang(), target);
  }

  // optional bytes timezone = 52;
  if (cached_has_bits & 0x00040000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        52, this->timezone(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 screen_width = 53;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(53, this->screen_width(), target);
  }

  // optional uint32 screen_height = 54;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->screen_height(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes sim_loc = 60;
  if (cached_has_bits & 0x00080000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->sim_loc(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 operator_id = 61;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->operator_id(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes operator_name = 62;
  if (cached_has_bits & 0x00100000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        62, this->operator_name(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 sim_operator_id = 63;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(63, this->sim_operator_id(), target);
  }

  // optional uint32 connection = 64;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(64, this->connection(), target);
  }

  // optional double lat = 70;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(70, this->lat(), target);
  }

  // optional double lon = 71;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(71, this->lon(), target);
  }

  // optional uint32 location_provider = 72;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(72, this->location_provider(), target);
  }

  // optional uint32 bluetooth_enabled = 73;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(73, this->bluetooth_enabled(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes waid = 74;
  if (cached_has_bits & 0x00200000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        74, this->waid(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional double location_accuracy = 75;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(75, this->location_accuracy(), target);
  }

  // optional uint32 location_timestamp = 76;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(76, this->location_timestamp(), target);
  }

  // optional double speed = 77;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(77, this->speed(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes connection_type = 78;
  if (cached_has_bits & 0x00400000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        78, this->connection_type(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 geo = 80;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(80, this->geo(), target);
  }

  // optional uint32 hacks = 81;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(81, this->hacks(), target);
  }

  // optional fixed32 timestamp_send = 82;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(82, this->timestamp_send(), target);
  }

  // optional uint32 remote_addr = 83;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(83, this->remote_addr(), target);
  }

  // optional uint32 x_forwarded_for = 84;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(84, this->x_forwarded_for(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes open_udid = 85;
  if (cached_has_bits & 0x00800000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        85, this->open_udid(), target);
  }

  // optional bytes ios_vendor_id = 86;
  if (cached_has_bits & 0x01000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        86, this->ios_vendor_id(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mid = 87;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(87, this->mid(), target);
  }

  // optional bool tracker_v1 = 88;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(88, this->tracker_v1(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes wna_id = 89;
  if (cached_has_bits & 0x02000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        89, this->wna_id(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        90, *this->wifi_, deterministic, target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wifi_around_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        91, this->wifi_around(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cell_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        92, this->cell(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes mna_id = 93;
  if (cached_has_bits & 0x04000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        93, this->mna_id(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 dpi = 94;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(94, this->dpi(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes ios_vendor_id_cached = 95;
  if (cached_has_bits & 0x08000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        95, this->ios_vendor_id_cached(), target);
  }

  // optional bytes mac = 96;
  if (cached_has_bits & 0x10000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        96, this->mac(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 xdpi = 97;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(97, this->xdpi(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional uint32 ydpi = 98;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(98, this->ydpi(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes sim_loc_str = 99;
  if (cached_has_bits & 0x20000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        99, this->sim_loc_str(), target);
  }

  // optional bytes operator_id_str = 100;
  if (cached_has_bits & 0x40000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        100, this->operator_id_str(), target);
  }

  // optional bytes sim_operator_id_str = 101;
  if (cached_has_bits & 0x80000000u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        101, this->sim_operator_id_str(), target);
  }

  // repeated bytes phone = 102;
  for (int i = 0, n = this->phone_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(102, this->phone(i), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional uint32 custom_events_skipped = 103;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(103, this->custom_events_skipped(), target);
  }

  // optional uint32 random = 104;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(104, this->random(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.rb.MytrackerMessage)
  return target;
}

size_t MytrackerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.rb.MytrackerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->apps(static_cast<int>(i)));
    }
  }

  // repeated fixed32 src_ip_chain = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->src_ip_chain_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->src_ip_chain_size());
    total_size += data_size;
  }

  // repeated int64 ok_id = 33;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ok_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->ok_id_size());
    total_size += data_size;
  }

  // repeated uint32 vk_id = 34;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->vk_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->vk_id_size());
    total_size += data_size;
  }

  // repeated bytes email = 35;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->email_size());
  for (int i = 0, n = this->email_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->email(i));
  }

  // repeated uint32 icq_id = 36;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->icq_id_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->icq_id_size());
    total_size += data_size;
  }

  // repeated bytes custom_user_id = 37;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->custom_user_id_size());
  for (int i = 0, n = this->custom_user_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->custom_user_id(i));
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
  {
    unsigned int count = static_cast<unsigned int>(this->wifi_around_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wifi_around(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
  {
    unsigned int count = static_cast<unsigned int>(this->cell_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cell(static_cast<int>(i)));
    }
  }

  // repeated bytes phone = 102;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->phone_size());
  for (int i = 0, n = this->phone_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->phone(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes mytracker_version = 1;
    if (has_mytracker_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mytracker_version());
    }

    // optional bytes app_id = 16;
    if (has_app_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_id());
    }

    // optional bytes user_ipv6 = 19;
    if (has_user_ipv6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->user_ipv6());
    }

    // optional bytes app_version = 20;
    if (has_app_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_version());
    }

    // optional bytes app_build = 21;
    if (has_app_build()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_build());
    }

    // optional bytes app_language = 22;
    if (has_app_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_language());
    }

    // optional bytes app_bundle = 23;
    if (has_app_bundle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->app_bundle());
    }

    // optional bytes mrgs_user_id = 32;
    if (has_mrgs_user_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mrgs_user_id());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bytes idfa = 40;
    if (has_idfa()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->idfa());
    }

    // optional bytes advertising_id = 41;
    if (has_advertising_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->advertising_id());
    }

    // optional bytes android_id = 42;
    if (has_android_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->android_id());
    }

    // optional bytes android_device_id = 43;
    if (has_android_device_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->android_device_id());
    }

    // optional bytes mrgs_device_id = 44;
    if (has_mrgs_device_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mrgs_device_id());
    }

    // optional bytes device = 46;
    if (has_device()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->device());
    }

    // optional bytes euname = 47;
    if (has_euname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->euname());
    }

    // optional bytes manufacture = 48;
    if (has_manufacture()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->manufacture());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bytes os_ver = 50;
    if (has_os_ver()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->os_ver());
    }

    // optional bytes os_lang = 51;
    if (has_os_lang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->os_lang());
    }

    // optional bytes timezone = 52;
    if (has_timezone()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->timezone());
    }

    // optional bytes sim_loc = 60;
    if (has_sim_loc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sim_loc());
    }

    // optional bytes operator_name = 62;
    if (has_operator_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->operator_name());
    }

    // optional bytes waid = 74;
    if (has_waid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->waid());
    }

    // optional bytes connection_type = 78;
    if (has_connection_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->connection_type());
    }

    // optional bytes open_udid = 85;
    if (has_open_udid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->open_udid());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional bytes ios_vendor_id = 86;
    if (has_ios_vendor_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ios_vendor_id());
    }

    // optional bytes wna_id = 89;
    if (has_wna_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->wna_id());
    }

    // optional bytes mna_id = 93;
    if (has_mna_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mna_id());
    }

    // optional bytes ios_vendor_id_cached = 95;
    if (has_ios_vendor_id_cached()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ios_vendor_id_cached());
    }

    // optional bytes mac = 96;
    if (has_mac()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mac());
    }

    // optional bytes sim_loc_str = 99;
    if (has_sim_loc_str()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sim_loc_str());
    }

    // optional bytes operator_id_str = 100;
    if (has_operator_id_str()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->operator_id_str());
    }

    // optional bytes sim_operator_id_str = 101;
    if (has_sim_operator_id_str()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sim_operator_id_str());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
    if (has_wifi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->wifi_);
    }

    // optional uint32 mobile_app_pk = 2;
    if (has_mobile_app_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mobile_app_pk());
    }

    // optional uint32 banner = 4;
    if (has_banner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banner());
    }

    // optional fixed32 timestamp = 15;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

    // optional uint32 timestamp_base = 17;
    if (has_timestamp_base()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp_base());
    }

    // optional fixed32 user_ip = 18;
    if (has_user_ip()) {
      total_size += 2 + 4;
    }

    // optional uint32 mrgs_app_id = 24;
    if (has_mrgs_app_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mrgs_app_id());
    }

    // optional uint32 gender = 30;
    if (has_gender()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gender());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional uint32 age = 31;
    if (has_age()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

    // optional int32 advertising_tracking_enabled = 45;
    if (has_advertising_tracking_enabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advertising_tracking_enabled());
    }

    // optional uint32 os = 49;
    if (has_os()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->os());
    }

    // optional uint32 screen_width = 53;
    if (has_screen_width()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->screen_width());
    }

    // optional uint32 screen_height = 54;
    if (has_screen_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->screen_height());
    }

    // optional uint32 operator_id = 61;
    if (has_operator_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operator_id());
    }

    // optional uint32 sim_operator_id = 63;
    if (has_sim_operator_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sim_operator_id());
    }

    // optional uint32 connection = 64;
    if (has_connection()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connection());
    }

  }
  if (_has_bits_[48 / 32] & 16711680u) {
    // optional uint32 location_provider = 72;
    if (has_location_provider()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location_provider());
    }

    // optional double lat = 70;
    if (has_lat()) {
      total_size += 2 + 8;
    }

    // optional double lon = 71;
    if (has_lon()) {
      total_size += 2 + 8;
    }

    // optional uint32 bluetooth_enabled = 73;
    if (has_bluetooth_enabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bluetooth_enabled());
    }

    // optional uint32 location_timestamp = 76;
    if (has_location_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location_timestamp());
    }

    // optional double location_accuracy = 75;
    if (has_location_accuracy()) {
      total_size += 2 + 8;
    }

    // optional double speed = 77;
    if (has_speed()) {
      total_size += 2 + 8;
    }

    // optional uint32 geo = 80;
    if (has_geo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geo());
    }

  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    // optional uint32 hacks = 81;
    if (has_hacks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hacks());
    }

    // optional fixed32 timestamp_send = 82;
    if (has_timestamp_send()) {
      total_size += 2 + 4;
    }

    // optional uint32 remote_addr = 83;
    if (has_remote_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remote_addr());
    }

    // optional uint32 x_forwarded_for = 84;
    if (has_x_forwarded_for()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_forwarded_for());
    }

    // optional uint32 mid = 87;
    if (has_mid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mid());
    }

    // optional bool tracker_v1 = 88;
    if (has_tracker_v1()) {
      total_size += 2 + 1;
    }

    // optional uint32 dpi = 94;
    if (has_dpi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dpi());
    }

    // optional uint32 xdpi = 97;
    if (has_xdpi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xdpi());
    }

  }
  if (_has_bits_[64 / 32] & 7u) {
    // optional uint32 ydpi = 98;
    if (has_ydpi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ydpi());
    }

    // optional uint32 custom_events_skipped = 103;
    if (has_custom_events_skipped()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->custom_events_skipped());
    }

    // optional uint32 random = 104;
    if (has_random()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->random());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MytrackerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MytrackerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MytrackerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.rb.MytrackerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.rb.MytrackerMessage)
    MergeFrom(*source);
  }
}

void MytrackerMessage::MergeFrom(const MytrackerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.rb.MytrackerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  apps_.MergeFrom(from.apps_);
  src_ip_chain_.MergeFrom(from.src_ip_chain_);
  ok_id_.MergeFrom(from.ok_id_);
  vk_id_.MergeFrom(from.vk_id_);
  email_.MergeFrom(from.email_);
  icq_id_.MergeFrom(from.icq_id_);
  custom_user_id_.MergeFrom(from.custom_user_id_);
  wifi_around_.MergeFrom(from.wifi_around_);
  cell_.MergeFrom(from.cell_);
  phone_.MergeFrom(from.phone_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mytracker_version();
      mytracker_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mytracker_version_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_app_id();
      app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_user_ipv6();
      user_ipv6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_ipv6_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_app_version();
      app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_app_build();
      app_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_build_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_app_language();
      app_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_language_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_app_bundle();
      app_bundle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_bundle_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_mrgs_user_id();
      mrgs_user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrgs_user_id_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_idfa();
      idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_advertising_id();
      advertising_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertising_id_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_android_id();
      android_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_id_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_android_device_id();
      android_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_device_id_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_mrgs_device_id();
      mrgs_device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrgs_device_id_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_device();
      device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_euname();
      euname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.euname_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_manufacture();
      manufacture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacture_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_os_ver();
      os_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_ver_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_os_lang();
      os_lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_lang_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_timezone();
      timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
    }
    if (cached_has_bits & 0x00080000u) {
      set_has_sim_loc();
      sim_loc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_loc_);
    }
    if (cached_has_bits & 0x00100000u) {
      set_has_operator_name();
      operator_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator_name_);
    }
    if (cached_has_bits & 0x00200000u) {
      set_has_waid();
      waid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waid_);
    }
    if (cached_has_bits & 0x00400000u) {
      set_has_connection_type();
      connection_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_type_);
    }
    if (cached_has_bits & 0x00800000u) {
      set_has_open_udid();
      open_udid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_udid_);
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      set_has_ios_vendor_id();
      ios_vendor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_vendor_id_);
    }
    if (cached_has_bits & 0x02000000u) {
      set_has_wna_id();
      wna_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wna_id_);
    }
    if (cached_has_bits & 0x04000000u) {
      set_has_mna_id();
      mna_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mna_id_);
    }
    if (cached_has_bits & 0x08000000u) {
      set_has_ios_vendor_id_cached();
      ios_vendor_id_cached_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_vendor_id_cached_);
    }
    if (cached_has_bits & 0x10000000u) {
      set_has_mac();
      mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
    }
    if (cached_has_bits & 0x20000000u) {
      set_has_sim_loc_str();
      sim_loc_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_loc_str_);
    }
    if (cached_has_bits & 0x40000000u) {
      set_has_operator_id_str();
      operator_id_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator_id_str_);
    }
    if (cached_has_bits & 0x80000000u) {
      set_has_sim_operator_id_str();
      sim_operator_id_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sim_operator_id_str_);
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_wifi()->::ru::mail::go::webbase::rb::MytrackerMessage_Wifi::MergeFrom(from.wifi());
    }
    if (cached_has_bits & 0x00000002u) {
      mobile_app_pk_ = from.mobile_app_pk_;
    }
    if (cached_has_bits & 0x00000004u) {
      banner_ = from.banner_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_base_ = from.timestamp_base_;
    }
    if (cached_has_bits & 0x00000020u) {
      user_ip_ = from.user_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      mrgs_app_id_ = from.mrgs_app_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      gender_ = from.gender_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x00000200u) {
      advertising_tracking_enabled_ = from.advertising_tracking_enabled_;
    }
    if (cached_has_bits & 0x00000400u) {
      os_ = from.os_;
    }
    if (cached_has_bits & 0x00000800u) {
      screen_width_ = from.screen_width_;
    }
    if (cached_has_bits & 0x00001000u) {
      screen_height_ = from.screen_height_;
    }
    if (cached_has_bits & 0x00002000u) {
      operator_id_ = from.operator_id_;
    }
    if (cached_has_bits & 0x00004000u) {
      sim_operator_id_ = from.sim_operator_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      connection_ = from.connection_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      location_provider_ = from.location_provider_;
    }
    if (cached_has_bits & 0x00020000u) {
      lat_ = from.lat_;
    }
    if (cached_has_bits & 0x00040000u) {
      lon_ = from.lon_;
    }
    if (cached_has_bits & 0x00080000u) {
      bluetooth_enabled_ = from.bluetooth_enabled_;
    }
    if (cached_has_bits & 0x00100000u) {
      location_timestamp_ = from.location_timestamp_;
    }
    if (cached_has_bits & 0x00200000u) {
      location_accuracy_ = from.location_accuracy_;
    }
    if (cached_has_bits & 0x00400000u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00800000u) {
      geo_ = from.geo_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      hacks_ = from.hacks_;
    }
    if (cached_has_bits & 0x02000000u) {
      timestamp_send_ = from.timestamp_send_;
    }
    if (cached_has_bits & 0x04000000u) {
      remote_addr_ = from.remote_addr_;
    }
    if (cached_has_bits & 0x08000000u) {
      x_forwarded_for_ = from.x_forwarded_for_;
    }
    if (cached_has_bits & 0x10000000u) {
      mid_ = from.mid_;
    }
    if (cached_has_bits & 0x20000000u) {
      tracker_v1_ = from.tracker_v1_;
    }
    if (cached_has_bits & 0x40000000u) {
      dpi_ = from.dpi_;
    }
    if (cached_has_bits & 0x80000000u) {
      xdpi_ = from.xdpi_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ydpi_ = from.ydpi_;
    }
    if (cached_has_bits & 0x00000002u) {
      custom_events_skipped_ = from.custom_events_skipped_;
    }
    if (cached_has_bits & 0x00000004u) {
      random_ = from.random_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
}

void MytrackerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MytrackerMessage::CopyFrom(const MytrackerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.rb.MytrackerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MytrackerMessage::IsInitialized() const {
  return true;
}

void MytrackerMessage::Swap(MytrackerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MytrackerMessage::InternalSwap(MytrackerMessage* other) {
  using std::swap;
  events_.InternalSwap(&other->events_);
  apps_.InternalSwap(&other->apps_);
  src_ip_chain_.InternalSwap(&other->src_ip_chain_);
  ok_id_.InternalSwap(&other->ok_id_);
  vk_id_.InternalSwap(&other->vk_id_);
  email_.InternalSwap(&other->email_);
  icq_id_.InternalSwap(&other->icq_id_);
  custom_user_id_.InternalSwap(&other->custom_user_id_);
  wifi_around_.InternalSwap(&other->wifi_around_);
  cell_.InternalSwap(&other->cell_);
  phone_.InternalSwap(&other->phone_);
  mytracker_version_.Swap(&other->mytracker_version_);
  app_id_.Swap(&other->app_id_);
  user_ipv6_.Swap(&other->user_ipv6_);
  app_version_.Swap(&other->app_version_);
  app_build_.Swap(&other->app_build_);
  app_language_.Swap(&other->app_language_);
  app_bundle_.Swap(&other->app_bundle_);
  mrgs_user_id_.Swap(&other->mrgs_user_id_);
  idfa_.Swap(&other->idfa_);
  advertising_id_.Swap(&other->advertising_id_);
  android_id_.Swap(&other->android_id_);
  android_device_id_.Swap(&other->android_device_id_);
  mrgs_device_id_.Swap(&other->mrgs_device_id_);
  device_.Swap(&other->device_);
  euname_.Swap(&other->euname_);
  manufacture_.Swap(&other->manufacture_);
  os_ver_.Swap(&other->os_ver_);
  os_lang_.Swap(&other->os_lang_);
  timezone_.Swap(&other->timezone_);
  sim_loc_.Swap(&other->sim_loc_);
  operator_name_.Swap(&other->operator_name_);
  waid_.Swap(&other->waid_);
  connection_type_.Swap(&other->connection_type_);
  open_udid_.Swap(&other->open_udid_);
  ios_vendor_id_.Swap(&other->ios_vendor_id_);
  wna_id_.Swap(&other->wna_id_);
  mna_id_.Swap(&other->mna_id_);
  ios_vendor_id_cached_.Swap(&other->ios_vendor_id_cached_);
  mac_.Swap(&other->mac_);
  sim_loc_str_.Swap(&other->sim_loc_str_);
  operator_id_str_.Swap(&other->operator_id_str_);
  sim_operator_id_str_.Swap(&other->sim_operator_id_str_);
  swap(wifi_, other->wifi_);
  swap(mobile_app_pk_, other->mobile_app_pk_);
  swap(banner_, other->banner_);
  swap(timestamp_, other->timestamp_);
  swap(timestamp_base_, other->timestamp_base_);
  swap(user_ip_, other->user_ip_);
  swap(mrgs_app_id_, other->mrgs_app_id_);
  swap(gender_, other->gender_);
  swap(age_, other->age_);
  swap(advertising_tracking_enabled_, other->advertising_tracking_enabled_);
  swap(os_, other->os_);
  swap(screen_width_, other->screen_width_);
  swap(screen_height_, other->screen_height_);
  swap(operator_id_, other->operator_id_);
  swap(sim_operator_id_, other->sim_operator_id_);
  swap(connection_, other->connection_);
  swap(location_provider_, other->location_provider_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(bluetooth_enabled_, other->bluetooth_enabled_);
  swap(location_timestamp_, other->location_timestamp_);
  swap(location_accuracy_, other->location_accuracy_);
  swap(speed_, other->speed_);
  swap(geo_, other->geo_);
  swap(hacks_, other->hacks_);
  swap(timestamp_send_, other->timestamp_send_);
  swap(remote_addr_, other->remote_addr_);
  swap(x_forwarded_for_, other->x_forwarded_for_);
  swap(mid_, other->mid_);
  swap(tracker_v1_, other->tracker_v1_);
  swap(dpi_, other->dpi_);
  swap(xdpi_, other->xdpi_);
  swap(ydpi_, other->ydpi_);
  swap(custom_events_skipped_, other->custom_events_skipped_);
  swap(random_, other->random_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MytrackerMessage::GetMetadata() const {
  protobuf_mytracker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mytracker_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MytrackerMessage

// optional bytes mytracker_version = 1;
bool MytrackerMessage::has_mytracker_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MytrackerMessage::set_has_mytracker_version() {
  _has_bits_[0] |= 0x00000001u;
}
void MytrackerMessage::clear_has_mytracker_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void MytrackerMessage::clear_mytracker_version() {
  mytracker_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mytracker_version();
}
const ::std::string& MytrackerMessage::mytracker_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  return mytracker_version_.GetNoArena();
}
void MytrackerMessage::set_mytracker_version(const ::std::string& value) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
#if LANG_CXX11
void MytrackerMessage::set_mytracker_version(::std::string&& value) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
#endif
void MytrackerMessage::set_mytracker_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
void MytrackerMessage::set_mytracker_version(const void* value, size_t size) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
::std::string* MytrackerMessage::mutable_mytracker_version() {
  set_has_mytracker_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  return mytracker_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_mytracker_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  clear_has_mytracker_version();
  return mytracker_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_mytracker_version(::std::string* mytracker_version) {
  if (mytracker_version != NULL) {
    set_has_mytracker_version();
  } else {
    clear_has_mytracker_version();
  }
  mytracker_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mytracker_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}

// optional uint32 mobile_app_pk = 2;
bool MytrackerMessage::has_mobile_app_pk() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void MytrackerMessage::set_has_mobile_app_pk() {
  _has_bits_[1] |= 0x00000002u;
}
void MytrackerMessage::clear_has_mobile_app_pk() {
  _has_bits_[1] &= ~0x00000002u;
}
void MytrackerMessage::clear_mobile_app_pk() {
  mobile_app_pk_ = 0u;
  clear_has_mobile_app_pk();
}
::google::protobuf::uint32 MytrackerMessage::mobile_app_pk() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mobile_app_pk)
  return mobile_app_pk_;
}
void MytrackerMessage::set_mobile_app_pk(::google::protobuf::uint32 value) {
  set_has_mobile_app_pk();
  mobile_app_pk_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mobile_app_pk)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
int MytrackerMessage::events_size() const {
  return events_.size();
}
void MytrackerMessage::clear_events() {
  events_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Event& MytrackerMessage::events(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event* MytrackerMessage::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Event* MytrackerMessage::add_events() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >*
MytrackerMessage::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >&
MytrackerMessage::events() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_;
}

// optional uint32 banner = 4;
bool MytrackerMessage::has_banner() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void MytrackerMessage::set_has_banner() {
  _has_bits_[1] |= 0x00000004u;
}
void MytrackerMessage::clear_has_banner() {
  _has_bits_[1] &= ~0x00000004u;
}
void MytrackerMessage::clear_banner() {
  banner_ = 0u;
  clear_has_banner();
}
::google::protobuf::uint32 MytrackerMessage::banner() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.banner)
  return banner_;
}
void MytrackerMessage::set_banner(::google::protobuf::uint32 value) {
  set_has_banner();
  banner_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.banner)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
int MytrackerMessage::apps_size() const {
  return apps_.size();
}
void MytrackerMessage::clear_apps() {
  apps_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_App& MytrackerMessage::apps(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_App* MytrackerMessage::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_App* MytrackerMessage::add_apps() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >*
MytrackerMessage::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return &apps_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >&
MytrackerMessage::apps() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_;
}

// repeated fixed32 src_ip_chain = 14;
int MytrackerMessage::src_ip_chain_size() const {
  return src_ip_chain_.size();
}
void MytrackerMessage::clear_src_ip_chain() {
  src_ip_chain_.Clear();
}
::google::protobuf::uint32 MytrackerMessage::src_ip_chain(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return src_ip_chain_.Get(index);
}
void MytrackerMessage::set_src_ip_chain(int index, ::google::protobuf::uint32 value) {
  src_ip_chain_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
}
void MytrackerMessage::add_src_ip_chain(::google::protobuf::uint32 value) {
  src_ip_chain_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::src_ip_chain() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return src_ip_chain_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_src_ip_chain() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return &src_ip_chain_;
}

// optional fixed32 timestamp = 15;
bool MytrackerMessage::has_timestamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void MytrackerMessage::set_has_timestamp() {
  _has_bits_[1] |= 0x00000008u;
}
void MytrackerMessage::clear_has_timestamp() {
  _has_bits_[1] &= ~0x00000008u;
}
void MytrackerMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 MytrackerMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp)
  return timestamp_;
}
void MytrackerMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp)
}

// optional bytes app_id = 16;
bool MytrackerMessage::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MytrackerMessage::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MytrackerMessage::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MytrackerMessage::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
const ::std::string& MytrackerMessage::app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  return app_id_.GetNoArena();
}
void MytrackerMessage::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
#if LANG_CXX11
void MytrackerMessage::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
#endif
void MytrackerMessage::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
void MytrackerMessage::set_app_id(const void* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
::std::string* MytrackerMessage::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_app_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}

// optional uint32 timestamp_base = 17;
bool MytrackerMessage::has_timestamp_base() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
void MytrackerMessage::set_has_timestamp_base() {
  _has_bits_[1] |= 0x00000010u;
}
void MytrackerMessage::clear_has_timestamp_base() {
  _has_bits_[1] &= ~0x00000010u;
}
void MytrackerMessage::clear_timestamp_base() {
  timestamp_base_ = 0u;
  clear_has_timestamp_base();
}
::google::protobuf::uint32 MytrackerMessage::timestamp_base() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_base)
  return timestamp_base_;
}
void MytrackerMessage::set_timestamp_base(::google::protobuf::uint32 value) {
  set_has_timestamp_base();
  timestamp_base_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_base)
}

// optional fixed32 user_ip = 18;
bool MytrackerMessage::has_user_ip() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
void MytrackerMessage::set_has_user_ip() {
  _has_bits_[1] |= 0x00000020u;
}
void MytrackerMessage::clear_has_user_ip() {
  _has_bits_[1] &= ~0x00000020u;
}
void MytrackerMessage::clear_user_ip() {
  user_ip_ = 0u;
  clear_has_user_ip();
}
::google::protobuf::uint32 MytrackerMessage::user_ip() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.user_ip)
  return user_ip_;
}
void MytrackerMessage::set_user_ip(::google::protobuf::uint32 value) {
  set_has_user_ip();
  user_ip_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.user_ip)
}

// optional bytes user_ipv6 = 19;
bool MytrackerMessage::has_user_ipv6() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MytrackerMessage::set_has_user_ipv6() {
  _has_bits_[0] |= 0x00000004u;
}
void MytrackerMessage::clear_has_user_ipv6() {
  _has_bits_[0] &= ~0x00000004u;
}
void MytrackerMessage::clear_user_ipv6() {
  user_ipv6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_ipv6();
}
const ::std::string& MytrackerMessage::user_ipv6() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  return user_ipv6_.GetNoArena();
}
void MytrackerMessage::set_user_ipv6(const ::std::string& value) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
#if LANG_CXX11
void MytrackerMessage::set_user_ipv6(::std::string&& value) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
#endif
void MytrackerMessage::set_user_ipv6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
void MytrackerMessage::set_user_ipv6(const void* value, size_t size) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
::std::string* MytrackerMessage::mutable_user_ipv6() {
  set_has_user_ipv6();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  return user_ipv6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_user_ipv6() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  clear_has_user_ipv6();
  return user_ipv6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_user_ipv6(::std::string* user_ipv6) {
  if (user_ipv6 != NULL) {
    set_has_user_ipv6();
  } else {
    clear_has_user_ipv6();
  }
  user_ipv6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_ipv6);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}

// optional uint32 remote_addr = 83;
bool MytrackerMessage::has_remote_addr() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
void MytrackerMessage::set_has_remote_addr() {
  _has_bits_[1] |= 0x04000000u;
}
void MytrackerMessage::clear_has_remote_addr() {
  _has_bits_[1] &= ~0x04000000u;
}
void MytrackerMessage::clear_remote_addr() {
  remote_addr_ = 0u;
  clear_has_remote_addr();
}
::google::protobuf::uint32 MytrackerMessage::remote_addr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.remote_addr)
  return remote_addr_;
}
void MytrackerMessage::set_remote_addr(::google::protobuf::uint32 value) {
  set_has_remote_addr();
  remote_addr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.remote_addr)
}

// optional uint32 x_forwarded_for = 84;
bool MytrackerMessage::has_x_forwarded_for() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
void MytrackerMessage::set_has_x_forwarded_for() {
  _has_bits_[1] |= 0x08000000u;
}
void MytrackerMessage::clear_has_x_forwarded_for() {
  _has_bits_[1] &= ~0x08000000u;
}
void MytrackerMessage::clear_x_forwarded_for() {
  x_forwarded_for_ = 0u;
  clear_has_x_forwarded_for();
}
::google::protobuf::uint32 MytrackerMessage::x_forwarded_for() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.x_forwarded_for)
  return x_forwarded_for_;
}
void MytrackerMessage::set_x_forwarded_for(::google::protobuf::uint32 value) {
  set_has_x_forwarded_for();
  x_forwarded_for_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.x_forwarded_for)
}

// optional uint32 geo = 80;
bool MytrackerMessage::has_geo() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
void MytrackerMessage::set_has_geo() {
  _has_bits_[1] |= 0x00800000u;
}
void MytrackerMessage::clear_has_geo() {
  _has_bits_[1] &= ~0x00800000u;
}
void MytrackerMessage::clear_geo() {
  geo_ = 0u;
  clear_has_geo();
}
::google::protobuf::uint32 MytrackerMessage::geo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.geo)
  return geo_;
}
void MytrackerMessage::set_geo(::google::protobuf::uint32 value) {
  set_has_geo();
  geo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.geo)
}

// optional uint32 hacks = 81;
bool MytrackerMessage::has_hacks() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
void MytrackerMessage::set_has_hacks() {
  _has_bits_[1] |= 0x01000000u;
}
void MytrackerMessage::clear_has_hacks() {
  _has_bits_[1] &= ~0x01000000u;
}
void MytrackerMessage::clear_hacks() {
  hacks_ = 0u;
  clear_has_hacks();
}
::google::protobuf::uint32 MytrackerMessage::hacks() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.hacks)
  return hacks_;
}
void MytrackerMessage::set_hacks(::google::protobuf::uint32 value) {
  set_has_hacks();
  hacks_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.hacks)
}

// optional bool tracker_v1 = 88;
bool MytrackerMessage::has_tracker_v1() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
void MytrackerMessage::set_has_tracker_v1() {
  _has_bits_[1] |= 0x20000000u;
}
void MytrackerMessage::clear_has_tracker_v1() {
  _has_bits_[1] &= ~0x20000000u;
}
void MytrackerMessage::clear_tracker_v1() {
  tracker_v1_ = false;
  clear_has_tracker_v1();
}
bool MytrackerMessage::tracker_v1() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.tracker_v1)
  return tracker_v1_;
}
void MytrackerMessage::set_tracker_v1(bool value) {
  set_has_tracker_v1();
  tracker_v1_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.tracker_v1)
}

// optional fixed32 timestamp_send = 82;
bool MytrackerMessage::has_timestamp_send() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
void MytrackerMessage::set_has_timestamp_send() {
  _has_bits_[1] |= 0x02000000u;
}
void MytrackerMessage::clear_has_timestamp_send() {
  _has_bits_[1] &= ~0x02000000u;
}
void MytrackerMessage::clear_timestamp_send() {
  timestamp_send_ = 0u;
  clear_has_timestamp_send();
}
::google::protobuf::uint32 MytrackerMessage::timestamp_send() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_send)
  return timestamp_send_;
}
void MytrackerMessage::set_timestamp_send(::google::protobuf::uint32 value) {
  set_has_timestamp_send();
  timestamp_send_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_send)
}

// optional uint32 custom_events_skipped = 103;
bool MytrackerMessage::has_custom_events_skipped() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
void MytrackerMessage::set_has_custom_events_skipped() {
  _has_bits_[2] |= 0x00000002u;
}
void MytrackerMessage::clear_has_custom_events_skipped() {
  _has_bits_[2] &= ~0x00000002u;
}
void MytrackerMessage::clear_custom_events_skipped() {
  custom_events_skipped_ = 0u;
  clear_has_custom_events_skipped();
}
::google::protobuf::uint32 MytrackerMessage::custom_events_skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.custom_events_skipped)
  return custom_events_skipped_;
}
void MytrackerMessage::set_custom_events_skipped(::google::protobuf::uint32 value) {
  set_has_custom_events_skipped();
  custom_events_skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_events_skipped)
}

// optional uint32 random = 104;
bool MytrackerMessage::has_random() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
void MytrackerMessage::set_has_random() {
  _has_bits_[2] |= 0x00000004u;
}
void MytrackerMessage::clear_has_random() {
  _has_bits_[2] &= ~0x00000004u;
}
void MytrackerMessage::clear_random() {
  random_ = 0u;
  clear_has_random();
}
::google::protobuf::uint32 MytrackerMessage::random() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.random)
  return random_;
}
void MytrackerMessage::set_random(::google::protobuf::uint32 value) {
  set_has_random();
  random_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.random)
}

// optional bytes app_version = 20;
bool MytrackerMessage::has_app_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MytrackerMessage::set_has_app_version() {
  _has_bits_[0] |= 0x00000008u;
}
void MytrackerMessage::clear_has_app_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void MytrackerMessage::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_version();
}
const ::std::string& MytrackerMessage::app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  return app_version_.GetNoArena();
}
void MytrackerMessage::set_app_version(const ::std::string& value) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
#if LANG_CXX11
void MytrackerMessage::set_app_version(::std::string&& value) {
  set_has_app_version();
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
#endif
void MytrackerMessage::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
void MytrackerMessage::set_app_version(const void* value, size_t size) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
::std::string* MytrackerMessage::mutable_app_version() {
  set_has_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  clear_has_app_version();
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    set_has_app_version();
  } else {
    clear_has_app_version();
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}

// optional bytes app_build = 21;
bool MytrackerMessage::has_app_build() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MytrackerMessage::set_has_app_build() {
  _has_bits_[0] |= 0x00000010u;
}
void MytrackerMessage::clear_has_app_build() {
  _has_bits_[0] &= ~0x00000010u;
}
void MytrackerMessage::clear_app_build() {
  app_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_build();
}
const ::std::string& MytrackerMessage::app_build() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  return app_build_.GetNoArena();
}
void MytrackerMessage::set_app_build(const ::std::string& value) {
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
#if LANG_CXX11
void MytrackerMessage::set_app_build(::std::string&& value) {
  set_has_app_build();
  app_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
#endif
void MytrackerMessage::set_app_build(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
void MytrackerMessage::set_app_build(const void* value, size_t size) {
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
::std::string* MytrackerMessage::mutable_app_build() {
  set_has_app_build();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  return app_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_app_build() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  clear_has_app_build();
  return app_build_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_app_build(::std::string* app_build) {
  if (app_build != NULL) {
    set_has_app_build();
  } else {
    clear_has_app_build();
  }
  app_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_build);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}

// optional bytes app_language = 22;
bool MytrackerMessage::has_app_language() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MytrackerMessage::set_has_app_language() {
  _has_bits_[0] |= 0x00000020u;
}
void MytrackerMessage::clear_has_app_language() {
  _has_bits_[0] &= ~0x00000020u;
}
void MytrackerMessage::clear_app_language() {
  app_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_language();
}
const ::std::string& MytrackerMessage::app_language() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  return app_language_.GetNoArena();
}
void MytrackerMessage::set_app_language(const ::std::string& value) {
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
#if LANG_CXX11
void MytrackerMessage::set_app_language(::std::string&& value) {
  set_has_app_language();
  app_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
#endif
void MytrackerMessage::set_app_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
void MytrackerMessage::set_app_language(const void* value, size_t size) {
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
::std::string* MytrackerMessage::mutable_app_language() {
  set_has_app_language();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  return app_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_app_language() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  clear_has_app_language();
  return app_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_app_language(::std::string* app_language) {
  if (app_language != NULL) {
    set_has_app_language();
  } else {
    clear_has_app_language();
  }
  app_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_language);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}

// optional bytes app_bundle = 23;
bool MytrackerMessage::has_app_bundle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MytrackerMessage::set_has_app_bundle() {
  _has_bits_[0] |= 0x00000040u;
}
void MytrackerMessage::clear_has_app_bundle() {
  _has_bits_[0] &= ~0x00000040u;
}
void MytrackerMessage::clear_app_bundle() {
  app_bundle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_bundle();
}
const ::std::string& MytrackerMessage::app_bundle() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  return app_bundle_.GetNoArena();
}
void MytrackerMessage::set_app_bundle(const ::std::string& value) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
#if LANG_CXX11
void MytrackerMessage::set_app_bundle(::std::string&& value) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
#endif
void MytrackerMessage::set_app_bundle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
void MytrackerMessage::set_app_bundle(const void* value, size_t size) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
::std::string* MytrackerMessage::mutable_app_bundle() {
  set_has_app_bundle();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  return app_bundle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_app_bundle() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  clear_has_app_bundle();
  return app_bundle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_app_bundle(::std::string* app_bundle) {
  if (app_bundle != NULL) {
    set_has_app_bundle();
  } else {
    clear_has_app_bundle();
  }
  app_bundle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_bundle);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}

// optional uint32 mrgs_app_id = 24;
bool MytrackerMessage::has_mrgs_app_id() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
void MytrackerMessage::set_has_mrgs_app_id() {
  _has_bits_[1] |= 0x00000040u;
}
void MytrackerMessage::clear_has_mrgs_app_id() {
  _has_bits_[1] &= ~0x00000040u;
}
void MytrackerMessage::clear_mrgs_app_id() {
  mrgs_app_id_ = 0u;
  clear_has_mrgs_app_id();
}
::google::protobuf::uint32 MytrackerMessage::mrgs_app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_app_id)
  return mrgs_app_id_;
}
void MytrackerMessage::set_mrgs_app_id(::google::protobuf::uint32 value) {
  set_has_mrgs_app_id();
  mrgs_app_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_app_id)
}

// optional uint32 gender = 30;
bool MytrackerMessage::has_gender() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
void MytrackerMessage::set_has_gender() {
  _has_bits_[1] |= 0x00000080u;
}
void MytrackerMessage::clear_has_gender() {
  _has_bits_[1] &= ~0x00000080u;
}
void MytrackerMessage::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
::google::protobuf::uint32 MytrackerMessage::gender() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.gender)
  return gender_;
}
void MytrackerMessage::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.gender)
}

// optional uint32 age = 31;
bool MytrackerMessage::has_age() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
void MytrackerMessage::set_has_age() {
  _has_bits_[1] |= 0x00000100u;
}
void MytrackerMessage::clear_has_age() {
  _has_bits_[1] &= ~0x00000100u;
}
void MytrackerMessage::clear_age() {
  age_ = 0u;
  clear_has_age();
}
::google::protobuf::uint32 MytrackerMessage::age() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.age)
  return age_;
}
void MytrackerMessage::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.age)
}

// optional bytes mrgs_user_id = 32;
bool MytrackerMessage::has_mrgs_user_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MytrackerMessage::set_has_mrgs_user_id() {
  _has_bits_[0] |= 0x00000080u;
}
void MytrackerMessage::clear_has_mrgs_user_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void MytrackerMessage::clear_mrgs_user_id() {
  mrgs_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mrgs_user_id();
}
const ::std::string& MytrackerMessage::mrgs_user_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  return mrgs_user_id_.GetNoArena();
}
void MytrackerMessage::set_mrgs_user_id(const ::std::string& value) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
#if LANG_CXX11
void MytrackerMessage::set_mrgs_user_id(::std::string&& value) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
#endif
void MytrackerMessage::set_mrgs_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
void MytrackerMessage::set_mrgs_user_id(const void* value, size_t size) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
::std::string* MytrackerMessage::mutable_mrgs_user_id() {
  set_has_mrgs_user_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  return mrgs_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_mrgs_user_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  clear_has_mrgs_user_id();
  return mrgs_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_mrgs_user_id(::std::string* mrgs_user_id) {
  if (mrgs_user_id != NULL) {
    set_has_mrgs_user_id();
  } else {
    clear_has_mrgs_user_id();
  }
  mrgs_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mrgs_user_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}

// repeated int64 ok_id = 33;
int MytrackerMessage::ok_id_size() const {
  return ok_id_.size();
}
void MytrackerMessage::clear_ok_id() {
  ok_id_.Clear();
}
::google::protobuf::int64 MytrackerMessage::ok_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return ok_id_.Get(index);
}
void MytrackerMessage::set_ok_id(int index, ::google::protobuf::int64 value) {
  ok_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
}
void MytrackerMessage::add_ok_id(::google::protobuf::int64 value) {
  ok_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MytrackerMessage::ok_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return ok_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MytrackerMessage::mutable_ok_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return &ok_id_;
}

// repeated uint32 vk_id = 34;
int MytrackerMessage::vk_id_size() const {
  return vk_id_.size();
}
void MytrackerMessage::clear_vk_id() {
  vk_id_.Clear();
}
::google::protobuf::uint32 MytrackerMessage::vk_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return vk_id_.Get(index);
}
void MytrackerMessage::set_vk_id(int index, ::google::protobuf::uint32 value) {
  vk_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
}
void MytrackerMessage::add_vk_id(::google::protobuf::uint32 value) {
  vk_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::vk_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return vk_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_vk_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return &vk_id_;
}

// repeated bytes email = 35;
int MytrackerMessage::email_size() const {
  return email_.size();
}
void MytrackerMessage::clear_email() {
  email_.Clear();
}
const ::std::string& MytrackerMessage::email(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Get(index);
}
::std::string* MytrackerMessage::mutable_email(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Mutable(index);
}
void MytrackerMessage::set_email(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.email)
  email_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MytrackerMessage::set_email(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.email)
  email_.Mutable(index)->assign(std::move(value));
}
#endif
void MytrackerMessage::set_email(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
void MytrackerMessage::set_email(int index, const void* value, size_t size) {
  email_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
::std::string* MytrackerMessage::add_email() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Add();
}
void MytrackerMessage::add_email(const ::std::string& value) {
  email_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
#if LANG_CXX11
void MytrackerMessage::add_email(::std::string&& value) {
  email_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
#endif
void MytrackerMessage::add_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
void MytrackerMessage::add_email(const void* value, size_t size) {
  email_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::email() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_email() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return &email_;
}

// repeated uint32 icq_id = 36;
int MytrackerMessage::icq_id_size() const {
  return icq_id_.size();
}
void MytrackerMessage::clear_icq_id() {
  icq_id_.Clear();
}
::google::protobuf::uint32 MytrackerMessage::icq_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return icq_id_.Get(index);
}
void MytrackerMessage::set_icq_id(int index, ::google::protobuf::uint32 value) {
  icq_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
}
void MytrackerMessage::add_icq_id(::google::protobuf::uint32 value) {
  icq_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::icq_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return icq_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_icq_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return &icq_id_;
}

// repeated bytes custom_user_id = 37;
int MytrackerMessage::custom_user_id_size() const {
  return custom_user_id_.size();
}
void MytrackerMessage::clear_custom_user_id() {
  custom_user_id_.Clear();
}
const ::std::string& MytrackerMessage::custom_user_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Get(index);
}
::std::string* MytrackerMessage::mutable_custom_user_id(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Mutable(index);
}
void MytrackerMessage::set_custom_user_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  custom_user_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MytrackerMessage::set_custom_user_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  custom_user_id_.Mutable(index)->assign(std::move(value));
}
#endif
void MytrackerMessage::set_custom_user_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  custom_user_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
void MytrackerMessage::set_custom_user_id(int index, const void* value, size_t size) {
  custom_user_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
::std::string* MytrackerMessage::add_custom_user_id() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Add();
}
void MytrackerMessage::add_custom_user_id(const ::std::string& value) {
  custom_user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
#if LANG_CXX11
void MytrackerMessage::add_custom_user_id(::std::string&& value) {
  custom_user_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
#endif
void MytrackerMessage::add_custom_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  custom_user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
void MytrackerMessage::add_custom_user_id(const void* value, size_t size) {
  custom_user_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::custom_user_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_custom_user_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return &custom_user_id_;
}

// repeated bytes phone = 102;
int MytrackerMessage::phone_size() const {
  return phone_.size();
}
void MytrackerMessage::clear_phone() {
  phone_.Clear();
}
const ::std::string& MytrackerMessage::phone(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Get(index);
}
::std::string* MytrackerMessage::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Mutable(index);
}
void MytrackerMessage::set_phone(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  phone_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MytrackerMessage::set_phone(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  phone_.Mutable(index)->assign(std::move(value));
}
#endif
void MytrackerMessage::set_phone(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
void MytrackerMessage::set_phone(int index, const void* value, size_t size) {
  phone_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
::std::string* MytrackerMessage::add_phone() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Add();
}
void MytrackerMessage::add_phone(const ::std::string& value) {
  phone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
#if LANG_CXX11
void MytrackerMessage::add_phone(::std::string&& value) {
  phone_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
#endif
void MytrackerMessage::add_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
void MytrackerMessage::add_phone(const void* value, size_t size) {
  phone_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::phone() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return &phone_;
}

// optional bytes idfa = 40;
bool MytrackerMessage::has_idfa() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MytrackerMessage::set_has_idfa() {
  _has_bits_[0] |= 0x00000100u;
}
void MytrackerMessage::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000100u;
}
void MytrackerMessage::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
const ::std::string& MytrackerMessage::idfa() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  return idfa_.GetNoArena();
}
void MytrackerMessage::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
#if LANG_CXX11
void MytrackerMessage::set_idfa(::std::string&& value) {
  set_has_idfa();
  idfa_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
#endif
void MytrackerMessage::set_idfa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
void MytrackerMessage::set_idfa(const void* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
::std::string* MytrackerMessage::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_idfa() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}

// optional bytes advertising_id = 41;
bool MytrackerMessage::has_advertising_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MytrackerMessage::set_has_advertising_id() {
  _has_bits_[0] |= 0x00000200u;
}
void MytrackerMessage::clear_has_advertising_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void MytrackerMessage::clear_advertising_id() {
  advertising_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertising_id();
}
const ::std::string& MytrackerMessage::advertising_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  return advertising_id_.GetNoArena();
}
void MytrackerMessage::set_advertising_id(const ::std::string& value) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
#if LANG_CXX11
void MytrackerMessage::set_advertising_id(::std::string&& value) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
#endif
void MytrackerMessage::set_advertising_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
void MytrackerMessage::set_advertising_id(const void* value, size_t size) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
::std::string* MytrackerMessage::mutable_advertising_id() {
  set_has_advertising_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  return advertising_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_advertising_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  clear_has_advertising_id();
  return advertising_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_advertising_id(::std::string* advertising_id) {
  if (advertising_id != NULL) {
    set_has_advertising_id();
  } else {
    clear_has_advertising_id();
  }
  advertising_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertising_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}

// optional bytes android_id = 42;
bool MytrackerMessage::has_android_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MytrackerMessage::set_has_android_id() {
  _has_bits_[0] |= 0x00000400u;
}
void MytrackerMessage::clear_has_android_id() {
  _has_bits_[0] &= ~0x00000400u;
}
void MytrackerMessage::clear_android_id() {
  android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_id();
}
const ::std::string& MytrackerMessage::android_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  return android_id_.GetNoArena();
}
void MytrackerMessage::set_android_id(const ::std::string& value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
#if LANG_CXX11
void MytrackerMessage::set_android_id(::std::string&& value) {
  set_has_android_id();
  android_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
#endif
void MytrackerMessage::set_android_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
void MytrackerMessage::set_android_id(const void* value, size_t size) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
::std::string* MytrackerMessage::mutable_android_id() {
  set_has_android_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  return android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_android_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  clear_has_android_id();
  return android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_android_id(::std::string* android_id) {
  if (android_id != NULL) {
    set_has_android_id();
  } else {
    clear_has_android_id();
  }
  android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}

// optional bytes android_device_id = 43;
bool MytrackerMessage::has_android_device_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MytrackerMessage::set_has_android_device_id() {
  _has_bits_[0] |= 0x00000800u;
}
void MytrackerMessage::clear_has_android_device_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void MytrackerMessage::clear_android_device_id() {
  android_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_device_id();
}
const ::std::string& MytrackerMessage::android_device_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  return android_device_id_.GetNoArena();
}
void MytrackerMessage::set_android_device_id(const ::std::string& value) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
#if LANG_CXX11
void MytrackerMessage::set_android_device_id(::std::string&& value) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
#endif
void MytrackerMessage::set_android_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
void MytrackerMessage::set_android_device_id(const void* value, size_t size) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
::std::string* MytrackerMessage::mutable_android_device_id() {
  set_has_android_device_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  return android_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_android_device_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  clear_has_android_device_id();
  return android_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_android_device_id(::std::string* android_device_id) {
  if (android_device_id != NULL) {
    set_has_android_device_id();
  } else {
    clear_has_android_device_id();
  }
  android_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_device_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}

// optional bytes waid = 74;
bool MytrackerMessage::has_waid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void MytrackerMessage::set_has_waid() {
  _has_bits_[0] |= 0x00200000u;
}
void MytrackerMessage::clear_has_waid() {
  _has_bits_[0] &= ~0x00200000u;
}
void MytrackerMessage::clear_waid() {
  waid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_waid();
}
const ::std::string& MytrackerMessage::waid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  return waid_.GetNoArena();
}
void MytrackerMessage::set_waid(const ::std::string& value) {
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
#if LANG_CXX11
void MytrackerMessage::set_waid(::std::string&& value) {
  set_has_waid();
  waid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
#endif
void MytrackerMessage::set_waid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
void MytrackerMessage::set_waid(const void* value, size_t size) {
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
::std::string* MytrackerMessage::mutable_waid() {
  set_has_waid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  return waid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_waid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  clear_has_waid();
  return waid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_waid(::std::string* waid) {
  if (waid != NULL) {
    set_has_waid();
  } else {
    clear_has_waid();
  }
  waid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), waid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}

// optional bytes wna_id = 89;
bool MytrackerMessage::has_wna_id() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void MytrackerMessage::set_has_wna_id() {
  _has_bits_[0] |= 0x02000000u;
}
void MytrackerMessage::clear_has_wna_id() {
  _has_bits_[0] &= ~0x02000000u;
}
void MytrackerMessage::clear_wna_id() {
  wna_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wna_id();
}
const ::std::string& MytrackerMessage::wna_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  return wna_id_.GetNoArena();
}
void MytrackerMessage::set_wna_id(const ::std::string& value) {
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
#if LANG_CXX11
void MytrackerMessage::set_wna_id(::std::string&& value) {
  set_has_wna_id();
  wna_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
#endif
void MytrackerMessage::set_wna_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
void MytrackerMessage::set_wna_id(const void* value, size_t size) {
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
::std::string* MytrackerMessage::mutable_wna_id() {
  set_has_wna_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  return wna_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_wna_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  clear_has_wna_id();
  return wna_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_wna_id(::std::string* wna_id) {
  if (wna_id != NULL) {
    set_has_wna_id();
  } else {
    clear_has_wna_id();
  }
  wna_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wna_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}

// optional bytes mna_id = 93;
bool MytrackerMessage::has_mna_id() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void MytrackerMessage::set_has_mna_id() {
  _has_bits_[0] |= 0x04000000u;
}
void MytrackerMessage::clear_has_mna_id() {
  _has_bits_[0] &= ~0x04000000u;
}
void MytrackerMessage::clear_mna_id() {
  mna_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mna_id();
}
const ::std::string& MytrackerMessage::mna_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  return mna_id_.GetNoArena();
}
void MytrackerMessage::set_mna_id(const ::std::string& value) {
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
#if LANG_CXX11
void MytrackerMessage::set_mna_id(::std::string&& value) {
  set_has_mna_id();
  mna_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
#endif
void MytrackerMessage::set_mna_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
void MytrackerMessage::set_mna_id(const void* value, size_t size) {
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
::std::string* MytrackerMessage::mutable_mna_id() {
  set_has_mna_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  return mna_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_mna_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  clear_has_mna_id();
  return mna_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_mna_id(::std::string* mna_id) {
  if (mna_id != NULL) {
    set_has_mna_id();
  } else {
    clear_has_mna_id();
  }
  mna_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mna_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}

// optional bytes mrgs_device_id = 44;
bool MytrackerMessage::has_mrgs_device_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MytrackerMessage::set_has_mrgs_device_id() {
  _has_bits_[0] |= 0x00001000u;
}
void MytrackerMessage::clear_has_mrgs_device_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void MytrackerMessage::clear_mrgs_device_id() {
  mrgs_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mrgs_device_id();
}
const ::std::string& MytrackerMessage::mrgs_device_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  return mrgs_device_id_.GetNoArena();
}
void MytrackerMessage::set_mrgs_device_id(const ::std::string& value) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
#if LANG_CXX11
void MytrackerMessage::set_mrgs_device_id(::std::string&& value) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
#endif
void MytrackerMessage::set_mrgs_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
void MytrackerMessage::set_mrgs_device_id(const void* value, size_t size) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
::std::string* MytrackerMessage::mutable_mrgs_device_id() {
  set_has_mrgs_device_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  return mrgs_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_mrgs_device_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  clear_has_mrgs_device_id();
  return mrgs_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_mrgs_device_id(::std::string* mrgs_device_id) {
  if (mrgs_device_id != NULL) {
    set_has_mrgs_device_id();
  } else {
    clear_has_mrgs_device_id();
  }
  mrgs_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mrgs_device_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}

// optional bytes mac = 96;
bool MytrackerMessage::has_mac() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void MytrackerMessage::set_has_mac() {
  _has_bits_[0] |= 0x10000000u;
}
void MytrackerMessage::clear_has_mac() {
  _has_bits_[0] &= ~0x10000000u;
}
void MytrackerMessage::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
const ::std::string& MytrackerMessage::mac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  return mac_.GetNoArena();
}
void MytrackerMessage::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
#if LANG_CXX11
void MytrackerMessage::set_mac(::std::string&& value) {
  set_has_mac();
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
#endif
void MytrackerMessage::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
void MytrackerMessage::set_mac(const void* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
::std::string* MytrackerMessage::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_mac() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}

// optional bytes open_udid = 85;
bool MytrackerMessage::has_open_udid() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void MytrackerMessage::set_has_open_udid() {
  _has_bits_[0] |= 0x00800000u;
}
void MytrackerMessage::clear_has_open_udid() {
  _has_bits_[0] &= ~0x00800000u;
}
void MytrackerMessage::clear_open_udid() {
  open_udid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_open_udid();
}
const ::std::string& MytrackerMessage::open_udid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  return open_udid_.GetNoArena();
}
void MytrackerMessage::set_open_udid(const ::std::string& value) {
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
#if LANG_CXX11
void MytrackerMessage::set_open_udid(::std::string&& value) {
  set_has_open_udid();
  open_udid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
#endif
void MytrackerMessage::set_open_udid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
void MytrackerMessage::set_open_udid(const void* value, size_t size) {
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
::std::string* MytrackerMessage::mutable_open_udid() {
  set_has_open_udid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  return open_udid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_open_udid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  clear_has_open_udid();
  return open_udid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_open_udid(::std::string* open_udid) {
  if (open_udid != NULL) {
    set_has_open_udid();
  } else {
    clear_has_open_udid();
  }
  open_udid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_udid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}

// optional bytes ios_vendor_id = 86;
bool MytrackerMessage::has_ios_vendor_id() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void MytrackerMessage::set_has_ios_vendor_id() {
  _has_bits_[0] |= 0x01000000u;
}
void MytrackerMessage::clear_has_ios_vendor_id() {
  _has_bits_[0] &= ~0x01000000u;
}
void MytrackerMessage::clear_ios_vendor_id() {
  ios_vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ios_vendor_id();
}
const ::std::string& MytrackerMessage::ios_vendor_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  return ios_vendor_id_.GetNoArena();
}
void MytrackerMessage::set_ios_vendor_id(const ::std::string& value) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
#if LANG_CXX11
void MytrackerMessage::set_ios_vendor_id(::std::string&& value) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
#endif
void MytrackerMessage::set_ios_vendor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
void MytrackerMessage::set_ios_vendor_id(const void* value, size_t size) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
::std::string* MytrackerMessage::mutable_ios_vendor_id() {
  set_has_ios_vendor_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  return ios_vendor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_ios_vendor_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  clear_has_ios_vendor_id();
  return ios_vendor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_ios_vendor_id(::std::string* ios_vendor_id) {
  if (ios_vendor_id != NULL) {
    set_has_ios_vendor_id();
  } else {
    clear_has_ios_vendor_id();
  }
  ios_vendor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ios_vendor_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}

// optional bytes ios_vendor_id_cached = 95;
bool MytrackerMessage::has_ios_vendor_id_cached() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void MytrackerMessage::set_has_ios_vendor_id_cached() {
  _has_bits_[0] |= 0x08000000u;
}
void MytrackerMessage::clear_has_ios_vendor_id_cached() {
  _has_bits_[0] &= ~0x08000000u;
}
void MytrackerMessage::clear_ios_vendor_id_cached() {
  ios_vendor_id_cached_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ios_vendor_id_cached();
}
const ::std::string& MytrackerMessage::ios_vendor_id_cached() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  return ios_vendor_id_cached_.GetNoArena();
}
void MytrackerMessage::set_ios_vendor_id_cached(const ::std::string& value) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
#if LANG_CXX11
void MytrackerMessage::set_ios_vendor_id_cached(::std::string&& value) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
#endif
void MytrackerMessage::set_ios_vendor_id_cached(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
void MytrackerMessage::set_ios_vendor_id_cached(const void* value, size_t size) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
::std::string* MytrackerMessage::mutable_ios_vendor_id_cached() {
  set_has_ios_vendor_id_cached();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  return ios_vendor_id_cached_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_ios_vendor_id_cached() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  clear_has_ios_vendor_id_cached();
  return ios_vendor_id_cached_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_ios_vendor_id_cached(::std::string* ios_vendor_id_cached) {
  if (ios_vendor_id_cached != NULL) {
    set_has_ios_vendor_id_cached();
  } else {
    clear_has_ios_vendor_id_cached();
  }
  ios_vendor_id_cached_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ios_vendor_id_cached);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}

// optional uint32 mid = 87;
bool MytrackerMessage::has_mid() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
void MytrackerMessage::set_has_mid() {
  _has_bits_[1] |= 0x10000000u;
}
void MytrackerMessage::clear_has_mid() {
  _has_bits_[1] &= ~0x10000000u;
}
void MytrackerMessage::clear_mid() {
  mid_ = 0u;
  clear_has_mid();
}
::google::protobuf::uint32 MytrackerMessage::mid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mid)
  return mid_;
}
void MytrackerMessage::set_mid(::google::protobuf::uint32 value) {
  set_has_mid();
  mid_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mid)
}

// optional int32 advertising_tracking_enabled = 45;
bool MytrackerMessage::has_advertising_tracking_enabled() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
void MytrackerMessage::set_has_advertising_tracking_enabled() {
  _has_bits_[1] |= 0x00000200u;
}
void MytrackerMessage::clear_has_advertising_tracking_enabled() {
  _has_bits_[1] &= ~0x00000200u;
}
void MytrackerMessage::clear_advertising_tracking_enabled() {
  advertising_tracking_enabled_ = 0;
  clear_has_advertising_tracking_enabled();
}
::google::protobuf::int32 MytrackerMessage::advertising_tracking_enabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.advertising_tracking_enabled)
  return advertising_tracking_enabled_;
}
void MytrackerMessage::set_advertising_tracking_enabled(::google::protobuf::int32 value) {
  set_has_advertising_tracking_enabled();
  advertising_tracking_enabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.advertising_tracking_enabled)
}

// optional bytes device = 46;
bool MytrackerMessage::has_device() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MytrackerMessage::set_has_device() {
  _has_bits_[0] |= 0x00002000u;
}
void MytrackerMessage::clear_has_device() {
  _has_bits_[0] &= ~0x00002000u;
}
void MytrackerMessage::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
const ::std::string& MytrackerMessage::device() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.device)
  return device_.GetNoArena();
}
void MytrackerMessage::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
#if LANG_CXX11
void MytrackerMessage::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
#endif
void MytrackerMessage::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
void MytrackerMessage::set_device(const void* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
::std::string* MytrackerMessage::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_device() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.device)
}

// optional bytes euname = 47;
bool MytrackerMessage::has_euname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MytrackerMessage::set_has_euname() {
  _has_bits_[0] |= 0x00004000u;
}
void MytrackerMessage::clear_has_euname() {
  _has_bits_[0] &= ~0x00004000u;
}
void MytrackerMessage::clear_euname() {
  euname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_euname();
}
const ::std::string& MytrackerMessage::euname() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  return euname_.GetNoArena();
}
void MytrackerMessage::set_euname(const ::std::string& value) {
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
#if LANG_CXX11
void MytrackerMessage::set_euname(::std::string&& value) {
  set_has_euname();
  euname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
#endif
void MytrackerMessage::set_euname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
void MytrackerMessage::set_euname(const void* value, size_t size) {
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
::std::string* MytrackerMessage::mutable_euname() {
  set_has_euname();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  return euname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_euname() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  clear_has_euname();
  return euname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_euname(::std::string* euname) {
  if (euname != NULL) {
    set_has_euname();
  } else {
    clear_has_euname();
  }
  euname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), euname);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}

// optional bytes manufacture = 48;
bool MytrackerMessage::has_manufacture() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MytrackerMessage::set_has_manufacture() {
  _has_bits_[0] |= 0x00008000u;
}
void MytrackerMessage::clear_has_manufacture() {
  _has_bits_[0] &= ~0x00008000u;
}
void MytrackerMessage::clear_manufacture() {
  manufacture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manufacture();
}
const ::std::string& MytrackerMessage::manufacture() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  return manufacture_.GetNoArena();
}
void MytrackerMessage::set_manufacture(const ::std::string& value) {
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
#if LANG_CXX11
void MytrackerMessage::set_manufacture(::std::string&& value) {
  set_has_manufacture();
  manufacture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
#endif
void MytrackerMessage::set_manufacture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
void MytrackerMessage::set_manufacture(const void* value, size_t size) {
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
::std::string* MytrackerMessage::mutable_manufacture() {
  set_has_manufacture();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  return manufacture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_manufacture() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  clear_has_manufacture();
  return manufacture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_manufacture(::std::string* manufacture) {
  if (manufacture != NULL) {
    set_has_manufacture();
  } else {
    clear_has_manufacture();
  }
  manufacture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacture);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}

// optional uint32 os = 49;
bool MytrackerMessage::has_os() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
void MytrackerMessage::set_has_os() {
  _has_bits_[1] |= 0x00000400u;
}
void MytrackerMessage::clear_has_os() {
  _has_bits_[1] &= ~0x00000400u;
}
void MytrackerMessage::clear_os() {
  os_ = 0u;
  clear_has_os();
}
::google::protobuf::uint32 MytrackerMessage::os() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os)
  return os_;
}
void MytrackerMessage::set_os(::google::protobuf::uint32 value) {
  set_has_os();
  os_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os)
}

// optional bytes os_ver = 50;
bool MytrackerMessage::has_os_ver() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void MytrackerMessage::set_has_os_ver() {
  _has_bits_[0] |= 0x00010000u;
}
void MytrackerMessage::clear_has_os_ver() {
  _has_bits_[0] &= ~0x00010000u;
}
void MytrackerMessage::clear_os_ver() {
  os_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_ver();
}
const ::std::string& MytrackerMessage::os_ver() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  return os_ver_.GetNoArena();
}
void MytrackerMessage::set_os_ver(const ::std::string& value) {
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
#if LANG_CXX11
void MytrackerMessage::set_os_ver(::std::string&& value) {
  set_has_os_ver();
  os_ver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
#endif
void MytrackerMessage::set_os_ver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
void MytrackerMessage::set_os_ver(const void* value, size_t size) {
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
::std::string* MytrackerMessage::mutable_os_ver() {
  set_has_os_ver();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  return os_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_os_ver() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  clear_has_os_ver();
  return os_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_os_ver(::std::string* os_ver) {
  if (os_ver != NULL) {
    set_has_os_ver();
  } else {
    clear_has_os_ver();
  }
  os_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_ver);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}

// optional bytes os_lang = 51;
bool MytrackerMessage::has_os_lang() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void MytrackerMessage::set_has_os_lang() {
  _has_bits_[0] |= 0x00020000u;
}
void MytrackerMessage::clear_has_os_lang() {
  _has_bits_[0] &= ~0x00020000u;
}
void MytrackerMessage::clear_os_lang() {
  os_lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_lang();
}
const ::std::string& MytrackerMessage::os_lang() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  return os_lang_.GetNoArena();
}
void MytrackerMessage::set_os_lang(const ::std::string& value) {
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
#if LANG_CXX11
void MytrackerMessage::set_os_lang(::std::string&& value) {
  set_has_os_lang();
  os_lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
#endif
void MytrackerMessage::set_os_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
void MytrackerMessage::set_os_lang(const void* value, size_t size) {
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
::std::string* MytrackerMessage::mutable_os_lang() {
  set_has_os_lang();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  return os_lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_os_lang() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  clear_has_os_lang();
  return os_lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_os_lang(::std::string* os_lang) {
  if (os_lang != NULL) {
    set_has_os_lang();
  } else {
    clear_has_os_lang();
  }
  os_lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_lang);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}

// optional bytes timezone = 52;
bool MytrackerMessage::has_timezone() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void MytrackerMessage::set_has_timezone() {
  _has_bits_[0] |= 0x00040000u;
}
void MytrackerMessage::clear_has_timezone() {
  _has_bits_[0] &= ~0x00040000u;
}
void MytrackerMessage::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timezone();
}
const ::std::string& MytrackerMessage::timezone() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  return timezone_.GetNoArena();
}
void MytrackerMessage::set_timezone(const ::std::string& value) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
#if LANG_CXX11
void MytrackerMessage::set_timezone(::std::string&& value) {
  set_has_timezone();
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
#endif
void MytrackerMessage::set_timezone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
void MytrackerMessage::set_timezone(const void* value, size_t size) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
::std::string* MytrackerMessage::mutable_timezone() {
  set_has_timezone();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_timezone() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  clear_has_timezone();
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    set_has_timezone();
  } else {
    clear_has_timezone();
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}

// optional uint32 screen_width = 53;
bool MytrackerMessage::has_screen_width() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
void MytrackerMessage::set_has_screen_width() {
  _has_bits_[1] |= 0x00000800u;
}
void MytrackerMessage::clear_has_screen_width() {
  _has_bits_[1] &= ~0x00000800u;
}
void MytrackerMessage::clear_screen_width() {
  screen_width_ = 0u;
  clear_has_screen_width();
}
::google::protobuf::uint32 MytrackerMessage::screen_width() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.screen_width)
  return screen_width_;
}
void MytrackerMessage::set_screen_width(::google::protobuf::uint32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.screen_width)
}

// optional uint32 screen_height = 54;
bool MytrackerMessage::has_screen_height() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
void MytrackerMessage::set_has_screen_height() {
  _has_bits_[1] |= 0x00001000u;
}
void MytrackerMessage::clear_has_screen_height() {
  _has_bits_[1] &= ~0x00001000u;
}
void MytrackerMessage::clear_screen_height() {
  screen_height_ = 0u;
  clear_has_screen_height();
}
::google::protobuf::uint32 MytrackerMessage::screen_height() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.screen_height)
  return screen_height_;
}
void MytrackerMessage::set_screen_height(::google::protobuf::uint32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.screen_height)
}

// optional uint32 dpi = 94;
bool MytrackerMessage::has_dpi() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
void MytrackerMessage::set_has_dpi() {
  _has_bits_[1] |= 0x40000000u;
}
void MytrackerMessage::clear_has_dpi() {
  _has_bits_[1] &= ~0x40000000u;
}
void MytrackerMessage::clear_dpi() {
  dpi_ = 0u;
  clear_has_dpi();
}
::google::protobuf::uint32 MytrackerMessage::dpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.dpi)
  return dpi_;
}
void MytrackerMessage::set_dpi(::google::protobuf::uint32 value) {
  set_has_dpi();
  dpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.dpi)
}

// optional uint32 xdpi = 97;
bool MytrackerMessage::has_xdpi() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
void MytrackerMessage::set_has_xdpi() {
  _has_bits_[1] |= 0x80000000u;
}
void MytrackerMessage::clear_has_xdpi() {
  _has_bits_[1] &= ~0x80000000u;
}
void MytrackerMessage::clear_xdpi() {
  xdpi_ = 0u;
  clear_has_xdpi();
}
::google::protobuf::uint32 MytrackerMessage::xdpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.xdpi)
  return xdpi_;
}
void MytrackerMessage::set_xdpi(::google::protobuf::uint32 value) {
  set_has_xdpi();
  xdpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.xdpi)
}

// optional uint32 ydpi = 98;
bool MytrackerMessage::has_ydpi() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
void MytrackerMessage::set_has_ydpi() {
  _has_bits_[2] |= 0x00000001u;
}
void MytrackerMessage::clear_has_ydpi() {
  _has_bits_[2] &= ~0x00000001u;
}
void MytrackerMessage::clear_ydpi() {
  ydpi_ = 0u;
  clear_has_ydpi();
}
::google::protobuf::uint32 MytrackerMessage::ydpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ydpi)
  return ydpi_;
}
void MytrackerMessage::set_ydpi(::google::protobuf::uint32 value) {
  set_has_ydpi();
  ydpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ydpi)
}

// optional bytes sim_loc = 60;
bool MytrackerMessage::has_sim_loc() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void MytrackerMessage::set_has_sim_loc() {
  _has_bits_[0] |= 0x00080000u;
}
void MytrackerMessage::clear_has_sim_loc() {
  _has_bits_[0] &= ~0x00080000u;
}
void MytrackerMessage::clear_sim_loc() {
  sim_loc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_loc();
}
const ::std::string& MytrackerMessage::sim_loc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  return sim_loc_.GetNoArena();
}
void MytrackerMessage::set_sim_loc(const ::std::string& value) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
#if LANG_CXX11
void MytrackerMessage::set_sim_loc(::std::string&& value) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
#endif
void MytrackerMessage::set_sim_loc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
void MytrackerMessage::set_sim_loc(const void* value, size_t size) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
::std::string* MytrackerMessage::mutable_sim_loc() {
  set_has_sim_loc();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  return sim_loc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_sim_loc() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  clear_has_sim_loc();
  return sim_loc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_sim_loc(::std::string* sim_loc) {
  if (sim_loc != NULL) {
    set_has_sim_loc();
  } else {
    clear_has_sim_loc();
  }
  sim_loc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_loc);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}

// optional uint32 operator_id = 61;
bool MytrackerMessage::has_operator_id() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
void MytrackerMessage::set_has_operator_id() {
  _has_bits_[1] |= 0x00002000u;
}
void MytrackerMessage::clear_has_operator_id() {
  _has_bits_[1] &= ~0x00002000u;
}
void MytrackerMessage::clear_operator_id() {
  operator_id_ = 0u;
  clear_has_operator_id();
}
::google::protobuf::uint32 MytrackerMessage::operator_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_id)
  return operator_id_;
}
void MytrackerMessage::set_operator_id(::google::protobuf::uint32 value) {
  set_has_operator_id();
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_id)
}

// optional bytes operator_name = 62;
bool MytrackerMessage::has_operator_name() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void MytrackerMessage::set_has_operator_name() {
  _has_bits_[0] |= 0x00100000u;
}
void MytrackerMessage::clear_has_operator_name() {
  _has_bits_[0] &= ~0x00100000u;
}
void MytrackerMessage::clear_operator_name() {
  operator_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operator_name();
}
const ::std::string& MytrackerMessage::operator_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  return operator_name_.GetNoArena();
}
void MytrackerMessage::set_operator_name(const ::std::string& value) {
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
#if LANG_CXX11
void MytrackerMessage::set_operator_name(::std::string&& value) {
  set_has_operator_name();
  operator_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
#endif
void MytrackerMessage::set_operator_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
void MytrackerMessage::set_operator_name(const void* value, size_t size) {
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
::std::string* MytrackerMessage::mutable_operator_name() {
  set_has_operator_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  return operator_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_operator_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  clear_has_operator_name();
  return operator_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_operator_name(::std::string* operator_name) {
  if (operator_name != NULL) {
    set_has_operator_name();
  } else {
    clear_has_operator_name();
  }
  operator_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}

// optional uint32 sim_operator_id = 63;
bool MytrackerMessage::has_sim_operator_id() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
void MytrackerMessage::set_has_sim_operator_id() {
  _has_bits_[1] |= 0x00004000u;
}
void MytrackerMessage::clear_has_sim_operator_id() {
  _has_bits_[1] &= ~0x00004000u;
}
void MytrackerMessage::clear_sim_operator_id() {
  sim_operator_id_ = 0u;
  clear_has_sim_operator_id();
}
::google::protobuf::uint32 MytrackerMessage::sim_operator_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id)
  return sim_operator_id_;
}
void MytrackerMessage::set_sim_operator_id(::google::protobuf::uint32 value) {
  set_has_sim_operator_id();
  sim_operator_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id)
}

// optional bytes sim_loc_str = 99;
bool MytrackerMessage::has_sim_loc_str() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void MytrackerMessage::set_has_sim_loc_str() {
  _has_bits_[0] |= 0x20000000u;
}
void MytrackerMessage::clear_has_sim_loc_str() {
  _has_bits_[0] &= ~0x20000000u;
}
void MytrackerMessage::clear_sim_loc_str() {
  sim_loc_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_loc_str();
}
const ::std::string& MytrackerMessage::sim_loc_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  return sim_loc_str_.GetNoArena();
}
void MytrackerMessage::set_sim_loc_str(const ::std::string& value) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
#if LANG_CXX11
void MytrackerMessage::set_sim_loc_str(::std::string&& value) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
#endif
void MytrackerMessage::set_sim_loc_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
void MytrackerMessage::set_sim_loc_str(const void* value, size_t size) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
::std::string* MytrackerMessage::mutable_sim_loc_str() {
  set_has_sim_loc_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  return sim_loc_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_sim_loc_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  clear_has_sim_loc_str();
  return sim_loc_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_sim_loc_str(::std::string* sim_loc_str) {
  if (sim_loc_str != NULL) {
    set_has_sim_loc_str();
  } else {
    clear_has_sim_loc_str();
  }
  sim_loc_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_loc_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}

// optional bytes operator_id_str = 100;
bool MytrackerMessage::has_operator_id_str() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void MytrackerMessage::set_has_operator_id_str() {
  _has_bits_[0] |= 0x40000000u;
}
void MytrackerMessage::clear_has_operator_id_str() {
  _has_bits_[0] &= ~0x40000000u;
}
void MytrackerMessage::clear_operator_id_str() {
  operator_id_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operator_id_str();
}
const ::std::string& MytrackerMessage::operator_id_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  return operator_id_str_.GetNoArena();
}
void MytrackerMessage::set_operator_id_str(const ::std::string& value) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
#if LANG_CXX11
void MytrackerMessage::set_operator_id_str(::std::string&& value) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
#endif
void MytrackerMessage::set_operator_id_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
void MytrackerMessage::set_operator_id_str(const void* value, size_t size) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
::std::string* MytrackerMessage::mutable_operator_id_str() {
  set_has_operator_id_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  return operator_id_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_operator_id_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  clear_has_operator_id_str();
  return operator_id_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_operator_id_str(::std::string* operator_id_str) {
  if (operator_id_str != NULL) {
    set_has_operator_id_str();
  } else {
    clear_has_operator_id_str();
  }
  operator_id_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_id_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}

// optional bytes sim_operator_id_str = 101;
bool MytrackerMessage::has_sim_operator_id_str() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void MytrackerMessage::set_has_sim_operator_id_str() {
  _has_bits_[0] |= 0x80000000u;
}
void MytrackerMessage::clear_has_sim_operator_id_str() {
  _has_bits_[0] &= ~0x80000000u;
}
void MytrackerMessage::clear_sim_operator_id_str() {
  sim_operator_id_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_operator_id_str();
}
const ::std::string& MytrackerMessage::sim_operator_id_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  return sim_operator_id_str_.GetNoArena();
}
void MytrackerMessage::set_sim_operator_id_str(const ::std::string& value) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
#if LANG_CXX11
void MytrackerMessage::set_sim_operator_id_str(::std::string&& value) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
#endif
void MytrackerMessage::set_sim_operator_id_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
void MytrackerMessage::set_sim_operator_id_str(const void* value, size_t size) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
::std::string* MytrackerMessage::mutable_sim_operator_id_str() {
  set_has_sim_operator_id_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  return sim_operator_id_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_sim_operator_id_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  clear_has_sim_operator_id_str();
  return sim_operator_id_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_sim_operator_id_str(::std::string* sim_operator_id_str) {
  if (sim_operator_id_str != NULL) {
    set_has_sim_operator_id_str();
  } else {
    clear_has_sim_operator_id_str();
  }
  sim_operator_id_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_operator_id_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}

// optional uint32 connection = 64;
bool MytrackerMessage::has_connection() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
void MytrackerMessage::set_has_connection() {
  _has_bits_[1] |= 0x00008000u;
}
void MytrackerMessage::clear_has_connection() {
  _has_bits_[1] &= ~0x00008000u;
}
void MytrackerMessage::clear_connection() {
  connection_ = 0u;
  clear_has_connection();
}
::google::protobuf::uint32 MytrackerMessage::connection() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.connection)
  return connection_;
}
void MytrackerMessage::set_connection(::google::protobuf::uint32 value) {
  set_has_connection();
  connection_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.connection)
}

// optional bytes connection_type = 78;
bool MytrackerMessage::has_connection_type() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void MytrackerMessage::set_has_connection_type() {
  _has_bits_[0] |= 0x00400000u;
}
void MytrackerMessage::clear_has_connection_type() {
  _has_bits_[0] &= ~0x00400000u;
}
void MytrackerMessage::clear_connection_type() {
  connection_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_connection_type();
}
const ::std::string& MytrackerMessage::connection_type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  return connection_type_.GetNoArena();
}
void MytrackerMessage::set_connection_type(const ::std::string& value) {
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
#if LANG_CXX11
void MytrackerMessage::set_connection_type(::std::string&& value) {
  set_has_connection_type();
  connection_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
#endif
void MytrackerMessage::set_connection_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
void MytrackerMessage::set_connection_type(const void* value, size_t size) {
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
::std::string* MytrackerMessage::mutable_connection_type() {
  set_has_connection_type();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  return connection_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MytrackerMessage::release_connection_type() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  clear_has_connection_type();
  return connection_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MytrackerMessage::set_allocated_connection_type(::std::string* connection_type) {
  if (connection_type != NULL) {
    set_has_connection_type();
  } else {
    clear_has_connection_type();
  }
  connection_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connection_type);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}

// optional uint32 bluetooth_enabled = 73;
bool MytrackerMessage::has_bluetooth_enabled() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
void MytrackerMessage::set_has_bluetooth_enabled() {
  _has_bits_[1] |= 0x00080000u;
}
void MytrackerMessage::clear_has_bluetooth_enabled() {
  _has_bits_[1] &= ~0x00080000u;
}
void MytrackerMessage::clear_bluetooth_enabled() {
  bluetooth_enabled_ = 0u;
  clear_has_bluetooth_enabled();
}
::google::protobuf::uint32 MytrackerMessage::bluetooth_enabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.bluetooth_enabled)
  return bluetooth_enabled_;
}
void MytrackerMessage::set_bluetooth_enabled(::google::protobuf::uint32 value) {
  set_has_bluetooth_enabled();
  bluetooth_enabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.bluetooth_enabled)
}

// optional double lat = 70;
bool MytrackerMessage::has_lat() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
void MytrackerMessage::set_has_lat() {
  _has_bits_[1] |= 0x00020000u;
}
void MytrackerMessage::clear_has_lat() {
  _has_bits_[1] &= ~0x00020000u;
}
void MytrackerMessage::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
double MytrackerMessage::lat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.lat)
  return lat_;
}
void MytrackerMessage::set_lat(double value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.lat)
}

// optional double lon = 71;
bool MytrackerMessage::has_lon() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
void MytrackerMessage::set_has_lon() {
  _has_bits_[1] |= 0x00040000u;
}
void MytrackerMessage::clear_has_lon() {
  _has_bits_[1] &= ~0x00040000u;
}
void MytrackerMessage::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
double MytrackerMessage::lon() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.lon)
  return lon_;
}
void MytrackerMessage::set_lon(double value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.lon)
}

// optional double speed = 77;
bool MytrackerMessage::has_speed() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
void MytrackerMessage::set_has_speed() {
  _has_bits_[1] |= 0x00400000u;
}
void MytrackerMessage::clear_has_speed() {
  _has_bits_[1] &= ~0x00400000u;
}
void MytrackerMessage::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
double MytrackerMessage::speed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.speed)
  return speed_;
}
void MytrackerMessage::set_speed(double value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.speed)
}

// optional double location_accuracy = 75;
bool MytrackerMessage::has_location_accuracy() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
void MytrackerMessage::set_has_location_accuracy() {
  _has_bits_[1] |= 0x00200000u;
}
void MytrackerMessage::clear_has_location_accuracy() {
  _has_bits_[1] &= ~0x00200000u;
}
void MytrackerMessage::clear_location_accuracy() {
  location_accuracy_ = 0;
  clear_has_location_accuracy();
}
double MytrackerMessage::location_accuracy() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_accuracy)
  return location_accuracy_;
}
void MytrackerMessage::set_location_accuracy(double value) {
  set_has_location_accuracy();
  location_accuracy_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_accuracy)
}

// optional uint32 location_timestamp = 76;
bool MytrackerMessage::has_location_timestamp() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
void MytrackerMessage::set_has_location_timestamp() {
  _has_bits_[1] |= 0x00100000u;
}
void MytrackerMessage::clear_has_location_timestamp() {
  _has_bits_[1] &= ~0x00100000u;
}
void MytrackerMessage::clear_location_timestamp() {
  location_timestamp_ = 0u;
  clear_has_location_timestamp();
}
::google::protobuf::uint32 MytrackerMessage::location_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_timestamp)
  return location_timestamp_;
}
void MytrackerMessage::set_location_timestamp(::google::protobuf::uint32 value) {
  set_has_location_timestamp();
  location_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_timestamp)
}

// optional uint32 location_provider = 72;
bool MytrackerMessage::has_location_provider() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
void MytrackerMessage::set_has_location_provider() {
  _has_bits_[1] |= 0x00010000u;
}
void MytrackerMessage::clear_has_location_provider() {
  _has_bits_[1] &= ~0x00010000u;
}
void MytrackerMessage::clear_location_provider() {
  location_provider_ = 0u;
  clear_has_location_provider();
}
::google::protobuf::uint32 MytrackerMessage::location_provider() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_provider)
  return location_provider_;
}
void MytrackerMessage::set_location_provider(::google::protobuf::uint32 value) {
  set_has_location_provider();
  location_provider_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_provider)
}

// optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
bool MytrackerMessage::has_wifi() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void MytrackerMessage::set_has_wifi() {
  _has_bits_[1] |= 0x00000001u;
}
void MytrackerMessage::clear_has_wifi() {
  _has_bits_[1] &= ~0x00000001u;
}
void MytrackerMessage::clear_wifi() {
  if (wifi_ != NULL) wifi_->::ru::mail::go::webbase::rb::MytrackerMessage_Wifi::Clear();
  clear_has_wifi();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& MytrackerMessage::wifi() const {
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* p = wifi_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi*>(
      &::ru::mail::go::webbase::rb::_MytrackerMessage_Wifi_default_instance_);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::mutable_wifi() {
  set_has_wifi();
  if (wifi_ == NULL) {
    wifi_ = new ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  return wifi_;
}
::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::release_wifi() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  clear_has_wifi();
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* temp = wifi_;
  wifi_ = NULL;
  return temp;
}
void MytrackerMessage::set_allocated_wifi(::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* wifi) {
  delete wifi_;
  wifi_ = wifi;
  if (wifi) {
    set_has_wifi();
  } else {
    clear_has_wifi();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
int MytrackerMessage::wifi_around_size() const {
  return wifi_around_.size();
}
void MytrackerMessage::clear_wifi_around() {
  wifi_around_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& MytrackerMessage::wifi_around(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::mutable_wifi_around(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::add_wifi_around() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >*
MytrackerMessage::mutable_wifi_around() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return &wifi_around_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >&
MytrackerMessage::wifi_around() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_;
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
int MytrackerMessage::cell_size() const {
  return cell_.size();
}
void MytrackerMessage::clear_cell() {
  cell_.Clear();
}
const ::ru::mail::go::webbase::rb::MytrackerMessage_Cell& MytrackerMessage::cell(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Get(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Cell* MytrackerMessage::mutable_cell(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Mutable(index);
}
::ru::mail::go::webbase::rb::MytrackerMessage_Cell* MytrackerMessage::add_cell() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >*
MytrackerMessage::mutable_cell() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return &cell_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >&
MytrackerMessage::cell() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rb
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
