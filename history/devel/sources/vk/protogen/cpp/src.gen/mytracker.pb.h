// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mytracker.proto

#ifndef PROTOBUF_mytracker_2eproto__INCLUDED
#define PROTOBUF_mytracker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace rb {
class MytrackerAppUser;
class MytrackerAppUserDefaultTypeInternal;
extern MytrackerAppUserDefaultTypeInternal _MytrackerAppUser_default_instance_;
class MytrackerEvent;
class MytrackerEventDefaultTypeInternal;
extern MytrackerEventDefaultTypeInternal _MytrackerEvent_default_instance_;
class MytrackerEvent_PairMsg;
class MytrackerEvent_PairMsgDefaultTypeInternal;
extern MytrackerEvent_PairMsgDefaultTypeInternal _MytrackerEvent_PairMsg_default_instance_;
class MytrackerMessage;
class MytrackerMessageDefaultTypeInternal;
extern MytrackerMessageDefaultTypeInternal _MytrackerMessage_default_instance_;
class MytrackerMessage_App;
class MytrackerMessage_AppDefaultTypeInternal;
extern MytrackerMessage_AppDefaultTypeInternal _MytrackerMessage_App_default_instance_;
class MytrackerMessage_Cell;
class MytrackerMessage_CellDefaultTypeInternal;
extern MytrackerMessage_CellDefaultTypeInternal _MytrackerMessage_Cell_default_instance_;
class MytrackerMessage_Event;
class MytrackerMessage_EventDefaultTypeInternal;
extern MytrackerMessage_EventDefaultTypeInternal _MytrackerMessage_Event_default_instance_;
class MytrackerMessage_Event_PairMsg;
class MytrackerMessage_Event_PairMsgDefaultTypeInternal;
extern MytrackerMessage_Event_PairMsgDefaultTypeInternal _MytrackerMessage_Event_PairMsg_default_instance_;
class MytrackerMessage_Event_Session;
class MytrackerMessage_Event_SessionDefaultTypeInternal;
extern MytrackerMessage_Event_SessionDefaultTypeInternal _MytrackerMessage_Event_Session_default_instance_;
class MytrackerMessage_Wifi;
class MytrackerMessage_WifiDefaultTypeInternal;
extern MytrackerMessage_WifiDefaultTypeInternal _MytrackerMessage_Wifi_default_instance_;
}  // namespace rb
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace rb {

namespace protobuf_mytracker_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mytracker_2eproto

// ===================================================================

class MytrackerAppUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerAppUser) */ {
 public:
  MytrackerAppUser();
  virtual ~MytrackerAppUser();

  MytrackerAppUser(const MytrackerAppUser& from);

  inline MytrackerAppUser& operator=(const MytrackerAppUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerAppUser(MytrackerAppUser&& from) noexcept
    : MytrackerAppUser() {
    *this = ::std::move(from);
  }

  inline MytrackerAppUser& operator=(MytrackerAppUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerAppUser& default_instance();

  static inline const MytrackerAppUser* internal_default_instance() {
    return reinterpret_cast<const MytrackerAppUser*>(
               &_MytrackerAppUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MytrackerAppUser* other);
  friend void swap(MytrackerAppUser& a, MytrackerAppUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerAppUser* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerAppUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerAppUser& from);
  void MergeFrom(const MytrackerAppUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerAppUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_version_id = 1;
  bool has_app_version_id() const;
  void clear_app_version_id();
  static const int kAppVersionIdFieldNumber = 1;
  ::google::protobuf::uint32 app_version_id() const;
  void set_app_version_id(::google::protobuf::uint32 value);

  // optional uint32 geo = 2;
  bool has_geo() const;
  void clear_geo();
  static const int kGeoFieldNumber = 2;
  ::google::protobuf::uint32 geo() const;
  void set_geo(::google::protobuf::uint32 value);

  // optional uint32 adman_version_id = 3;
  bool has_adman_version_id() const;
  void clear_adman_version_id();
  static const int kAdmanVersionIdFieldNumber = 3;
  ::google::protobuf::uint32 adman_version_id() const;
  void set_adman_version_id(::google::protobuf::uint32 value);

  // optional uint32 mytracker_version_id = 4;
  bool has_mytracker_version_id() const;
  void clear_mytracker_version_id();
  static const int kMytrackerVersionIdFieldNumber = 4;
  ::google::protobuf::uint32 mytracker_version_id() const;
  void set_mytracker_version_id(::google::protobuf::uint32 value);

  // optional uint64 am_stat = 5;
  bool has_am_stat() const;
  void clear_am_stat();
  static const int kAmStatFieldNumber = 5;
  ::google::protobuf::uint64 am_stat() const;
  void set_am_stat(::google::protobuf::uint64 value);

  // optional uint64 pm_stat = 6;
  bool has_pm_stat() const;
  void clear_pm_stat();
  static const int kPmStatFieldNumber = 6;
  ::google::protobuf::uint64 pm_stat() const;
  void set_pm_stat(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerAppUser)
 private:
  void set_has_app_version_id();
  void clear_has_app_version_id();
  void set_has_geo();
  void clear_has_geo();
  void set_has_adman_version_id();
  void clear_has_adman_version_id();
  void set_has_mytracker_version_id();
  void clear_has_mytracker_version_id();
  void set_has_am_stat();
  void clear_has_am_stat();
  void set_has_pm_stat();
  void clear_has_pm_stat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 app_version_id_;
  ::google::protobuf::uint32 geo_;
  ::google::protobuf::uint32 adman_version_id_;
  ::google::protobuf::uint32 mytracker_version_id_;
  ::google::protobuf::uint64 am_stat_;
  ::google::protobuf::uint64 pm_stat_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerEvent_PairMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg) */ {
 public:
  MytrackerEvent_PairMsg();
  virtual ~MytrackerEvent_PairMsg();

  MytrackerEvent_PairMsg(const MytrackerEvent_PairMsg& from);

  inline MytrackerEvent_PairMsg& operator=(const MytrackerEvent_PairMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerEvent_PairMsg(MytrackerEvent_PairMsg&& from) noexcept
    : MytrackerEvent_PairMsg() {
    *this = ::std::move(from);
  }

  inline MytrackerEvent_PairMsg& operator=(MytrackerEvent_PairMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerEvent_PairMsg& default_instance();

  static inline const MytrackerEvent_PairMsg* internal_default_instance() {
    return reinterpret_cast<const MytrackerEvent_PairMsg*>(
               &_MytrackerEvent_PairMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MytrackerEvent_PairMsg* other);
  friend void swap(MytrackerEvent_PairMsg& a, MytrackerEvent_PairMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerEvent_PairMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerEvent_PairMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerEvent_PairMsg& from);
  void MergeFrom(const MytrackerEvent_PairMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerEvent_PairMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerEvent) */ {
 public:
  MytrackerEvent();
  virtual ~MytrackerEvent();

  MytrackerEvent(const MytrackerEvent& from);

  inline MytrackerEvent& operator=(const MytrackerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerEvent(MytrackerEvent&& from) noexcept
    : MytrackerEvent() {
    *this = ::std::move(from);
  }

  inline MytrackerEvent& operator=(MytrackerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerEvent& default_instance();

  static inline const MytrackerEvent* internal_default_instance() {
    return reinterpret_cast<const MytrackerEvent*>(
               &_MytrackerEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MytrackerEvent* other);
  friend void swap(MytrackerEvent& a, MytrackerEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerEvent& from);
  void MergeFrom(const MytrackerEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MytrackerEvent_PairMsg PairMsg;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg& param(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* mutable_param(int index);
  ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* add_param();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >*
      mutable_param();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >&
      param() const;

  // optional bytes name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerEvent)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg > param_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 timestamp_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_Event_PairMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg) */ {
 public:
  MytrackerMessage_Event_PairMsg();
  virtual ~MytrackerMessage_Event_PairMsg();

  MytrackerMessage_Event_PairMsg(const MytrackerMessage_Event_PairMsg& from);

  inline MytrackerMessage_Event_PairMsg& operator=(const MytrackerMessage_Event_PairMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_Event_PairMsg(MytrackerMessage_Event_PairMsg&& from) noexcept
    : MytrackerMessage_Event_PairMsg() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_Event_PairMsg& operator=(MytrackerMessage_Event_PairMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_Event_PairMsg& default_instance();

  static inline const MytrackerMessage_Event_PairMsg* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_Event_PairMsg*>(
               &_MytrackerMessage_Event_PairMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MytrackerMessage_Event_PairMsg* other);
  friend void swap(MytrackerMessage_Event_PairMsg& a, MytrackerMessage_Event_PairMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_Event_PairMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_Event_PairMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_Event_PairMsg& from);
  void MergeFrom(const MytrackerMessage_Event_PairMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_Event_PairMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_Event_Session : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session) */ {
 public:
  MytrackerMessage_Event_Session();
  virtual ~MytrackerMessage_Event_Session();

  MytrackerMessage_Event_Session(const MytrackerMessage_Event_Session& from);

  inline MytrackerMessage_Event_Session& operator=(const MytrackerMessage_Event_Session& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_Event_Session(MytrackerMessage_Event_Session&& from) noexcept
    : MytrackerMessage_Event_Session() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_Event_Session& operator=(MytrackerMessage_Event_Session&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_Event_Session& default_instance();

  static inline const MytrackerMessage_Event_Session* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_Event_Session*>(
               &_MytrackerMessage_Event_Session_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MytrackerMessage_Event_Session* other);
  friend void swap(MytrackerMessage_Event_Session& a, MytrackerMessage_Event_Session& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_Event_Session* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_Event_Session* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_Event_Session& from);
  void MergeFrom(const MytrackerMessage_Event_Session& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_Event_Session* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 start = 1;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // optional int32 end = 2 [default = -1];
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int32 end() const;
  void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session)
 private:
  void set_has_start();
  void clear_has_start();
  void set_has_end();
  void clear_has_end();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 end_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.Event) */ {
 public:
  MytrackerMessage_Event();
  virtual ~MytrackerMessage_Event();

  MytrackerMessage_Event(const MytrackerMessage_Event& from);

  inline MytrackerMessage_Event& operator=(const MytrackerMessage_Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_Event(MytrackerMessage_Event&& from) noexcept
    : MytrackerMessage_Event() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_Event& operator=(MytrackerMessage_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_Event& default_instance();

  static inline const MytrackerMessage_Event* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_Event*>(
               &_MytrackerMessage_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MytrackerMessage_Event* other);
  friend void swap(MytrackerMessage_Event& a, MytrackerMessage_Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_Event* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_Event& from);
  void MergeFrom(const MytrackerMessage_Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MytrackerMessage_Event_PairMsg PairMsg;
  typedef MytrackerMessage_Event_Session Session;

  // accessors -------------------------------------------------------

  // repeated int32 timestamp = 2;
  int timestamp_size() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int32 timestamp(int index) const;
  void set_timestamp(int index, ::google::protobuf::int32 value);
  void add_timestamp(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      timestamp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_timestamp();

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg& params(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* mutable_params(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* add_params();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >&
      params() const;

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
  int sessions_size() const;
  void clear_sessions();
  static const int kSessionsFieldNumber = 37;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session& sessions(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* mutable_sessions(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* add_sessions();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >*
      mutable_sessions();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >&
      sessions() const;

  // optional bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes referrer = 17;
  bool has_referrer() const;
  void clear_referrer();
  static const int kReferrerFieldNumber = 17;
  const ::std::string& referrer() const;
  void set_referrer(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer(::std::string&& value);
  #endif
  void set_referrer(const char* value);
  void set_referrer(const void* value, size_t size);
  ::std::string* mutable_referrer();
  ::std::string* release_referrer();
  void set_allocated_referrer(::std::string* referrer);

  // optional bytes app_version = 18;
  bool has_app_version() const;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 18;
  const ::std::string& app_version() const;
  void set_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_app_version(::std::string&& value);
  #endif
  void set_app_version(const char* value);
  void set_app_version(const void* value, size_t size);
  ::std::string* mutable_app_version();
  ::std::string* release_app_version();
  void set_allocated_app_version(::std::string* app_version);

  // optional bytes revenue = 30;
  bool has_revenue() const;
  void clear_revenue();
  static const int kRevenueFieldNumber = 30;
  const ::std::string& revenue() const;
  void set_revenue(const ::std::string& value);
  #if LANG_CXX11
  void set_revenue(::std::string&& value);
  #endif
  void set_revenue(const char* value);
  void set_revenue(const void* value, size_t size);
  ::std::string* mutable_revenue();
  ::std::string* release_revenue();
  void set_allocated_revenue(::std::string* revenue);

  // optional bytes currency = 31;
  bool has_currency() const;
  void clear_currency();
  static const int kCurrencyFieldNumber = 31;
  const ::std::string& currency() const;
  void set_currency(const ::std::string& value);
  #if LANG_CXX11
  void set_currency(::std::string&& value);
  #endif
  void set_currency(const char* value);
  void set_currency(const void* value, size_t size);
  ::std::string* mutable_currency();
  ::std::string* release_currency();
  void set_allocated_currency(::std::string* currency);

  // optional bytes receipt = 32;
  bool has_receipt() const;
  void clear_receipt();
  static const int kReceiptFieldNumber = 32;
  const ::std::string& receipt() const;
  void set_receipt(const ::std::string& value);
  #if LANG_CXX11
  void set_receipt(::std::string&& value);
  #endif
  void set_receipt(const char* value);
  void set_receipt(const void* value, size_t size);
  ::std::string* mutable_receipt();
  ::std::string* release_receipt();
  void set_allocated_receipt(::std::string* receipt);

  // optional bytes product_id = 33;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 33;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const void* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // optional bytes transaction_id = 34;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 34;
  const ::std::string& transaction_id() const;
  void set_transaction_id(const ::std::string& value);
  #if LANG_CXX11
  void set_transaction_id(::std::string&& value);
  #endif
  void set_transaction_id(const char* value);
  void set_transaction_id(const void* value, size_t size);
  ::std::string* mutable_transaction_id();
  ::std::string* release_transaction_id();
  void set_allocated_transaction_id(::std::string* transaction_id);

  // optional bytes purchase_data = 35;
  bool has_purchase_data() const;
  void clear_purchase_data();
  static const int kPurchaseDataFieldNumber = 35;
  const ::std::string& purchase_data() const;
  void set_purchase_data(const ::std::string& value);
  #if LANG_CXX11
  void set_purchase_data(::std::string&& value);
  #endif
  void set_purchase_data(const char* value);
  void set_purchase_data(const void* value, size_t size);
  ::std::string* mutable_purchase_data();
  ::std::string* release_purchase_data();
  void set_allocated_purchase_data(::std::string* purchase_data);

  // optional bytes data_signature = 36;
  bool has_data_signature() const;
  void clear_data_signature();
  static const int kDataSignatureFieldNumber = 36;
  const ::std::string& data_signature() const;
  void set_data_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_data_signature(::std::string&& value);
  #endif
  void set_data_signature(const char* value);
  void set_data_signature(const void* value, size_t size);
  ::std::string* mutable_data_signature();
  ::std::string* release_data_signature();
  void set_allocated_data_signature(::std::string* data_signature);

  // optional bytes installer = 38;
  bool has_installer() const;
  void clear_installer();
  static const int kInstallerFieldNumber = 38;
  const ::std::string& installer() const;
  void set_installer(const ::std::string& value);
  #if LANG_CXX11
  void set_installer(::std::string&& value);
  #endif
  void set_installer(const char* value);
  void set_installer(const void* value, size_t size);
  ::std::string* mutable_installer();
  ::std::string* release_installer();
  void set_allocated_installer(::std::string* installer);

  // optional bytes orderId = 39;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderIdFieldNumber = 39;
  const ::std::string& orderid() const;
  void set_orderid(const ::std::string& value);
  #if LANG_CXX11
  void set_orderid(::std::string&& value);
  #endif
  void set_orderid(const char* value);
  void set_orderid(const void* value, size_t size);
  ::std::string* mutable_orderid();
  ::std::string* release_orderid();
  void set_allocated_orderid(::std::string* orderid);

  // optional bytes packageName = 40;
  bool has_packagename() const;
  void clear_packagename();
  static const int kPackageNameFieldNumber = 40;
  const ::std::string& packagename() const;
  void set_packagename(const ::std::string& value);
  #if LANG_CXX11
  void set_packagename(::std::string&& value);
  #endif
  void set_packagename(const char* value);
  void set_packagename(const void* value, size_t size);
  ::std::string* mutable_packagename();
  ::std::string* release_packagename();
  void set_allocated_packagename(::std::string* packagename);

  // optional bytes productDataId = 41;
  bool has_productdataid() const;
  void clear_productdataid();
  static const int kProductDataIdFieldNumber = 41;
  const ::std::string& productdataid() const;
  void set_productdataid(const ::std::string& value);
  #if LANG_CXX11
  void set_productdataid(::std::string&& value);
  #endif
  void set_productdataid(const char* value);
  void set_productdataid(const void* value, size_t size);
  ::std::string* mutable_productdataid();
  ::std::string* release_productdataid();
  void set_allocated_productdataid(::std::string* productdataid);

  // optional bytes developerPayload = 44;
  bool has_developerpayload() const;
  void clear_developerpayload();
  static const int kDeveloperPayloadFieldNumber = 44;
  const ::std::string& developerpayload() const;
  void set_developerpayload(const ::std::string& value);
  #if LANG_CXX11
  void set_developerpayload(::std::string&& value);
  #endif
  void set_developerpayload(const char* value);
  void set_developerpayload(const void* value, size_t size);
  ::std::string* mutable_developerpayload();
  ::std::string* release_developerpayload();
  void set_allocated_developerpayload(::std::string* developerpayload);

  // optional bytes purchaseToken = 45;
  bool has_purchasetoken() const;
  void clear_purchasetoken();
  static const int kPurchaseTokenFieldNumber = 45;
  const ::std::string& purchasetoken() const;
  void set_purchasetoken(const ::std::string& value);
  #if LANG_CXX11
  void set_purchasetoken(::std::string&& value);
  #endif
  void set_purchasetoken(const char* value);
  void set_purchasetoken(const void* value, size_t size);
  ::std::string* mutable_purchasetoken();
  ::std::string* release_purchasetoken();
  void set_allocated_purchasetoken(::std::string* purchasetoken);

  // optional bytes from_app_version = 48;
  bool has_from_app_version() const;
  void clear_from_app_version();
  static const int kFromAppVersionFieldNumber = 48;
  const ::std::string& from_app_version() const;
  void set_from_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_from_app_version(::std::string&& value);
  #endif
  void set_from_app_version(const char* value);
  void set_from_app_version(const void* value, size_t size);
  ::std::string* mutable_from_app_version();
  ::std::string* release_from_app_version();
  void set_allocated_from_app_version(::std::string* from_app_version);

  // optional bytes from_app_build = 49;
  bool has_from_app_build() const;
  void clear_from_app_build();
  static const int kFromAppBuildFieldNumber = 49;
  const ::std::string& from_app_build() const;
  void set_from_app_build(const ::std::string& value);
  #if LANG_CXX11
  void set_from_app_build(::std::string&& value);
  #endif
  void set_from_app_build(const char* value);
  void set_from_app_build(const void* value, size_t size);
  ::std::string* mutable_from_app_build();
  ::std::string* release_from_app_build();
  void set_allocated_from_app_build(::std::string* from_app_build);

  // optional bytes receipt_gz = 50;
  bool has_receipt_gz() const;
  void clear_receipt_gz();
  static const int kReceiptGzFieldNumber = 50;
  const ::std::string& receipt_gz() const;
  void set_receipt_gz(const ::std::string& value);
  #if LANG_CXX11
  void set_receipt_gz(::std::string&& value);
  #endif
  void set_receipt_gz(const char* value);
  void set_receipt_gz(const void* value, size_t size);
  ::std::string* mutable_receipt_gz();
  ::std::string* release_receipt_gz();
  void set_allocated_receipt_gz(::std::string* receipt_gz);

  // optional bytes original_transaction_id = 51;
  bool has_original_transaction_id() const;
  void clear_original_transaction_id();
  static const int kOriginalTransactionIdFieldNumber = 51;
  const ::std::string& original_transaction_id() const;
  void set_original_transaction_id(const ::std::string& value);
  #if LANG_CXX11
  void set_original_transaction_id(::std::string&& value);
  #endif
  void set_original_transaction_id(const char* value);
  void set_original_transaction_id(const void* value, size_t size);
  ::std::string* mutable_original_transaction_id();
  ::std::string* release_original_transaction_id();
  void set_allocated_original_transaction_id(::std::string* original_transaction_id);

  // optional bytes deeplink = 53;
  bool has_deeplink() const;
  void clear_deeplink();
  static const int kDeeplinkFieldNumber = 53;
  const ::std::string& deeplink() const;
  void set_deeplink(const ::std::string& value);
  #if LANG_CXX11
  void set_deeplink(::std::string&& value);
  #endif
  void set_deeplink(const char* value);
  void set_deeplink(const void* value, size_t size);
  ::std::string* mutable_deeplink();
  ::std::string* release_deeplink();
  void set_allocated_deeplink(::std::string* deeplink);

  // optional bytes level = 59;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 59;
  const ::std::string& level() const;
  void set_level(const ::std::string& value);
  #if LANG_CXX11
  void set_level(::std::string&& value);
  #endif
  void set_level(const char* value);
  void set_level(const void* value, size_t size);
  ::std::string* mutable_level();
  ::std::string* release_level();
  void set_allocated_level(::std::string* level);

  // optional uint32 app_event = 1;
  bool has_app_event() const;
  void clear_app_event();
  static const int kAppEventFieldNumber = 1;
  ::google::protobuf::uint32 app_event() const;
  void set_app_event(::google::protobuf::uint32 value);

  // optional int32 first_install_time = 16;
  bool has_first_install_time() const;
  void clear_first_install_time();
  static const int kFirstInstallTimeFieldNumber = 16;
  ::google::protobuf::int32 first_install_time() const;
  void set_first_install_time(::google::protobuf::int32 value);

  // optional uint32 timestamps_skipped = 19;
  bool has_timestamps_skipped() const;
  void clear_timestamps_skipped();
  static const int kTimestampsSkippedFieldNumber = 19;
  ::google::protobuf::uint32 timestamps_skipped() const;
  void set_timestamps_skipped(::google::protobuf::uint32 value);

  // optional uint32 purchaseState = 43;
  bool has_purchasestate() const;
  void clear_purchasestate();
  static const int kPurchaseStateFieldNumber = 43;
  ::google::protobuf::uint32 purchasestate() const;
  void set_purchasestate(::google::protobuf::uint32 value);

  // optional uint64 purchaseTime = 42;
  bool has_purchasetime() const;
  void clear_purchasetime();
  static const int kPurchaseTimeFieldNumber = 42;
  ::google::protobuf::uint64 purchasetime() const;
  void set_purchasetime(::google::protobuf::uint64 value);

  // optional bool autoRenewing = 46;
  bool has_autorenewing() const;
  void clear_autorenewing();
  static const int kAutoRenewingFieldNumber = 46;
  bool autorenewing() const;
  void set_autorenewing(bool value);

  // optional bool has_iad_attribution = 47;
  bool has_has_iad_attribution() const;
  void clear_has_iad_attribution();
  static const int kHasIadAttributionFieldNumber = 47;
  bool has_iad_attribution() const;
  void set_has_iad_attribution(bool value);

  // optional bool get_attribution = 52;
  bool has_get_attribution() const;
  void clear_get_attribution();
  static const int kGetAttributionFieldNumber = 52;
  bool get_attribution() const;
  void set_get_attribution(bool value);

  // optional bool deeplink_error = 56;
  bool has_deeplink_error() const;
  void clear_deeplink_error();
  static const int kDeeplinkErrorFieldNumber = 56;
  bool deeplink_error() const;
  void set_deeplink_error(bool value);

  // optional uint32 deeplink_timestamp = 54;
  bool has_deeplink_timestamp() const;
  void clear_deeplink_timestamp();
  static const int kDeeplinkTimestampFieldNumber = 54;
  ::google::protobuf::uint32 deeplink_timestamp() const;
  void set_deeplink_timestamp(::google::protobuf::uint32 value);

  // optional uint32 deeplink_key_type = 55;
  bool has_deeplink_key_type() const;
  void clear_deeplink_key_type();
  static const int kDeeplinkKeyTypeFieldNumber = 55;
  ::google::protobuf::uint32 deeplink_key_type() const;
  void set_deeplink_key_type(::google::protobuf::uint32 value);

  // optional bool not_verified = 58;
  bool has_not_verified() const;
  void clear_not_verified();
  static const int kNotVerifiedFieldNumber = 58;
  bool not_verified() const;
  void set_not_verified(bool value);

  // optional uint32 click_timestamp = 60;
  bool has_click_timestamp() const;
  void clear_click_timestamp();
  static const int kClickTimestampFieldNumber = 60;
  ::google::protobuf::uint32 click_timestamp() const;
  void set_click_timestamp(::google::protobuf::uint32 value);

  // optional uint32 install_timestamp = 61;
  bool has_install_timestamp() const;
  void clear_install_timestamp();
  static const int kInstallTimestampFieldNumber = 61;
  ::google::protobuf::uint32 install_timestamp() const;
  void set_install_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.Event)
 private:
  void set_has_app_event();
  void clear_has_app_event();
  void set_has_name();
  void clear_has_name();
  void set_has_first_install_time();
  void clear_has_first_install_time();
  void set_has_referrer();
  void clear_has_referrer();
  void set_has_timestamps_skipped();
  void clear_has_timestamps_skipped();
  void set_has_app_version();
  void clear_has_app_version();
  void set_has_from_app_version();
  void clear_has_from_app_version();
  void set_has_from_app_build();
  void clear_has_from_app_build();
  void set_has_revenue();
  void clear_has_revenue();
  void set_has_currency();
  void clear_has_currency();
  void set_has_receipt();
  void clear_has_receipt();
  void set_has_receipt_gz();
  void clear_has_receipt_gz();
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_transaction_id();
  void clear_has_transaction_id();
  void set_has_original_transaction_id();
  void clear_has_original_transaction_id();
  void set_has_purchase_data();
  void clear_has_purchase_data();
  void set_has_data_signature();
  void clear_has_data_signature();
  void set_has_orderid();
  void clear_has_orderid();
  void set_has_packagename();
  void clear_has_packagename();
  void set_has_productdataid();
  void clear_has_productdataid();
  void set_has_purchasetime();
  void clear_has_purchasetime();
  void set_has_purchasestate();
  void clear_has_purchasestate();
  void set_has_developerpayload();
  void clear_has_developerpayload();
  void set_has_purchasetoken();
  void clear_has_purchasetoken();
  void set_has_autorenewing();
  void clear_has_autorenewing();
  void set_has_installer();
  void clear_has_installer();
  void set_has_has_iad_attribution();
  void clear_has_has_iad_attribution();
  void set_has_get_attribution();
  void clear_has_get_attribution();
  void set_has_deeplink();
  void clear_has_deeplink();
  void set_has_deeplink_timestamp();
  void clear_has_deeplink_timestamp();
  void set_has_deeplink_key_type();
  void clear_has_deeplink_key_type();
  void set_has_deeplink_error();
  void clear_has_deeplink_error();
  void set_has_not_verified();
  void clear_has_not_verified();
  void set_has_level();
  void clear_has_level();
  void set_has_click_timestamp();
  void clear_has_click_timestamp();
  void set_has_install_timestamp();
  void clear_has_install_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > timestamp_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg > params_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session > sessions_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr referrer_;
  ::google::protobuf::internal::ArenaStringPtr app_version_;
  ::google::protobuf::internal::ArenaStringPtr revenue_;
  ::google::protobuf::internal::ArenaStringPtr currency_;
  ::google::protobuf::internal::ArenaStringPtr receipt_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr transaction_id_;
  ::google::protobuf::internal::ArenaStringPtr purchase_data_;
  ::google::protobuf::internal::ArenaStringPtr data_signature_;
  ::google::protobuf::internal::ArenaStringPtr installer_;
  ::google::protobuf::internal::ArenaStringPtr orderid_;
  ::google::protobuf::internal::ArenaStringPtr packagename_;
  ::google::protobuf::internal::ArenaStringPtr productdataid_;
  ::google::protobuf::internal::ArenaStringPtr developerpayload_;
  ::google::protobuf::internal::ArenaStringPtr purchasetoken_;
  ::google::protobuf::internal::ArenaStringPtr from_app_version_;
  ::google::protobuf::internal::ArenaStringPtr from_app_build_;
  ::google::protobuf::internal::ArenaStringPtr receipt_gz_;
  ::google::protobuf::internal::ArenaStringPtr original_transaction_id_;
  ::google::protobuf::internal::ArenaStringPtr deeplink_;
  ::google::protobuf::internal::ArenaStringPtr level_;
  ::google::protobuf::uint32 app_event_;
  ::google::protobuf::int32 first_install_time_;
  ::google::protobuf::uint32 timestamps_skipped_;
  ::google::protobuf::uint32 purchasestate_;
  ::google::protobuf::uint64 purchasetime_;
  bool autorenewing_;
  bool has_iad_attribution_;
  bool get_attribution_;
  bool deeplink_error_;
  ::google::protobuf::uint32 deeplink_timestamp_;
  ::google::protobuf::uint32 deeplink_key_type_;
  bool not_verified_;
  ::google::protobuf::uint32 click_timestamp_;
  ::google::protobuf::uint32 install_timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_App : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.App) */ {
 public:
  MytrackerMessage_App();
  virtual ~MytrackerMessage_App();

  MytrackerMessage_App(const MytrackerMessage_App& from);

  inline MytrackerMessage_App& operator=(const MytrackerMessage_App& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_App(MytrackerMessage_App&& from) noexcept
    : MytrackerMessage_App() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_App& operator=(MytrackerMessage_App&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_App& default_instance();

  static inline const MytrackerMessage_App* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_App*>(
               &_MytrackerMessage_App_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MytrackerMessage_App* other);
  friend void swap(MytrackerMessage_App& a, MytrackerMessage_App& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_App* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_App* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_App& from);
  void MergeFrom(const MytrackerMessage_App& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_App* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes bundle = 1;
  bool has_bundle() const;
  void clear_bundle();
  static const int kBundleFieldNumber = 1;
  const ::std::string& bundle() const;
  void set_bundle(const ::std::string& value);
  #if LANG_CXX11
  void set_bundle(::std::string&& value);
  #endif
  void set_bundle(const char* value);
  void set_bundle(const void* value, size_t size);
  ::std::string* mutable_bundle();
  ::std::string* release_bundle();
  void set_allocated_bundle(::std::string* bundle);

  // optional bytes app_id = 7;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 7;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const void* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional uint32 id = 6;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 6;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.App)
 private:
  void set_has_bundle();
  void clear_has_bundle();
  void set_has_id();
  void clear_has_id();
  void set_has_app_id();
  void clear_has_app_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bundle_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_Wifi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.Wifi) */ {
 public:
  MytrackerMessage_Wifi();
  virtual ~MytrackerMessage_Wifi();

  MytrackerMessage_Wifi(const MytrackerMessage_Wifi& from);

  inline MytrackerMessage_Wifi& operator=(const MytrackerMessage_Wifi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_Wifi(MytrackerMessage_Wifi&& from) noexcept
    : MytrackerMessage_Wifi() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_Wifi& operator=(MytrackerMessage_Wifi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_Wifi& default_instance();

  static inline const MytrackerMessage_Wifi* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_Wifi*>(
               &_MytrackerMessage_Wifi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MytrackerMessage_Wifi* other);
  friend void swap(MytrackerMessage_Wifi& a, MytrackerMessage_Wifi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_Wifi* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_Wifi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_Wifi& from);
  void MergeFrom(const MytrackerMessage_Wifi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_Wifi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes bssid = 1;
  bool has_bssid() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 1;
  const ::std::string& bssid() const;
  void set_bssid(const ::std::string& value);
  #if LANG_CXX11
  void set_bssid(::std::string&& value);
  #endif
  void set_bssid(const char* value);
  void set_bssid(const void* value, size_t size);
  ::std::string* mutable_bssid();
  ::std::string* release_bssid();
  void set_allocated_bssid(::std::string* bssid);

  // optional bytes ssid = 2;
  bool has_ssid() const;
  void clear_ssid();
  static const int kSsidFieldNumber = 2;
  const ::std::string& ssid() const;
  void set_ssid(const ::std::string& value);
  #if LANG_CXX11
  void set_ssid(::std::string&& value);
  #endif
  void set_ssid(const char* value);
  void set_ssid(const void* value, size_t size);
  ::std::string* mutable_ssid();
  ::std::string* release_ssid();
  void set_allocated_ssid(::std::string* ssid);

  // optional int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional uint32 wifi_id = 5;
  bool has_wifi_id() const;
  void clear_wifi_id();
  static const int kWifiIdFieldNumber = 5;
  ::google::protobuf::uint32 wifi_id() const;
  void set_wifi_id(::google::protobuf::uint32 value);

  // optional uint32 link_speed = 6;
  bool has_link_speed() const;
  void clear_link_speed();
  static const int kLinkSpeedFieldNumber = 6;
  ::google::protobuf::uint32 link_speed() const;
  void set_link_speed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.Wifi)
 private:
  void set_has_bssid();
  void clear_has_bssid();
  void set_has_ssid();
  void clear_has_ssid();
  void set_has_level();
  void clear_has_level();
  void set_has_wifi_id();
  void clear_has_wifi_id();
  void set_has_link_speed();
  void clear_has_link_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bssid_;
  ::google::protobuf::internal::ArenaStringPtr ssid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 wifi_id_;
  ::google::protobuf::uint32 link_speed_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage_Cell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage.Cell) */ {
 public:
  MytrackerMessage_Cell();
  virtual ~MytrackerMessage_Cell();

  MytrackerMessage_Cell(const MytrackerMessage_Cell& from);

  inline MytrackerMessage_Cell& operator=(const MytrackerMessage_Cell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage_Cell(MytrackerMessage_Cell&& from) noexcept
    : MytrackerMessage_Cell() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage_Cell& operator=(MytrackerMessage_Cell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage_Cell& default_instance();

  static inline const MytrackerMessage_Cell* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage_Cell*>(
               &_MytrackerMessage_Cell_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(MytrackerMessage_Cell* other);
  friend void swap(MytrackerMessage_Cell& a, MytrackerMessage_Cell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage_Cell* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage_Cell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage_Cell& from);
  void MergeFrom(const MytrackerMessage_Cell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage_Cell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional uint32 cell_id = 2;
  bool has_cell_id() const;
  void clear_cell_id();
  static const int kCellIdFieldNumber = 2;
  ::google::protobuf::uint32 cell_id() const;
  void set_cell_id(::google::protobuf::uint32 value);

  // optional uint32 lac = 3;
  bool has_lac() const;
  void clear_lac();
  static const int kLacFieldNumber = 3;
  ::google::protobuf::uint32 lac() const;
  void set_lac(::google::protobuf::uint32 value);

  // optional uint32 mcc = 4;
  bool has_mcc() const;
  void clear_mcc();
  static const int kMccFieldNumber = 4;
  ::google::protobuf::uint32 mcc() const;
  void set_mcc(::google::protobuf::uint32 value);

  // optional uint32 mnc = 5;
  bool has_mnc() const;
  void clear_mnc();
  static const int kMncFieldNumber = 5;
  ::google::protobuf::uint32 mnc() const;
  void set_mnc(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional int32 dbm = 7;
  bool has_dbm() const;
  void clear_dbm();
  static const int kDbmFieldNumber = 7;
  ::google::protobuf::int32 dbm() const;
  void set_dbm(::google::protobuf::int32 value);

  // optional uint32 asu = 8;
  bool has_asu() const;
  void clear_asu();
  static const int kAsuFieldNumber = 8;
  ::google::protobuf::uint32 asu() const;
  void set_asu(::google::protobuf::uint32 value);

  // optional uint32 ta = 9;
  bool has_ta() const;
  void clear_ta();
  static const int kTaFieldNumber = 9;
  ::google::protobuf::uint32 ta() const;
  void set_ta(::google::protobuf::uint32 value);

  // optional uint32 rfcn = 10;
  bool has_rfcn() const;
  void clear_rfcn();
  static const int kRfcnFieldNumber = 10;
  ::google::protobuf::uint32 rfcn() const;
  void set_rfcn(::google::protobuf::uint32 value);

  // optional uint32 bsic = 11;
  bool has_bsic() const;
  void clear_bsic();
  static const int kBsicFieldNumber = 11;
  ::google::protobuf::uint32 bsic() const;
  void set_bsic(::google::protobuf::uint32 value);

  // optional uint32 psc = 12;
  bool has_psc() const;
  void clear_psc();
  static const int kPscFieldNumber = 12;
  ::google::protobuf::uint32 psc() const;
  void set_psc(::google::protobuf::uint32 value);

  // optional uint32 tac = 13;
  bool has_tac() const;
  void clear_tac();
  static const int kTacFieldNumber = 13;
  ::google::protobuf::uint32 tac() const;
  void set_tac(::google::protobuf::uint32 value);

  // optional uint32 network_id = 14;
  bool has_network_id() const;
  void clear_network_id();
  static const int kNetworkIdFieldNumber = 14;
  ::google::protobuf::uint32 network_id() const;
  void set_network_id(::google::protobuf::uint32 value);

  // optional uint32 system_id = 15;
  bool has_system_id() const;
  void clear_system_id();
  static const int kSystemIdFieldNumber = 15;
  ::google::protobuf::uint32 system_id() const;
  void set_system_id(::google::protobuf::uint32 value);

  // optional uint32 base_station_id = 16;
  bool has_base_station_id() const;
  void clear_base_station_id();
  static const int kBaseStationIdFieldNumber = 16;
  ::google::protobuf::uint32 base_station_id() const;
  void set_base_station_id(::google::protobuf::uint32 value);

  // optional int32 cdma_lat = 17;
  bool has_cdma_lat() const;
  void clear_cdma_lat();
  static const int kCdmaLatFieldNumber = 17;
  ::google::protobuf::int32 cdma_lat() const;
  void set_cdma_lat(::google::protobuf::int32 value);

  // optional int32 cdma_lon = 18;
  bool has_cdma_lon() const;
  void clear_cdma_lon();
  static const int kCdmaLonFieldNumber = 18;
  ::google::protobuf::int32 cdma_lon() const;
  void set_cdma_lon(::google::protobuf::int32 value);

  // optional uint32 cdma_level = 19;
  bool has_cdma_level() const;
  void clear_cdma_level();
  static const int kCdmaLevelFieldNumber = 19;
  ::google::protobuf::uint32 cdma_level() const;
  void set_cdma_level(::google::protobuf::uint32 value);

  // optional uint32 evdo_level = 20;
  bool has_evdo_level() const;
  void clear_evdo_level();
  static const int kEvdoLevelFieldNumber = 20;
  ::google::protobuf::uint32 evdo_level() const;
  void set_evdo_level(::google::protobuf::uint32 value);

  // optional int32 cdma_dbm = 21;
  bool has_cdma_dbm() const;
  void clear_cdma_dbm();
  static const int kCdmaDbmFieldNumber = 21;
  ::google::protobuf::int32 cdma_dbm() const;
  void set_cdma_dbm(::google::protobuf::int32 value);

  // optional int32 evdo_dbm = 22;
  bool has_evdo_dbm() const;
  void clear_evdo_dbm();
  static const int kEvdoDbmFieldNumber = 22;
  ::google::protobuf::int32 evdo_dbm() const;
  void set_evdo_dbm(::google::protobuf::int32 value);

  // optional uint32 evdo_ecio = 23;
  bool has_evdo_ecio() const;
  void clear_evdo_ecio();
  static const int kEvdoEcioFieldNumber = 23;
  ::google::protobuf::uint32 evdo_ecio() const;
  void set_evdo_ecio(::google::protobuf::uint32 value);

  // optional uint32 cdma_ecio = 24;
  bool has_cdma_ecio() const;
  void clear_cdma_ecio();
  static const int kCdmaEcioFieldNumber = 24;
  ::google::protobuf::uint32 cdma_ecio() const;
  void set_cdma_ecio(::google::protobuf::uint32 value);

  // optional uint32 evdo_snr = 25;
  bool has_evdo_snr() const;
  void clear_evdo_snr();
  static const int kEvdoSnrFieldNumber = 25;
  ::google::protobuf::uint32 evdo_snr() const;
  void set_evdo_snr(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage.Cell)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_cell_id();
  void clear_has_cell_id();
  void set_has_lac();
  void clear_has_lac();
  void set_has_mcc();
  void clear_has_mcc();
  void set_has_mnc();
  void clear_has_mnc();
  void set_has_level();
  void clear_has_level();
  void set_has_dbm();
  void clear_has_dbm();
  void set_has_asu();
  void clear_has_asu();
  void set_has_ta();
  void clear_has_ta();
  void set_has_rfcn();
  void clear_has_rfcn();
  void set_has_bsic();
  void clear_has_bsic();
  void set_has_psc();
  void clear_has_psc();
  void set_has_tac();
  void clear_has_tac();
  void set_has_network_id();
  void clear_has_network_id();
  void set_has_system_id();
  void clear_has_system_id();
  void set_has_base_station_id();
  void clear_has_base_station_id();
  void set_has_cdma_lat();
  void clear_has_cdma_lat();
  void set_has_cdma_lon();
  void clear_has_cdma_lon();
  void set_has_cdma_level();
  void clear_has_cdma_level();
  void set_has_evdo_level();
  void clear_has_evdo_level();
  void set_has_cdma_dbm();
  void clear_has_cdma_dbm();
  void set_has_evdo_dbm();
  void clear_has_evdo_dbm();
  void set_has_evdo_ecio();
  void clear_has_evdo_ecio();
  void set_has_cdma_ecio();
  void clear_has_cdma_ecio();
  void set_has_evdo_snr();
  void clear_has_evdo_snr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 cell_id_;
  ::google::protobuf::uint32 lac_;
  ::google::protobuf::uint32 mcc_;
  ::google::protobuf::uint32 mnc_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 dbm_;
  ::google::protobuf::uint32 asu_;
  ::google::protobuf::uint32 ta_;
  ::google::protobuf::uint32 rfcn_;
  ::google::protobuf::uint32 bsic_;
  ::google::protobuf::uint32 psc_;
  ::google::protobuf::uint32 tac_;
  ::google::protobuf::uint32 network_id_;
  ::google::protobuf::uint32 system_id_;
  ::google::protobuf::uint32 base_station_id_;
  ::google::protobuf::int32 cdma_lat_;
  ::google::protobuf::int32 cdma_lon_;
  ::google::protobuf::uint32 cdma_level_;
  ::google::protobuf::uint32 evdo_level_;
  ::google::protobuf::int32 cdma_dbm_;
  ::google::protobuf::int32 evdo_dbm_;
  ::google::protobuf::uint32 evdo_ecio_;
  ::google::protobuf::uint32 cdma_ecio_;
  ::google::protobuf::uint32 evdo_snr_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MytrackerMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.rb.MytrackerMessage) */ {
 public:
  MytrackerMessage();
  virtual ~MytrackerMessage();

  MytrackerMessage(const MytrackerMessage& from);

  inline MytrackerMessage& operator=(const MytrackerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MytrackerMessage(MytrackerMessage&& from) noexcept
    : MytrackerMessage() {
    *this = ::std::move(from);
  }

  inline MytrackerMessage& operator=(MytrackerMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MytrackerMessage& default_instance();

  static inline const MytrackerMessage* internal_default_instance() {
    return reinterpret_cast<const MytrackerMessage*>(
               &_MytrackerMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(MytrackerMessage* other);
  friend void swap(MytrackerMessage& a, MytrackerMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MytrackerMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MytrackerMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MytrackerMessage& from);
  void MergeFrom(const MytrackerMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MytrackerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MytrackerMessage_Event Event;
  typedef MytrackerMessage_App App;
  typedef MytrackerMessage_Wifi Wifi;
  typedef MytrackerMessage_Cell Cell;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 3;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Event& events(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event* mutable_events(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_Event* add_events();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >&
      events() const;

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
  int apps_size() const;
  void clear_apps();
  static const int kAppsFieldNumber = 9;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_App& apps(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_App* mutable_apps(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_App* add_apps();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >*
      mutable_apps();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >&
      apps() const;

  // repeated fixed32 src_ip_chain = 14;
  int src_ip_chain_size() const;
  void clear_src_ip_chain();
  static const int kSrcIpChainFieldNumber = 14;
  ::google::protobuf::uint32 src_ip_chain(int index) const;
  void set_src_ip_chain(int index, ::google::protobuf::uint32 value);
  void add_src_ip_chain(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      src_ip_chain() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_src_ip_chain();

  // repeated int64 ok_id = 33;
  int ok_id_size() const;
  void clear_ok_id();
  static const int kOkIdFieldNumber = 33;
  ::google::protobuf::int64 ok_id(int index) const;
  void set_ok_id(int index, ::google::protobuf::int64 value);
  void add_ok_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ok_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ok_id();

  // repeated uint32 vk_id = 34;
  int vk_id_size() const;
  void clear_vk_id();
  static const int kVkIdFieldNumber = 34;
  ::google::protobuf::uint32 vk_id(int index) const;
  void set_vk_id(int index, ::google::protobuf::uint32 value);
  void add_vk_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vk_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vk_id();

  // repeated bytes email = 35;
  int email_size() const;
  void clear_email();
  static const int kEmailFieldNumber = 35;
  const ::std::string& email(int index) const;
  ::std::string* mutable_email(int index);
  void set_email(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_email(int index, ::std::string&& value);
  #endif
  void set_email(int index, const char* value);
  void set_email(int index, const void* value, size_t size);
  ::std::string* add_email();
  void add_email(const ::std::string& value);
  #if LANG_CXX11
  void add_email(::std::string&& value);
  #endif
  void add_email(const char* value);
  void add_email(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& email() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_email();

  // repeated uint32 icq_id = 36;
  int icq_id_size() const;
  void clear_icq_id();
  static const int kIcqIdFieldNumber = 36;
  ::google::protobuf::uint32 icq_id(int index) const;
  void set_icq_id(int index, ::google::protobuf::uint32 value);
  void add_icq_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      icq_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_icq_id();

  // repeated bytes custom_user_id = 37;
  int custom_user_id_size() const;
  void clear_custom_user_id();
  static const int kCustomUserIdFieldNumber = 37;
  const ::std::string& custom_user_id(int index) const;
  ::std::string* mutable_custom_user_id(int index);
  void set_custom_user_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_custom_user_id(int index, ::std::string&& value);
  #endif
  void set_custom_user_id(int index, const char* value);
  void set_custom_user_id(int index, const void* value, size_t size);
  ::std::string* add_custom_user_id();
  void add_custom_user_id(const ::std::string& value);
  #if LANG_CXX11
  void add_custom_user_id(::std::string&& value);
  #endif
  void add_custom_user_id(const char* value);
  void add_custom_user_id(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& custom_user_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_custom_user_id();

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
  int wifi_around_size() const;
  void clear_wifi_around();
  static const int kWifiAroundFieldNumber = 91;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& wifi_around(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* mutable_wifi_around(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* add_wifi_around();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >*
      mutable_wifi_around();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >&
      wifi_around() const;

  // repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
  int cell_size() const;
  void clear_cell();
  static const int kCellFieldNumber = 92;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Cell& cell(int index) const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Cell* mutable_cell(int index);
  ::ru::mail::go::webbase::rb::MytrackerMessage_Cell* add_cell();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >*
      mutable_cell();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >&
      cell() const;

  // repeated bytes phone = 102;
  int phone_size() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 102;
  const ::std::string& phone(int index) const;
  ::std::string* mutable_phone(int index);
  void set_phone(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_phone(int index, ::std::string&& value);
  #endif
  void set_phone(int index, const char* value);
  void set_phone(int index, const void* value, size_t size);
  ::std::string* add_phone();
  void add_phone(const ::std::string& value);
  #if LANG_CXX11
  void add_phone(::std::string&& value);
  #endif
  void add_phone(const char* value);
  void add_phone(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& phone() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_phone();

  // optional bytes mytracker_version = 1;
  bool has_mytracker_version() const;
  void clear_mytracker_version();
  static const int kMytrackerVersionFieldNumber = 1;
  const ::std::string& mytracker_version() const;
  void set_mytracker_version(const ::std::string& value);
  #if LANG_CXX11
  void set_mytracker_version(::std::string&& value);
  #endif
  void set_mytracker_version(const char* value);
  void set_mytracker_version(const void* value, size_t size);
  ::std::string* mutable_mytracker_version();
  ::std::string* release_mytracker_version();
  void set_allocated_mytracker_version(::std::string* mytracker_version);

  // optional bytes app_id = 16;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 16;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const void* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional bytes user_ipv6 = 19;
  bool has_user_ipv6() const;
  void clear_user_ipv6();
  static const int kUserIpv6FieldNumber = 19;
  const ::std::string& user_ipv6() const;
  void set_user_ipv6(const ::std::string& value);
  #if LANG_CXX11
  void set_user_ipv6(::std::string&& value);
  #endif
  void set_user_ipv6(const char* value);
  void set_user_ipv6(const void* value, size_t size);
  ::std::string* mutable_user_ipv6();
  ::std::string* release_user_ipv6();
  void set_allocated_user_ipv6(::std::string* user_ipv6);

  // optional bytes app_version = 20;
  bool has_app_version() const;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 20;
  const ::std::string& app_version() const;
  void set_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_app_version(::std::string&& value);
  #endif
  void set_app_version(const char* value);
  void set_app_version(const void* value, size_t size);
  ::std::string* mutable_app_version();
  ::std::string* release_app_version();
  void set_allocated_app_version(::std::string* app_version);

  // optional bytes app_build = 21;
  bool has_app_build() const;
  void clear_app_build();
  static const int kAppBuildFieldNumber = 21;
  const ::std::string& app_build() const;
  void set_app_build(const ::std::string& value);
  #if LANG_CXX11
  void set_app_build(::std::string&& value);
  #endif
  void set_app_build(const char* value);
  void set_app_build(const void* value, size_t size);
  ::std::string* mutable_app_build();
  ::std::string* release_app_build();
  void set_allocated_app_build(::std::string* app_build);

  // optional bytes app_language = 22;
  bool has_app_language() const;
  void clear_app_language();
  static const int kAppLanguageFieldNumber = 22;
  const ::std::string& app_language() const;
  void set_app_language(const ::std::string& value);
  #if LANG_CXX11
  void set_app_language(::std::string&& value);
  #endif
  void set_app_language(const char* value);
  void set_app_language(const void* value, size_t size);
  ::std::string* mutable_app_language();
  ::std::string* release_app_language();
  void set_allocated_app_language(::std::string* app_language);

  // optional bytes app_bundle = 23;
  bool has_app_bundle() const;
  void clear_app_bundle();
  static const int kAppBundleFieldNumber = 23;
  const ::std::string& app_bundle() const;
  void set_app_bundle(const ::std::string& value);
  #if LANG_CXX11
  void set_app_bundle(::std::string&& value);
  #endif
  void set_app_bundle(const char* value);
  void set_app_bundle(const void* value, size_t size);
  ::std::string* mutable_app_bundle();
  ::std::string* release_app_bundle();
  void set_allocated_app_bundle(::std::string* app_bundle);

  // optional bytes mrgs_user_id = 32;
  bool has_mrgs_user_id() const;
  void clear_mrgs_user_id();
  static const int kMrgsUserIdFieldNumber = 32;
  const ::std::string& mrgs_user_id() const;
  void set_mrgs_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mrgs_user_id(::std::string&& value);
  #endif
  void set_mrgs_user_id(const char* value);
  void set_mrgs_user_id(const void* value, size_t size);
  ::std::string* mutable_mrgs_user_id();
  ::std::string* release_mrgs_user_id();
  void set_allocated_mrgs_user_id(::std::string* mrgs_user_id);

  // optional bytes idfa = 40;
  bool has_idfa() const;
  void clear_idfa();
  static const int kIdfaFieldNumber = 40;
  const ::std::string& idfa() const;
  void set_idfa(const ::std::string& value);
  #if LANG_CXX11
  void set_idfa(::std::string&& value);
  #endif
  void set_idfa(const char* value);
  void set_idfa(const void* value, size_t size);
  ::std::string* mutable_idfa();
  ::std::string* release_idfa();
  void set_allocated_idfa(::std::string* idfa);

  // optional bytes advertising_id = 41;
  bool has_advertising_id() const;
  void clear_advertising_id();
  static const int kAdvertisingIdFieldNumber = 41;
  const ::std::string& advertising_id() const;
  void set_advertising_id(const ::std::string& value);
  #if LANG_CXX11
  void set_advertising_id(::std::string&& value);
  #endif
  void set_advertising_id(const char* value);
  void set_advertising_id(const void* value, size_t size);
  ::std::string* mutable_advertising_id();
  ::std::string* release_advertising_id();
  void set_allocated_advertising_id(::std::string* advertising_id);

  // optional bytes android_id = 42;
  bool has_android_id() const;
  void clear_android_id();
  static const int kAndroidIdFieldNumber = 42;
  const ::std::string& android_id() const;
  void set_android_id(const ::std::string& value);
  #if LANG_CXX11
  void set_android_id(::std::string&& value);
  #endif
  void set_android_id(const char* value);
  void set_android_id(const void* value, size_t size);
  ::std::string* mutable_android_id();
  ::std::string* release_android_id();
  void set_allocated_android_id(::std::string* android_id);

  // optional bytes android_device_id = 43;
  bool has_android_device_id() const;
  void clear_android_device_id();
  static const int kAndroidDeviceIdFieldNumber = 43;
  const ::std::string& android_device_id() const;
  void set_android_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_android_device_id(::std::string&& value);
  #endif
  void set_android_device_id(const char* value);
  void set_android_device_id(const void* value, size_t size);
  ::std::string* mutable_android_device_id();
  ::std::string* release_android_device_id();
  void set_allocated_android_device_id(::std::string* android_device_id);

  // optional bytes mrgs_device_id = 44;
  bool has_mrgs_device_id() const;
  void clear_mrgs_device_id();
  static const int kMrgsDeviceIdFieldNumber = 44;
  const ::std::string& mrgs_device_id() const;
  void set_mrgs_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mrgs_device_id(::std::string&& value);
  #endif
  void set_mrgs_device_id(const char* value);
  void set_mrgs_device_id(const void* value, size_t size);
  ::std::string* mutable_mrgs_device_id();
  ::std::string* release_mrgs_device_id();
  void set_allocated_mrgs_device_id(::std::string* mrgs_device_id);

  // optional bytes device = 46;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 46;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const void* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // optional bytes euname = 47;
  bool has_euname() const;
  void clear_euname();
  static const int kEunameFieldNumber = 47;
  const ::std::string& euname() const;
  void set_euname(const ::std::string& value);
  #if LANG_CXX11
  void set_euname(::std::string&& value);
  #endif
  void set_euname(const char* value);
  void set_euname(const void* value, size_t size);
  ::std::string* mutable_euname();
  ::std::string* release_euname();
  void set_allocated_euname(::std::string* euname);

  // optional bytes manufacture = 48;
  bool has_manufacture() const;
  void clear_manufacture();
  static const int kManufactureFieldNumber = 48;
  const ::std::string& manufacture() const;
  void set_manufacture(const ::std::string& value);
  #if LANG_CXX11
  void set_manufacture(::std::string&& value);
  #endif
  void set_manufacture(const char* value);
  void set_manufacture(const void* value, size_t size);
  ::std::string* mutable_manufacture();
  ::std::string* release_manufacture();
  void set_allocated_manufacture(::std::string* manufacture);

  // optional bytes os_ver = 50;
  bool has_os_ver() const;
  void clear_os_ver();
  static const int kOsVerFieldNumber = 50;
  const ::std::string& os_ver() const;
  void set_os_ver(const ::std::string& value);
  #if LANG_CXX11
  void set_os_ver(::std::string&& value);
  #endif
  void set_os_ver(const char* value);
  void set_os_ver(const void* value, size_t size);
  ::std::string* mutable_os_ver();
  ::std::string* release_os_ver();
  void set_allocated_os_ver(::std::string* os_ver);

  // optional bytes os_lang = 51;
  bool has_os_lang() const;
  void clear_os_lang();
  static const int kOsLangFieldNumber = 51;
  const ::std::string& os_lang() const;
  void set_os_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_os_lang(::std::string&& value);
  #endif
  void set_os_lang(const char* value);
  void set_os_lang(const void* value, size_t size);
  ::std::string* mutable_os_lang();
  ::std::string* release_os_lang();
  void set_allocated_os_lang(::std::string* os_lang);

  // optional bytes timezone = 52;
  bool has_timezone() const;
  void clear_timezone();
  static const int kTimezoneFieldNumber = 52;
  const ::std::string& timezone() const;
  void set_timezone(const ::std::string& value);
  #if LANG_CXX11
  void set_timezone(::std::string&& value);
  #endif
  void set_timezone(const char* value);
  void set_timezone(const void* value, size_t size);
  ::std::string* mutable_timezone();
  ::std::string* release_timezone();
  void set_allocated_timezone(::std::string* timezone);

  // optional bytes sim_loc = 60;
  bool has_sim_loc() const;
  void clear_sim_loc();
  static const int kSimLocFieldNumber = 60;
  const ::std::string& sim_loc() const;
  void set_sim_loc(const ::std::string& value);
  #if LANG_CXX11
  void set_sim_loc(::std::string&& value);
  #endif
  void set_sim_loc(const char* value);
  void set_sim_loc(const void* value, size_t size);
  ::std::string* mutable_sim_loc();
  ::std::string* release_sim_loc();
  void set_allocated_sim_loc(::std::string* sim_loc);

  // optional bytes operator_name = 62;
  bool has_operator_name() const;
  void clear_operator_name();
  static const int kOperatorNameFieldNumber = 62;
  const ::std::string& operator_name() const;
  void set_operator_name(const ::std::string& value);
  #if LANG_CXX11
  void set_operator_name(::std::string&& value);
  #endif
  void set_operator_name(const char* value);
  void set_operator_name(const void* value, size_t size);
  ::std::string* mutable_operator_name();
  ::std::string* release_operator_name();
  void set_allocated_operator_name(::std::string* operator_name);

  // optional bytes waid = 74;
  bool has_waid() const;
  void clear_waid();
  static const int kWaidFieldNumber = 74;
  const ::std::string& waid() const;
  void set_waid(const ::std::string& value);
  #if LANG_CXX11
  void set_waid(::std::string&& value);
  #endif
  void set_waid(const char* value);
  void set_waid(const void* value, size_t size);
  ::std::string* mutable_waid();
  ::std::string* release_waid();
  void set_allocated_waid(::std::string* waid);

  // optional bytes connection_type = 78;
  bool has_connection_type() const;
  void clear_connection_type();
  static const int kConnectionTypeFieldNumber = 78;
  const ::std::string& connection_type() const;
  void set_connection_type(const ::std::string& value);
  #if LANG_CXX11
  void set_connection_type(::std::string&& value);
  #endif
  void set_connection_type(const char* value);
  void set_connection_type(const void* value, size_t size);
  ::std::string* mutable_connection_type();
  ::std::string* release_connection_type();
  void set_allocated_connection_type(::std::string* connection_type);

  // optional bytes open_udid = 85;
  bool has_open_udid() const;
  void clear_open_udid();
  static const int kOpenUdidFieldNumber = 85;
  const ::std::string& open_udid() const;
  void set_open_udid(const ::std::string& value);
  #if LANG_CXX11
  void set_open_udid(::std::string&& value);
  #endif
  void set_open_udid(const char* value);
  void set_open_udid(const void* value, size_t size);
  ::std::string* mutable_open_udid();
  ::std::string* release_open_udid();
  void set_allocated_open_udid(::std::string* open_udid);

  // optional bytes ios_vendor_id = 86;
  bool has_ios_vendor_id() const;
  void clear_ios_vendor_id();
  static const int kIosVendorIdFieldNumber = 86;
  const ::std::string& ios_vendor_id() const;
  void set_ios_vendor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_ios_vendor_id(::std::string&& value);
  #endif
  void set_ios_vendor_id(const char* value);
  void set_ios_vendor_id(const void* value, size_t size);
  ::std::string* mutable_ios_vendor_id();
  ::std::string* release_ios_vendor_id();
  void set_allocated_ios_vendor_id(::std::string* ios_vendor_id);

  // optional bytes wna_id = 89;
  bool has_wna_id() const;
  void clear_wna_id();
  static const int kWnaIdFieldNumber = 89;
  const ::std::string& wna_id() const;
  void set_wna_id(const ::std::string& value);
  #if LANG_CXX11
  void set_wna_id(::std::string&& value);
  #endif
  void set_wna_id(const char* value);
  void set_wna_id(const void* value, size_t size);
  ::std::string* mutable_wna_id();
  ::std::string* release_wna_id();
  void set_allocated_wna_id(::std::string* wna_id);

  // optional bytes mna_id = 93;
  bool has_mna_id() const;
  void clear_mna_id();
  static const int kMnaIdFieldNumber = 93;
  const ::std::string& mna_id() const;
  void set_mna_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mna_id(::std::string&& value);
  #endif
  void set_mna_id(const char* value);
  void set_mna_id(const void* value, size_t size);
  ::std::string* mutable_mna_id();
  ::std::string* release_mna_id();
  void set_allocated_mna_id(::std::string* mna_id);

  // optional bytes ios_vendor_id_cached = 95;
  bool has_ios_vendor_id_cached() const;
  void clear_ios_vendor_id_cached();
  static const int kIosVendorIdCachedFieldNumber = 95;
  const ::std::string& ios_vendor_id_cached() const;
  void set_ios_vendor_id_cached(const ::std::string& value);
  #if LANG_CXX11
  void set_ios_vendor_id_cached(::std::string&& value);
  #endif
  void set_ios_vendor_id_cached(const char* value);
  void set_ios_vendor_id_cached(const void* value, size_t size);
  ::std::string* mutable_ios_vendor_id_cached();
  ::std::string* release_ios_vendor_id_cached();
  void set_allocated_ios_vendor_id_cached(::std::string* ios_vendor_id_cached);

  // optional bytes mac = 96;
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 96;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const void* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional bytes sim_loc_str = 99;
  bool has_sim_loc_str() const;
  void clear_sim_loc_str();
  static const int kSimLocStrFieldNumber = 99;
  const ::std::string& sim_loc_str() const;
  void set_sim_loc_str(const ::std::string& value);
  #if LANG_CXX11
  void set_sim_loc_str(::std::string&& value);
  #endif
  void set_sim_loc_str(const char* value);
  void set_sim_loc_str(const void* value, size_t size);
  ::std::string* mutable_sim_loc_str();
  ::std::string* release_sim_loc_str();
  void set_allocated_sim_loc_str(::std::string* sim_loc_str);

  // optional bytes operator_id_str = 100;
  bool has_operator_id_str() const;
  void clear_operator_id_str();
  static const int kOperatorIdStrFieldNumber = 100;
  const ::std::string& operator_id_str() const;
  void set_operator_id_str(const ::std::string& value);
  #if LANG_CXX11
  void set_operator_id_str(::std::string&& value);
  #endif
  void set_operator_id_str(const char* value);
  void set_operator_id_str(const void* value, size_t size);
  ::std::string* mutable_operator_id_str();
  ::std::string* release_operator_id_str();
  void set_allocated_operator_id_str(::std::string* operator_id_str);

  // optional bytes sim_operator_id_str = 101;
  bool has_sim_operator_id_str() const;
  void clear_sim_operator_id_str();
  static const int kSimOperatorIdStrFieldNumber = 101;
  const ::std::string& sim_operator_id_str() const;
  void set_sim_operator_id_str(const ::std::string& value);
  #if LANG_CXX11
  void set_sim_operator_id_str(::std::string&& value);
  #endif
  void set_sim_operator_id_str(const char* value);
  void set_sim_operator_id_str(const void* value, size_t size);
  ::std::string* mutable_sim_operator_id_str();
  ::std::string* release_sim_operator_id_str();
  void set_allocated_sim_operator_id_str(::std::string* sim_operator_id_str);

  // optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
  bool has_wifi() const;
  void clear_wifi();
  static const int kWifiFieldNumber = 90;
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& wifi() const;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* mutable_wifi();
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* release_wifi();
  void set_allocated_wifi(::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* wifi);

  // optional uint32 mobile_app_pk = 2;
  bool has_mobile_app_pk() const;
  void clear_mobile_app_pk();
  static const int kMobileAppPkFieldNumber = 2;
  ::google::protobuf::uint32 mobile_app_pk() const;
  void set_mobile_app_pk(::google::protobuf::uint32 value);

  // optional uint32 banner = 4;
  bool has_banner() const;
  void clear_banner();
  static const int kBannerFieldNumber = 4;
  ::google::protobuf::uint32 banner() const;
  void set_banner(::google::protobuf::uint32 value);

  // optional fixed32 timestamp = 15;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 15;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 timestamp_base = 17;
  bool has_timestamp_base() const;
  void clear_timestamp_base();
  static const int kTimestampBaseFieldNumber = 17;
  ::google::protobuf::uint32 timestamp_base() const;
  void set_timestamp_base(::google::protobuf::uint32 value);

  // optional fixed32 user_ip = 18;
  bool has_user_ip() const;
  void clear_user_ip();
  static const int kUserIpFieldNumber = 18;
  ::google::protobuf::uint32 user_ip() const;
  void set_user_ip(::google::protobuf::uint32 value);

  // optional uint32 mrgs_app_id = 24;
  bool has_mrgs_app_id() const;
  void clear_mrgs_app_id();
  static const int kMrgsAppIdFieldNumber = 24;
  ::google::protobuf::uint32 mrgs_app_id() const;
  void set_mrgs_app_id(::google::protobuf::uint32 value);

  // optional uint32 gender = 30;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 30;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 age = 31;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 31;
  ::google::protobuf::uint32 age() const;
  void set_age(::google::protobuf::uint32 value);

  // optional int32 advertising_tracking_enabled = 45;
  bool has_advertising_tracking_enabled() const;
  void clear_advertising_tracking_enabled();
  static const int kAdvertisingTrackingEnabledFieldNumber = 45;
  ::google::protobuf::int32 advertising_tracking_enabled() const;
  void set_advertising_tracking_enabled(::google::protobuf::int32 value);

  // optional uint32 os = 49;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 49;
  ::google::protobuf::uint32 os() const;
  void set_os(::google::protobuf::uint32 value);

  // optional uint32 screen_width = 53;
  bool has_screen_width() const;
  void clear_screen_width();
  static const int kScreenWidthFieldNumber = 53;
  ::google::protobuf::uint32 screen_width() const;
  void set_screen_width(::google::protobuf::uint32 value);

  // optional uint32 screen_height = 54;
  bool has_screen_height() const;
  void clear_screen_height();
  static const int kScreenHeightFieldNumber = 54;
  ::google::protobuf::uint32 screen_height() const;
  void set_screen_height(::google::protobuf::uint32 value);

  // optional uint32 operator_id = 61;
  bool has_operator_id() const;
  void clear_operator_id();
  static const int kOperatorIdFieldNumber = 61;
  ::google::protobuf::uint32 operator_id() const;
  void set_operator_id(::google::protobuf::uint32 value);

  // optional uint32 sim_operator_id = 63;
  bool has_sim_operator_id() const;
  void clear_sim_operator_id();
  static const int kSimOperatorIdFieldNumber = 63;
  ::google::protobuf::uint32 sim_operator_id() const;
  void set_sim_operator_id(::google::protobuf::uint32 value);

  // optional uint32 connection = 64;
  bool has_connection() const;
  void clear_connection();
  static const int kConnectionFieldNumber = 64;
  ::google::protobuf::uint32 connection() const;
  void set_connection(::google::protobuf::uint32 value);

  // optional uint32 location_provider = 72;
  bool has_location_provider() const;
  void clear_location_provider();
  static const int kLocationProviderFieldNumber = 72;
  ::google::protobuf::uint32 location_provider() const;
  void set_location_provider(::google::protobuf::uint32 value);

  // optional double lat = 70;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 70;
  double lat() const;
  void set_lat(double value);

  // optional double lon = 71;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 71;
  double lon() const;
  void set_lon(double value);

  // optional uint32 bluetooth_enabled = 73;
  bool has_bluetooth_enabled() const;
  void clear_bluetooth_enabled();
  static const int kBluetoothEnabledFieldNumber = 73;
  ::google::protobuf::uint32 bluetooth_enabled() const;
  void set_bluetooth_enabled(::google::protobuf::uint32 value);

  // optional uint32 location_timestamp = 76;
  bool has_location_timestamp() const;
  void clear_location_timestamp();
  static const int kLocationTimestampFieldNumber = 76;
  ::google::protobuf::uint32 location_timestamp() const;
  void set_location_timestamp(::google::protobuf::uint32 value);

  // optional double location_accuracy = 75;
  bool has_location_accuracy() const;
  void clear_location_accuracy();
  static const int kLocationAccuracyFieldNumber = 75;
  double location_accuracy() const;
  void set_location_accuracy(double value);

  // optional double speed = 77;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 77;
  double speed() const;
  void set_speed(double value);

  // optional uint32 geo = 80;
  bool has_geo() const;
  void clear_geo();
  static const int kGeoFieldNumber = 80;
  ::google::protobuf::uint32 geo() const;
  void set_geo(::google::protobuf::uint32 value);

  // optional uint32 hacks = 81;
  bool has_hacks() const;
  void clear_hacks();
  static const int kHacksFieldNumber = 81;
  ::google::protobuf::uint32 hacks() const;
  void set_hacks(::google::protobuf::uint32 value);

  // optional fixed32 timestamp_send = 82;
  bool has_timestamp_send() const;
  void clear_timestamp_send();
  static const int kTimestampSendFieldNumber = 82;
  ::google::protobuf::uint32 timestamp_send() const;
  void set_timestamp_send(::google::protobuf::uint32 value);

  // optional uint32 remote_addr = 83;
  bool has_remote_addr() const;
  void clear_remote_addr();
  static const int kRemoteAddrFieldNumber = 83;
  ::google::protobuf::uint32 remote_addr() const;
  void set_remote_addr(::google::protobuf::uint32 value);

  // optional uint32 x_forwarded_for = 84;
  bool has_x_forwarded_for() const;
  void clear_x_forwarded_for();
  static const int kXForwardedForFieldNumber = 84;
  ::google::protobuf::uint32 x_forwarded_for() const;
  void set_x_forwarded_for(::google::protobuf::uint32 value);

  // optional uint32 mid = 87;
  bool has_mid() const;
  void clear_mid();
  static const int kMidFieldNumber = 87;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional bool tracker_v1 = 88;
  bool has_tracker_v1() const;
  void clear_tracker_v1();
  static const int kTrackerV1FieldNumber = 88;
  bool tracker_v1() const;
  void set_tracker_v1(bool value);

  // optional uint32 dpi = 94;
  bool has_dpi() const;
  void clear_dpi();
  static const int kDpiFieldNumber = 94;
  ::google::protobuf::uint32 dpi() const;
  void set_dpi(::google::protobuf::uint32 value);

  // optional uint32 xdpi = 97;
  bool has_xdpi() const;
  void clear_xdpi();
  static const int kXdpiFieldNumber = 97;
  ::google::protobuf::uint32 xdpi() const;
  void set_xdpi(::google::protobuf::uint32 value);

  // optional uint32 ydpi = 98;
  bool has_ydpi() const;
  void clear_ydpi();
  static const int kYdpiFieldNumber = 98;
  ::google::protobuf::uint32 ydpi() const;
  void set_ydpi(::google::protobuf::uint32 value);

  // optional uint32 custom_events_skipped = 103;
  bool has_custom_events_skipped() const;
  void clear_custom_events_skipped();
  static const int kCustomEventsSkippedFieldNumber = 103;
  ::google::protobuf::uint32 custom_events_skipped() const;
  void set_custom_events_skipped(::google::protobuf::uint32 value);

  // optional uint32 random = 104;
  bool has_random() const;
  void clear_random();
  static const int kRandomFieldNumber = 104;
  ::google::protobuf::uint32 random() const;
  void set_random(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.rb.MytrackerMessage)
 private:
  void set_has_mytracker_version();
  void clear_has_mytracker_version();
  void set_has_mobile_app_pk();
  void clear_has_mobile_app_pk();
  void set_has_banner();
  void clear_has_banner();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_timestamp_base();
  void clear_has_timestamp_base();
  void set_has_user_ip();
  void clear_has_user_ip();
  void set_has_user_ipv6();
  void clear_has_user_ipv6();
  void set_has_remote_addr();
  void clear_has_remote_addr();
  void set_has_x_forwarded_for();
  void clear_has_x_forwarded_for();
  void set_has_geo();
  void clear_has_geo();
  void set_has_hacks();
  void clear_has_hacks();
  void set_has_tracker_v1();
  void clear_has_tracker_v1();
  void set_has_timestamp_send();
  void clear_has_timestamp_send();
  void set_has_custom_events_skipped();
  void clear_has_custom_events_skipped();
  void set_has_random();
  void clear_has_random();
  void set_has_app_version();
  void clear_has_app_version();
  void set_has_app_build();
  void clear_has_app_build();
  void set_has_app_language();
  void clear_has_app_language();
  void set_has_app_bundle();
  void clear_has_app_bundle();
  void set_has_mrgs_app_id();
  void clear_has_mrgs_app_id();
  void set_has_gender();
  void clear_has_gender();
  void set_has_age();
  void clear_has_age();
  void set_has_mrgs_user_id();
  void clear_has_mrgs_user_id();
  void set_has_idfa();
  void clear_has_idfa();
  void set_has_advertising_id();
  void clear_has_advertising_id();
  void set_has_android_id();
  void clear_has_android_id();
  void set_has_android_device_id();
  void clear_has_android_device_id();
  void set_has_waid();
  void clear_has_waid();
  void set_has_wna_id();
  void clear_has_wna_id();
  void set_has_mna_id();
  void clear_has_mna_id();
  void set_has_mrgs_device_id();
  void clear_has_mrgs_device_id();
  void set_has_mac();
  void clear_has_mac();
  void set_has_open_udid();
  void clear_has_open_udid();
  void set_has_ios_vendor_id();
  void clear_has_ios_vendor_id();
  void set_has_ios_vendor_id_cached();
  void clear_has_ios_vendor_id_cached();
  void set_has_mid();
  void clear_has_mid();
  void set_has_advertising_tracking_enabled();
  void clear_has_advertising_tracking_enabled();
  void set_has_device();
  void clear_has_device();
  void set_has_euname();
  void clear_has_euname();
  void set_has_manufacture();
  void clear_has_manufacture();
  void set_has_os();
  void clear_has_os();
  void set_has_os_ver();
  void clear_has_os_ver();
  void set_has_os_lang();
  void clear_has_os_lang();
  void set_has_timezone();
  void clear_has_timezone();
  void set_has_screen_width();
  void clear_has_screen_width();
  void set_has_screen_height();
  void clear_has_screen_height();
  void set_has_dpi();
  void clear_has_dpi();
  void set_has_xdpi();
  void clear_has_xdpi();
  void set_has_ydpi();
  void clear_has_ydpi();
  void set_has_sim_loc();
  void clear_has_sim_loc();
  void set_has_operator_id();
  void clear_has_operator_id();
  void set_has_operator_name();
  void clear_has_operator_name();
  void set_has_sim_operator_id();
  void clear_has_sim_operator_id();
  void set_has_sim_loc_str();
  void clear_has_sim_loc_str();
  void set_has_operator_id_str();
  void clear_has_operator_id_str();
  void set_has_sim_operator_id_str();
  void clear_has_sim_operator_id_str();
  void set_has_connection();
  void clear_has_connection();
  void set_has_connection_type();
  void clear_has_connection_type();
  void set_has_bluetooth_enabled();
  void clear_has_bluetooth_enabled();
  void set_has_lat();
  void clear_has_lat();
  void set_has_lon();
  void clear_has_lon();
  void set_has_speed();
  void clear_has_speed();
  void set_has_location_accuracy();
  void clear_has_location_accuracy();
  void set_has_location_timestamp();
  void clear_has_location_timestamp();
  void set_has_location_provider();
  void clear_has_location_provider();
  void set_has_wifi();
  void clear_has_wifi();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<3> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event > events_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App > apps_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > src_ip_chain_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ok_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vk_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> email_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > icq_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> custom_user_id_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi > wifi_around_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell > cell_;
  ::google::protobuf::RepeatedPtrField< ::std::string> phone_;
  ::google::protobuf::internal::ArenaStringPtr mytracker_version_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr user_ipv6_;
  ::google::protobuf::internal::ArenaStringPtr app_version_;
  ::google::protobuf::internal::ArenaStringPtr app_build_;
  ::google::protobuf::internal::ArenaStringPtr app_language_;
  ::google::protobuf::internal::ArenaStringPtr app_bundle_;
  ::google::protobuf::internal::ArenaStringPtr mrgs_user_id_;
  ::google::protobuf::internal::ArenaStringPtr idfa_;
  ::google::protobuf::internal::ArenaStringPtr advertising_id_;
  ::google::protobuf::internal::ArenaStringPtr android_id_;
  ::google::protobuf::internal::ArenaStringPtr android_device_id_;
  ::google::protobuf::internal::ArenaStringPtr mrgs_device_id_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::internal::ArenaStringPtr euname_;
  ::google::protobuf::internal::ArenaStringPtr manufacture_;
  ::google::protobuf::internal::ArenaStringPtr os_ver_;
  ::google::protobuf::internal::ArenaStringPtr os_lang_;
  ::google::protobuf::internal::ArenaStringPtr timezone_;
  ::google::protobuf::internal::ArenaStringPtr sim_loc_;
  ::google::protobuf::internal::ArenaStringPtr operator_name_;
  ::google::protobuf::internal::ArenaStringPtr waid_;
  ::google::protobuf::internal::ArenaStringPtr connection_type_;
  ::google::protobuf::internal::ArenaStringPtr open_udid_;
  ::google::protobuf::internal::ArenaStringPtr ios_vendor_id_;
  ::google::protobuf::internal::ArenaStringPtr wna_id_;
  ::google::protobuf::internal::ArenaStringPtr mna_id_;
  ::google::protobuf::internal::ArenaStringPtr ios_vendor_id_cached_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr sim_loc_str_;
  ::google::protobuf::internal::ArenaStringPtr operator_id_str_;
  ::google::protobuf::internal::ArenaStringPtr sim_operator_id_str_;
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* wifi_;
  ::google::protobuf::uint32 mobile_app_pk_;
  ::google::protobuf::uint32 banner_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 timestamp_base_;
  ::google::protobuf::uint32 user_ip_;
  ::google::protobuf::uint32 mrgs_app_id_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::int32 advertising_tracking_enabled_;
  ::google::protobuf::uint32 os_;
  ::google::protobuf::uint32 screen_width_;
  ::google::protobuf::uint32 screen_height_;
  ::google::protobuf::uint32 operator_id_;
  ::google::protobuf::uint32 sim_operator_id_;
  ::google::protobuf::uint32 connection_;
  ::google::protobuf::uint32 location_provider_;
  double lat_;
  double lon_;
  ::google::protobuf::uint32 bluetooth_enabled_;
  ::google::protobuf::uint32 location_timestamp_;
  double location_accuracy_;
  double speed_;
  ::google::protobuf::uint32 geo_;
  ::google::protobuf::uint32 hacks_;
  ::google::protobuf::uint32 timestamp_send_;
  ::google::protobuf::uint32 remote_addr_;
  ::google::protobuf::uint32 x_forwarded_for_;
  ::google::protobuf::uint32 mid_;
  bool tracker_v1_;
  ::google::protobuf::uint32 dpi_;
  ::google::protobuf::uint32 xdpi_;
  ::google::protobuf::uint32 ydpi_;
  ::google::protobuf::uint32 custom_events_skipped_;
  ::google::protobuf::uint32 random_;
  friend struct protobuf_mytracker_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MytrackerAppUser

// optional uint32 app_version_id = 1;
inline bool MytrackerAppUser::has_app_version_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerAppUser::set_has_app_version_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerAppUser::clear_has_app_version_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerAppUser::clear_app_version_id() {
  app_version_id_ = 0u;
  clear_has_app_version_id();
}
inline ::google::protobuf::uint32 MytrackerAppUser::app_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.app_version_id)
  return app_version_id_;
}
inline void MytrackerAppUser::set_app_version_id(::google::protobuf::uint32 value) {
  set_has_app_version_id();
  app_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.app_version_id)
}

// optional uint32 geo = 2;
inline bool MytrackerAppUser::has_geo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerAppUser::set_has_geo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerAppUser::clear_has_geo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerAppUser::clear_geo() {
  geo_ = 0u;
  clear_has_geo();
}
inline ::google::protobuf::uint32 MytrackerAppUser::geo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.geo)
  return geo_;
}
inline void MytrackerAppUser::set_geo(::google::protobuf::uint32 value) {
  set_has_geo();
  geo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.geo)
}

// optional uint32 adman_version_id = 3;
inline bool MytrackerAppUser::has_adman_version_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerAppUser::set_has_adman_version_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerAppUser::clear_has_adman_version_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerAppUser::clear_adman_version_id() {
  adman_version_id_ = 0u;
  clear_has_adman_version_id();
}
inline ::google::protobuf::uint32 MytrackerAppUser::adman_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.adman_version_id)
  return adman_version_id_;
}
inline void MytrackerAppUser::set_adman_version_id(::google::protobuf::uint32 value) {
  set_has_adman_version_id();
  adman_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.adman_version_id)
}

// optional uint32 mytracker_version_id = 4;
inline bool MytrackerAppUser::has_mytracker_version_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MytrackerAppUser::set_has_mytracker_version_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MytrackerAppUser::clear_has_mytracker_version_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MytrackerAppUser::clear_mytracker_version_id() {
  mytracker_version_id_ = 0u;
  clear_has_mytracker_version_id();
}
inline ::google::protobuf::uint32 MytrackerAppUser::mytracker_version_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.mytracker_version_id)
  return mytracker_version_id_;
}
inline void MytrackerAppUser::set_mytracker_version_id(::google::protobuf::uint32 value) {
  set_has_mytracker_version_id();
  mytracker_version_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.mytracker_version_id)
}

// optional uint64 am_stat = 5;
inline bool MytrackerAppUser::has_am_stat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MytrackerAppUser::set_has_am_stat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MytrackerAppUser::clear_has_am_stat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MytrackerAppUser::clear_am_stat() {
  am_stat_ = GOOGLE_ULONGLONG(0);
  clear_has_am_stat();
}
inline ::google::protobuf::uint64 MytrackerAppUser::am_stat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.am_stat)
  return am_stat_;
}
inline void MytrackerAppUser::set_am_stat(::google::protobuf::uint64 value) {
  set_has_am_stat();
  am_stat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.am_stat)
}

// optional uint64 pm_stat = 6;
inline bool MytrackerAppUser::has_pm_stat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MytrackerAppUser::set_has_pm_stat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MytrackerAppUser::clear_has_pm_stat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MytrackerAppUser::clear_pm_stat() {
  pm_stat_ = GOOGLE_ULONGLONG(0);
  clear_has_pm_stat();
}
inline ::google::protobuf::uint64 MytrackerAppUser::pm_stat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerAppUser.pm_stat)
  return pm_stat_;
}
inline void MytrackerAppUser::set_pm_stat(::google::protobuf::uint64 value) {
  set_has_pm_stat();
  pm_stat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerAppUser.pm_stat)
}

// -------------------------------------------------------------------

// MytrackerEvent_PairMsg

// optional bytes key = 1;
inline bool MytrackerEvent_PairMsg::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerEvent_PairMsg::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerEvent_PairMsg::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerEvent_PairMsg::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& MytrackerEvent_PairMsg::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  return key_.GetNoArena();
}
inline void MytrackerEvent_PairMsg::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
#if LANG_CXX11
inline void MytrackerEvent_PairMsg::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
#endif
inline void MytrackerEvent_PairMsg::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
inline void MytrackerEvent_PairMsg::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}
inline ::std::string* MytrackerEvent_PairMsg::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerEvent_PairMsg::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerEvent_PairMsg::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.key)
}

// optional bytes value = 2;
inline bool MytrackerEvent_PairMsg::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerEvent_PairMsg::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerEvent_PairMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerEvent_PairMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& MytrackerEvent_PairMsg::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  return value_.GetNoArena();
}
inline void MytrackerEvent_PairMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
#if LANG_CXX11
inline void MytrackerEvent_PairMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
#endif
inline void MytrackerEvent_PairMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
inline void MytrackerEvent_PairMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}
inline ::std::string* MytrackerEvent_PairMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerEvent_PairMsg::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerEvent_PairMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.PairMsg.value)
}

// -------------------------------------------------------------------

// MytrackerEvent

// optional bytes name = 1;
inline bool MytrackerEvent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerEvent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerEvent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerEvent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MytrackerEvent::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.name)
  return name_.GetNoArena();
}
inline void MytrackerEvent::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
#if LANG_CXX11
inline void MytrackerEvent::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
#endif
inline void MytrackerEvent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
inline void MytrackerEvent::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerEvent.name)
}
inline ::std::string* MytrackerEvent::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerEvent::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerEvent.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerEvent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerEvent.name)
}

// repeated .ru.mail.go.webbase.rb.MytrackerEvent.PairMsg param = 2;
inline int MytrackerEvent::param_size() const {
  return param_.size();
}
inline void MytrackerEvent::clear_param() {
  param_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg& MytrackerEvent::param(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* MytrackerEvent::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg* MytrackerEvent::add_param() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >*
MytrackerEvent::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return &param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerEvent_PairMsg >&
MytrackerEvent::param() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerEvent.param)
  return param_;
}

// optional uint32 timestamp = 3;
inline bool MytrackerEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 MytrackerEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerEvent.timestamp)
  return timestamp_;
}
inline void MytrackerEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerEvent.timestamp)
}

// -------------------------------------------------------------------

// MytrackerMessage_Event_PairMsg

// optional bytes key = 1;
inline bool MytrackerMessage_Event_PairMsg::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Event_PairMsg::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_Event_PairMsg::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_Event_PairMsg::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& MytrackerMessage_Event_PairMsg::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  return key_.GetNoArena();
}
inline void MytrackerMessage_Event_PairMsg::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
#if LANG_CXX11
inline void MytrackerMessage_Event_PairMsg::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
#endif
inline void MytrackerMessage_Event_PairMsg::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
inline void MytrackerMessage_Event_PairMsg::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}
inline ::std::string* MytrackerMessage_Event_PairMsg::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event_PairMsg::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event_PairMsg::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.key)
}

// optional bytes value = 2;
inline bool MytrackerMessage_Event_PairMsg::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Event_PairMsg::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_Event_PairMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_Event_PairMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& MytrackerMessage_Event_PairMsg::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  return value_.GetNoArena();
}
inline void MytrackerMessage_Event_PairMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
#if LANG_CXX11
inline void MytrackerMessage_Event_PairMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
#endif
inline void MytrackerMessage_Event_PairMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
inline void MytrackerMessage_Event_PairMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}
inline ::std::string* MytrackerMessage_Event_PairMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event_PairMsg::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event_PairMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg.value)
}

// -------------------------------------------------------------------

// MytrackerMessage_Event_Session

// optional int32 start = 1;
inline bool MytrackerMessage_Event_Session::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Event_Session::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_Event_Session::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_Event_Session::clear_start() {
  start_ = 0;
  clear_has_start();
}
inline ::google::protobuf::int32 MytrackerMessage_Event_Session::start() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.start)
  return start_;
}
inline void MytrackerMessage_Event_Session::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.start)
}

// optional int32 end = 2 [default = -1];
inline bool MytrackerMessage_Event_Session::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Event_Session::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_Event_Session::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_Event_Session::clear_end() {
  end_ = -1;
  clear_has_end();
}
inline ::google::protobuf::int32 MytrackerMessage_Event_Session::end() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.end)
  return end_;
}
inline void MytrackerMessage_Event_Session::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.Session.end)
}

// -------------------------------------------------------------------

// MytrackerMessage_Event

// optional uint32 app_event = 1;
inline bool MytrackerMessage_Event::has_app_event() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MytrackerMessage_Event::set_has_app_event() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MytrackerMessage_Event::clear_has_app_event() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MytrackerMessage_Event::clear_app_event() {
  app_event_ = 0u;
  clear_has_app_event();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::app_event() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_event)
  return app_event_;
}
inline void MytrackerMessage_Event::set_app_event(::google::protobuf::uint32 value) {
  set_has_app_event();
  app_event_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_event)
}

// repeated int32 timestamp = 2;
inline int MytrackerMessage_Event::timestamp_size() const {
  return timestamp_.size();
}
inline void MytrackerMessage_Event::clear_timestamp() {
  timestamp_.Clear();
}
inline ::google::protobuf::int32 MytrackerMessage_Event::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return timestamp_.Get(index);
}
inline void MytrackerMessage_Event::set_timestamp(int index, ::google::protobuf::int32 value) {
  timestamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
}
inline void MytrackerMessage_Event::add_timestamp(::google::protobuf::int32 value) {
  timestamp_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MytrackerMessage_Event::timestamp() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return timestamp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MytrackerMessage_Event::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamp)
  return &timestamp_;
}

// optional bytes name = 3;
inline bool MytrackerMessage_Event::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Event::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_Event::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_Event::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MytrackerMessage_Event::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  return name_.GetNoArena();
}
inline void MytrackerMessage_Event::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
#endif
inline void MytrackerMessage_Event::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
inline void MytrackerMessage_Event::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}
inline ::std::string* MytrackerMessage_Event::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.name)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.PairMsg params = 4;
inline int MytrackerMessage_Event::params_size() const {
  return params_.size();
}
inline void MytrackerMessage_Event::clear_params() {
  params_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg& MytrackerMessage_Event::params(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* MytrackerMessage_Event::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg* MytrackerMessage_Event::add_params() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >*
MytrackerMessage_Event::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_PairMsg >&
MytrackerMessage_Event::params() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.params)
  return params_;
}

// optional int32 first_install_time = 16;
inline bool MytrackerMessage_Event::has_first_install_time() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MytrackerMessage_Event::set_has_first_install_time() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MytrackerMessage_Event::clear_has_first_install_time() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MytrackerMessage_Event::clear_first_install_time() {
  first_install_time_ = 0;
  clear_has_first_install_time();
}
inline ::google::protobuf::int32 MytrackerMessage_Event::first_install_time() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.first_install_time)
  return first_install_time_;
}
inline void MytrackerMessage_Event::set_first_install_time(::google::protobuf::int32 value) {
  set_has_first_install_time();
  first_install_time_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.first_install_time)
}

// optional bytes referrer = 17;
inline bool MytrackerMessage_Event::has_referrer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Event::set_has_referrer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_Event::clear_has_referrer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_Event::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer();
}
inline const ::std::string& MytrackerMessage_Event::referrer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  return referrer_.GetNoArena();
}
inline void MytrackerMessage_Event::set_referrer(const ::std::string& value) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_referrer(::std::string&& value) {
  set_has_referrer();
  referrer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
#endif
inline void MytrackerMessage_Event::set_referrer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
inline void MytrackerMessage_Event::set_referrer(const void* value, size_t size) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}
inline ::std::string* MytrackerMessage_Event::mutable_referrer() {
  set_has_referrer();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_referrer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
  clear_has_referrer();
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    set_has_referrer();
  } else {
    clear_has_referrer();
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.referrer)
}

// optional uint32 timestamps_skipped = 19;
inline bool MytrackerMessage_Event::has_timestamps_skipped() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_timestamps_skipped() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MytrackerMessage_Event::clear_has_timestamps_skipped() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MytrackerMessage_Event::clear_timestamps_skipped() {
  timestamps_skipped_ = 0u;
  clear_has_timestamps_skipped();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::timestamps_skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamps_skipped)
  return timestamps_skipped_;
}
inline void MytrackerMessage_Event::set_timestamps_skipped(::google::protobuf::uint32 value) {
  set_has_timestamps_skipped();
  timestamps_skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.timestamps_skipped)
}

// optional bytes app_version = 18;
inline bool MytrackerMessage_Event::has_app_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerMessage_Event::set_has_app_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerMessage_Event::clear_has_app_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerMessage_Event::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_version();
}
inline const ::std::string& MytrackerMessage_Event::app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  return app_version_.GetNoArena();
}
inline void MytrackerMessage_Event::set_app_version(const ::std::string& value) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_app_version(::std::string&& value) {
  set_has_app_version();
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
#endif
inline void MytrackerMessage_Event::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
inline void MytrackerMessage_Event::set_app_version(const void* value, size_t size) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}
inline ::std::string* MytrackerMessage_Event::mutable_app_version() {
  set_has_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
  clear_has_app_version();
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    set_has_app_version();
  } else {
    clear_has_app_version();
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.app_version)
}

// optional bytes from_app_version = 48;
inline bool MytrackerMessage_Event::has_from_app_version() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MytrackerMessage_Event::set_has_from_app_version() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MytrackerMessage_Event::clear_has_from_app_version() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MytrackerMessage_Event::clear_from_app_version() {
  from_app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_app_version();
}
inline const ::std::string& MytrackerMessage_Event::from_app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  return from_app_version_.GetNoArena();
}
inline void MytrackerMessage_Event::set_from_app_version(const ::std::string& value) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_from_app_version(::std::string&& value) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
#endif
inline void MytrackerMessage_Event::set_from_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
inline void MytrackerMessage_Event::set_from_app_version(const void* value, size_t size) {
  set_has_from_app_version();
  from_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}
inline ::std::string* MytrackerMessage_Event::mutable_from_app_version() {
  set_has_from_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  return from_app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_from_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
  clear_has_from_app_version();
  return from_app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_from_app_version(::std::string* from_app_version) {
  if (from_app_version != NULL) {
    set_has_from_app_version();
  } else {
    clear_has_from_app_version();
  }
  from_app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_version)
}

// optional bytes from_app_build = 49;
inline bool MytrackerMessage_Event::has_from_app_build() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MytrackerMessage_Event::set_has_from_app_build() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MytrackerMessage_Event::clear_has_from_app_build() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MytrackerMessage_Event::clear_from_app_build() {
  from_app_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_app_build();
}
inline const ::std::string& MytrackerMessage_Event::from_app_build() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  return from_app_build_.GetNoArena();
}
inline void MytrackerMessage_Event::set_from_app_build(const ::std::string& value) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_from_app_build(::std::string&& value) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
#endif
inline void MytrackerMessage_Event::set_from_app_build(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
inline void MytrackerMessage_Event::set_from_app_build(const void* value, size_t size) {
  set_has_from_app_build();
  from_app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}
inline ::std::string* MytrackerMessage_Event::mutable_from_app_build() {
  set_has_from_app_build();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  return from_app_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_from_app_build() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
  clear_has_from_app_build();
  return from_app_build_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_from_app_build(::std::string* from_app_build) {
  if (from_app_build != NULL) {
    set_has_from_app_build();
  } else {
    clear_has_from_app_build();
  }
  from_app_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_app_build);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.from_app_build)
}

// optional bytes revenue = 30;
inline bool MytrackerMessage_Event::has_revenue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MytrackerMessage_Event::set_has_revenue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MytrackerMessage_Event::clear_has_revenue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MytrackerMessage_Event::clear_revenue() {
  revenue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revenue();
}
inline const ::std::string& MytrackerMessage_Event::revenue() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  return revenue_.GetNoArena();
}
inline void MytrackerMessage_Event::set_revenue(const ::std::string& value) {
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_revenue(::std::string&& value) {
  set_has_revenue();
  revenue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
#endif
inline void MytrackerMessage_Event::set_revenue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
inline void MytrackerMessage_Event::set_revenue(const void* value, size_t size) {
  set_has_revenue();
  revenue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}
inline ::std::string* MytrackerMessage_Event::mutable_revenue() {
  set_has_revenue();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  return revenue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_revenue() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
  clear_has_revenue();
  return revenue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_revenue(::std::string* revenue) {
  if (revenue != NULL) {
    set_has_revenue();
  } else {
    clear_has_revenue();
  }
  revenue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revenue);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.revenue)
}

// optional bytes currency = 31;
inline bool MytrackerMessage_Event::has_currency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MytrackerMessage_Event::set_has_currency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MytrackerMessage_Event::clear_has_currency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MytrackerMessage_Event::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_currency();
}
inline const ::std::string& MytrackerMessage_Event::currency() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  return currency_.GetNoArena();
}
inline void MytrackerMessage_Event::set_currency(const ::std::string& value) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_currency(::std::string&& value) {
  set_has_currency();
  currency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
#endif
inline void MytrackerMessage_Event::set_currency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
inline void MytrackerMessage_Event::set_currency(const void* value, size_t size) {
  set_has_currency();
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}
inline ::std::string* MytrackerMessage_Event::mutable_currency() {
  set_has_currency();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_currency() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
  clear_has_currency();
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    set_has_currency();
  } else {
    clear_has_currency();
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.currency)
}

// optional bytes receipt = 32;
inline bool MytrackerMessage_Event::has_receipt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MytrackerMessage_Event::set_has_receipt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MytrackerMessage_Event::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MytrackerMessage_Event::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt();
}
inline const ::std::string& MytrackerMessage_Event::receipt() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  return receipt_.GetNoArena();
}
inline void MytrackerMessage_Event::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_receipt(::std::string&& value) {
  set_has_receipt();
  receipt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
#endif
inline void MytrackerMessage_Event::set_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
inline void MytrackerMessage_Event::set_receipt(const void* value, size_t size) {
  set_has_receipt();
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}
inline ::std::string* MytrackerMessage_Event::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_receipt() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
  clear_has_receipt();
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt)
}

// optional bytes receipt_gz = 50;
inline bool MytrackerMessage_Event::has_receipt_gz() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MytrackerMessage_Event::set_has_receipt_gz() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MytrackerMessage_Event::clear_has_receipt_gz() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MytrackerMessage_Event::clear_receipt_gz() {
  receipt_gz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receipt_gz();
}
inline const ::std::string& MytrackerMessage_Event::receipt_gz() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  return receipt_gz_.GetNoArena();
}
inline void MytrackerMessage_Event::set_receipt_gz(const ::std::string& value) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_receipt_gz(::std::string&& value) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
#endif
inline void MytrackerMessage_Event::set_receipt_gz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
inline void MytrackerMessage_Event::set_receipt_gz(const void* value, size_t size) {
  set_has_receipt_gz();
  receipt_gz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}
inline ::std::string* MytrackerMessage_Event::mutable_receipt_gz() {
  set_has_receipt_gz();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  return receipt_gz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_receipt_gz() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
  clear_has_receipt_gz();
  return receipt_gz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_receipt_gz(::std::string* receipt_gz) {
  if (receipt_gz != NULL) {
    set_has_receipt_gz();
  } else {
    clear_has_receipt_gz();
  }
  receipt_gz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt_gz);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.receipt_gz)
}

// optional bytes product_id = 33;
inline bool MytrackerMessage_Event::has_product_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MytrackerMessage_Event::set_has_product_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MytrackerMessage_Event::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MytrackerMessage_Event::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
inline const ::std::string& MytrackerMessage_Event::product_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  return product_id_.GetNoArena();
}
inline void MytrackerMessage_Event::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
#endif
inline void MytrackerMessage_Event::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
inline void MytrackerMessage_Event::set_product_id(const void* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}
inline ::std::string* MytrackerMessage_Event::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_product_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.product_id)
}

// optional bytes transaction_id = 34;
inline bool MytrackerMessage_Event::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MytrackerMessage_Event::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MytrackerMessage_Event::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MytrackerMessage_Event::clear_transaction_id() {
  transaction_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_transaction_id();
}
inline const ::std::string& MytrackerMessage_Event::transaction_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  return transaction_id_.GetNoArena();
}
inline void MytrackerMessage_Event::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_transaction_id(::std::string&& value) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
#endif
inline void MytrackerMessage_Event::set_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
inline void MytrackerMessage_Event::set_transaction_id(const void* value, size_t size) {
  set_has_transaction_id();
  transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}
inline ::std::string* MytrackerMessage_Event::mutable_transaction_id() {
  set_has_transaction_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  return transaction_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_transaction_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
  clear_has_transaction_id();
  return transaction_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_transaction_id(::std::string* transaction_id) {
  if (transaction_id != NULL) {
    set_has_transaction_id();
  } else {
    clear_has_transaction_id();
  }
  transaction_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.transaction_id)
}

// optional bytes original_transaction_id = 51;
inline bool MytrackerMessage_Event::has_original_transaction_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MytrackerMessage_Event::set_has_original_transaction_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MytrackerMessage_Event::clear_has_original_transaction_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MytrackerMessage_Event::clear_original_transaction_id() {
  original_transaction_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_original_transaction_id();
}
inline const ::std::string& MytrackerMessage_Event::original_transaction_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  return original_transaction_id_.GetNoArena();
}
inline void MytrackerMessage_Event::set_original_transaction_id(const ::std::string& value) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_original_transaction_id(::std::string&& value) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
#endif
inline void MytrackerMessage_Event::set_original_transaction_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
inline void MytrackerMessage_Event::set_original_transaction_id(const void* value, size_t size) {
  set_has_original_transaction_id();
  original_transaction_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}
inline ::std::string* MytrackerMessage_Event::mutable_original_transaction_id() {
  set_has_original_transaction_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  return original_transaction_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_original_transaction_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
  clear_has_original_transaction_id();
  return original_transaction_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_original_transaction_id(::std::string* original_transaction_id) {
  if (original_transaction_id != NULL) {
    set_has_original_transaction_id();
  } else {
    clear_has_original_transaction_id();
  }
  original_transaction_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_transaction_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.original_transaction_id)
}

// optional bytes purchase_data = 35;
inline bool MytrackerMessage_Event::has_purchase_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MytrackerMessage_Event::set_has_purchase_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MytrackerMessage_Event::clear_has_purchase_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MytrackerMessage_Event::clear_purchase_data() {
  purchase_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_purchase_data();
}
inline const ::std::string& MytrackerMessage_Event::purchase_data() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  return purchase_data_.GetNoArena();
}
inline void MytrackerMessage_Event::set_purchase_data(const ::std::string& value) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_purchase_data(::std::string&& value) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
#endif
inline void MytrackerMessage_Event::set_purchase_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
inline void MytrackerMessage_Event::set_purchase_data(const void* value, size_t size) {
  set_has_purchase_data();
  purchase_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}
inline ::std::string* MytrackerMessage_Event::mutable_purchase_data() {
  set_has_purchase_data();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  return purchase_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_purchase_data() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
  clear_has_purchase_data();
  return purchase_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_purchase_data(::std::string* purchase_data) {
  if (purchase_data != NULL) {
    set_has_purchase_data();
  } else {
    clear_has_purchase_data();
  }
  purchase_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), purchase_data);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchase_data)
}

// optional bytes data_signature = 36;
inline bool MytrackerMessage_Event::has_data_signature() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MytrackerMessage_Event::set_has_data_signature() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MytrackerMessage_Event::clear_has_data_signature() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MytrackerMessage_Event::clear_data_signature() {
  data_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_signature();
}
inline const ::std::string& MytrackerMessage_Event::data_signature() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  return data_signature_.GetNoArena();
}
inline void MytrackerMessage_Event::set_data_signature(const ::std::string& value) {
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_data_signature(::std::string&& value) {
  set_has_data_signature();
  data_signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
#endif
inline void MytrackerMessage_Event::set_data_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
inline void MytrackerMessage_Event::set_data_signature(const void* value, size_t size) {
  set_has_data_signature();
  data_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}
inline ::std::string* MytrackerMessage_Event::mutable_data_signature() {
  set_has_data_signature();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  return data_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_data_signature() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
  clear_has_data_signature();
  return data_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_data_signature(::std::string* data_signature) {
  if (data_signature != NULL) {
    set_has_data_signature();
  } else {
    clear_has_data_signature();
  }
  data_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_signature);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.data_signature)
}

// optional bytes orderId = 39;
inline bool MytrackerMessage_Event::has_orderid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MytrackerMessage_Event::set_has_orderid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MytrackerMessage_Event::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MytrackerMessage_Event::clear_orderid() {
  orderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orderid();
}
inline const ::std::string& MytrackerMessage_Event::orderid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  return orderid_.GetNoArena();
}
inline void MytrackerMessage_Event::set_orderid(const ::std::string& value) {
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_orderid(::std::string&& value) {
  set_has_orderid();
  orderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
#endif
inline void MytrackerMessage_Event::set_orderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
inline void MytrackerMessage_Event::set_orderid(const void* value, size_t size) {
  set_has_orderid();
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}
inline ::std::string* MytrackerMessage_Event::mutable_orderid() {
  set_has_orderid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  return orderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_orderid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
  clear_has_orderid();
  return orderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_orderid(::std::string* orderid) {
  if (orderid != NULL) {
    set_has_orderid();
  } else {
    clear_has_orderid();
  }
  orderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.orderId)
}

// optional bytes packageName = 40;
inline bool MytrackerMessage_Event::has_packagename() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MytrackerMessage_Event::set_has_packagename() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MytrackerMessage_Event::clear_has_packagename() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MytrackerMessage_Event::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_packagename();
}
inline const ::std::string& MytrackerMessage_Event::packagename() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  return packagename_.GetNoArena();
}
inline void MytrackerMessage_Event::set_packagename(const ::std::string& value) {
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_packagename(::std::string&& value) {
  set_has_packagename();
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
#endif
inline void MytrackerMessage_Event::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
inline void MytrackerMessage_Event::set_packagename(const void* value, size_t size) {
  set_has_packagename();
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}
inline ::std::string* MytrackerMessage_Event::mutable_packagename() {
  set_has_packagename();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_packagename() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
  clear_has_packagename();
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    set_has_packagename();
  } else {
    clear_has_packagename();
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.packageName)
}

// optional bytes productDataId = 41;
inline bool MytrackerMessage_Event::has_productdataid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MytrackerMessage_Event::set_has_productdataid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MytrackerMessage_Event::clear_has_productdataid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MytrackerMessage_Event::clear_productdataid() {
  productdataid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productdataid();
}
inline const ::std::string& MytrackerMessage_Event::productdataid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  return productdataid_.GetNoArena();
}
inline void MytrackerMessage_Event::set_productdataid(const ::std::string& value) {
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_productdataid(::std::string&& value) {
  set_has_productdataid();
  productdataid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
#endif
inline void MytrackerMessage_Event::set_productdataid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
inline void MytrackerMessage_Event::set_productdataid(const void* value, size_t size) {
  set_has_productdataid();
  productdataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}
inline ::std::string* MytrackerMessage_Event::mutable_productdataid() {
  set_has_productdataid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  return productdataid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_productdataid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
  clear_has_productdataid();
  return productdataid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_productdataid(::std::string* productdataid) {
  if (productdataid != NULL) {
    set_has_productdataid();
  } else {
    clear_has_productdataid();
  }
  productdataid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productdataid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.productDataId)
}

// optional uint64 purchaseTime = 42;
inline bool MytrackerMessage_Event::has_purchasetime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_purchasetime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void MytrackerMessage_Event::clear_has_purchasetime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void MytrackerMessage_Event::clear_purchasetime() {
  purchasetime_ = GOOGLE_ULONGLONG(0);
  clear_has_purchasetime();
}
inline ::google::protobuf::uint64 MytrackerMessage_Event::purchasetime() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseTime)
  return purchasetime_;
}
inline void MytrackerMessage_Event::set_purchasetime(::google::protobuf::uint64 value) {
  set_has_purchasetime();
  purchasetime_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseTime)
}

// optional uint32 purchaseState = 43;
inline bool MytrackerMessage_Event::has_purchasestate() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_purchasestate() {
  _has_bits_[0] |= 0x02000000u;
}
inline void MytrackerMessage_Event::clear_has_purchasestate() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void MytrackerMessage_Event::clear_purchasestate() {
  purchasestate_ = 0u;
  clear_has_purchasestate();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::purchasestate() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseState)
  return purchasestate_;
}
inline void MytrackerMessage_Event::set_purchasestate(::google::protobuf::uint32 value) {
  set_has_purchasestate();
  purchasestate_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseState)
}

// optional bytes developerPayload = 44;
inline bool MytrackerMessage_Event::has_developerpayload() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MytrackerMessage_Event::set_has_developerpayload() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MytrackerMessage_Event::clear_has_developerpayload() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MytrackerMessage_Event::clear_developerpayload() {
  developerpayload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_developerpayload();
}
inline const ::std::string& MytrackerMessage_Event::developerpayload() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  return developerpayload_.GetNoArena();
}
inline void MytrackerMessage_Event::set_developerpayload(const ::std::string& value) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_developerpayload(::std::string&& value) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
#endif
inline void MytrackerMessage_Event::set_developerpayload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
inline void MytrackerMessage_Event::set_developerpayload(const void* value, size_t size) {
  set_has_developerpayload();
  developerpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}
inline ::std::string* MytrackerMessage_Event::mutable_developerpayload() {
  set_has_developerpayload();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  return developerpayload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_developerpayload() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
  clear_has_developerpayload();
  return developerpayload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_developerpayload(::std::string* developerpayload) {
  if (developerpayload != NULL) {
    set_has_developerpayload();
  } else {
    clear_has_developerpayload();
  }
  developerpayload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), developerpayload);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.developerPayload)
}

// optional bytes purchaseToken = 45;
inline bool MytrackerMessage_Event::has_purchasetoken() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MytrackerMessage_Event::set_has_purchasetoken() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MytrackerMessage_Event::clear_has_purchasetoken() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MytrackerMessage_Event::clear_purchasetoken() {
  purchasetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_purchasetoken();
}
inline const ::std::string& MytrackerMessage_Event::purchasetoken() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  return purchasetoken_.GetNoArena();
}
inline void MytrackerMessage_Event::set_purchasetoken(const ::std::string& value) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_purchasetoken(::std::string&& value) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
#endif
inline void MytrackerMessage_Event::set_purchasetoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
inline void MytrackerMessage_Event::set_purchasetoken(const void* value, size_t size) {
  set_has_purchasetoken();
  purchasetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}
inline ::std::string* MytrackerMessage_Event::mutable_purchasetoken() {
  set_has_purchasetoken();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  return purchasetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_purchasetoken() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
  clear_has_purchasetoken();
  return purchasetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_purchasetoken(::std::string* purchasetoken) {
  if (purchasetoken != NULL) {
    set_has_purchasetoken();
  } else {
    clear_has_purchasetoken();
  }
  purchasetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), purchasetoken);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.purchaseToken)
}

// optional bool autoRenewing = 46;
inline bool MytrackerMessage_Event::has_autorenewing() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_autorenewing() {
  _has_bits_[0] |= 0x08000000u;
}
inline void MytrackerMessage_Event::clear_has_autorenewing() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void MytrackerMessage_Event::clear_autorenewing() {
  autorenewing_ = false;
  clear_has_autorenewing();
}
inline bool MytrackerMessage_Event::autorenewing() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.autoRenewing)
  return autorenewing_;
}
inline void MytrackerMessage_Event::set_autorenewing(bool value) {
  set_has_autorenewing();
  autorenewing_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.autoRenewing)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event.Session sessions = 37;
inline int MytrackerMessage_Event::sessions_size() const {
  return sessions_.size();
}
inline void MytrackerMessage_Event::clear_sessions() {
  sessions_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session& MytrackerMessage_Event::sessions(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* MytrackerMessage_Event::mutable_sessions(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session* MytrackerMessage_Event::add_sessions() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >*
MytrackerMessage_Event::mutable_sessions() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return &sessions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event_Session >&
MytrackerMessage_Event::sessions() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.Event.sessions)
  return sessions_;
}

// optional bytes installer = 38;
inline bool MytrackerMessage_Event::has_installer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MytrackerMessage_Event::set_has_installer() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MytrackerMessage_Event::clear_has_installer() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MytrackerMessage_Event::clear_installer() {
  installer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_installer();
}
inline const ::std::string& MytrackerMessage_Event::installer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  return installer_.GetNoArena();
}
inline void MytrackerMessage_Event::set_installer(const ::std::string& value) {
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_installer(::std::string&& value) {
  set_has_installer();
  installer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
#endif
inline void MytrackerMessage_Event::set_installer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
inline void MytrackerMessage_Event::set_installer(const void* value, size_t size) {
  set_has_installer();
  installer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}
inline ::std::string* MytrackerMessage_Event::mutable_installer() {
  set_has_installer();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  return installer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_installer() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
  clear_has_installer();
  return installer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_installer(::std::string* installer) {
  if (installer != NULL) {
    set_has_installer();
  } else {
    clear_has_installer();
  }
  installer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installer);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.installer)
}

// optional bool has_iad_attribution = 47;
inline bool MytrackerMessage_Event::has_has_iad_attribution() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_has_iad_attribution() {
  _has_bits_[0] |= 0x10000000u;
}
inline void MytrackerMessage_Event::clear_has_has_iad_attribution() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void MytrackerMessage_Event::clear_has_iad_attribution() {
  has_iad_attribution_ = false;
  clear_has_has_iad_attribution();
}
inline bool MytrackerMessage_Event::has_iad_attribution() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.has_iad_attribution)
  return has_iad_attribution_;
}
inline void MytrackerMessage_Event::set_has_iad_attribution(bool value) {
  set_has_has_iad_attribution();
  has_iad_attribution_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.has_iad_attribution)
}

// optional bool get_attribution = 52;
inline bool MytrackerMessage_Event::has_get_attribution() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_get_attribution() {
  _has_bits_[0] |= 0x20000000u;
}
inline void MytrackerMessage_Event::clear_has_get_attribution() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void MytrackerMessage_Event::clear_get_attribution() {
  get_attribution_ = false;
  clear_has_get_attribution();
}
inline bool MytrackerMessage_Event::get_attribution() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.get_attribution)
  return get_attribution_;
}
inline void MytrackerMessage_Event::set_get_attribution(bool value) {
  set_has_get_attribution();
  get_attribution_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.get_attribution)
}

// optional bytes deeplink = 53;
inline bool MytrackerMessage_Event::has_deeplink() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MytrackerMessage_Event::set_has_deeplink() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MytrackerMessage_Event::clear_has_deeplink() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MytrackerMessage_Event::clear_deeplink() {
  deeplink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deeplink();
}
inline const ::std::string& MytrackerMessage_Event::deeplink() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  return deeplink_.GetNoArena();
}
inline void MytrackerMessage_Event::set_deeplink(const ::std::string& value) {
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_deeplink(::std::string&& value) {
  set_has_deeplink();
  deeplink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
#endif
inline void MytrackerMessage_Event::set_deeplink(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
inline void MytrackerMessage_Event::set_deeplink(const void* value, size_t size) {
  set_has_deeplink();
  deeplink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}
inline ::std::string* MytrackerMessage_Event::mutable_deeplink() {
  set_has_deeplink();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  return deeplink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_deeplink() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
  clear_has_deeplink();
  return deeplink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_deeplink(::std::string* deeplink) {
  if (deeplink != NULL) {
    set_has_deeplink();
  } else {
    clear_has_deeplink();
  }
  deeplink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deeplink);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink)
}

// optional uint32 deeplink_timestamp = 54;
inline bool MytrackerMessage_Event::has_deeplink_timestamp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_deeplink_timestamp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void MytrackerMessage_Event::clear_has_deeplink_timestamp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void MytrackerMessage_Event::clear_deeplink_timestamp() {
  deeplink_timestamp_ = 0u;
  clear_has_deeplink_timestamp();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::deeplink_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_timestamp)
  return deeplink_timestamp_;
}
inline void MytrackerMessage_Event::set_deeplink_timestamp(::google::protobuf::uint32 value) {
  set_has_deeplink_timestamp();
  deeplink_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_timestamp)
}

// optional uint32 deeplink_key_type = 55;
inline bool MytrackerMessage_Event::has_deeplink_key_type() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Event::set_has_deeplink_key_type() {
  _has_bits_[1] |= 0x00000001u;
}
inline void MytrackerMessage_Event::clear_has_deeplink_key_type() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void MytrackerMessage_Event::clear_deeplink_key_type() {
  deeplink_key_type_ = 0u;
  clear_has_deeplink_key_type();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::deeplink_key_type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_key_type)
  return deeplink_key_type_;
}
inline void MytrackerMessage_Event::set_deeplink_key_type(::google::protobuf::uint32 value) {
  set_has_deeplink_key_type();
  deeplink_key_type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_key_type)
}

// optional bool deeplink_error = 56;
inline bool MytrackerMessage_Event::has_deeplink_error() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void MytrackerMessage_Event::set_has_deeplink_error() {
  _has_bits_[0] |= 0x40000000u;
}
inline void MytrackerMessage_Event::clear_has_deeplink_error() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void MytrackerMessage_Event::clear_deeplink_error() {
  deeplink_error_ = false;
  clear_has_deeplink_error();
}
inline bool MytrackerMessage_Event::deeplink_error() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_error)
  return deeplink_error_;
}
inline void MytrackerMessage_Event::set_deeplink_error(bool value) {
  set_has_deeplink_error();
  deeplink_error_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.deeplink_error)
}

// optional bool not_verified = 58;
inline bool MytrackerMessage_Event::has_not_verified() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Event::set_has_not_verified() {
  _has_bits_[1] |= 0x00000002u;
}
inline void MytrackerMessage_Event::clear_has_not_verified() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void MytrackerMessage_Event::clear_not_verified() {
  not_verified_ = false;
  clear_has_not_verified();
}
inline bool MytrackerMessage_Event::not_verified() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.not_verified)
  return not_verified_;
}
inline void MytrackerMessage_Event::set_not_verified(bool value) {
  set_has_not_verified();
  not_verified_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.not_verified)
}

// optional bytes level = 59;
inline bool MytrackerMessage_Event::has_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MytrackerMessage_Event::set_has_level() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MytrackerMessage_Event::clear_has_level() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MytrackerMessage_Event::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_level();
}
inline const ::std::string& MytrackerMessage_Event::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  return level_.GetNoArena();
}
inline void MytrackerMessage_Event::set_level(const ::std::string& value) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
#if LANG_CXX11
inline void MytrackerMessage_Event::set_level(::std::string&& value) {
  set_has_level();
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
#endif
inline void MytrackerMessage_Event::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
inline void MytrackerMessage_Event::set_level(const void* value, size_t size) {
  set_has_level();
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}
inline ::std::string* MytrackerMessage_Event::mutable_level() {
  set_has_level();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Event::release_level() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
  clear_has_level();
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Event::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    set_has_level();
  } else {
    clear_has_level();
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Event.level)
}

// optional uint32 click_timestamp = 60;
inline bool MytrackerMessage_Event::has_click_timestamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void MytrackerMessage_Event::set_has_click_timestamp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void MytrackerMessage_Event::clear_has_click_timestamp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void MytrackerMessage_Event::clear_click_timestamp() {
  click_timestamp_ = 0u;
  clear_has_click_timestamp();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::click_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.click_timestamp)
  return click_timestamp_;
}
inline void MytrackerMessage_Event::set_click_timestamp(::google::protobuf::uint32 value) {
  set_has_click_timestamp();
  click_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.click_timestamp)
}

// optional uint32 install_timestamp = 61;
inline bool MytrackerMessage_Event::has_install_timestamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void MytrackerMessage_Event::set_has_install_timestamp() {
  _has_bits_[1] |= 0x00000008u;
}
inline void MytrackerMessage_Event::clear_has_install_timestamp() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void MytrackerMessage_Event::clear_install_timestamp() {
  install_timestamp_ = 0u;
  clear_has_install_timestamp();
}
inline ::google::protobuf::uint32 MytrackerMessage_Event::install_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Event.install_timestamp)
  return install_timestamp_;
}
inline void MytrackerMessage_Event::set_install_timestamp(::google::protobuf::uint32 value) {
  set_has_install_timestamp();
  install_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Event.install_timestamp)
}

// -------------------------------------------------------------------

// MytrackerMessage_App

// optional bytes bundle = 1;
inline bool MytrackerMessage_App::has_bundle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_App::set_has_bundle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_App::clear_has_bundle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_App::clear_bundle() {
  bundle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bundle();
}
inline const ::std::string& MytrackerMessage_App::bundle() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  return bundle_.GetNoArena();
}
inline void MytrackerMessage_App::set_bundle(const ::std::string& value) {
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
#if LANG_CXX11
inline void MytrackerMessage_App::set_bundle(::std::string&& value) {
  set_has_bundle();
  bundle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
#endif
inline void MytrackerMessage_App::set_bundle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
inline void MytrackerMessage_App::set_bundle(const void* value, size_t size) {
  set_has_bundle();
  bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}
inline ::std::string* MytrackerMessage_App::mutable_bundle() {
  set_has_bundle();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  return bundle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_App::release_bundle() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
  clear_has_bundle();
  return bundle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_App::set_allocated_bundle(::std::string* bundle) {
  if (bundle != NULL) {
    set_has_bundle();
  } else {
    clear_has_bundle();
  }
  bundle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundle);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.App.bundle)
}

// optional uint32 id = 6;
inline bool MytrackerMessage_App::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerMessage_App::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerMessage_App::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerMessage_App::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_App::id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.id)
  return id_;
}
inline void MytrackerMessage_App::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.id)
}

// optional bytes app_id = 7;
inline bool MytrackerMessage_App::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_App::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_App::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_App::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& MytrackerMessage_App::app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  return app_id_.GetNoArena();
}
inline void MytrackerMessage_App::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
#if LANG_CXX11
inline void MytrackerMessage_App::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
#endif
inline void MytrackerMessage_App::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
inline void MytrackerMessage_App::set_app_id(const void* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}
inline ::std::string* MytrackerMessage_App::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_App::release_app_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_App::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.App.app_id)
}

// -------------------------------------------------------------------

// MytrackerMessage_Wifi

// optional bytes bssid = 1;
inline bool MytrackerMessage_Wifi::has_bssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Wifi::set_has_bssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_Wifi::clear_has_bssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_Wifi::clear_bssid() {
  bssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bssid();
}
inline const ::std::string& MytrackerMessage_Wifi::bssid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  return bssid_.GetNoArena();
}
inline void MytrackerMessage_Wifi::set_bssid(const ::std::string& value) {
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
#if LANG_CXX11
inline void MytrackerMessage_Wifi::set_bssid(::std::string&& value) {
  set_has_bssid();
  bssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
#endif
inline void MytrackerMessage_Wifi::set_bssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
inline void MytrackerMessage_Wifi::set_bssid(const void* value, size_t size) {
  set_has_bssid();
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}
inline ::std::string* MytrackerMessage_Wifi::mutable_bssid() {
  set_has_bssid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  return bssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Wifi::release_bssid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
  clear_has_bssid();
  return bssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Wifi::set_allocated_bssid(::std::string* bssid) {
  if (bssid != NULL) {
    set_has_bssid();
  } else {
    clear_has_bssid();
  }
  bssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bssid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.bssid)
}

// optional bytes ssid = 2;
inline bool MytrackerMessage_Wifi::has_ssid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Wifi::set_has_ssid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_Wifi::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_Wifi::clear_ssid() {
  ssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssid();
}
inline const ::std::string& MytrackerMessage_Wifi::ssid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  return ssid_.GetNoArena();
}
inline void MytrackerMessage_Wifi::set_ssid(const ::std::string& value) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
#if LANG_CXX11
inline void MytrackerMessage_Wifi::set_ssid(::std::string&& value) {
  set_has_ssid();
  ssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
#endif
inline void MytrackerMessage_Wifi::set_ssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
inline void MytrackerMessage_Wifi::set_ssid(const void* value, size_t size) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}
inline ::std::string* MytrackerMessage_Wifi::mutable_ssid() {
  set_has_ssid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  return ssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Wifi::release_ssid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
  clear_has_ssid();
  return ssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Wifi::set_allocated_ssid(::std::string* ssid) {
  if (ssid != NULL) {
    set_has_ssid();
  } else {
    clear_has_ssid();
  }
  ssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.ssid)
}

// optional int32 level = 3;
inline bool MytrackerMessage_Wifi::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerMessage_Wifi::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerMessage_Wifi::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerMessage_Wifi::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MytrackerMessage_Wifi::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.level)
  return level_;
}
inline void MytrackerMessage_Wifi::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.level)
}

// optional uint32 wifi_id = 5;
inline bool MytrackerMessage_Wifi::has_wifi_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MytrackerMessage_Wifi::set_has_wifi_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MytrackerMessage_Wifi::clear_has_wifi_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MytrackerMessage_Wifi::clear_wifi_id() {
  wifi_id_ = 0u;
  clear_has_wifi_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_Wifi::wifi_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.wifi_id)
  return wifi_id_;
}
inline void MytrackerMessage_Wifi::set_wifi_id(::google::protobuf::uint32 value) {
  set_has_wifi_id();
  wifi_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.wifi_id)
}

// optional uint32 link_speed = 6;
inline bool MytrackerMessage_Wifi::has_link_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MytrackerMessage_Wifi::set_has_link_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MytrackerMessage_Wifi::clear_has_link_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MytrackerMessage_Wifi::clear_link_speed() {
  link_speed_ = 0u;
  clear_has_link_speed();
}
inline ::google::protobuf::uint32 MytrackerMessage_Wifi::link_speed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.link_speed)
  return link_speed_;
}
inline void MytrackerMessage_Wifi::set_link_speed(::google::protobuf::uint32 value) {
  set_has_link_speed();
  link_speed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Wifi.link_speed)
}

// -------------------------------------------------------------------

// MytrackerMessage_Cell

// optional bytes type = 1;
inline bool MytrackerMessage_Cell::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage_Cell::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage_Cell::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage_Cell::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& MytrackerMessage_Cell::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  return type_.GetNoArena();
}
inline void MytrackerMessage_Cell::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
#if LANG_CXX11
inline void MytrackerMessage_Cell::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
#endif
inline void MytrackerMessage_Cell::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
inline void MytrackerMessage_Cell::set_type(const void* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}
inline ::std::string* MytrackerMessage_Cell::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage_Cell::release_type() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage_Cell::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.Cell.type)
}

// optional uint32 cell_id = 2;
inline bool MytrackerMessage_Cell::has_cell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cell_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage_Cell::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage_Cell::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::cell_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cell_id)
  return cell_id_;
}
inline void MytrackerMessage_Cell::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cell_id)
}

// optional uint32 lac = 3;
inline bool MytrackerMessage_Cell::has_lac() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerMessage_Cell::set_has_lac() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerMessage_Cell::clear_has_lac() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerMessage_Cell::clear_lac() {
  lac_ = 0u;
  clear_has_lac();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::lac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.lac)
  return lac_;
}
inline void MytrackerMessage_Cell::set_lac(::google::protobuf::uint32 value) {
  set_has_lac();
  lac_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.lac)
}

// optional uint32 mcc = 4;
inline bool MytrackerMessage_Cell::has_mcc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MytrackerMessage_Cell::set_has_mcc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MytrackerMessage_Cell::clear_has_mcc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MytrackerMessage_Cell::clear_mcc() {
  mcc_ = 0u;
  clear_has_mcc();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::mcc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mcc)
  return mcc_;
}
inline void MytrackerMessage_Cell::set_mcc(::google::protobuf::uint32 value) {
  set_has_mcc();
  mcc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mcc)
}

// optional uint32 mnc = 5;
inline bool MytrackerMessage_Cell::has_mnc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MytrackerMessage_Cell::set_has_mnc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MytrackerMessage_Cell::clear_has_mnc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MytrackerMessage_Cell::clear_mnc() {
  mnc_ = 0u;
  clear_has_mnc();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::mnc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mnc)
  return mnc_;
}
inline void MytrackerMessage_Cell::set_mnc(::google::protobuf::uint32 value) {
  set_has_mnc();
  mnc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.mnc)
}

// optional uint32 level = 6;
inline bool MytrackerMessage_Cell::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MytrackerMessage_Cell::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MytrackerMessage_Cell::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MytrackerMessage_Cell::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.level)
  return level_;
}
inline void MytrackerMessage_Cell::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.level)
}

// optional int32 dbm = 7;
inline bool MytrackerMessage_Cell::has_dbm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MytrackerMessage_Cell::set_has_dbm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MytrackerMessage_Cell::clear_has_dbm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MytrackerMessage_Cell::clear_dbm() {
  dbm_ = 0;
  clear_has_dbm();
}
inline ::google::protobuf::int32 MytrackerMessage_Cell::dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.dbm)
  return dbm_;
}
inline void MytrackerMessage_Cell::set_dbm(::google::protobuf::int32 value) {
  set_has_dbm();
  dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.dbm)
}

// optional uint32 asu = 8;
inline bool MytrackerMessage_Cell::has_asu() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MytrackerMessage_Cell::set_has_asu() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MytrackerMessage_Cell::clear_has_asu() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MytrackerMessage_Cell::clear_asu() {
  asu_ = 0u;
  clear_has_asu();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::asu() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.asu)
  return asu_;
}
inline void MytrackerMessage_Cell::set_asu(::google::protobuf::uint32 value) {
  set_has_asu();
  asu_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.asu)
}

// optional uint32 ta = 9;
inline bool MytrackerMessage_Cell::has_ta() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MytrackerMessage_Cell::set_has_ta() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MytrackerMessage_Cell::clear_has_ta() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MytrackerMessage_Cell::clear_ta() {
  ta_ = 0u;
  clear_has_ta();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::ta() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.ta)
  return ta_;
}
inline void MytrackerMessage_Cell::set_ta(::google::protobuf::uint32 value) {
  set_has_ta();
  ta_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.ta)
}

// optional uint32 rfcn = 10;
inline bool MytrackerMessage_Cell::has_rfcn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MytrackerMessage_Cell::set_has_rfcn() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MytrackerMessage_Cell::clear_has_rfcn() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MytrackerMessage_Cell::clear_rfcn() {
  rfcn_ = 0u;
  clear_has_rfcn();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::rfcn() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.rfcn)
  return rfcn_;
}
inline void MytrackerMessage_Cell::set_rfcn(::google::protobuf::uint32 value) {
  set_has_rfcn();
  rfcn_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.rfcn)
}

// optional uint32 bsic = 11;
inline bool MytrackerMessage_Cell::has_bsic() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MytrackerMessage_Cell::set_has_bsic() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MytrackerMessage_Cell::clear_has_bsic() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MytrackerMessage_Cell::clear_bsic() {
  bsic_ = 0u;
  clear_has_bsic();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::bsic() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.bsic)
  return bsic_;
}
inline void MytrackerMessage_Cell::set_bsic(::google::protobuf::uint32 value) {
  set_has_bsic();
  bsic_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.bsic)
}

// optional uint32 psc = 12;
inline bool MytrackerMessage_Cell::has_psc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MytrackerMessage_Cell::set_has_psc() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MytrackerMessage_Cell::clear_has_psc() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MytrackerMessage_Cell::clear_psc() {
  psc_ = 0u;
  clear_has_psc();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::psc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.psc)
  return psc_;
}
inline void MytrackerMessage_Cell::set_psc(::google::protobuf::uint32 value) {
  set_has_psc();
  psc_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.psc)
}

// optional uint32 tac = 13;
inline bool MytrackerMessage_Cell::has_tac() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_tac() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MytrackerMessage_Cell::clear_has_tac() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MytrackerMessage_Cell::clear_tac() {
  tac_ = 0u;
  clear_has_tac();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::tac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.tac)
  return tac_;
}
inline void MytrackerMessage_Cell::set_tac(::google::protobuf::uint32 value) {
  set_has_tac();
  tac_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.tac)
}

// optional uint32 network_id = 14;
inline bool MytrackerMessage_Cell::has_network_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_network_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MytrackerMessage_Cell::clear_has_network_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MytrackerMessage_Cell::clear_network_id() {
  network_id_ = 0u;
  clear_has_network_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::network_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.network_id)
  return network_id_;
}
inline void MytrackerMessage_Cell::set_network_id(::google::protobuf::uint32 value) {
  set_has_network_id();
  network_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.network_id)
}

// optional uint32 system_id = 15;
inline bool MytrackerMessage_Cell::has_system_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_system_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MytrackerMessage_Cell::clear_has_system_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MytrackerMessage_Cell::clear_system_id() {
  system_id_ = 0u;
  clear_has_system_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::system_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.system_id)
  return system_id_;
}
inline void MytrackerMessage_Cell::set_system_id(::google::protobuf::uint32 value) {
  set_has_system_id();
  system_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.system_id)
}

// optional uint32 base_station_id = 16;
inline bool MytrackerMessage_Cell::has_base_station_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_base_station_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MytrackerMessage_Cell::clear_has_base_station_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MytrackerMessage_Cell::clear_base_station_id() {
  base_station_id_ = 0u;
  clear_has_base_station_id();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::base_station_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.base_station_id)
  return base_station_id_;
}
inline void MytrackerMessage_Cell::set_base_station_id(::google::protobuf::uint32 value) {
  set_has_base_station_id();
  base_station_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.base_station_id)
}

// optional int32 cdma_lat = 17;
inline bool MytrackerMessage_Cell::has_cdma_lat() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cdma_lat() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MytrackerMessage_Cell::clear_has_cdma_lat() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MytrackerMessage_Cell::clear_cdma_lat() {
  cdma_lat_ = 0;
  clear_has_cdma_lat();
}
inline ::google::protobuf::int32 MytrackerMessage_Cell::cdma_lat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lat)
  return cdma_lat_;
}
inline void MytrackerMessage_Cell::set_cdma_lat(::google::protobuf::int32 value) {
  set_has_cdma_lat();
  cdma_lat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lat)
}

// optional int32 cdma_lon = 18;
inline bool MytrackerMessage_Cell::has_cdma_lon() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cdma_lon() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MytrackerMessage_Cell::clear_has_cdma_lon() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MytrackerMessage_Cell::clear_cdma_lon() {
  cdma_lon_ = 0;
  clear_has_cdma_lon();
}
inline ::google::protobuf::int32 MytrackerMessage_Cell::cdma_lon() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lon)
  return cdma_lon_;
}
inline void MytrackerMessage_Cell::set_cdma_lon(::google::protobuf::int32 value) {
  set_has_cdma_lon();
  cdma_lon_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_lon)
}

// optional uint32 cdma_level = 19;
inline bool MytrackerMessage_Cell::has_cdma_level() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cdma_level() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MytrackerMessage_Cell::clear_has_cdma_level() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MytrackerMessage_Cell::clear_cdma_level() {
  cdma_level_ = 0u;
  clear_has_cdma_level();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::cdma_level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_level)
  return cdma_level_;
}
inline void MytrackerMessage_Cell::set_cdma_level(::google::protobuf::uint32 value) {
  set_has_cdma_level();
  cdma_level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_level)
}

// optional uint32 evdo_level = 20;
inline bool MytrackerMessage_Cell::has_evdo_level() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_evdo_level() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MytrackerMessage_Cell::clear_has_evdo_level() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MytrackerMessage_Cell::clear_evdo_level() {
  evdo_level_ = 0u;
  clear_has_evdo_level();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::evdo_level() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_level)
  return evdo_level_;
}
inline void MytrackerMessage_Cell::set_evdo_level(::google::protobuf::uint32 value) {
  set_has_evdo_level();
  evdo_level_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_level)
}

// optional int32 cdma_dbm = 21;
inline bool MytrackerMessage_Cell::has_cdma_dbm() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cdma_dbm() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MytrackerMessage_Cell::clear_has_cdma_dbm() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MytrackerMessage_Cell::clear_cdma_dbm() {
  cdma_dbm_ = 0;
  clear_has_cdma_dbm();
}
inline ::google::protobuf::int32 MytrackerMessage_Cell::cdma_dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_dbm)
  return cdma_dbm_;
}
inline void MytrackerMessage_Cell::set_cdma_dbm(::google::protobuf::int32 value) {
  set_has_cdma_dbm();
  cdma_dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_dbm)
}

// optional int32 evdo_dbm = 22;
inline bool MytrackerMessage_Cell::has_evdo_dbm() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_evdo_dbm() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MytrackerMessage_Cell::clear_has_evdo_dbm() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MytrackerMessage_Cell::clear_evdo_dbm() {
  evdo_dbm_ = 0;
  clear_has_evdo_dbm();
}
inline ::google::protobuf::int32 MytrackerMessage_Cell::evdo_dbm() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_dbm)
  return evdo_dbm_;
}
inline void MytrackerMessage_Cell::set_evdo_dbm(::google::protobuf::int32 value) {
  set_has_evdo_dbm();
  evdo_dbm_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_dbm)
}

// optional uint32 evdo_ecio = 23;
inline bool MytrackerMessage_Cell::has_evdo_ecio() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_evdo_ecio() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MytrackerMessage_Cell::clear_has_evdo_ecio() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MytrackerMessage_Cell::clear_evdo_ecio() {
  evdo_ecio_ = 0u;
  clear_has_evdo_ecio();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::evdo_ecio() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_ecio)
  return evdo_ecio_;
}
inline void MytrackerMessage_Cell::set_evdo_ecio(::google::protobuf::uint32 value) {
  set_has_evdo_ecio();
  evdo_ecio_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_ecio)
}

// optional uint32 cdma_ecio = 24;
inline bool MytrackerMessage_Cell::has_cdma_ecio() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_cdma_ecio() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MytrackerMessage_Cell::clear_has_cdma_ecio() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MytrackerMessage_Cell::clear_cdma_ecio() {
  cdma_ecio_ = 0u;
  clear_has_cdma_ecio();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::cdma_ecio() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_ecio)
  return cdma_ecio_;
}
inline void MytrackerMessage_Cell::set_cdma_ecio(::google::protobuf::uint32 value) {
  set_has_cdma_ecio();
  cdma_ecio_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.cdma_ecio)
}

// optional uint32 evdo_snr = 25;
inline bool MytrackerMessage_Cell::has_evdo_snr() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MytrackerMessage_Cell::set_has_evdo_snr() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MytrackerMessage_Cell::clear_has_evdo_snr() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MytrackerMessage_Cell::clear_evdo_snr() {
  evdo_snr_ = 0u;
  clear_has_evdo_snr();
}
inline ::google::protobuf::uint32 MytrackerMessage_Cell::evdo_snr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_snr)
  return evdo_snr_;
}
inline void MytrackerMessage_Cell::set_evdo_snr(::google::protobuf::uint32 value) {
  set_has_evdo_snr();
  evdo_snr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.Cell.evdo_snr)
}

// -------------------------------------------------------------------

// MytrackerMessage

// optional bytes mytracker_version = 1;
inline bool MytrackerMessage::has_mytracker_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MytrackerMessage::set_has_mytracker_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MytrackerMessage::clear_has_mytracker_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MytrackerMessage::clear_mytracker_version() {
  mytracker_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mytracker_version();
}
inline const ::std::string& MytrackerMessage::mytracker_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  return mytracker_version_.GetNoArena();
}
inline void MytrackerMessage::set_mytracker_version(const ::std::string& value) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
#if LANG_CXX11
inline void MytrackerMessage::set_mytracker_version(::std::string&& value) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
#endif
inline void MytrackerMessage::set_mytracker_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
inline void MytrackerMessage::set_mytracker_version(const void* value, size_t size) {
  set_has_mytracker_version();
  mytracker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}
inline ::std::string* MytrackerMessage::mutable_mytracker_version() {
  set_has_mytracker_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  return mytracker_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_mytracker_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
  clear_has_mytracker_version();
  return mytracker_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_mytracker_version(::std::string* mytracker_version) {
  if (mytracker_version != NULL) {
    set_has_mytracker_version();
  } else {
    clear_has_mytracker_version();
  }
  mytracker_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mytracker_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mytracker_version)
}

// optional uint32 mobile_app_pk = 2;
inline bool MytrackerMessage::has_mobile_app_pk() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void MytrackerMessage::set_has_mobile_app_pk() {
  _has_bits_[1] |= 0x00000002u;
}
inline void MytrackerMessage::clear_has_mobile_app_pk() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void MytrackerMessage::clear_mobile_app_pk() {
  mobile_app_pk_ = 0u;
  clear_has_mobile_app_pk();
}
inline ::google::protobuf::uint32 MytrackerMessage::mobile_app_pk() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mobile_app_pk)
  return mobile_app_pk_;
}
inline void MytrackerMessage::set_mobile_app_pk(::google::protobuf::uint32 value) {
  set_has_mobile_app_pk();
  mobile_app_pk_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mobile_app_pk)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Event events = 3;
inline int MytrackerMessage::events_size() const {
  return events_.size();
}
inline void MytrackerMessage::clear_events() {
  events_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Event& MytrackerMessage::events(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event* MytrackerMessage::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Event* MytrackerMessage::add_events() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >*
MytrackerMessage::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Event >&
MytrackerMessage::events() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.events)
  return events_;
}

// optional uint32 banner = 4;
inline bool MytrackerMessage::has_banner() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void MytrackerMessage::set_has_banner() {
  _has_bits_[1] |= 0x00000004u;
}
inline void MytrackerMessage::clear_has_banner() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void MytrackerMessage::clear_banner() {
  banner_ = 0u;
  clear_has_banner();
}
inline ::google::protobuf::uint32 MytrackerMessage::banner() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.banner)
  return banner_;
}
inline void MytrackerMessage::set_banner(::google::protobuf::uint32 value) {
  set_has_banner();
  banner_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.banner)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.App apps = 9;
inline int MytrackerMessage::apps_size() const {
  return apps_.size();
}
inline void MytrackerMessage::clear_apps() {
  apps_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_App& MytrackerMessage::apps(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_App* MytrackerMessage::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_App* MytrackerMessage::add_apps() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >*
MytrackerMessage::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return &apps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_App >&
MytrackerMessage::apps() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.apps)
  return apps_;
}

// repeated fixed32 src_ip_chain = 14;
inline int MytrackerMessage::src_ip_chain_size() const {
  return src_ip_chain_.size();
}
inline void MytrackerMessage::clear_src_ip_chain() {
  src_ip_chain_.Clear();
}
inline ::google::protobuf::uint32 MytrackerMessage::src_ip_chain(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return src_ip_chain_.Get(index);
}
inline void MytrackerMessage::set_src_ip_chain(int index, ::google::protobuf::uint32 value) {
  src_ip_chain_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
}
inline void MytrackerMessage::add_src_ip_chain(::google::protobuf::uint32 value) {
  src_ip_chain_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::src_ip_chain() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return src_ip_chain_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_src_ip_chain() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.src_ip_chain)
  return &src_ip_chain_;
}

// optional fixed32 timestamp = 15;
inline bool MytrackerMessage::has_timestamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void MytrackerMessage::set_has_timestamp() {
  _has_bits_[1] |= 0x00000008u;
}
inline void MytrackerMessage::clear_has_timestamp() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void MytrackerMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 MytrackerMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp)
  return timestamp_;
}
inline void MytrackerMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp)
}

// optional bytes app_id = 16;
inline bool MytrackerMessage::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MytrackerMessage::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MytrackerMessage::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MytrackerMessage::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& MytrackerMessage::app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  return app_id_.GetNoArena();
}
inline void MytrackerMessage::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
#endif
inline void MytrackerMessage::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
inline void MytrackerMessage::set_app_id(const void* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}
inline ::std::string* MytrackerMessage::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_app_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_id)
}

// optional uint32 timestamp_base = 17;
inline bool MytrackerMessage::has_timestamp_base() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void MytrackerMessage::set_has_timestamp_base() {
  _has_bits_[1] |= 0x00000010u;
}
inline void MytrackerMessage::clear_has_timestamp_base() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void MytrackerMessage::clear_timestamp_base() {
  timestamp_base_ = 0u;
  clear_has_timestamp_base();
}
inline ::google::protobuf::uint32 MytrackerMessage::timestamp_base() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_base)
  return timestamp_base_;
}
inline void MytrackerMessage::set_timestamp_base(::google::protobuf::uint32 value) {
  set_has_timestamp_base();
  timestamp_base_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_base)
}

// optional fixed32 user_ip = 18;
inline bool MytrackerMessage::has_user_ip() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void MytrackerMessage::set_has_user_ip() {
  _has_bits_[1] |= 0x00000020u;
}
inline void MytrackerMessage::clear_has_user_ip() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void MytrackerMessage::clear_user_ip() {
  user_ip_ = 0u;
  clear_has_user_ip();
}
inline ::google::protobuf::uint32 MytrackerMessage::user_ip() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.user_ip)
  return user_ip_;
}
inline void MytrackerMessage::set_user_ip(::google::protobuf::uint32 value) {
  set_has_user_ip();
  user_ip_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.user_ip)
}

// optional bytes user_ipv6 = 19;
inline bool MytrackerMessage::has_user_ipv6() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MytrackerMessage::set_has_user_ipv6() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MytrackerMessage::clear_has_user_ipv6() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MytrackerMessage::clear_user_ipv6() {
  user_ipv6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_ipv6();
}
inline const ::std::string& MytrackerMessage::user_ipv6() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  return user_ipv6_.GetNoArena();
}
inline void MytrackerMessage::set_user_ipv6(const ::std::string& value) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
#if LANG_CXX11
inline void MytrackerMessage::set_user_ipv6(::std::string&& value) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
#endif
inline void MytrackerMessage::set_user_ipv6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
inline void MytrackerMessage::set_user_ipv6(const void* value, size_t size) {
  set_has_user_ipv6();
  user_ipv6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}
inline ::std::string* MytrackerMessage::mutable_user_ipv6() {
  set_has_user_ipv6();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  return user_ipv6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_user_ipv6() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
  clear_has_user_ipv6();
  return user_ipv6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_user_ipv6(::std::string* user_ipv6) {
  if (user_ipv6 != NULL) {
    set_has_user_ipv6();
  } else {
    clear_has_user_ipv6();
  }
  user_ipv6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_ipv6);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.user_ipv6)
}

// optional uint32 remote_addr = 83;
inline bool MytrackerMessage::has_remote_addr() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void MytrackerMessage::set_has_remote_addr() {
  _has_bits_[1] |= 0x04000000u;
}
inline void MytrackerMessage::clear_has_remote_addr() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void MytrackerMessage::clear_remote_addr() {
  remote_addr_ = 0u;
  clear_has_remote_addr();
}
inline ::google::protobuf::uint32 MytrackerMessage::remote_addr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.remote_addr)
  return remote_addr_;
}
inline void MytrackerMessage::set_remote_addr(::google::protobuf::uint32 value) {
  set_has_remote_addr();
  remote_addr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.remote_addr)
}

// optional uint32 x_forwarded_for = 84;
inline bool MytrackerMessage::has_x_forwarded_for() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void MytrackerMessage::set_has_x_forwarded_for() {
  _has_bits_[1] |= 0x08000000u;
}
inline void MytrackerMessage::clear_has_x_forwarded_for() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void MytrackerMessage::clear_x_forwarded_for() {
  x_forwarded_for_ = 0u;
  clear_has_x_forwarded_for();
}
inline ::google::protobuf::uint32 MytrackerMessage::x_forwarded_for() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.x_forwarded_for)
  return x_forwarded_for_;
}
inline void MytrackerMessage::set_x_forwarded_for(::google::protobuf::uint32 value) {
  set_has_x_forwarded_for();
  x_forwarded_for_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.x_forwarded_for)
}

// optional uint32 geo = 80;
inline bool MytrackerMessage::has_geo() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void MytrackerMessage::set_has_geo() {
  _has_bits_[1] |= 0x00800000u;
}
inline void MytrackerMessage::clear_has_geo() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void MytrackerMessage::clear_geo() {
  geo_ = 0u;
  clear_has_geo();
}
inline ::google::protobuf::uint32 MytrackerMessage::geo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.geo)
  return geo_;
}
inline void MytrackerMessage::set_geo(::google::protobuf::uint32 value) {
  set_has_geo();
  geo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.geo)
}

// optional uint32 hacks = 81;
inline bool MytrackerMessage::has_hacks() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void MytrackerMessage::set_has_hacks() {
  _has_bits_[1] |= 0x01000000u;
}
inline void MytrackerMessage::clear_has_hacks() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void MytrackerMessage::clear_hacks() {
  hacks_ = 0u;
  clear_has_hacks();
}
inline ::google::protobuf::uint32 MytrackerMessage::hacks() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.hacks)
  return hacks_;
}
inline void MytrackerMessage::set_hacks(::google::protobuf::uint32 value) {
  set_has_hacks();
  hacks_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.hacks)
}

// optional bool tracker_v1 = 88;
inline bool MytrackerMessage::has_tracker_v1() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void MytrackerMessage::set_has_tracker_v1() {
  _has_bits_[1] |= 0x20000000u;
}
inline void MytrackerMessage::clear_has_tracker_v1() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void MytrackerMessage::clear_tracker_v1() {
  tracker_v1_ = false;
  clear_has_tracker_v1();
}
inline bool MytrackerMessage::tracker_v1() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.tracker_v1)
  return tracker_v1_;
}
inline void MytrackerMessage::set_tracker_v1(bool value) {
  set_has_tracker_v1();
  tracker_v1_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.tracker_v1)
}

// optional fixed32 timestamp_send = 82;
inline bool MytrackerMessage::has_timestamp_send() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void MytrackerMessage::set_has_timestamp_send() {
  _has_bits_[1] |= 0x02000000u;
}
inline void MytrackerMessage::clear_has_timestamp_send() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void MytrackerMessage::clear_timestamp_send() {
  timestamp_send_ = 0u;
  clear_has_timestamp_send();
}
inline ::google::protobuf::uint32 MytrackerMessage::timestamp_send() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_send)
  return timestamp_send_;
}
inline void MytrackerMessage::set_timestamp_send(::google::protobuf::uint32 value) {
  set_has_timestamp_send();
  timestamp_send_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timestamp_send)
}

// optional uint32 custom_events_skipped = 103;
inline bool MytrackerMessage::has_custom_events_skipped() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void MytrackerMessage::set_has_custom_events_skipped() {
  _has_bits_[2] |= 0x00000002u;
}
inline void MytrackerMessage::clear_has_custom_events_skipped() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void MytrackerMessage::clear_custom_events_skipped() {
  custom_events_skipped_ = 0u;
  clear_has_custom_events_skipped();
}
inline ::google::protobuf::uint32 MytrackerMessage::custom_events_skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.custom_events_skipped)
  return custom_events_skipped_;
}
inline void MytrackerMessage::set_custom_events_skipped(::google::protobuf::uint32 value) {
  set_has_custom_events_skipped();
  custom_events_skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_events_skipped)
}

// optional uint32 random = 104;
inline bool MytrackerMessage::has_random() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void MytrackerMessage::set_has_random() {
  _has_bits_[2] |= 0x00000004u;
}
inline void MytrackerMessage::clear_has_random() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void MytrackerMessage::clear_random() {
  random_ = 0u;
  clear_has_random();
}
inline ::google::protobuf::uint32 MytrackerMessage::random() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.random)
  return random_;
}
inline void MytrackerMessage::set_random(::google::protobuf::uint32 value) {
  set_has_random();
  random_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.random)
}

// optional bytes app_version = 20;
inline bool MytrackerMessage::has_app_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MytrackerMessage::set_has_app_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MytrackerMessage::clear_has_app_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MytrackerMessage::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_version();
}
inline const ::std::string& MytrackerMessage::app_version() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  return app_version_.GetNoArena();
}
inline void MytrackerMessage::set_app_version(const ::std::string& value) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
#if LANG_CXX11
inline void MytrackerMessage::set_app_version(::std::string&& value) {
  set_has_app_version();
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
#endif
inline void MytrackerMessage::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
inline void MytrackerMessage::set_app_version(const void* value, size_t size) {
  set_has_app_version();
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}
inline ::std::string* MytrackerMessage::mutable_app_version() {
  set_has_app_version();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_app_version() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
  clear_has_app_version();
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    set_has_app_version();
  } else {
    clear_has_app_version();
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_version)
}

// optional bytes app_build = 21;
inline bool MytrackerMessage::has_app_build() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MytrackerMessage::set_has_app_build() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MytrackerMessage::clear_has_app_build() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MytrackerMessage::clear_app_build() {
  app_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_build();
}
inline const ::std::string& MytrackerMessage::app_build() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  return app_build_.GetNoArena();
}
inline void MytrackerMessage::set_app_build(const ::std::string& value) {
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
#if LANG_CXX11
inline void MytrackerMessage::set_app_build(::std::string&& value) {
  set_has_app_build();
  app_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
#endif
inline void MytrackerMessage::set_app_build(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
inline void MytrackerMessage::set_app_build(const void* value, size_t size) {
  set_has_app_build();
  app_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}
inline ::std::string* MytrackerMessage::mutable_app_build() {
  set_has_app_build();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  return app_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_app_build() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
  clear_has_app_build();
  return app_build_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_app_build(::std::string* app_build) {
  if (app_build != NULL) {
    set_has_app_build();
  } else {
    clear_has_app_build();
  }
  app_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_build);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_build)
}

// optional bytes app_language = 22;
inline bool MytrackerMessage::has_app_language() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MytrackerMessage::set_has_app_language() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MytrackerMessage::clear_has_app_language() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MytrackerMessage::clear_app_language() {
  app_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_language();
}
inline const ::std::string& MytrackerMessage::app_language() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  return app_language_.GetNoArena();
}
inline void MytrackerMessage::set_app_language(const ::std::string& value) {
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
#if LANG_CXX11
inline void MytrackerMessage::set_app_language(::std::string&& value) {
  set_has_app_language();
  app_language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
#endif
inline void MytrackerMessage::set_app_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
inline void MytrackerMessage::set_app_language(const void* value, size_t size) {
  set_has_app_language();
  app_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}
inline ::std::string* MytrackerMessage::mutable_app_language() {
  set_has_app_language();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  return app_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_app_language() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
  clear_has_app_language();
  return app_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_app_language(::std::string* app_language) {
  if (app_language != NULL) {
    set_has_app_language();
  } else {
    clear_has_app_language();
  }
  app_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_language);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_language)
}

// optional bytes app_bundle = 23;
inline bool MytrackerMessage::has_app_bundle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MytrackerMessage::set_has_app_bundle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MytrackerMessage::clear_has_app_bundle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MytrackerMessage::clear_app_bundle() {
  app_bundle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_bundle();
}
inline const ::std::string& MytrackerMessage::app_bundle() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  return app_bundle_.GetNoArena();
}
inline void MytrackerMessage::set_app_bundle(const ::std::string& value) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
#if LANG_CXX11
inline void MytrackerMessage::set_app_bundle(::std::string&& value) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
#endif
inline void MytrackerMessage::set_app_bundle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
inline void MytrackerMessage::set_app_bundle(const void* value, size_t size) {
  set_has_app_bundle();
  app_bundle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}
inline ::std::string* MytrackerMessage::mutable_app_bundle() {
  set_has_app_bundle();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  return app_bundle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_app_bundle() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
  clear_has_app_bundle();
  return app_bundle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_app_bundle(::std::string* app_bundle) {
  if (app_bundle != NULL) {
    set_has_app_bundle();
  } else {
    clear_has_app_bundle();
  }
  app_bundle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_bundle);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.app_bundle)
}

// optional uint32 mrgs_app_id = 24;
inline bool MytrackerMessage::has_mrgs_app_id() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void MytrackerMessage::set_has_mrgs_app_id() {
  _has_bits_[1] |= 0x00000040u;
}
inline void MytrackerMessage::clear_has_mrgs_app_id() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void MytrackerMessage::clear_mrgs_app_id() {
  mrgs_app_id_ = 0u;
  clear_has_mrgs_app_id();
}
inline ::google::protobuf::uint32 MytrackerMessage::mrgs_app_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_app_id)
  return mrgs_app_id_;
}
inline void MytrackerMessage::set_mrgs_app_id(::google::protobuf::uint32 value) {
  set_has_mrgs_app_id();
  mrgs_app_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_app_id)
}

// optional uint32 gender = 30;
inline bool MytrackerMessage::has_gender() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void MytrackerMessage::set_has_gender() {
  _has_bits_[1] |= 0x00000080u;
}
inline void MytrackerMessage::clear_has_gender() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void MytrackerMessage::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 MytrackerMessage::gender() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.gender)
  return gender_;
}
inline void MytrackerMessage::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.gender)
}

// optional uint32 age = 31;
inline bool MytrackerMessage::has_age() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void MytrackerMessage::set_has_age() {
  _has_bits_[1] |= 0x00000100u;
}
inline void MytrackerMessage::clear_has_age() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void MytrackerMessage::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 MytrackerMessage::age() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.age)
  return age_;
}
inline void MytrackerMessage::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.age)
}

// optional bytes mrgs_user_id = 32;
inline bool MytrackerMessage::has_mrgs_user_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MytrackerMessage::set_has_mrgs_user_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MytrackerMessage::clear_has_mrgs_user_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MytrackerMessage::clear_mrgs_user_id() {
  mrgs_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mrgs_user_id();
}
inline const ::std::string& MytrackerMessage::mrgs_user_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  return mrgs_user_id_.GetNoArena();
}
inline void MytrackerMessage::set_mrgs_user_id(const ::std::string& value) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_mrgs_user_id(::std::string&& value) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
#endif
inline void MytrackerMessage::set_mrgs_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
inline void MytrackerMessage::set_mrgs_user_id(const void* value, size_t size) {
  set_has_mrgs_user_id();
  mrgs_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}
inline ::std::string* MytrackerMessage::mutable_mrgs_user_id() {
  set_has_mrgs_user_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  return mrgs_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_mrgs_user_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
  clear_has_mrgs_user_id();
  return mrgs_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_mrgs_user_id(::std::string* mrgs_user_id) {
  if (mrgs_user_id != NULL) {
    set_has_mrgs_user_id();
  } else {
    clear_has_mrgs_user_id();
  }
  mrgs_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mrgs_user_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_user_id)
}

// repeated int64 ok_id = 33;
inline int MytrackerMessage::ok_id_size() const {
  return ok_id_.size();
}
inline void MytrackerMessage::clear_ok_id() {
  ok_id_.Clear();
}
inline ::google::protobuf::int64 MytrackerMessage::ok_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return ok_id_.Get(index);
}
inline void MytrackerMessage::set_ok_id(int index, ::google::protobuf::int64 value) {
  ok_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
}
inline void MytrackerMessage::add_ok_id(::google::protobuf::int64 value) {
  ok_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MytrackerMessage::ok_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return ok_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MytrackerMessage::mutable_ok_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.ok_id)
  return &ok_id_;
}

// repeated uint32 vk_id = 34;
inline int MytrackerMessage::vk_id_size() const {
  return vk_id_.size();
}
inline void MytrackerMessage::clear_vk_id() {
  vk_id_.Clear();
}
inline ::google::protobuf::uint32 MytrackerMessage::vk_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return vk_id_.Get(index);
}
inline void MytrackerMessage::set_vk_id(int index, ::google::protobuf::uint32 value) {
  vk_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
}
inline void MytrackerMessage::add_vk_id(::google::protobuf::uint32 value) {
  vk_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::vk_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return vk_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_vk_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.vk_id)
  return &vk_id_;
}

// repeated bytes email = 35;
inline int MytrackerMessage::email_size() const {
  return email_.size();
}
inline void MytrackerMessage::clear_email() {
  email_.Clear();
}
inline const ::std::string& MytrackerMessage::email(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Get(index);
}
inline ::std::string* MytrackerMessage::mutable_email(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Mutable(index);
}
inline void MytrackerMessage::set_email(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.email)
  email_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MytrackerMessage::set_email(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.email)
  email_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MytrackerMessage::set_email(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
inline void MytrackerMessage::set_email(int index, const void* value, size_t size) {
  email_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
inline ::std::string* MytrackerMessage::add_email() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_.Add();
}
inline void MytrackerMessage::add_email(const ::std::string& value) {
  email_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
#if LANG_CXX11
inline void MytrackerMessage::add_email(::std::string&& value) {
  email_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
#endif
inline void MytrackerMessage::add_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  email_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
inline void MytrackerMessage::add_email(const void* value, size_t size) {
  email_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.email)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::email() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return email_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_email() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.email)
  return &email_;
}

// repeated uint32 icq_id = 36;
inline int MytrackerMessage::icq_id_size() const {
  return icq_id_.size();
}
inline void MytrackerMessage::clear_icq_id() {
  icq_id_.Clear();
}
inline ::google::protobuf::uint32 MytrackerMessage::icq_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return icq_id_.Get(index);
}
inline void MytrackerMessage::set_icq_id(int index, ::google::protobuf::uint32 value) {
  icq_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
}
inline void MytrackerMessage::add_icq_id(::google::protobuf::uint32 value) {
  icq_id_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MytrackerMessage::icq_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return icq_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MytrackerMessage::mutable_icq_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.icq_id)
  return &icq_id_;
}

// repeated bytes custom_user_id = 37;
inline int MytrackerMessage::custom_user_id_size() const {
  return custom_user_id_.size();
}
inline void MytrackerMessage::clear_custom_user_id() {
  custom_user_id_.Clear();
}
inline const ::std::string& MytrackerMessage::custom_user_id(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Get(index);
}
inline ::std::string* MytrackerMessage::mutable_custom_user_id(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Mutable(index);
}
inline void MytrackerMessage::set_custom_user_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  custom_user_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MytrackerMessage::set_custom_user_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  custom_user_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MytrackerMessage::set_custom_user_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  custom_user_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
inline void MytrackerMessage::set_custom_user_id(int index, const void* value, size_t size) {
  custom_user_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
inline ::std::string* MytrackerMessage::add_custom_user_id() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_.Add();
}
inline void MytrackerMessage::add_custom_user_id(const ::std::string& value) {
  custom_user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
#if LANG_CXX11
inline void MytrackerMessage::add_custom_user_id(::std::string&& value) {
  custom_user_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
#endif
inline void MytrackerMessage::add_custom_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  custom_user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
inline void MytrackerMessage::add_custom_user_id(const void* value, size_t size) {
  custom_user_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::custom_user_id() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return custom_user_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_custom_user_id() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.custom_user_id)
  return &custom_user_id_;
}

// repeated bytes phone = 102;
inline int MytrackerMessage::phone_size() const {
  return phone_.size();
}
inline void MytrackerMessage::clear_phone() {
  phone_.Clear();
}
inline const ::std::string& MytrackerMessage::phone(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Get(index);
}
inline ::std::string* MytrackerMessage::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Mutable(index);
}
inline void MytrackerMessage::set_phone(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  phone_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MytrackerMessage::set_phone(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  phone_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MytrackerMessage::set_phone(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
inline void MytrackerMessage::set_phone(int index, const void* value, size_t size) {
  phone_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
inline ::std::string* MytrackerMessage::add_phone() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_.Add();
}
inline void MytrackerMessage::add_phone(const ::std::string& value) {
  phone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
#if LANG_CXX11
inline void MytrackerMessage::add_phone(::std::string&& value) {
  phone_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
#endif
inline void MytrackerMessage::add_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  phone_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
inline void MytrackerMessage::add_phone(const void* value, size_t size) {
  phone_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.rb.MytrackerMessage.phone)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MytrackerMessage::phone() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return phone_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MytrackerMessage::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.phone)
  return &phone_;
}

// optional bytes idfa = 40;
inline bool MytrackerMessage::has_idfa() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MytrackerMessage::set_has_idfa() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MytrackerMessage::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MytrackerMessage::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
inline const ::std::string& MytrackerMessage::idfa() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  return idfa_.GetNoArena();
}
inline void MytrackerMessage::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
#if LANG_CXX11
inline void MytrackerMessage::set_idfa(::std::string&& value) {
  set_has_idfa();
  idfa_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
#endif
inline void MytrackerMessage::set_idfa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
inline void MytrackerMessage::set_idfa(const void* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}
inline ::std::string* MytrackerMessage::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_idfa() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.idfa)
}

// optional bytes advertising_id = 41;
inline bool MytrackerMessage::has_advertising_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MytrackerMessage::set_has_advertising_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MytrackerMessage::clear_has_advertising_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MytrackerMessage::clear_advertising_id() {
  advertising_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertising_id();
}
inline const ::std::string& MytrackerMessage::advertising_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  return advertising_id_.GetNoArena();
}
inline void MytrackerMessage::set_advertising_id(const ::std::string& value) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_advertising_id(::std::string&& value) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
#endif
inline void MytrackerMessage::set_advertising_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
inline void MytrackerMessage::set_advertising_id(const void* value, size_t size) {
  set_has_advertising_id();
  advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}
inline ::std::string* MytrackerMessage::mutable_advertising_id() {
  set_has_advertising_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  return advertising_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_advertising_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
  clear_has_advertising_id();
  return advertising_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_advertising_id(::std::string* advertising_id) {
  if (advertising_id != NULL) {
    set_has_advertising_id();
  } else {
    clear_has_advertising_id();
  }
  advertising_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertising_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.advertising_id)
}

// optional bytes android_id = 42;
inline bool MytrackerMessage::has_android_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MytrackerMessage::set_has_android_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MytrackerMessage::clear_has_android_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MytrackerMessage::clear_android_id() {
  android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_id();
}
inline const ::std::string& MytrackerMessage::android_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  return android_id_.GetNoArena();
}
inline void MytrackerMessage::set_android_id(const ::std::string& value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_android_id(::std::string&& value) {
  set_has_android_id();
  android_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
#endif
inline void MytrackerMessage::set_android_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
inline void MytrackerMessage::set_android_id(const void* value, size_t size) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}
inline ::std::string* MytrackerMessage::mutable_android_id() {
  set_has_android_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  return android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_android_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
  clear_has_android_id();
  return android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_android_id(::std::string* android_id) {
  if (android_id != NULL) {
    set_has_android_id();
  } else {
    clear_has_android_id();
  }
  android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.android_id)
}

// optional bytes android_device_id = 43;
inline bool MytrackerMessage::has_android_device_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MytrackerMessage::set_has_android_device_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MytrackerMessage::clear_has_android_device_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MytrackerMessage::clear_android_device_id() {
  android_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_device_id();
}
inline const ::std::string& MytrackerMessage::android_device_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  return android_device_id_.GetNoArena();
}
inline void MytrackerMessage::set_android_device_id(const ::std::string& value) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_android_device_id(::std::string&& value) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
#endif
inline void MytrackerMessage::set_android_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
inline void MytrackerMessage::set_android_device_id(const void* value, size_t size) {
  set_has_android_device_id();
  android_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}
inline ::std::string* MytrackerMessage::mutable_android_device_id() {
  set_has_android_device_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  return android_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_android_device_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
  clear_has_android_device_id();
  return android_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_android_device_id(::std::string* android_device_id) {
  if (android_device_id != NULL) {
    set_has_android_device_id();
  } else {
    clear_has_android_device_id();
  }
  android_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_device_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.android_device_id)
}

// optional bytes waid = 74;
inline bool MytrackerMessage::has_waid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MytrackerMessage::set_has_waid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MytrackerMessage::clear_has_waid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MytrackerMessage::clear_waid() {
  waid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_waid();
}
inline const ::std::string& MytrackerMessage::waid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  return waid_.GetNoArena();
}
inline void MytrackerMessage::set_waid(const ::std::string& value) {
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
#if LANG_CXX11
inline void MytrackerMessage::set_waid(::std::string&& value) {
  set_has_waid();
  waid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
#endif
inline void MytrackerMessage::set_waid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
inline void MytrackerMessage::set_waid(const void* value, size_t size) {
  set_has_waid();
  waid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}
inline ::std::string* MytrackerMessage::mutable_waid() {
  set_has_waid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  return waid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_waid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.waid)
  clear_has_waid();
  return waid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_waid(::std::string* waid) {
  if (waid != NULL) {
    set_has_waid();
  } else {
    clear_has_waid();
  }
  waid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), waid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.waid)
}

// optional bytes wna_id = 89;
inline bool MytrackerMessage::has_wna_id() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void MytrackerMessage::set_has_wna_id() {
  _has_bits_[0] |= 0x02000000u;
}
inline void MytrackerMessage::clear_has_wna_id() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void MytrackerMessage::clear_wna_id() {
  wna_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wna_id();
}
inline const ::std::string& MytrackerMessage::wna_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  return wna_id_.GetNoArena();
}
inline void MytrackerMessage::set_wna_id(const ::std::string& value) {
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_wna_id(::std::string&& value) {
  set_has_wna_id();
  wna_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
#endif
inline void MytrackerMessage::set_wna_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
inline void MytrackerMessage::set_wna_id(const void* value, size_t size) {
  set_has_wna_id();
  wna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}
inline ::std::string* MytrackerMessage::mutable_wna_id() {
  set_has_wna_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  return wna_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_wna_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
  clear_has_wna_id();
  return wna_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_wna_id(::std::string* wna_id) {
  if (wna_id != NULL) {
    set_has_wna_id();
  } else {
    clear_has_wna_id();
  }
  wna_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wna_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.wna_id)
}

// optional bytes mna_id = 93;
inline bool MytrackerMessage::has_mna_id() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void MytrackerMessage::set_has_mna_id() {
  _has_bits_[0] |= 0x04000000u;
}
inline void MytrackerMessage::clear_has_mna_id() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void MytrackerMessage::clear_mna_id() {
  mna_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mna_id();
}
inline const ::std::string& MytrackerMessage::mna_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  return mna_id_.GetNoArena();
}
inline void MytrackerMessage::set_mna_id(const ::std::string& value) {
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_mna_id(::std::string&& value) {
  set_has_mna_id();
  mna_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
#endif
inline void MytrackerMessage::set_mna_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
inline void MytrackerMessage::set_mna_id(const void* value, size_t size) {
  set_has_mna_id();
  mna_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}
inline ::std::string* MytrackerMessage::mutable_mna_id() {
  set_has_mna_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  return mna_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_mna_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
  clear_has_mna_id();
  return mna_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_mna_id(::std::string* mna_id) {
  if (mna_id != NULL) {
    set_has_mna_id();
  } else {
    clear_has_mna_id();
  }
  mna_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mna_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mna_id)
}

// optional bytes mrgs_device_id = 44;
inline bool MytrackerMessage::has_mrgs_device_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MytrackerMessage::set_has_mrgs_device_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MytrackerMessage::clear_has_mrgs_device_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MytrackerMessage::clear_mrgs_device_id() {
  mrgs_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mrgs_device_id();
}
inline const ::std::string& MytrackerMessage::mrgs_device_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  return mrgs_device_id_.GetNoArena();
}
inline void MytrackerMessage::set_mrgs_device_id(const ::std::string& value) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_mrgs_device_id(::std::string&& value) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
#endif
inline void MytrackerMessage::set_mrgs_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
inline void MytrackerMessage::set_mrgs_device_id(const void* value, size_t size) {
  set_has_mrgs_device_id();
  mrgs_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}
inline ::std::string* MytrackerMessage::mutable_mrgs_device_id() {
  set_has_mrgs_device_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  return mrgs_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_mrgs_device_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
  clear_has_mrgs_device_id();
  return mrgs_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_mrgs_device_id(::std::string* mrgs_device_id) {
  if (mrgs_device_id != NULL) {
    set_has_mrgs_device_id();
  } else {
    clear_has_mrgs_device_id();
  }
  mrgs_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mrgs_device_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mrgs_device_id)
}

// optional bytes mac = 96;
inline bool MytrackerMessage::has_mac() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void MytrackerMessage::set_has_mac() {
  _has_bits_[0] |= 0x10000000u;
}
inline void MytrackerMessage::clear_has_mac() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void MytrackerMessage::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
inline const ::std::string& MytrackerMessage::mac() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  return mac_.GetNoArena();
}
inline void MytrackerMessage::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
#if LANG_CXX11
inline void MytrackerMessage::set_mac(::std::string&& value) {
  set_has_mac();
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
#endif
inline void MytrackerMessage::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
inline void MytrackerMessage::set_mac(const void* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}
inline ::std::string* MytrackerMessage::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_mac() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.mac)
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.mac)
}

// optional bytes open_udid = 85;
inline bool MytrackerMessage::has_open_udid() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void MytrackerMessage::set_has_open_udid() {
  _has_bits_[0] |= 0x00800000u;
}
inline void MytrackerMessage::clear_has_open_udid() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void MytrackerMessage::clear_open_udid() {
  open_udid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_open_udid();
}
inline const ::std::string& MytrackerMessage::open_udid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  return open_udid_.GetNoArena();
}
inline void MytrackerMessage::set_open_udid(const ::std::string& value) {
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
#if LANG_CXX11
inline void MytrackerMessage::set_open_udid(::std::string&& value) {
  set_has_open_udid();
  open_udid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
#endif
inline void MytrackerMessage::set_open_udid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
inline void MytrackerMessage::set_open_udid(const void* value, size_t size) {
  set_has_open_udid();
  open_udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}
inline ::std::string* MytrackerMessage::mutable_open_udid() {
  set_has_open_udid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  return open_udid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_open_udid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
  clear_has_open_udid();
  return open_udid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_open_udid(::std::string* open_udid) {
  if (open_udid != NULL) {
    set_has_open_udid();
  } else {
    clear_has_open_udid();
  }
  open_udid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_udid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.open_udid)
}

// optional bytes ios_vendor_id = 86;
inline bool MytrackerMessage::has_ios_vendor_id() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void MytrackerMessage::set_has_ios_vendor_id() {
  _has_bits_[0] |= 0x01000000u;
}
inline void MytrackerMessage::clear_has_ios_vendor_id() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void MytrackerMessage::clear_ios_vendor_id() {
  ios_vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ios_vendor_id();
}
inline const ::std::string& MytrackerMessage::ios_vendor_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  return ios_vendor_id_.GetNoArena();
}
inline void MytrackerMessage::set_ios_vendor_id(const ::std::string& value) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
#if LANG_CXX11
inline void MytrackerMessage::set_ios_vendor_id(::std::string&& value) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
#endif
inline void MytrackerMessage::set_ios_vendor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
inline void MytrackerMessage::set_ios_vendor_id(const void* value, size_t size) {
  set_has_ios_vendor_id();
  ios_vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}
inline ::std::string* MytrackerMessage::mutable_ios_vendor_id() {
  set_has_ios_vendor_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  return ios_vendor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_ios_vendor_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
  clear_has_ios_vendor_id();
  return ios_vendor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_ios_vendor_id(::std::string* ios_vendor_id) {
  if (ios_vendor_id != NULL) {
    set_has_ios_vendor_id();
  } else {
    clear_has_ios_vendor_id();
  }
  ios_vendor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ios_vendor_id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id)
}

// optional bytes ios_vendor_id_cached = 95;
inline bool MytrackerMessage::has_ios_vendor_id_cached() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void MytrackerMessage::set_has_ios_vendor_id_cached() {
  _has_bits_[0] |= 0x08000000u;
}
inline void MytrackerMessage::clear_has_ios_vendor_id_cached() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void MytrackerMessage::clear_ios_vendor_id_cached() {
  ios_vendor_id_cached_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ios_vendor_id_cached();
}
inline const ::std::string& MytrackerMessage::ios_vendor_id_cached() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  return ios_vendor_id_cached_.GetNoArena();
}
inline void MytrackerMessage::set_ios_vendor_id_cached(const ::std::string& value) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
#if LANG_CXX11
inline void MytrackerMessage::set_ios_vendor_id_cached(::std::string&& value) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
#endif
inline void MytrackerMessage::set_ios_vendor_id_cached(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
inline void MytrackerMessage::set_ios_vendor_id_cached(const void* value, size_t size) {
  set_has_ios_vendor_id_cached();
  ios_vendor_id_cached_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}
inline ::std::string* MytrackerMessage::mutable_ios_vendor_id_cached() {
  set_has_ios_vendor_id_cached();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  return ios_vendor_id_cached_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_ios_vendor_id_cached() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
  clear_has_ios_vendor_id_cached();
  return ios_vendor_id_cached_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_ios_vendor_id_cached(::std::string* ios_vendor_id_cached) {
  if (ios_vendor_id_cached != NULL) {
    set_has_ios_vendor_id_cached();
  } else {
    clear_has_ios_vendor_id_cached();
  }
  ios_vendor_id_cached_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ios_vendor_id_cached);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.ios_vendor_id_cached)
}

// optional uint32 mid = 87;
inline bool MytrackerMessage::has_mid() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void MytrackerMessage::set_has_mid() {
  _has_bits_[1] |= 0x10000000u;
}
inline void MytrackerMessage::clear_has_mid() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void MytrackerMessage::clear_mid() {
  mid_ = 0u;
  clear_has_mid();
}
inline ::google::protobuf::uint32 MytrackerMessage::mid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.mid)
  return mid_;
}
inline void MytrackerMessage::set_mid(::google::protobuf::uint32 value) {
  set_has_mid();
  mid_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.mid)
}

// optional int32 advertising_tracking_enabled = 45;
inline bool MytrackerMessage::has_advertising_tracking_enabled() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void MytrackerMessage::set_has_advertising_tracking_enabled() {
  _has_bits_[1] |= 0x00000200u;
}
inline void MytrackerMessage::clear_has_advertising_tracking_enabled() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void MytrackerMessage::clear_advertising_tracking_enabled() {
  advertising_tracking_enabled_ = 0;
  clear_has_advertising_tracking_enabled();
}
inline ::google::protobuf::int32 MytrackerMessage::advertising_tracking_enabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.advertising_tracking_enabled)
  return advertising_tracking_enabled_;
}
inline void MytrackerMessage::set_advertising_tracking_enabled(::google::protobuf::int32 value) {
  set_has_advertising_tracking_enabled();
  advertising_tracking_enabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.advertising_tracking_enabled)
}

// optional bytes device = 46;
inline bool MytrackerMessage::has_device() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MytrackerMessage::set_has_device() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MytrackerMessage::clear_has_device() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MytrackerMessage::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& MytrackerMessage::device() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.device)
  return device_.GetNoArena();
}
inline void MytrackerMessage::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
#if LANG_CXX11
inline void MytrackerMessage::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
#endif
inline void MytrackerMessage::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
inline void MytrackerMessage::set_device(const void* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.device)
}
inline ::std::string* MytrackerMessage::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_device() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.device)
}

// optional bytes euname = 47;
inline bool MytrackerMessage::has_euname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MytrackerMessage::set_has_euname() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MytrackerMessage::clear_has_euname() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MytrackerMessage::clear_euname() {
  euname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_euname();
}
inline const ::std::string& MytrackerMessage::euname() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  return euname_.GetNoArena();
}
inline void MytrackerMessage::set_euname(const ::std::string& value) {
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
#if LANG_CXX11
inline void MytrackerMessage::set_euname(::std::string&& value) {
  set_has_euname();
  euname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
#endif
inline void MytrackerMessage::set_euname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
inline void MytrackerMessage::set_euname(const void* value, size_t size) {
  set_has_euname();
  euname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}
inline ::std::string* MytrackerMessage::mutable_euname() {
  set_has_euname();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  return euname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_euname() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.euname)
  clear_has_euname();
  return euname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_euname(::std::string* euname) {
  if (euname != NULL) {
    set_has_euname();
  } else {
    clear_has_euname();
  }
  euname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), euname);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.euname)
}

// optional bytes manufacture = 48;
inline bool MytrackerMessage::has_manufacture() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MytrackerMessage::set_has_manufacture() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MytrackerMessage::clear_has_manufacture() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MytrackerMessage::clear_manufacture() {
  manufacture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manufacture();
}
inline const ::std::string& MytrackerMessage::manufacture() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  return manufacture_.GetNoArena();
}
inline void MytrackerMessage::set_manufacture(const ::std::string& value) {
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
#if LANG_CXX11
inline void MytrackerMessage::set_manufacture(::std::string&& value) {
  set_has_manufacture();
  manufacture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
#endif
inline void MytrackerMessage::set_manufacture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
inline void MytrackerMessage::set_manufacture(const void* value, size_t size) {
  set_has_manufacture();
  manufacture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}
inline ::std::string* MytrackerMessage::mutable_manufacture() {
  set_has_manufacture();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  return manufacture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_manufacture() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
  clear_has_manufacture();
  return manufacture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_manufacture(::std::string* manufacture) {
  if (manufacture != NULL) {
    set_has_manufacture();
  } else {
    clear_has_manufacture();
  }
  manufacture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacture);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.manufacture)
}

// optional uint32 os = 49;
inline bool MytrackerMessage::has_os() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void MytrackerMessage::set_has_os() {
  _has_bits_[1] |= 0x00000400u;
}
inline void MytrackerMessage::clear_has_os() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void MytrackerMessage::clear_os() {
  os_ = 0u;
  clear_has_os();
}
inline ::google::protobuf::uint32 MytrackerMessage::os() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os)
  return os_;
}
inline void MytrackerMessage::set_os(::google::protobuf::uint32 value) {
  set_has_os();
  os_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os)
}

// optional bytes os_ver = 50;
inline bool MytrackerMessage::has_os_ver() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MytrackerMessage::set_has_os_ver() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MytrackerMessage::clear_has_os_ver() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MytrackerMessage::clear_os_ver() {
  os_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_ver();
}
inline const ::std::string& MytrackerMessage::os_ver() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  return os_ver_.GetNoArena();
}
inline void MytrackerMessage::set_os_ver(const ::std::string& value) {
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
#if LANG_CXX11
inline void MytrackerMessage::set_os_ver(::std::string&& value) {
  set_has_os_ver();
  os_ver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
#endif
inline void MytrackerMessage::set_os_ver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
inline void MytrackerMessage::set_os_ver(const void* value, size_t size) {
  set_has_os_ver();
  os_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}
inline ::std::string* MytrackerMessage::mutable_os_ver() {
  set_has_os_ver();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  return os_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_os_ver() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
  clear_has_os_ver();
  return os_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_os_ver(::std::string* os_ver) {
  if (os_ver != NULL) {
    set_has_os_ver();
  } else {
    clear_has_os_ver();
  }
  os_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_ver);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.os_ver)
}

// optional bytes os_lang = 51;
inline bool MytrackerMessage::has_os_lang() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MytrackerMessage::set_has_os_lang() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MytrackerMessage::clear_has_os_lang() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MytrackerMessage::clear_os_lang() {
  os_lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_lang();
}
inline const ::std::string& MytrackerMessage::os_lang() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  return os_lang_.GetNoArena();
}
inline void MytrackerMessage::set_os_lang(const ::std::string& value) {
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
#if LANG_CXX11
inline void MytrackerMessage::set_os_lang(::std::string&& value) {
  set_has_os_lang();
  os_lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
#endif
inline void MytrackerMessage::set_os_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
inline void MytrackerMessage::set_os_lang(const void* value, size_t size) {
  set_has_os_lang();
  os_lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}
inline ::std::string* MytrackerMessage::mutable_os_lang() {
  set_has_os_lang();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  return os_lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_os_lang() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
  clear_has_os_lang();
  return os_lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_os_lang(::std::string* os_lang) {
  if (os_lang != NULL) {
    set_has_os_lang();
  } else {
    clear_has_os_lang();
  }
  os_lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_lang);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.os_lang)
}

// optional bytes timezone = 52;
inline bool MytrackerMessage::has_timezone() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MytrackerMessage::set_has_timezone() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MytrackerMessage::clear_has_timezone() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MytrackerMessage::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timezone();
}
inline const ::std::string& MytrackerMessage::timezone() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  return timezone_.GetNoArena();
}
inline void MytrackerMessage::set_timezone(const ::std::string& value) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
#if LANG_CXX11
inline void MytrackerMessage::set_timezone(::std::string&& value) {
  set_has_timezone();
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
#endif
inline void MytrackerMessage::set_timezone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
inline void MytrackerMessage::set_timezone(const void* value, size_t size) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}
inline ::std::string* MytrackerMessage::mutable_timezone() {
  set_has_timezone();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_timezone() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
  clear_has_timezone();
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    set_has_timezone();
  } else {
    clear_has_timezone();
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.timezone)
}

// optional uint32 screen_width = 53;
inline bool MytrackerMessage::has_screen_width() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void MytrackerMessage::set_has_screen_width() {
  _has_bits_[1] |= 0x00000800u;
}
inline void MytrackerMessage::clear_has_screen_width() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void MytrackerMessage::clear_screen_width() {
  screen_width_ = 0u;
  clear_has_screen_width();
}
inline ::google::protobuf::uint32 MytrackerMessage::screen_width() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.screen_width)
  return screen_width_;
}
inline void MytrackerMessage::set_screen_width(::google::protobuf::uint32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.screen_width)
}

// optional uint32 screen_height = 54;
inline bool MytrackerMessage::has_screen_height() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void MytrackerMessage::set_has_screen_height() {
  _has_bits_[1] |= 0x00001000u;
}
inline void MytrackerMessage::clear_has_screen_height() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void MytrackerMessage::clear_screen_height() {
  screen_height_ = 0u;
  clear_has_screen_height();
}
inline ::google::protobuf::uint32 MytrackerMessage::screen_height() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.screen_height)
  return screen_height_;
}
inline void MytrackerMessage::set_screen_height(::google::protobuf::uint32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.screen_height)
}

// optional uint32 dpi = 94;
inline bool MytrackerMessage::has_dpi() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void MytrackerMessage::set_has_dpi() {
  _has_bits_[1] |= 0x40000000u;
}
inline void MytrackerMessage::clear_has_dpi() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void MytrackerMessage::clear_dpi() {
  dpi_ = 0u;
  clear_has_dpi();
}
inline ::google::protobuf::uint32 MytrackerMessage::dpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.dpi)
  return dpi_;
}
inline void MytrackerMessage::set_dpi(::google::protobuf::uint32 value) {
  set_has_dpi();
  dpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.dpi)
}

// optional uint32 xdpi = 97;
inline bool MytrackerMessage::has_xdpi() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void MytrackerMessage::set_has_xdpi() {
  _has_bits_[1] |= 0x80000000u;
}
inline void MytrackerMessage::clear_has_xdpi() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void MytrackerMessage::clear_xdpi() {
  xdpi_ = 0u;
  clear_has_xdpi();
}
inline ::google::protobuf::uint32 MytrackerMessage::xdpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.xdpi)
  return xdpi_;
}
inline void MytrackerMessage::set_xdpi(::google::protobuf::uint32 value) {
  set_has_xdpi();
  xdpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.xdpi)
}

// optional uint32 ydpi = 98;
inline bool MytrackerMessage::has_ydpi() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void MytrackerMessage::set_has_ydpi() {
  _has_bits_[2] |= 0x00000001u;
}
inline void MytrackerMessage::clear_has_ydpi() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void MytrackerMessage::clear_ydpi() {
  ydpi_ = 0u;
  clear_has_ydpi();
}
inline ::google::protobuf::uint32 MytrackerMessage::ydpi() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.ydpi)
  return ydpi_;
}
inline void MytrackerMessage::set_ydpi(::google::protobuf::uint32 value) {
  set_has_ydpi();
  ydpi_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.ydpi)
}

// optional bytes sim_loc = 60;
inline bool MytrackerMessage::has_sim_loc() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MytrackerMessage::set_has_sim_loc() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MytrackerMessage::clear_has_sim_loc() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MytrackerMessage::clear_sim_loc() {
  sim_loc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_loc();
}
inline const ::std::string& MytrackerMessage::sim_loc() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  return sim_loc_.GetNoArena();
}
inline void MytrackerMessage::set_sim_loc(const ::std::string& value) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
#if LANG_CXX11
inline void MytrackerMessage::set_sim_loc(::std::string&& value) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
#endif
inline void MytrackerMessage::set_sim_loc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
inline void MytrackerMessage::set_sim_loc(const void* value, size_t size) {
  set_has_sim_loc();
  sim_loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}
inline ::std::string* MytrackerMessage::mutable_sim_loc() {
  set_has_sim_loc();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  return sim_loc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_sim_loc() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
  clear_has_sim_loc();
  return sim_loc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_sim_loc(::std::string* sim_loc) {
  if (sim_loc != NULL) {
    set_has_sim_loc();
  } else {
    clear_has_sim_loc();
  }
  sim_loc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_loc);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc)
}

// optional uint32 operator_id = 61;
inline bool MytrackerMessage::has_operator_id() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void MytrackerMessage::set_has_operator_id() {
  _has_bits_[1] |= 0x00002000u;
}
inline void MytrackerMessage::clear_has_operator_id() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void MytrackerMessage::clear_operator_id() {
  operator_id_ = 0u;
  clear_has_operator_id();
}
inline ::google::protobuf::uint32 MytrackerMessage::operator_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_id)
  return operator_id_;
}
inline void MytrackerMessage::set_operator_id(::google::protobuf::uint32 value) {
  set_has_operator_id();
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_id)
}

// optional bytes operator_name = 62;
inline bool MytrackerMessage::has_operator_name() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MytrackerMessage::set_has_operator_name() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MytrackerMessage::clear_has_operator_name() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MytrackerMessage::clear_operator_name() {
  operator_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operator_name();
}
inline const ::std::string& MytrackerMessage::operator_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  return operator_name_.GetNoArena();
}
inline void MytrackerMessage::set_operator_name(const ::std::string& value) {
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
#if LANG_CXX11
inline void MytrackerMessage::set_operator_name(::std::string&& value) {
  set_has_operator_name();
  operator_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
#endif
inline void MytrackerMessage::set_operator_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
inline void MytrackerMessage::set_operator_name(const void* value, size_t size) {
  set_has_operator_name();
  operator_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}
inline ::std::string* MytrackerMessage::mutable_operator_name() {
  set_has_operator_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  return operator_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_operator_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
  clear_has_operator_name();
  return operator_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_operator_name(::std::string* operator_name) {
  if (operator_name != NULL) {
    set_has_operator_name();
  } else {
    clear_has_operator_name();
  }
  operator_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.operator_name)
}

// optional uint32 sim_operator_id = 63;
inline bool MytrackerMessage::has_sim_operator_id() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void MytrackerMessage::set_has_sim_operator_id() {
  _has_bits_[1] |= 0x00004000u;
}
inline void MytrackerMessage::clear_has_sim_operator_id() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void MytrackerMessage::clear_sim_operator_id() {
  sim_operator_id_ = 0u;
  clear_has_sim_operator_id();
}
inline ::google::protobuf::uint32 MytrackerMessage::sim_operator_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id)
  return sim_operator_id_;
}
inline void MytrackerMessage::set_sim_operator_id(::google::protobuf::uint32 value) {
  set_has_sim_operator_id();
  sim_operator_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id)
}

// optional bytes sim_loc_str = 99;
inline bool MytrackerMessage::has_sim_loc_str() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void MytrackerMessage::set_has_sim_loc_str() {
  _has_bits_[0] |= 0x20000000u;
}
inline void MytrackerMessage::clear_has_sim_loc_str() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void MytrackerMessage::clear_sim_loc_str() {
  sim_loc_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_loc_str();
}
inline const ::std::string& MytrackerMessage::sim_loc_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  return sim_loc_str_.GetNoArena();
}
inline void MytrackerMessage::set_sim_loc_str(const ::std::string& value) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
#if LANG_CXX11
inline void MytrackerMessage::set_sim_loc_str(::std::string&& value) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
#endif
inline void MytrackerMessage::set_sim_loc_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
inline void MytrackerMessage::set_sim_loc_str(const void* value, size_t size) {
  set_has_sim_loc_str();
  sim_loc_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}
inline ::std::string* MytrackerMessage::mutable_sim_loc_str() {
  set_has_sim_loc_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  return sim_loc_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_sim_loc_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
  clear_has_sim_loc_str();
  return sim_loc_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_sim_loc_str(::std::string* sim_loc_str) {
  if (sim_loc_str != NULL) {
    set_has_sim_loc_str();
  } else {
    clear_has_sim_loc_str();
  }
  sim_loc_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_loc_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_loc_str)
}

// optional bytes operator_id_str = 100;
inline bool MytrackerMessage::has_operator_id_str() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void MytrackerMessage::set_has_operator_id_str() {
  _has_bits_[0] |= 0x40000000u;
}
inline void MytrackerMessage::clear_has_operator_id_str() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void MytrackerMessage::clear_operator_id_str() {
  operator_id_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operator_id_str();
}
inline const ::std::string& MytrackerMessage::operator_id_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  return operator_id_str_.GetNoArena();
}
inline void MytrackerMessage::set_operator_id_str(const ::std::string& value) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
#if LANG_CXX11
inline void MytrackerMessage::set_operator_id_str(::std::string&& value) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
#endif
inline void MytrackerMessage::set_operator_id_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
inline void MytrackerMessage::set_operator_id_str(const void* value, size_t size) {
  set_has_operator_id_str();
  operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}
inline ::std::string* MytrackerMessage::mutable_operator_id_str() {
  set_has_operator_id_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  return operator_id_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_operator_id_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
  clear_has_operator_id_str();
  return operator_id_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_operator_id_str(::std::string* operator_id_str) {
  if (operator_id_str != NULL) {
    set_has_operator_id_str();
  } else {
    clear_has_operator_id_str();
  }
  operator_id_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_id_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.operator_id_str)
}

// optional bytes sim_operator_id_str = 101;
inline bool MytrackerMessage::has_sim_operator_id_str() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void MytrackerMessage::set_has_sim_operator_id_str() {
  _has_bits_[0] |= 0x80000000u;
}
inline void MytrackerMessage::clear_has_sim_operator_id_str() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void MytrackerMessage::clear_sim_operator_id_str() {
  sim_operator_id_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sim_operator_id_str();
}
inline const ::std::string& MytrackerMessage::sim_operator_id_str() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  return sim_operator_id_str_.GetNoArena();
}
inline void MytrackerMessage::set_sim_operator_id_str(const ::std::string& value) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
#if LANG_CXX11
inline void MytrackerMessage::set_sim_operator_id_str(::std::string&& value) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
#endif
inline void MytrackerMessage::set_sim_operator_id_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
inline void MytrackerMessage::set_sim_operator_id_str(const void* value, size_t size) {
  set_has_sim_operator_id_str();
  sim_operator_id_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}
inline ::std::string* MytrackerMessage::mutable_sim_operator_id_str() {
  set_has_sim_operator_id_str();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  return sim_operator_id_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_sim_operator_id_str() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
  clear_has_sim_operator_id_str();
  return sim_operator_id_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_sim_operator_id_str(::std::string* sim_operator_id_str) {
  if (sim_operator_id_str != NULL) {
    set_has_sim_operator_id_str();
  } else {
    clear_has_sim_operator_id_str();
  }
  sim_operator_id_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sim_operator_id_str);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.sim_operator_id_str)
}

// optional uint32 connection = 64;
inline bool MytrackerMessage::has_connection() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void MytrackerMessage::set_has_connection() {
  _has_bits_[1] |= 0x00008000u;
}
inline void MytrackerMessage::clear_has_connection() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void MytrackerMessage::clear_connection() {
  connection_ = 0u;
  clear_has_connection();
}
inline ::google::protobuf::uint32 MytrackerMessage::connection() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.connection)
  return connection_;
}
inline void MytrackerMessage::set_connection(::google::protobuf::uint32 value) {
  set_has_connection();
  connection_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.connection)
}

// optional bytes connection_type = 78;
inline bool MytrackerMessage::has_connection_type() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void MytrackerMessage::set_has_connection_type() {
  _has_bits_[0] |= 0x00400000u;
}
inline void MytrackerMessage::clear_has_connection_type() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void MytrackerMessage::clear_connection_type() {
  connection_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_connection_type();
}
inline const ::std::string& MytrackerMessage::connection_type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  return connection_type_.GetNoArena();
}
inline void MytrackerMessage::set_connection_type(const ::std::string& value) {
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
#if LANG_CXX11
inline void MytrackerMessage::set_connection_type(::std::string&& value) {
  set_has_connection_type();
  connection_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
#endif
inline void MytrackerMessage::set_connection_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
inline void MytrackerMessage::set_connection_type(const void* value, size_t size) {
  set_has_connection_type();
  connection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}
inline ::std::string* MytrackerMessage::mutable_connection_type() {
  set_has_connection_type();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  return connection_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MytrackerMessage::release_connection_type() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
  clear_has_connection_type();
  return connection_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MytrackerMessage::set_allocated_connection_type(::std::string* connection_type) {
  if (connection_type != NULL) {
    set_has_connection_type();
  } else {
    clear_has_connection_type();
  }
  connection_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connection_type);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.connection_type)
}

// optional uint32 bluetooth_enabled = 73;
inline bool MytrackerMessage::has_bluetooth_enabled() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void MytrackerMessage::set_has_bluetooth_enabled() {
  _has_bits_[1] |= 0x00080000u;
}
inline void MytrackerMessage::clear_has_bluetooth_enabled() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void MytrackerMessage::clear_bluetooth_enabled() {
  bluetooth_enabled_ = 0u;
  clear_has_bluetooth_enabled();
}
inline ::google::protobuf::uint32 MytrackerMessage::bluetooth_enabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.bluetooth_enabled)
  return bluetooth_enabled_;
}
inline void MytrackerMessage::set_bluetooth_enabled(::google::protobuf::uint32 value) {
  set_has_bluetooth_enabled();
  bluetooth_enabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.bluetooth_enabled)
}

// optional double lat = 70;
inline bool MytrackerMessage::has_lat() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void MytrackerMessage::set_has_lat() {
  _has_bits_[1] |= 0x00020000u;
}
inline void MytrackerMessage::clear_has_lat() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void MytrackerMessage::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline double MytrackerMessage::lat() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.lat)
  return lat_;
}
inline void MytrackerMessage::set_lat(double value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.lat)
}

// optional double lon = 71;
inline bool MytrackerMessage::has_lon() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void MytrackerMessage::set_has_lon() {
  _has_bits_[1] |= 0x00040000u;
}
inline void MytrackerMessage::clear_has_lon() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void MytrackerMessage::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline double MytrackerMessage::lon() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.lon)
  return lon_;
}
inline void MytrackerMessage::set_lon(double value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.lon)
}

// optional double speed = 77;
inline bool MytrackerMessage::has_speed() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void MytrackerMessage::set_has_speed() {
  _has_bits_[1] |= 0x00400000u;
}
inline void MytrackerMessage::clear_has_speed() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void MytrackerMessage::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline double MytrackerMessage::speed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.speed)
  return speed_;
}
inline void MytrackerMessage::set_speed(double value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.speed)
}

// optional double location_accuracy = 75;
inline bool MytrackerMessage::has_location_accuracy() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void MytrackerMessage::set_has_location_accuracy() {
  _has_bits_[1] |= 0x00200000u;
}
inline void MytrackerMessage::clear_has_location_accuracy() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void MytrackerMessage::clear_location_accuracy() {
  location_accuracy_ = 0;
  clear_has_location_accuracy();
}
inline double MytrackerMessage::location_accuracy() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_accuracy)
  return location_accuracy_;
}
inline void MytrackerMessage::set_location_accuracy(double value) {
  set_has_location_accuracy();
  location_accuracy_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_accuracy)
}

// optional uint32 location_timestamp = 76;
inline bool MytrackerMessage::has_location_timestamp() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void MytrackerMessage::set_has_location_timestamp() {
  _has_bits_[1] |= 0x00100000u;
}
inline void MytrackerMessage::clear_has_location_timestamp() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void MytrackerMessage::clear_location_timestamp() {
  location_timestamp_ = 0u;
  clear_has_location_timestamp();
}
inline ::google::protobuf::uint32 MytrackerMessage::location_timestamp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_timestamp)
  return location_timestamp_;
}
inline void MytrackerMessage::set_location_timestamp(::google::protobuf::uint32 value) {
  set_has_location_timestamp();
  location_timestamp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_timestamp)
}

// optional uint32 location_provider = 72;
inline bool MytrackerMessage::has_location_provider() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void MytrackerMessage::set_has_location_provider() {
  _has_bits_[1] |= 0x00010000u;
}
inline void MytrackerMessage::clear_has_location_provider() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void MytrackerMessage::clear_location_provider() {
  location_provider_ = 0u;
  clear_has_location_provider();
}
inline ::google::protobuf::uint32 MytrackerMessage::location_provider() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.location_provider)
  return location_provider_;
}
inline void MytrackerMessage::set_location_provider(::google::protobuf::uint32 value) {
  set_has_location_provider();
  location_provider_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.rb.MytrackerMessage.location_provider)
}

// optional .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi = 90;
inline bool MytrackerMessage::has_wifi() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void MytrackerMessage::set_has_wifi() {
  _has_bits_[1] |= 0x00000001u;
}
inline void MytrackerMessage::clear_has_wifi() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void MytrackerMessage::clear_wifi() {
  if (wifi_ != NULL) wifi_->::ru::mail::go::webbase::rb::MytrackerMessage_Wifi::Clear();
  clear_has_wifi();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& MytrackerMessage::wifi() const {
  const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* p = wifi_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi*>(
      &::ru::mail::go::webbase::rb::_MytrackerMessage_Wifi_default_instance_);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::mutable_wifi() {
  set_has_wifi();
  if (wifi_ == NULL) {
    wifi_ = new ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  return wifi_;
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::release_wifi() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
  clear_has_wifi();
  ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* temp = wifi_;
  wifi_ = NULL;
  return temp;
}
inline void MytrackerMessage::set_allocated_wifi(::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* wifi) {
  delete wifi_;
  wifi_ = wifi;
  if (wifi) {
    set_has_wifi();
  } else {
    clear_has_wifi();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.rb.MytrackerMessage.wifi)
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Wifi wifi_around = 91;
inline int MytrackerMessage::wifi_around_size() const {
  return wifi_around_.size();
}
inline void MytrackerMessage::clear_wifi_around() {
  wifi_around_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi& MytrackerMessage::wifi_around(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::mutable_wifi_around(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi* MytrackerMessage::add_wifi_around() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >*
MytrackerMessage::mutable_wifi_around() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return &wifi_around_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Wifi >&
MytrackerMessage::wifi_around() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.wifi_around)
  return wifi_around_;
}

// repeated .ru.mail.go.webbase.rb.MytrackerMessage.Cell cell = 92;
inline int MytrackerMessage::cell_size() const {
  return cell_.size();
}
inline void MytrackerMessage::clear_cell() {
  cell_.Clear();
}
inline const ::ru::mail::go::webbase::rb::MytrackerMessage_Cell& MytrackerMessage::cell(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Get(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Cell* MytrackerMessage::mutable_cell(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Mutable(index);
}
inline ::ru::mail::go::webbase::rb::MytrackerMessage_Cell* MytrackerMessage::add_cell() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >*
MytrackerMessage::mutable_cell() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return &cell_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::rb::MytrackerMessage_Cell >&
MytrackerMessage::cell() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.rb.MytrackerMessage.cell)
  return cell_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace rb
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mytracker_2eproto__INCLUDED
