// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pandao_imgsearcher.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pandao_imgsearcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pandao_imgsearcher {
namespace pb {
class ProductData_OriginalInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_OriginalInfo>
     _instance;
} _ProductData_OriginalInfo_default_instance_;
class ProductData_AnnoyIndexMetaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_AnnoyIndexMeta>
     _instance;
} _ProductData_AnnoyIndexMeta_default_instance_;
class ProductData_CommentsData_CommentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_CommentsData_Comment>
     _instance;
} _ProductData_CommentsData_Comment_default_instance_;
class ProductData_CommentsDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_CommentsData>
     _instance;
} _ProductData_CommentsData_default_instance_;
class ProductData_PriceDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_PriceData>
     _instance;
} _ProductData_PriceData_default_instance_;
class ProductData_ProductStatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_ProductStat>
     _instance;
} _ProductData_ProductStat_default_instance_;
class ProductData_DurationDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_DurationData>
     _instance;
} _ProductData_DurationData_default_instance_;
class ProductData_ShippingDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData_ShippingData>
     _instance;
} _ProductData_ShippingData_default_instance_;
class ProductDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductData>
     _instance;
} _ProductData_default_instance_;
class EmbeddList_EmbeddingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmbeddList_Embedding>
     _instance;
} _EmbeddList_Embedding_default_instance_;
class EmbeddListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmbeddList>
     _instance;
} _EmbeddList_default_instance_;
class EmbedData_OriginalInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmbedData_OriginalInfo>
     _instance;
} _EmbedData_OriginalInfo_default_instance_;
class EmbedData_AnnoyIndexMetaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmbedData_AnnoyIndexMeta>
     _instance;
} _EmbedData_AnnoyIndexMeta_default_instance_;
class EmbedDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EmbedData>
     _instance;
} _EmbedData_default_instance_;
class ImageData_OriginalInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ImageData_OriginalInfo>
     _instance;
} _ImageData_OriginalInfo_default_instance_;
class ImageData_AnnoyIndexMetaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ImageData_AnnoyIndexMeta>
     _instance;
} _ImageData_AnnoyIndexMeta_default_instance_;
class ImageDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ImageData>
     _instance;
} _ImageData_default_instance_;
class ProductImages_ProductImageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductImages_ProductImage>
     _instance;
} _ProductImages_ProductImage_default_instance_;
class ProductImagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductImages>
     _instance;
} _ProductImages_default_instance_;

namespace protobuf_pandao_5fimgsearcher_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_OriginalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_OriginalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_OriginalInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_OriginalInfo, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_OriginalInfo, title_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_AnnoyIndexMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_AnnoyIndexMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_AnnoyIndexMeta, annoy_idx_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_AnnoyIndexMeta, annoy_prod_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData_Comment, time_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_CommentsData, comments_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_PriceData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_PriceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_PriceData, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_PriceData, low_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_PriceData, high_price_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, old_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, orders_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, total_rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, reviews_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, shipping_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ProductStat, deleted_),
  2,
  0,
  1,
  3,
  4,
  5,
  ~0u,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_DurationData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_DurationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_DurationData, time_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_DurationData, low_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_DurationData, high_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ShippingData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ShippingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ShippingData, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ShippingData, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData_ShippingData, company_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, original_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, annoy_index_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, comments_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductData, product_stat_),
  3,
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList_Embedding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList_Embedding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList_Embedding, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList_Embedding, data_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddList, embed_list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_OriginalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_OriginalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_OriginalInfo, url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_AnnoyIndexMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_AnnoyIndexMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_AnnoyIndexMeta, annoy_idx_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData_AnnoyIndexMeta, annoy_img_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData, image_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData, original_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbedData, annoy_index_meta_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_OriginalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_OriginalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_OriginalInfo, url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_AnnoyIndexMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_AnnoyIndexMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_AnnoyIndexMeta, annoy_idx_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_AnnoyIndexMeta, annoy_img_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData_AnnoyIndexMeta, annoy_prod_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, image_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, original_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageData, annoy_index_meta_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages_ProductImage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages_ProductImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages_ProductImage, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages_ProductImage, data_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, product_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, product_images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductImages, hash_),
  0,
  1,
  ~0u,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(ProductData_OriginalInfo)},
  { 11, 18, sizeof(ProductData_AnnoyIndexMeta)},
  { 20, 29, sizeof(ProductData_CommentsData_Comment)},
  { 33, 39, sizeof(ProductData_CommentsData)},
  { 40, 48, sizeof(ProductData_PriceData)},
  { 51, 64, sizeof(ProductData_ProductStat)},
  { 72, 80, sizeof(ProductData_DurationData)},
  { 83, 91, sizeof(ProductData_ShippingData)},
  { 94, 104, sizeof(ProductData)},
  { 109, 116, sizeof(EmbeddList_Embedding)},
  { 118, 124, sizeof(EmbeddList)},
  { 125, 131, sizeof(EmbedData_OriginalInfo)},
  { 132, 139, sizeof(EmbedData_AnnoyIndexMeta)},
  { 141, 149, sizeof(EmbedData)},
  { 152, 158, sizeof(ImageData_OriginalInfo)},
  { 159, 167, sizeof(ImageData_AnnoyIndexMeta)},
  { 170, 179, sizeof(ImageData)},
  { 183, 190, sizeof(ProductImages_ProductImage)},
  { 192, 201, sizeof(ProductImages)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_OriginalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_AnnoyIndexMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_CommentsData_Comment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_CommentsData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_PriceData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_ProductStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_DurationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_ShippingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmbeddList_Embedding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmbeddList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmbedData_OriginalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmbedData_AnnoyIndexMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmbedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImageData_OriginalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImageData_AnnoyIndexMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImageData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductImages_ProductImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductImages_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pandao_imgsearcher.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProductData_OriginalInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_OriginalInfo_default_instance_);_ProductData_AnnoyIndexMeta_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_AnnoyIndexMeta_default_instance_);_ProductData_CommentsData_Comment_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_CommentsData_Comment_default_instance_);_ProductData_CommentsData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_CommentsData_default_instance_);_ProductData_PriceData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_PriceData_default_instance_);_ProductData_ProductStat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_ProductStat_default_instance_);_ProductData_DurationData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_DurationData_default_instance_);_ProductData_ShippingData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_ShippingData_default_instance_);_ProductData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductData_default_instance_);_EmbeddList_Embedding_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmbeddList_Embedding_default_instance_);_EmbeddList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmbeddList_default_instance_);_EmbedData_OriginalInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmbedData_OriginalInfo_default_instance_);_EmbedData_AnnoyIndexMeta_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmbedData_AnnoyIndexMeta_default_instance_);_EmbedData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EmbedData_default_instance_);_ImageData_OriginalInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ImageData_OriginalInfo_default_instance_);_ImageData_AnnoyIndexMeta_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ImageData_AnnoyIndexMeta_default_instance_);_ImageData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ImageData_default_instance_);_ProductImages_ProductImage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductImages_ProductImage_default_instance_);_ProductImages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductImages_default_instance_);_ProductData_ProductStat_default_instance_._instance.get_mutable()->old_price_ = const_cast< ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      ::pandao_imgsearcher::pb::ProductData_PriceData::internal_default_instance());
  _ProductData_ProductStat_default_instance_._instance.get_mutable()->price_ = const_cast< ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      ::pandao_imgsearcher::pb::ProductData_PriceData::internal_default_instance());
  _ProductData_ShippingData_default_instance_._instance.get_mutable()->duration_ = const_cast< ::pandao_imgsearcher::pb::ProductData_DurationData*>(
      ::pandao_imgsearcher::pb::ProductData_DurationData::internal_default_instance());
  _ProductData_ShippingData_default_instance_._instance.get_mutable()->price_ = const_cast< ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      ::pandao_imgsearcher::pb::ProductData_PriceData::internal_default_instance());
  _ProductData_default_instance_._instance.get_mutable()->original_info_ = const_cast< ::pandao_imgsearcher::pb::ProductData_OriginalInfo*>(
      ::pandao_imgsearcher::pb::ProductData_OriginalInfo::internal_default_instance());
  _ProductData_default_instance_._instance.get_mutable()->annoy_index_meta_ = const_cast< ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta*>(
      ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta::internal_default_instance());
  _ProductData_default_instance_._instance.get_mutable()->comments_data_ = const_cast< ::pandao_imgsearcher::pb::ProductData_CommentsData*>(
      ::pandao_imgsearcher::pb::ProductData_CommentsData::internal_default_instance());
  _EmbedData_default_instance_._instance.get_mutable()->original_info_ = const_cast< ::pandao_imgsearcher::pb::EmbedData_OriginalInfo*>(
      ::pandao_imgsearcher::pb::EmbedData_OriginalInfo::internal_default_instance());
  _EmbedData_default_instance_._instance.get_mutable()->annoy_index_meta_ = const_cast< ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta*>(
      ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta::internal_default_instance());
  _ImageData_default_instance_._instance.get_mutable()->original_info_ = const_cast< ::pandao_imgsearcher::pb::ImageData_OriginalInfo*>(
      ::pandao_imgsearcher::pb::ImageData_OriginalInfo::internal_default_instance());
  _ImageData_default_instance_._instance.get_mutable()->annoy_index_meta_ = const_cast< ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta*>(
      ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030pandao_imgsearcher.proto\022\025pandao_imgse"
      "archer.pb\"\367\n\n\013ProductData\022\022\n\nproduct_id\030"
      "\001 \002(\020\022F\n\roriginal_info\030\002 \001(\0132/.pandao_im"
      "gsearcher.pb.ProductData.OriginalInfo\022K\n"
      "\020annoy_index_meta\030\003 \001(\01321.pandao_imgsear"
      "cher.pb.ProductData.AnnoyIndexMeta\022F\n\rco"
      "mments_data\030\004 \001(\0132/.pandao_imgsearcher.p"
      "b.ProductData.CommentsData\022D\n\014product_st"
      "at\030\005 \003(\0132..pandao_imgsearcher.pb.Product"
      "Data.ProductStat\032:\n\014OriginalInfo\022\013\n\003url\030"
      "\001 \002(\t\022\016\n\006source\030\002 \002(\t\022\r\n\005title\030\003 \001(\t\032=\n\016"
      "AnnoyIndexMeta\022\024\n\014annoy_idx_id\030\001 \001(\r\022\025\n\r"
      "annoy_prod_id\030\002 \001(\r\032\243\001\n\014CommentsData\022I\n\010"
      "comments\030\001 \003(\01327.pandao_imgsearcher.pb.P"
      "roductData.CommentsData.Comment\032H\n\007Comme"
      "nt\022\014\n\004text\030\001 \001(\t\022\016\n\006rating\030\002 \001(\002\022\021\n\tuser"
      "_name\030\003 \001(\t\022\014\n\004time\030\004 \001(\r\032q\n\tPriceData\022="
      "\n\010currency\030\001 \002(\0162+.pandao_imgsearcher.pb"
      ".ProductData.Currency\022\021\n\tlow_price\030\002 \002(\002"
      "\022\022\n\nhigh_price\030\003 \001(\002\032\264\002\n\013ProductStat\022\017\n\007"
      "version\030\001 \002(\r\022\?\n\told_price\030\002 \001(\0132,.panda"
      "o_imgsearcher.pb.ProductData.PriceData\022;"
      "\n\005price\030\003 \001(\0132,.pandao_imgsearcher.pb.Pr"
      "oductData.PriceData\022\022\n\norders_cnt\030\004 \001(\002\022"
      "\024\n\014total_rating\030\005 \001(\002\022\023\n\013reviews_cnt\030\006 \001"
      "(\002\022F\n\rshipping_data\030\007 \003(\0132/.pandao_imgse"
      "archer.pb.ProductData.ShippingData\022\017\n\007de"
      "leted\030\010 \001(\010\032s\n\014DurationData\022>\n\ttime_unit"
      "\030\001 \002(\0162+.pandao_imgsearcher.pb.ProductDa"
      "ta.TimeUnit\022\020\n\010low_time\030\002 \002(\002\022\021\n\thigh_ti"
      "me\030\003 \001(\002\032\237\001\n\014ShippingData\022A\n\010duration\030\001 "
      "\002(\0132/.pandao_imgsearcher.pb.ProductData."
      "DurationData\022;\n\005price\030\002 \001(\0132,.pandao_img"
      "searcher.pb.ProductData.PriceData\022\017\n\007com"
      "pany\030\003 \001(\t\"%\n\010Currency\022\007\n\003RUB\020\000\022\007\n\003USD\020\001"
      "\022\007\n\003EUR\020\002\"(\n\010TimeUnit\022\010\n\004HOUR\020\000\022\007\n\003DAY\020\001"
      "\022\t\n\005MONTH\020\002\"u\n\nEmbeddList\022\?\n\nembed_list\030"
      "\001 \003(\0132+.pandao_imgsearcher.pb.EmbeddList"
      ".Embedding\032&\n\tEmbedding\022\013\n\003url\030\001 \002(\t\022\014\n\004"
      "data\030\002 \002(\014\"\211\002\n\tEmbedData\022\020\n\010image_id\030\001 \002"
      "(\020\022D\n\roriginal_info\030\002 \001(\0132-.pandao_imgse"
      "archer.pb.EmbedData.OriginalInfo\022I\n\020anno"
      "y_index_meta\030\003 \001(\0132/.pandao_imgsearcher."
      "pb.EmbedData.AnnoyIndexMeta\032\033\n\014OriginalI"
      "nfo\022\013\n\003url\030\001 \002(\t\032<\n\016AnnoyIndexMeta\022\024\n\014an"
      "noy_idx_id\030\001 \002(\r\022\024\n\014annoy_img_id\030\002 \002(\r\"\264"
      "\002\n\tImageData\022\022\n\nproduct_id\030\001 \002(\020\022\020\n\010imag"
      "e_id\030\002 \002(\020\022D\n\roriginal_info\030\003 \001(\0132-.pand"
      "ao_imgsearcher.pb.ImageData.OriginalInfo"
      "\022I\n\020annoy_index_meta\030\004 \001(\0132/.pandao_imgs"
      "earcher.pb.ImageData.AnnoyIndexMeta\032\033\n\014O"
      "riginalInfo\022\013\n\003url\030\001 \002(\t\032S\n\016AnnoyIndexMe"
      "ta\022\024\n\014annoy_idx_id\030\001 \002(\r\022\024\n\014annoy_img_id"
      "\030\002 \002(\r\022\025\n\rannoy_prod_id\030\003 \002(\r\"\266\001\n\rProduc"
      "tImages\022\023\n\013product_url\030\001 \002(\t\022\014\n\004host\030\002 \001"
      "(\t\022I\n\016product_images\030\003 \003(\01321.pandao_imgs"
      "earcher.pb.ProductImages.ProductImage\022\014\n"
      "\004hash\030\004 \001(\020\032)\n\014ProductImage\022\013\n\003url\030\001 \002(\t"
      "\022\014\n\004data\030\002 \002(\014B\036B\031PandaoImgSearcherMetaD"
      "ata\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2366);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pandao_imgsearcher.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pandao_5fimgsearcher_2eproto

const ::google::protobuf::EnumDescriptor* ProductData_Currency_descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_enum_descriptors[0];
}
bool ProductData_Currency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProductData_Currency ProductData::RUB;
const ProductData_Currency ProductData::USD;
const ProductData_Currency ProductData::EUR;
const ProductData_Currency ProductData::Currency_MIN;
const ProductData_Currency ProductData::Currency_MAX;
const int ProductData::Currency_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProductData_TimeUnit_descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_enum_descriptors[1];
}
bool ProductData_TimeUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProductData_TimeUnit ProductData::HOUR;
const ProductData_TimeUnit ProductData::DAY;
const ProductData_TimeUnit ProductData::MONTH;
const ProductData_TimeUnit ProductData::TimeUnit_MIN;
const ProductData_TimeUnit ProductData::TimeUnit_MAX;
const int ProductData::TimeUnit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_OriginalInfo::kUrlFieldNumber;
const int ProductData_OriginalInfo::kSourceFieldNumber;
const int ProductData_OriginalInfo::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_OriginalInfo::ProductData_OriginalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.OriginalInfo)
}
ProductData_OriginalInfo::ProductData_OriginalInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.OriginalInfo)
}
ProductData_OriginalInfo::ProductData_OriginalInfo(const ProductData_OriginalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source()) {
    source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source(),
      GetArenaNoVirtual());
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.OriginalInfo)
}

void ProductData_OriginalInfo::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProductData_OriginalInfo::~ProductData_OriginalInfo() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  SharedDtor();
}

void ProductData_OriginalInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  source_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  title_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ProductData_OriginalInfo::ArenaDtor(void* object) {
  ProductData_OriginalInfo* _this = reinterpret_cast< ProductData_OriginalInfo* >(object);
  (void)_this;
}
void ProductData_OriginalInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_OriginalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_OriginalInfo::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_OriginalInfo& ProductData_OriginalInfo::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_OriginalInfo* ProductData_OriginalInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_OriginalInfo>(arena);
}

void ProductData_OriginalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!source_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_OriginalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.OriginalInfo.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.OriginalInfo.source");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.OriginalInfo.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  return false;
#undef DO_
}

void ProductData_OriginalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // required string source = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source(), output);
  }

  // optional string title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.OriginalInfo)
}

::google::protobuf::uint8* ProductData_OriginalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // required string source = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source(), target);
  }

  // optional string title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.OriginalInfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  return target;
}

size_t ProductData_OriginalInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_source()) {
    // required string source = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  return total_size;
}
size_t ProductData_OriginalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string source = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string title = 3;
  if (has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_OriginalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_OriginalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_OriginalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.OriginalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.OriginalInfo)
    MergeFrom(*source);
  }
}

void ProductData_OriginalInfo::MergeFrom(const ProductData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_url(from.url());
    }
    if (cached_has_bits & 0x00000002u) {
      set_source(from.source());
    }
    if (cached_has_bits & 0x00000004u) {
      set_title(from.title());
    }
  }
}

void ProductData_OriginalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_OriginalInfo::CopyFrom(const ProductData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_OriginalInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProductData_OriginalInfo::Swap(ProductData_OriginalInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_OriginalInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_OriginalInfo::UnsafeArenaSwap(ProductData_OriginalInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_OriginalInfo::InternalSwap(ProductData_OriginalInfo* other) {
  using std::swap;
  url_.Swap(&other->url_);
  source_.Swap(&other->source_);
  title_.Swap(&other->title_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_OriginalInfo::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_OriginalInfo

// required string url = 1;
bool ProductData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
const ::std::string& ProductData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  return url_.Get();
}
void ProductData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
#if LANG_CXX11
void ProductData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
#endif
void ProductData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
void ProductData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
::std::string* ProductData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
void ProductData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}

// required string source = 2;
bool ProductData_OriginalInfo::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_OriginalInfo::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_OriginalInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_OriginalInfo::clear_source() {
  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_source();
}
const ::std::string& ProductData_OriginalInfo::source() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  return source_.Get();
}
void ProductData_OriginalInfo::set_source(const ::std::string& value) {
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
#if LANG_CXX11
void ProductData_OriginalInfo::set_source(::std::string&& value) {
  set_has_source();
  source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
#endif
void ProductData_OriginalInfo::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
void ProductData_OriginalInfo::set_source(const char* value,
    size_t size) {
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
::std::string* ProductData_OriginalInfo::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  return source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::release_source() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  clear_has_source();
  return source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_source();
  return source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_OriginalInfo::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
void ProductData_OriginalInfo::unsafe_arena_set_allocated_source(
    ::std::string* source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}

// optional string title = 3;
bool ProductData_OriginalInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_OriginalInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_OriginalInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_OriginalInfo::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_title();
}
const ::std::string& ProductData_OriginalInfo::title() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  return title_.Get();
}
void ProductData_OriginalInfo::set_title(const ::std::string& value) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
#if LANG_CXX11
void ProductData_OriginalInfo::set_title(::std::string&& value) {
  set_has_title();
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
#endif
void ProductData_OriginalInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
void ProductData_OriginalInfo::set_title(const char* value,
    size_t size) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
::std::string* ProductData_OriginalInfo::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::release_title() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  clear_has_title();
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_OriginalInfo::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_title();
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_OriginalInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
void ProductData_OriginalInfo::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_AnnoyIndexMeta::kAnnoyIdxIdFieldNumber;
const int ProductData_AnnoyIndexMeta::kAnnoyProdIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_AnnoyIndexMeta::ProductData_AnnoyIndexMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
}
ProductData_AnnoyIndexMeta::ProductData_AnnoyIndexMeta(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
}
ProductData_AnnoyIndexMeta::ProductData_AnnoyIndexMeta(const ProductData_AnnoyIndexMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&annoy_idx_id_, &from.annoy_idx_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&annoy_prod_id_) -
    reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
}

void ProductData_AnnoyIndexMeta::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annoy_prod_id_) -
      reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
}

ProductData_AnnoyIndexMeta::~ProductData_AnnoyIndexMeta() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  SharedDtor();
}

void ProductData_AnnoyIndexMeta::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ProductData_AnnoyIndexMeta::ArenaDtor(void* object) {
  ProductData_AnnoyIndexMeta* _this = reinterpret_cast< ProductData_AnnoyIndexMeta* >(object);
  (void)_this;
}
void ProductData_AnnoyIndexMeta::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_AnnoyIndexMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_AnnoyIndexMeta::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_AnnoyIndexMeta& ProductData_AnnoyIndexMeta::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_AnnoyIndexMeta* ProductData_AnnoyIndexMeta::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_AnnoyIndexMeta>(arena);
}

void ProductData_AnnoyIndexMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&annoy_prod_id_) -
        reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_AnnoyIndexMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 annoy_idx_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_annoy_idx_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_idx_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 annoy_prod_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_annoy_prod_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_prod_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  return false;
#undef DO_
}

void ProductData_AnnoyIndexMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->annoy_idx_id(), output);
  }

  // optional uint32 annoy_prod_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->annoy_prod_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
}

::google::protobuf::uint8* ProductData_AnnoyIndexMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->annoy_idx_id(), target);
  }

  // optional uint32 annoy_prod_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->annoy_prod_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  return target;
}

size_t ProductData_AnnoyIndexMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 annoy_idx_id = 1;
    if (has_annoy_idx_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->annoy_idx_id());
    }

    // optional uint32 annoy_prod_id = 2;
    if (has_annoy_prod_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->annoy_prod_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_AnnoyIndexMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_AnnoyIndexMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_AnnoyIndexMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
    MergeFrom(*source);
  }
}

void ProductData_AnnoyIndexMeta::MergeFrom(const ProductData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      annoy_idx_id_ = from.annoy_idx_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      annoy_prod_id_ = from.annoy_prod_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData_AnnoyIndexMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_AnnoyIndexMeta::CopyFrom(const ProductData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_AnnoyIndexMeta::IsInitialized() const {
  return true;
}

void ProductData_AnnoyIndexMeta::Swap(ProductData_AnnoyIndexMeta* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_AnnoyIndexMeta* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_AnnoyIndexMeta::UnsafeArenaSwap(ProductData_AnnoyIndexMeta* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_AnnoyIndexMeta::InternalSwap(ProductData_AnnoyIndexMeta* other) {
  using std::swap;
  swap(annoy_idx_id_, other->annoy_idx_id_);
  swap(annoy_prod_id_, other->annoy_prod_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_AnnoyIndexMeta::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_AnnoyIndexMeta

// optional uint32 annoy_idx_id = 1;
bool ProductData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
::google::protobuf::uint32 ProductData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
void ProductData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_idx_id)
}

// optional uint32 annoy_prod_id = 2;
bool ProductData_AnnoyIndexMeta::has_annoy_prod_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_AnnoyIndexMeta::set_has_annoy_prod_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_AnnoyIndexMeta::clear_has_annoy_prod_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_AnnoyIndexMeta::clear_annoy_prod_id() {
  annoy_prod_id_ = 0u;
  clear_has_annoy_prod_id();
}
::google::protobuf::uint32 ProductData_AnnoyIndexMeta::annoy_prod_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_prod_id)
  return annoy_prod_id_;
}
void ProductData_AnnoyIndexMeta::set_annoy_prod_id(::google::protobuf::uint32 value) {
  set_has_annoy_prod_id();
  annoy_prod_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_prod_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_CommentsData_Comment::kTextFieldNumber;
const int ProductData_CommentsData_Comment::kRatingFieldNumber;
const int ProductData_CommentsData_Comment::kUserNameFieldNumber;
const int ProductData_CommentsData_Comment::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_CommentsData_Comment::ProductData_CommentsData_Comment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
}
ProductData_CommentsData_Comment::ProductData_CommentsData_Comment(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
}
ProductData_CommentsData_Comment::ProductData_CommentsData_Comment(const ProductData_CommentsData_Comment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&rating_, &from.rating_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&rating_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
}

void ProductData_CommentsData_Comment::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rating_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&rating_)) + sizeof(time_));
}

ProductData_CommentsData_Comment::~ProductData_CommentsData_Comment() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  SharedDtor();
}

void ProductData_CommentsData_Comment::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  text_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  user_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ProductData_CommentsData_Comment::ArenaDtor(void* object) {
  ProductData_CommentsData_Comment* _this = reinterpret_cast< ProductData_CommentsData_Comment* >(object);
  (void)_this;
}
void ProductData_CommentsData_Comment::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_CommentsData_Comment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_CommentsData_Comment::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_CommentsData_Comment& ProductData_CommentsData_Comment::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_CommentsData_Comment* ProductData_CommentsData_Comment::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_CommentsData_Comment>(arena);
}

void ProductData_CommentsData_Comment::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      user_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&rating_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_) -
        reinterpret_cast<char*>(&rating_)) + sizeof(time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_CommentsData_Comment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rating = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_rating();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  return false;
#undef DO_
}

void ProductData_CommentsData_Comment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional float rating = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rating(), output);
  }

  // optional string user_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_name(), output);
  }

  // optional uint32 time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
}

::google::protobuf::uint8* ProductData_CommentsData_Comment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional float rating = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rating(), target);
  }

  // optional string user_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_name(), target);
  }

  // optional uint32 time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  return target;
}

size_t ProductData_CommentsData_Comment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string user_name = 3;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional float rating = 2;
    if (has_rating()) {
      total_size += 1 + 4;
    }

    // optional uint32 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_CommentsData_Comment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_CommentsData_Comment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_CommentsData_Comment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
    MergeFrom(*source);
  }
}

void ProductData_CommentsData_Comment::MergeFrom(const ProductData_CommentsData_Comment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_text(from.text());
    }
    if (cached_has_bits & 0x00000002u) {
      set_user_name(from.user_name());
    }
    if (cached_has_bits & 0x00000004u) {
      rating_ = from.rating_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData_CommentsData_Comment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_CommentsData_Comment::CopyFrom(const ProductData_CommentsData_Comment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_CommentsData_Comment::IsInitialized() const {
  return true;
}

void ProductData_CommentsData_Comment::Swap(ProductData_CommentsData_Comment* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_CommentsData_Comment* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_CommentsData_Comment::UnsafeArenaSwap(ProductData_CommentsData_Comment* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_CommentsData_Comment::InternalSwap(ProductData_CommentsData_Comment* other) {
  using std::swap;
  text_.Swap(&other->text_);
  user_name_.Swap(&other->user_name_);
  swap(rating_, other->rating_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_CommentsData_Comment::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_CommentsData_Comment

// optional string text = 1;
bool ProductData_CommentsData_Comment::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_CommentsData_Comment::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_CommentsData_Comment::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_CommentsData_Comment::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_text();
}
const ::std::string& ProductData_CommentsData_Comment::text() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  return text_.Get();
}
void ProductData_CommentsData_Comment::set_text(const ::std::string& value) {
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
#if LANG_CXX11
void ProductData_CommentsData_Comment::set_text(::std::string&& value) {
  set_has_text();
  text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
#endif
void ProductData_CommentsData_Comment::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
void ProductData_CommentsData_Comment::set_text(const char* value,
    size_t size) {
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
::std::string* ProductData_CommentsData_Comment::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_CommentsData_Comment::release_text() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  clear_has_text();
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_CommentsData_Comment::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_text();
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_CommentsData_Comment::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
void ProductData_CommentsData_Comment::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}

// optional float rating = 2;
bool ProductData_CommentsData_Comment::has_rating() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_CommentsData_Comment::set_has_rating() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_CommentsData_Comment::clear_has_rating() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_CommentsData_Comment::clear_rating() {
  rating_ = 0;
  clear_has_rating();
}
float ProductData_CommentsData_Comment::rating() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.rating)
  return rating_;
}
void ProductData_CommentsData_Comment::set_rating(float value) {
  set_has_rating();
  rating_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.rating)
}

// optional string user_name = 3;
bool ProductData_CommentsData_Comment::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_CommentsData_Comment::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_CommentsData_Comment::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_CommentsData_Comment::clear_user_name() {
  user_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_user_name();
}
const ::std::string& ProductData_CommentsData_Comment::user_name() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  return user_name_.Get();
}
void ProductData_CommentsData_Comment::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
#if LANG_CXX11
void ProductData_CommentsData_Comment::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
#endif
void ProductData_CommentsData_Comment::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
void ProductData_CommentsData_Comment::set_user_name(const char* value,
    size_t size) {
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
::std::string* ProductData_CommentsData_Comment::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  return user_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_CommentsData_Comment::release_user_name() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  clear_has_user_name();
  return user_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_CommentsData_Comment::unsafe_arena_release_user_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_user_name();
  return user_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_CommentsData_Comment::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
void ProductData_CommentsData_Comment::unsafe_arena_set_allocated_user_name(
    ::std::string* user_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      user_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}

// optional uint32 time = 4;
bool ProductData_CommentsData_Comment::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProductData_CommentsData_Comment::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
void ProductData_CommentsData_Comment::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProductData_CommentsData_Comment::clear_time() {
  time_ = 0u;
  clear_has_time();
}
::google::protobuf::uint32 ProductData_CommentsData_Comment::time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.time)
  return time_;
}
void ProductData_CommentsData_Comment::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_CommentsData::kCommentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_CommentsData::ProductData_CommentsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.CommentsData)
}
ProductData_CommentsData::ProductData_CommentsData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  comments_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.CommentsData)
}
ProductData_CommentsData::ProductData_CommentsData(const ProductData_CommentsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      comments_(from.comments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.CommentsData)
}

void ProductData_CommentsData::SharedCtor() {
  _cached_size_ = 0;
}

ProductData_CommentsData::~ProductData_CommentsData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.CommentsData)
  SharedDtor();
}

void ProductData_CommentsData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ProductData_CommentsData::ArenaDtor(void* object) {
  ProductData_CommentsData* _this = reinterpret_cast< ProductData_CommentsData* >(object);
  (void)_this;
}
void ProductData_CommentsData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_CommentsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_CommentsData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_CommentsData& ProductData_CommentsData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_CommentsData* ProductData_CommentsData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_CommentsData>(arena);
}

void ProductData_CommentsData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  comments_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_CommentsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_comments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.CommentsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.CommentsData)
  return false;
#undef DO_
}

void ProductData_CommentsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->comments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->comments(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.CommentsData)
}

::google::protobuf::uint8* ProductData_CommentsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->comments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->comments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.CommentsData)
  return target;
}

size_t ProductData_CommentsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->comments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->comments(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_CommentsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_CommentsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_CommentsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.CommentsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.CommentsData)
    MergeFrom(*source);
  }
}

void ProductData_CommentsData::MergeFrom(const ProductData_CommentsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  comments_.MergeFrom(from.comments_);
}

void ProductData_CommentsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_CommentsData::CopyFrom(const ProductData_CommentsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.CommentsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_CommentsData::IsInitialized() const {
  return true;
}

void ProductData_CommentsData::Swap(ProductData_CommentsData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_CommentsData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_CommentsData::UnsafeArenaSwap(ProductData_CommentsData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_CommentsData::InternalSwap(ProductData_CommentsData* other) {
  using std::swap;
  comments_.InternalSwap(&other->comments_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_CommentsData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_CommentsData

// repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
int ProductData_CommentsData::comments_size() const {
  return comments_.size();
}
void ProductData_CommentsData::clear_comments() {
  comments_.Clear();
}
const ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment& ProductData_CommentsData::comments(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Get(index);
}
::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* ProductData_CommentsData::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Mutable(index);
}
::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* ProductData_CommentsData::add_comments() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Add();
}
::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >*
ProductData_CommentsData::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return &comments_;
}
const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >&
ProductData_CommentsData::comments() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_PriceData::kCurrencyFieldNumber;
const int ProductData_PriceData::kLowPriceFieldNumber;
const int ProductData_PriceData::kHighPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_PriceData::ProductData_PriceData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.PriceData)
}
ProductData_PriceData::ProductData_PriceData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.PriceData)
}
ProductData_PriceData::ProductData_PriceData(const ProductData_PriceData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currency_, &from.currency_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_price_) -
    reinterpret_cast<char*>(&currency_)) + sizeof(high_price_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.PriceData)
}

void ProductData_PriceData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&currency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_price_) -
      reinterpret_cast<char*>(&currency_)) + sizeof(high_price_));
}

ProductData_PriceData::~ProductData_PriceData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.PriceData)
  SharedDtor();
}

void ProductData_PriceData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ProductData_PriceData::ArenaDtor(void* object) {
  ProductData_PriceData* _this = reinterpret_cast< ProductData_PriceData* >(object);
  (void)_this;
}
void ProductData_PriceData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_PriceData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_PriceData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_PriceData& ProductData_PriceData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_PriceData* ProductData_PriceData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_PriceData>(arena);
}

void ProductData_PriceData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.PriceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&currency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_price_) -
        reinterpret_cast<char*>(&currency_)) + sizeof(high_price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_PriceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.PriceData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pandao_imgsearcher::pb::ProductData_Currency_IsValid(value)) {
            set_currency(static_cast< ::pandao_imgsearcher::pb::ProductData_Currency >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float low_price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_low_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float high_price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_high_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.PriceData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.PriceData)
  return false;
#undef DO_
}

void ProductData_PriceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.PriceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->currency(), output);
  }

  // required float low_price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->low_price(), output);
  }

  // optional float high_price = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->high_price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.PriceData)
}

::google::protobuf::uint8* ProductData_PriceData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.PriceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->currency(), target);
  }

  // required float low_price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->low_price(), target);
  }

  // optional float high_price = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->high_price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.PriceData)
  return target;
}

size_t ProductData_PriceData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ProductData.PriceData)
  size_t total_size = 0;

  if (has_currency()) {
    // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->currency());
  }

  if (has_low_price()) {
    // required float low_price = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ProductData_PriceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.PriceData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->currency());

    // required float low_price = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional float high_price = 3;
  if (has_high_price()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_PriceData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.PriceData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_PriceData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_PriceData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.PriceData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.PriceData)
    MergeFrom(*source);
  }
}

void ProductData_PriceData::MergeFrom(const ProductData_PriceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.PriceData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      currency_ = from.currency_;
    }
    if (cached_has_bits & 0x00000002u) {
      low_price_ = from.low_price_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_price_ = from.high_price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData_PriceData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.PriceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_PriceData::CopyFrom(const ProductData_PriceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.PriceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_PriceData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProductData_PriceData::Swap(ProductData_PriceData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_PriceData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_PriceData::UnsafeArenaSwap(ProductData_PriceData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_PriceData::InternalSwap(ProductData_PriceData* other) {
  using std::swap;
  swap(currency_, other->currency_);
  swap(low_price_, other->low_price_);
  swap(high_price_, other->high_price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_PriceData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_PriceData

// required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
bool ProductData_PriceData::has_currency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_PriceData::set_has_currency() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_PriceData::clear_has_currency() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_PriceData::clear_currency() {
  currency_ = 0;
  clear_has_currency();
}
::pandao_imgsearcher::pb::ProductData_Currency ProductData_PriceData::currency() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.currency)
  return static_cast< ::pandao_imgsearcher::pb::ProductData_Currency >(currency_);
}
void ProductData_PriceData::set_currency(::pandao_imgsearcher::pb::ProductData_Currency value) {
  assert(::pandao_imgsearcher::pb::ProductData_Currency_IsValid(value));
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.currency)
}

// required float low_price = 2;
bool ProductData_PriceData::has_low_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_PriceData::set_has_low_price() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_PriceData::clear_has_low_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_PriceData::clear_low_price() {
  low_price_ = 0;
  clear_has_low_price();
}
float ProductData_PriceData::low_price() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.low_price)
  return low_price_;
}
void ProductData_PriceData::set_low_price(float value) {
  set_has_low_price();
  low_price_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.low_price)
}

// optional float high_price = 3;
bool ProductData_PriceData::has_high_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_PriceData::set_has_high_price() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_PriceData::clear_has_high_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_PriceData::clear_high_price() {
  high_price_ = 0;
  clear_has_high_price();
}
float ProductData_PriceData::high_price() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.high_price)
  return high_price_;
}
void ProductData_PriceData::set_high_price(float value) {
  set_has_high_price();
  high_price_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.high_price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ProductData_ProductStat::_slow_mutable_old_price() {
  old_price_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::_slow_release_old_price() {
  if (old_price_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = new ::pandao_imgsearcher::pb::ProductData_PriceData(*old_price_);
    old_price_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::unsafe_arena_release_old_price() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  clear_has_old_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* temp = old_price_;
  old_price_ = NULL;
  return temp;
}
void ProductData_ProductStat::_slow_set_allocated_old_price(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** old_price) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*old_price) == NULL) {
      message_arena->Own(*old_price);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*old_price)) {
      ::pandao_imgsearcher::pb::ProductData_PriceData* new_old_price = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
            message_arena);
      new_old_price->CopyFrom(**old_price);
      *old_price = new_old_price;
    }
}
void ProductData_ProductStat::unsafe_arena_set_allocated_old_price(
    ::pandao_imgsearcher::pb::ProductData_PriceData* old_price) {
  if (GetArenaNoVirtual() == NULL) {
    delete old_price_;
  }
  old_price_ = old_price;
  if (old_price) {
    set_has_old_price();
  } else {
    clear_has_old_price();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
}
void ProductData_ProductStat::_slow_mutable_price() {
  price_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::_slow_release_price() {
  if (price_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = new ::pandao_imgsearcher::pb::ProductData_PriceData(*price_);
    price_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::unsafe_arena_release_price() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  clear_has_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
  price_ = NULL;
  return temp;
}
void ProductData_ProductStat::_slow_set_allocated_price(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** price) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*price) == NULL) {
      message_arena->Own(*price);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*price)) {
      ::pandao_imgsearcher::pb::ProductData_PriceData* new_price = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
            message_arena);
      new_price->CopyFrom(**price);
      *price = new_price;
    }
}
void ProductData_ProductStat::unsafe_arena_set_allocated_price(
    ::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  if (GetArenaNoVirtual() == NULL) {
    delete price_;
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.price)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_ProductStat::kVersionFieldNumber;
const int ProductData_ProductStat::kOldPriceFieldNumber;
const int ProductData_ProductStat::kPriceFieldNumber;
const int ProductData_ProductStat::kOrdersCntFieldNumber;
const int ProductData_ProductStat::kTotalRatingFieldNumber;
const int ProductData_ProductStat::kReviewsCntFieldNumber;
const int ProductData_ProductStat::kShippingDataFieldNumber;
const int ProductData_ProductStat::kDeletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_ProductStat::ProductData_ProductStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.ProductStat)
}
ProductData_ProductStat::ProductData_ProductStat(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  shipping_data_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.ProductStat)
}
ProductData_ProductStat::ProductData_ProductStat(const ProductData_ProductStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      shipping_data_(from.shipping_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_old_price()) {
    old_price_ = new ::pandao_imgsearcher::pb::ProductData_PriceData(*from.old_price_);
  } else {
    old_price_ = NULL;
  }
  if (from.has_price()) {
    price_ = new ::pandao_imgsearcher::pb::ProductData_PriceData(*from.price_);
  } else {
    price_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&deleted_) -
    reinterpret_cast<char*>(&version_)) + sizeof(deleted_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.ProductStat)
}

void ProductData_ProductStat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&old_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deleted_) -
      reinterpret_cast<char*>(&old_price_)) + sizeof(deleted_));
}

ProductData_ProductStat::~ProductData_ProductStat() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.ProductStat)
  SharedDtor();
}

void ProductData_ProductStat::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete old_price_;
  if (this != internal_default_instance()) delete price_;
}

void ProductData_ProductStat::ArenaDtor(void* object) {
  ProductData_ProductStat* _this = reinterpret_cast< ProductData_ProductStat* >(object);
  (void)_this;
}
void ProductData_ProductStat::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_ProductStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_ProductStat::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_ProductStat& ProductData_ProductStat::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_ProductStat* ProductData_ProductStat::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_ProductStat>(arena);
}

void ProductData_ProductStat::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shipping_data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(old_price_ != NULL);
      old_price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(price_ != NULL);
      price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deleted_) -
        reinterpret_cast<char*>(&version_)) + sizeof(deleted_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_ProductStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_old_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float orders_cnt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_orders_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orders_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float total_rating = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_total_rating();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_rating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float reviews_cnt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_reviews_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reviews_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shipping_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool deleted = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.ProductStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.ProductStat)
  return false;
#undef DO_
}

void ProductData_ProductStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->old_price_, output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->price_, output);
  }

  // optional float orders_cnt = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->orders_cnt(), output);
  }

  // optional float total_rating = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->total_rating(), output);
  }

  // optional float reviews_cnt = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->reviews_cnt(), output);
  }

  // repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shipping_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->shipping_data(static_cast<int>(i)), output);
  }

  // optional bool deleted = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->deleted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.ProductStat)
}

::google::protobuf::uint8* ProductData_ProductStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->old_price_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->price_, deterministic, target);
  }

  // optional float orders_cnt = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->orders_cnt(), target);
  }

  // optional float total_rating = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->total_rating(), target);
  }

  // optional float reviews_cnt = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->reviews_cnt(), target);
  }

  // repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shipping_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->shipping_data(static_cast<int>(i)), deterministic, target);
  }

  // optional bool deleted = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->deleted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.ProductStat)
  return target;
}

size_t ProductData_ProductStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }
  // repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->shipping_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipping_data(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
    if (has_old_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->old_price_);
    }

    // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->price_);
    }

  }
  if (_has_bits_[0 / 32] & 120u) {
    // optional float orders_cnt = 4;
    if (has_orders_cnt()) {
      total_size += 1 + 4;
    }

    // optional float total_rating = 5;
    if (has_total_rating()) {
      total_size += 1 + 4;
    }

    // optional float reviews_cnt = 6;
    if (has_reviews_cnt()) {
      total_size += 1 + 4;
    }

    // optional bool deleted = 8;
    if (has_deleted()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_ProductStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_ProductStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_ProductStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.ProductStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.ProductStat)
    MergeFrom(*source);
  }
}

void ProductData_ProductStat::MergeFrom(const ProductData_ProductStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shipping_data_.MergeFrom(from.shipping_data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_old_price()->::pandao_imgsearcher::pb::ProductData_PriceData::MergeFrom(from.old_price());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_price()->::pandao_imgsearcher::pb::ProductData_PriceData::MergeFrom(from.price());
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000008u) {
      orders_cnt_ = from.orders_cnt_;
    }
    if (cached_has_bits & 0x00000010u) {
      total_rating_ = from.total_rating_;
    }
    if (cached_has_bits & 0x00000020u) {
      reviews_cnt_ = from.reviews_cnt_;
    }
    if (cached_has_bits & 0x00000040u) {
      deleted_ = from.deleted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData_ProductStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_ProductStat::CopyFrom(const ProductData_ProductStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.ProductStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_ProductStat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shipping_data())) return false;
  if (has_old_price()) {
    if (!this->old_price_->IsInitialized()) return false;
  }
  if (has_price()) {
    if (!this->price_->IsInitialized()) return false;
  }
  return true;
}

void ProductData_ProductStat::Swap(ProductData_ProductStat* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_ProductStat* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_ProductStat::UnsafeArenaSwap(ProductData_ProductStat* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_ProductStat::InternalSwap(ProductData_ProductStat* other) {
  using std::swap;
  shipping_data_.InternalSwap(&other->shipping_data_);
  swap(old_price_, other->old_price_);
  swap(price_, other->price_);
  swap(version_, other->version_);
  swap(orders_cnt_, other->orders_cnt_);
  swap(total_rating_, other->total_rating_);
  swap(reviews_cnt_, other->reviews_cnt_);
  swap(deleted_, other->deleted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_ProductStat::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_ProductStat

// required uint32 version = 1;
bool ProductData_ProductStat::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_ProductStat::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_ProductStat::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_ProductStat::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 ProductData_ProductStat::version() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.version)
  return version_;
}
void ProductData_ProductStat::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.version)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
bool ProductData_ProductStat::has_old_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_ProductStat::set_has_old_price() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_ProductStat::clear_has_old_price() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_ProductStat::clear_old_price() {
  if (old_price_ != NULL) old_price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_old_price();
}
const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ProductStat::old_price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = old_price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::mutable_old_price() {
  set_has_old_price();
  if (old_price_ == NULL) {
    _slow_mutable_old_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  return old_price_;
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::release_old_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  clear_has_old_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_old_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = old_price_;
    old_price_ = NULL;
    return temp;
  }
}
 void ProductData_ProductStat::set_allocated_old_price(::pandao_imgsearcher::pb::ProductData_PriceData* old_price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete old_price_;
  }
  if (old_price != NULL) {
    _slow_set_allocated_old_price(message_arena, &old_price);
  }
  old_price_ = old_price;
  if (old_price) {
    set_has_old_price();
  } else {
    clear_has_old_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
bool ProductData_ProductStat::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_ProductStat::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_ProductStat::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_ProductStat::clear_price() {
  if (price_ != NULL) price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_price();
}
const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ProductStat::price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::mutable_price() {
  set_has_price();
  if (price_ == NULL) {
    _slow_mutable_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  return price_;
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::release_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  clear_has_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
    price_ = NULL;
    return temp;
  }
}
 void ProductData_ProductStat::set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete price_;
  }
  if (price != NULL) {
    _slow_set_allocated_price(message_arena, &price);
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.price)
}

// optional float orders_cnt = 4;
bool ProductData_ProductStat::has_orders_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProductData_ProductStat::set_has_orders_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
void ProductData_ProductStat::clear_has_orders_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProductData_ProductStat::clear_orders_cnt() {
  orders_cnt_ = 0;
  clear_has_orders_cnt();
}
float ProductData_ProductStat::orders_cnt() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.orders_cnt)
  return orders_cnt_;
}
void ProductData_ProductStat::set_orders_cnt(float value) {
  set_has_orders_cnt();
  orders_cnt_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.orders_cnt)
}

// optional float total_rating = 5;
bool ProductData_ProductStat::has_total_rating() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProductData_ProductStat::set_has_total_rating() {
  _has_bits_[0] |= 0x00000010u;
}
void ProductData_ProductStat::clear_has_total_rating() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProductData_ProductStat::clear_total_rating() {
  total_rating_ = 0;
  clear_has_total_rating();
}
float ProductData_ProductStat::total_rating() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.total_rating)
  return total_rating_;
}
void ProductData_ProductStat::set_total_rating(float value) {
  set_has_total_rating();
  total_rating_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.total_rating)
}

// optional float reviews_cnt = 6;
bool ProductData_ProductStat::has_reviews_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ProductData_ProductStat::set_has_reviews_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
void ProductData_ProductStat::clear_has_reviews_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
void ProductData_ProductStat::clear_reviews_cnt() {
  reviews_cnt_ = 0;
  clear_has_reviews_cnt();
}
float ProductData_ProductStat::reviews_cnt() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.reviews_cnt)
  return reviews_cnt_;
}
void ProductData_ProductStat::set_reviews_cnt(float value) {
  set_has_reviews_cnt();
  reviews_cnt_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.reviews_cnt)
}

// repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
int ProductData_ProductStat::shipping_data_size() const {
  return shipping_data_.size();
}
void ProductData_ProductStat::clear_shipping_data() {
  shipping_data_.Clear();
}
const ::pandao_imgsearcher::pb::ProductData_ShippingData& ProductData_ProductStat::shipping_data(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Get(index);
}
::pandao_imgsearcher::pb::ProductData_ShippingData* ProductData_ProductStat::mutable_shipping_data(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Mutable(index);
}
::pandao_imgsearcher::pb::ProductData_ShippingData* ProductData_ProductStat::add_shipping_data() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >*
ProductData_ProductStat::mutable_shipping_data() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return &shipping_data_;
}
const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >&
ProductData_ProductStat::shipping_data() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_;
}

// optional bool deleted = 8;
bool ProductData_ProductStat::has_deleted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ProductData_ProductStat::set_has_deleted() {
  _has_bits_[0] |= 0x00000040u;
}
void ProductData_ProductStat::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000040u;
}
void ProductData_ProductStat::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
bool ProductData_ProductStat::deleted() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.deleted)
  return deleted_;
}
void ProductData_ProductStat::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.deleted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_DurationData::kTimeUnitFieldNumber;
const int ProductData_DurationData::kLowTimeFieldNumber;
const int ProductData_DurationData::kHighTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_DurationData::ProductData_DurationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.DurationData)
}
ProductData_DurationData::ProductData_DurationData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.DurationData)
}
ProductData_DurationData::ProductData_DurationData(const ProductData_DurationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_unit_, &from.time_unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_time_) -
    reinterpret_cast<char*>(&time_unit_)) + sizeof(high_time_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.DurationData)
}

void ProductData_DurationData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&time_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_time_) -
      reinterpret_cast<char*>(&time_unit_)) + sizeof(high_time_));
}

ProductData_DurationData::~ProductData_DurationData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.DurationData)
  SharedDtor();
}

void ProductData_DurationData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ProductData_DurationData::ArenaDtor(void* object) {
  ProductData_DurationData* _this = reinterpret_cast< ProductData_DurationData* >(object);
  (void)_this;
}
void ProductData_DurationData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_DurationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_DurationData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_DurationData& ProductData_DurationData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_DurationData* ProductData_DurationData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_DurationData>(arena);
}

void ProductData_DurationData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.DurationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&time_unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_time_) -
        reinterpret_cast<char*>(&time_unit_)) + sizeof(high_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_DurationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.DurationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pandao_imgsearcher::pb::ProductData_TimeUnit_IsValid(value)) {
            set_time_unit(static_cast< ::pandao_imgsearcher::pb::ProductData_TimeUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float low_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_low_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float high_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_high_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.DurationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.DurationData)
  return false;
#undef DO_
}

void ProductData_DurationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.DurationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->time_unit(), output);
  }

  // required float low_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->low_time(), output);
  }

  // optional float high_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->high_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.DurationData)
}

::google::protobuf::uint8* ProductData_DurationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.DurationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->time_unit(), target);
  }

  // required float low_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->low_time(), target);
  }

  // optional float high_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->high_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.DurationData)
  return target;
}

size_t ProductData_DurationData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ProductData.DurationData)
  size_t total_size = 0;

  if (has_time_unit()) {
    // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_unit());
  }

  if (has_low_time()) {
    // required float low_time = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ProductData_DurationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.DurationData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_unit());

    // required float low_time = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional float high_time = 3;
  if (has_high_time()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_DurationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.DurationData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_DurationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_DurationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.DurationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.DurationData)
    MergeFrom(*source);
  }
}

void ProductData_DurationData::MergeFrom(const ProductData_DurationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.DurationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      time_unit_ = from.time_unit_;
    }
    if (cached_has_bits & 0x00000002u) {
      low_time_ = from.low_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_time_ = from.high_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData_DurationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.DurationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_DurationData::CopyFrom(const ProductData_DurationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.DurationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_DurationData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProductData_DurationData::Swap(ProductData_DurationData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_DurationData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_DurationData::UnsafeArenaSwap(ProductData_DurationData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_DurationData::InternalSwap(ProductData_DurationData* other) {
  using std::swap;
  swap(time_unit_, other->time_unit_);
  swap(low_time_, other->low_time_);
  swap(high_time_, other->high_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_DurationData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_DurationData

// required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
bool ProductData_DurationData::has_time_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_DurationData::set_has_time_unit() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_DurationData::clear_has_time_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_DurationData::clear_time_unit() {
  time_unit_ = 0;
  clear_has_time_unit();
}
::pandao_imgsearcher::pb::ProductData_TimeUnit ProductData_DurationData::time_unit() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.time_unit)
  return static_cast< ::pandao_imgsearcher::pb::ProductData_TimeUnit >(time_unit_);
}
void ProductData_DurationData::set_time_unit(::pandao_imgsearcher::pb::ProductData_TimeUnit value) {
  assert(::pandao_imgsearcher::pb::ProductData_TimeUnit_IsValid(value));
  set_has_time_unit();
  time_unit_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.time_unit)
}

// required float low_time = 2;
bool ProductData_DurationData::has_low_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_DurationData::set_has_low_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_DurationData::clear_has_low_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_DurationData::clear_low_time() {
  low_time_ = 0;
  clear_has_low_time();
}
float ProductData_DurationData::low_time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.low_time)
  return low_time_;
}
void ProductData_DurationData::set_low_time(float value) {
  set_has_low_time();
  low_time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.low_time)
}

// optional float high_time = 3;
bool ProductData_DurationData::has_high_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_DurationData::set_has_high_time() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_DurationData::clear_has_high_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_DurationData::clear_high_time() {
  high_time_ = 0;
  clear_has_high_time();
}
float ProductData_DurationData::high_time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.high_time)
  return high_time_;
}
void ProductData_DurationData::set_high_time(float value) {
  set_has_high_time();
  high_time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.high_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ProductData_ShippingData::_slow_mutable_duration() {
  duration_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_DurationData >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::_slow_release_duration() {
  if (duration_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_DurationData* temp = new ::pandao_imgsearcher::pb::ProductData_DurationData(*duration_);
    duration_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::unsafe_arena_release_duration() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  clear_has_duration();
  ::pandao_imgsearcher::pb::ProductData_DurationData* temp = duration_;
  duration_ = NULL;
  return temp;
}
void ProductData_ShippingData::_slow_set_allocated_duration(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_DurationData** duration) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*duration) == NULL) {
      message_arena->Own(*duration);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*duration)) {
      ::pandao_imgsearcher::pb::ProductData_DurationData* new_duration = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_DurationData >(
            message_arena);
      new_duration->CopyFrom(**duration);
      *duration = new_duration;
    }
}
void ProductData_ShippingData::unsafe_arena_set_allocated_duration(
    ::pandao_imgsearcher::pb::ProductData_DurationData* duration) {
  if (GetArenaNoVirtual() == NULL) {
    delete duration_;
  }
  duration_ = duration;
  if (duration) {
    set_has_duration();
  } else {
    clear_has_duration();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
}
void ProductData_ShippingData::_slow_mutable_price() {
  price_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::_slow_release_price() {
  if (price_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = new ::pandao_imgsearcher::pb::ProductData_PriceData(*price_);
    price_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::unsafe_arena_release_price() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  clear_has_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
  price_ = NULL;
  return temp;
}
void ProductData_ShippingData::_slow_set_allocated_price(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** price) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*price) == NULL) {
      message_arena->Own(*price);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*price)) {
      ::pandao_imgsearcher::pb::ProductData_PriceData* new_price = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_PriceData >(
            message_arena);
      new_price->CopyFrom(**price);
      *price = new_price;
    }
}
void ProductData_ShippingData::unsafe_arena_set_allocated_price(
    ::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  if (GetArenaNoVirtual() == NULL) {
    delete price_;
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.price)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData_ShippingData::kDurationFieldNumber;
const int ProductData_ShippingData::kPriceFieldNumber;
const int ProductData_ShippingData::kCompanyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData_ShippingData::ProductData_ShippingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData.ShippingData)
}
ProductData_ShippingData::ProductData_ShippingData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData.ShippingData)
}
ProductData_ShippingData::ProductData_ShippingData(const ProductData_ShippingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  company_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_company()) {
    company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company(),
      GetArenaNoVirtual());
  }
  if (from.has_duration()) {
    duration_ = new ::pandao_imgsearcher::pb::ProductData_DurationData(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_price()) {
    price_ = new ::pandao_imgsearcher::pb::ProductData_PriceData(*from.price_);
  } else {
    price_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData.ShippingData)
}

void ProductData_ShippingData::SharedCtor() {
  _cached_size_ = 0;
  company_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(price_));
}

ProductData_ShippingData::~ProductData_ShippingData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData.ShippingData)
  SharedDtor();
}

void ProductData_ShippingData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  company_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete price_;
}

void ProductData_ShippingData::ArenaDtor(void* object) {
  ProductData_ShippingData* _this = reinterpret_cast< ProductData_ShippingData* >(object);
  (void)_this;
}
void ProductData_ShippingData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData_ShippingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData_ShippingData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData_ShippingData& ProductData_ShippingData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData_ShippingData* ProductData_ShippingData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData_ShippingData>(arena);
}

void ProductData_ShippingData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!company_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      company_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(duration_ != NULL);
      duration_->::pandao_imgsearcher::pb::ProductData_DurationData::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(price_ != NULL);
      price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData_ShippingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string company = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_company()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->company().data(), static_cast<int>(this->company().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductData.ShippingData.company");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData.ShippingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData.ShippingData)
  return false;
#undef DO_
}

void ProductData_ShippingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->duration_, output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->price_, output);
  }

  // optional string company = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->company().data(), static_cast<int>(this->company().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.ShippingData.company");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->company(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData.ShippingData)
}

::google::protobuf::uint8* ProductData_ShippingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->duration_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->price_, deterministic, target);
  }

  // optional string company = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->company().data(), static_cast<int>(this->company().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductData.ShippingData.company");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->company(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData.ShippingData)
  return target;
}

size_t ProductData_ShippingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
  if (has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->duration_);
  }
  // optional string company = 3;
  if (has_company()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->company());
  }

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
  if (has_price()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->price_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData_ShippingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData_ShippingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData_ShippingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData.ShippingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData.ShippingData)
    MergeFrom(*source);
  }
}

void ProductData_ShippingData::MergeFrom(const ProductData_ShippingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_company(from.company());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_duration()->::pandao_imgsearcher::pb::ProductData_DurationData::MergeFrom(from.duration());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_price()->::pandao_imgsearcher::pb::ProductData_PriceData::MergeFrom(from.price());
    }
  }
}

void ProductData_ShippingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData_ShippingData::CopyFrom(const ProductData_ShippingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData.ShippingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData_ShippingData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_duration()) {
    if (!this->duration_->IsInitialized()) return false;
  }
  if (has_price()) {
    if (!this->price_->IsInitialized()) return false;
  }
  return true;
}

void ProductData_ShippingData::Swap(ProductData_ShippingData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData_ShippingData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData_ShippingData::UnsafeArenaSwap(ProductData_ShippingData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData_ShippingData::InternalSwap(ProductData_ShippingData* other) {
  using std::swap;
  company_.Swap(&other->company_);
  swap(duration_, other->duration_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData_ShippingData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData_ShippingData

// required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
bool ProductData_ShippingData::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData_ShippingData::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData_ShippingData::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData_ShippingData::clear_duration() {
  if (duration_ != NULL) duration_->::pandao_imgsearcher::pb::ProductData_DurationData::Clear();
  clear_has_duration();
}
const ::pandao_imgsearcher::pb::ProductData_DurationData& ProductData_ShippingData::duration() const {
  const ::pandao_imgsearcher::pb::ProductData_DurationData* p = duration_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_DurationData*>(
      &::pandao_imgsearcher::pb::_ProductData_DurationData_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::mutable_duration() {
  set_has_duration();
  if (duration_ == NULL) {
    _slow_mutable_duration();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  return duration_;
}
::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::release_duration() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  clear_has_duration();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_duration();
  } else {
    ::pandao_imgsearcher::pb::ProductData_DurationData* temp = duration_;
    duration_ = NULL;
    return temp;
  }
}
 void ProductData_ShippingData::set_allocated_duration(::pandao_imgsearcher::pb::ProductData_DurationData* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete duration_;
  }
  if (duration != NULL) {
    _slow_set_allocated_duration(message_arena, &duration);
  }
  duration_ = duration;
  if (duration) {
    set_has_duration();
  } else {
    clear_has_duration();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
bool ProductData_ShippingData::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData_ShippingData::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData_ShippingData::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData_ShippingData::clear_price() {
  if (price_ != NULL) price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_price();
}
const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ShippingData::price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::mutable_price() {
  set_has_price();
  if (price_ == NULL) {
    _slow_mutable_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  return price_;
}
::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::release_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  clear_has_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
    price_ = NULL;
    return temp;
  }
}
 void ProductData_ShippingData::set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete price_;
  }
  if (price != NULL) {
    _slow_set_allocated_price(message_arena, &price);
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.price)
}

// optional string company = 3;
bool ProductData_ShippingData::has_company() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData_ShippingData::set_has_company() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData_ShippingData::clear_has_company() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData_ShippingData::clear_company() {
  company_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_company();
}
const ::std::string& ProductData_ShippingData::company() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  return company_.Get();
}
void ProductData_ShippingData::set_company(const ::std::string& value) {
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
#if LANG_CXX11
void ProductData_ShippingData::set_company(::std::string&& value) {
  set_has_company();
  company_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
#endif
void ProductData_ShippingData::set_company(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
void ProductData_ShippingData::set_company(const char* value,
    size_t size) {
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
::std::string* ProductData_ShippingData::mutable_company() {
  set_has_company();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  return company_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_ShippingData::release_company() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  clear_has_company();
  return company_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductData_ShippingData::unsafe_arena_release_company() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_company();
  return company_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductData_ShippingData::set_allocated_company(::std::string* company) {
  if (company != NULL) {
    set_has_company();
  } else {
    clear_has_company();
  }
  company_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
void ProductData_ShippingData::unsafe_arena_set_allocated_company(
    ::std::string* company) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (company != NULL) {
    set_has_company();
  } else {
    clear_has_company();
  }
  company_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      company, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ProductData::_slow_mutable_original_info() {
  original_info_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_OriginalInfo >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::_slow_release_original_info() {
  if (original_info_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_OriginalInfo* temp = new ::pandao_imgsearcher::pb::ProductData_OriginalInfo(*original_info_);
    original_info_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::unsafe_arena_release_original_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.original_info)
  clear_has_original_info();
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* temp = original_info_;
  original_info_ = NULL;
  return temp;
}
void ProductData::_slow_set_allocated_original_info(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_OriginalInfo** original_info) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*original_info) == NULL) {
      message_arena->Own(*original_info);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*original_info)) {
      ::pandao_imgsearcher::pb::ProductData_OriginalInfo* new_original_info = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_OriginalInfo >(
            message_arena);
      new_original_info->CopyFrom(**original_info);
      *original_info = new_original_info;
    }
}
void ProductData::unsafe_arena_set_allocated_original_info(
    ::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete original_info_;
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.original_info)
}
void ProductData::_slow_mutable_annoy_index_meta() {
  annoy_index_meta_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::_slow_release_annoy_index_meta() {
  if (annoy_index_meta_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* temp = new ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta(*annoy_index_meta_);
    annoy_index_meta_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::unsafe_arena_release_annoy_index_meta() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  clear_has_annoy_index_meta();
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* temp = annoy_index_meta_;
  annoy_index_meta_ = NULL;
  return temp;
}
void ProductData::_slow_set_allocated_annoy_index_meta(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta** annoy_index_meta) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*annoy_index_meta) == NULL) {
      message_arena->Own(*annoy_index_meta);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*annoy_index_meta)) {
      ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* new_annoy_index_meta = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta >(
            message_arena);
      new_annoy_index_meta->CopyFrom(**annoy_index_meta);
      *annoy_index_meta = new_annoy_index_meta;
    }
}
void ProductData::unsafe_arena_set_allocated_annoy_index_meta(
    ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta) {
  if (GetArenaNoVirtual() == NULL) {
    delete annoy_index_meta_;
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
}
void ProductData::_slow_mutable_comments_data() {
  comments_data_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_CommentsData >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::_slow_release_comments_data() {
  if (comments_data_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ProductData_CommentsData* temp = new ::pandao_imgsearcher::pb::ProductData_CommentsData(*comments_data_);
    comments_data_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::unsafe_arena_release_comments_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.comments_data)
  clear_has_comments_data();
  ::pandao_imgsearcher::pb::ProductData_CommentsData* temp = comments_data_;
  comments_data_ = NULL;
  return temp;
}
void ProductData::_slow_set_allocated_comments_data(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_CommentsData** comments_data) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*comments_data) == NULL) {
      message_arena->Own(*comments_data);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*comments_data)) {
      ::pandao_imgsearcher::pb::ProductData_CommentsData* new_comments_data = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ProductData_CommentsData >(
            message_arena);
      new_comments_data->CopyFrom(**comments_data);
      *comments_data = new_comments_data;
    }
}
void ProductData::unsafe_arena_set_allocated_comments_data(
    ::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data) {
  if (GetArenaNoVirtual() == NULL) {
    delete comments_data_;
  }
  comments_data_ = comments_data;
  if (comments_data) {
    set_has_comments_data();
  } else {
    clear_has_comments_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.comments_data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductData::kProductIdFieldNumber;
const int ProductData::kOriginalInfoFieldNumber;
const int ProductData::kAnnoyIndexMetaFieldNumber;
const int ProductData::kCommentsDataFieldNumber;
const int ProductData::kProductStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductData::ProductData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductData)
}
ProductData::ProductData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  product_stat_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductData)
}
ProductData::ProductData(const ProductData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      product_stat_(from.product_stat_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_info()) {
    original_info_ = new ::pandao_imgsearcher::pb::ProductData_OriginalInfo(*from.original_info_);
  } else {
    original_info_ = NULL;
  }
  if (from.has_annoy_index_meta()) {
    annoy_index_meta_ = new ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta(*from.annoy_index_meta_);
  } else {
    annoy_index_meta_ = NULL;
  }
  if (from.has_comments_data()) {
    comments_data_ = new ::pandao_imgsearcher::pb::ProductData_CommentsData(*from.comments_data_);
  } else {
    comments_data_ = NULL;
  }
  product_id_ = from.product_id_;
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductData)
}

void ProductData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&original_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_id_) -
      reinterpret_cast<char*>(&original_info_)) + sizeof(product_id_));
}

ProductData::~ProductData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductData)
  SharedDtor();
}

void ProductData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete original_info_;
  if (this != internal_default_instance()) delete annoy_index_meta_;
  if (this != internal_default_instance()) delete comments_data_;
}

void ProductData::ArenaDtor(void* object) {
  ProductData* _this = reinterpret_cast< ProductData* >(object);
  (void)_this;
}
void ProductData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductData& ProductData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductData* ProductData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductData>(arena);
}

void ProductData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_stat_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(original_info_ != NULL);
      original_info_->::pandao_imgsearcher::pb::ProductData_OriginalInfo::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(annoy_index_meta_ != NULL);
      annoy_index_meta_->::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(comments_data_ != NULL);
      comments_data_->::pandao_imgsearcher::pb::ProductData_CommentsData::Clear();
    }
  }
  product_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sfixed64 product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_product_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &product_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_annoy_index_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comments_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_stat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductData)
  return false;
#undef DO_
}

void ProductData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 product_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(1, this->product_id(), output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->original_info_, output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->annoy_index_meta_, output);
  }

  // optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->comments_data_, output);
  }

  // repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_stat_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->product_stat(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductData)
}

::google::protobuf::uint8* ProductData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 product_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(1, this->product_id(), target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->original_info_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->annoy_index_meta_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->comments_data_, deterministic, target);
  }

  // repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_stat_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->product_stat(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductData)
  return target;
}

size_t ProductData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sfixed64 product_id = 1;
  if (has_product_id()) {
    total_size += 1 + 8;
  }
  // repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->product_stat_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product_stat(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
    if (has_original_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->original_info_);
    }

    // optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
    if (has_annoy_index_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->annoy_index_meta_);
    }

    // optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
    if (has_comments_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->comments_data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductData)
    MergeFrom(*source);
  }
}

void ProductData::MergeFrom(const ProductData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_stat_.MergeFrom(from.product_stat_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_original_info()->::pandao_imgsearcher::pb::ProductData_OriginalInfo::MergeFrom(from.original_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_annoy_index_meta()->::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta::MergeFrom(from.annoy_index_meta());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_comments_data()->::pandao_imgsearcher::pb::ProductData_CommentsData::MergeFrom(from.comments_data());
    }
    if (cached_has_bits & 0x00000008u) {
      product_id_ = from.product_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductData::CopyFrom(const ProductData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->product_stat())) return false;
  if (has_original_info()) {
    if (!this->original_info_->IsInitialized()) return false;
  }
  return true;
}

void ProductData::Swap(ProductData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductData::UnsafeArenaSwap(ProductData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductData::InternalSwap(ProductData* other) {
  using std::swap;
  product_stat_.InternalSwap(&other->product_stat_);
  swap(original_info_, other->original_info_);
  swap(annoy_index_meta_, other->annoy_index_meta_);
  swap(comments_data_, other->comments_data_);
  swap(product_id_, other->product_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductData

// required sfixed64 product_id = 1;
bool ProductData::has_product_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProductData::set_has_product_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ProductData::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProductData::clear_product_id() {
  product_id_ = GOOGLE_LONGLONG(0);
  clear_has_product_id();
}
::google::protobuf::int64 ProductData::product_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.product_id)
  return product_id_;
}
void ProductData::set_product_id(::google::protobuf::int64 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.product_id)
}

// optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
bool ProductData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::ProductData_OriginalInfo::Clear();
  clear_has_original_info();
}
const ::pandao_imgsearcher::pb::ProductData_OriginalInfo& ProductData::original_info() const {
  const ::pandao_imgsearcher::pb::ProductData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_ProductData_OriginalInfo_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.original_info)
  return original_info_;
}
::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::ProductData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
 void ProductData::set_allocated_original_info(::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.original_info)
}

// optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
bool ProductData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta& ProductData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_ProductData_AnnoyIndexMeta_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  return annoy_index_meta_;
}
::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
 void ProductData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
}

// optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
bool ProductData::has_comments_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductData::set_has_comments_data() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductData::clear_has_comments_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductData::clear_comments_data() {
  if (comments_data_ != NULL) comments_data_->::pandao_imgsearcher::pb::ProductData_CommentsData::Clear();
  clear_has_comments_data();
}
const ::pandao_imgsearcher::pb::ProductData_CommentsData& ProductData::comments_data() const {
  const ::pandao_imgsearcher::pb::ProductData_CommentsData* p = comments_data_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.comments_data)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_CommentsData*>(
      &::pandao_imgsearcher::pb::_ProductData_CommentsData_default_instance_);
}
::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::mutable_comments_data() {
  set_has_comments_data();
  if (comments_data_ == NULL) {
    _slow_mutable_comments_data();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.comments_data)
  return comments_data_;
}
::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::release_comments_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.comments_data)
  clear_has_comments_data();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_comments_data();
  } else {
    ::pandao_imgsearcher::pb::ProductData_CommentsData* temp = comments_data_;
    comments_data_ = NULL;
    return temp;
  }
}
 void ProductData::set_allocated_comments_data(::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comments_data_;
  }
  if (comments_data != NULL) {
    _slow_set_allocated_comments_data(message_arena, &comments_data);
  }
  comments_data_ = comments_data;
  if (comments_data) {
    set_has_comments_data();
  } else {
    clear_has_comments_data();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.comments_data)
}

// repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
int ProductData::product_stat_size() const {
  return product_stat_.size();
}
void ProductData::clear_product_stat() {
  product_stat_.Clear();
}
const ::pandao_imgsearcher::pb::ProductData_ProductStat& ProductData::product_stat(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Get(index);
}
::pandao_imgsearcher::pb::ProductData_ProductStat* ProductData::mutable_product_stat(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Mutable(index);
}
::pandao_imgsearcher::pb::ProductData_ProductStat* ProductData::add_product_stat() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Add();
}
::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >*
ProductData::mutable_product_stat() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.product_stat)
  return &product_stat_;
}
const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >&
ProductData::product_stat() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmbeddList_Embedding::kUrlFieldNumber;
const int EmbeddList_Embedding::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmbeddList_Embedding::EmbeddList_Embedding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.EmbeddList.Embedding)
}
EmbeddList_Embedding::EmbeddList_Embedding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.EmbeddList.Embedding)
}
EmbeddList_Embedding::EmbeddList_Embedding(const EmbeddList_Embedding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.EmbeddList.Embedding)
}

void EmbeddList_Embedding::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmbeddList_Embedding::~EmbeddList_Embedding() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.EmbeddList.Embedding)
  SharedDtor();
}

void EmbeddList_Embedding::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  data_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void EmbeddList_Embedding::ArenaDtor(void* object) {
  EmbeddList_Embedding* _this = reinterpret_cast< EmbeddList_Embedding* >(object);
  (void)_this;
}
void EmbeddList_Embedding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EmbeddList_Embedding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbeddList_Embedding::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmbeddList_Embedding& EmbeddList_Embedding::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmbeddList_Embedding* EmbeddList_Embedding::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EmbeddList_Embedding>(arena);
}

void EmbeddList_Embedding::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmbeddList_Embedding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.EmbeddList.Embedding.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.EmbeddList.Embedding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.EmbeddList.Embedding)
  return false;
#undef DO_
}

void EmbeddList_Embedding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.EmbeddList.Embedding.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.EmbeddList.Embedding)
}

::google::protobuf::uint8* EmbeddList_Embedding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.EmbeddList.Embedding.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.EmbeddList.Embedding)
  return target;
}

size_t EmbeddList_Embedding::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_data()) {
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
size_t EmbeddList_Embedding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbeddList_Embedding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbeddList_Embedding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmbeddList_Embedding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.EmbeddList.Embedding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.EmbeddList.Embedding)
    MergeFrom(*source);
  }
}

void EmbeddList_Embedding::MergeFrom(const EmbeddList_Embedding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_url(from.url());
    }
    if (cached_has_bits & 0x00000002u) {
      set_data(from.data());
    }
  }
}

void EmbeddList_Embedding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbeddList_Embedding::CopyFrom(const EmbeddList_Embedding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.EmbeddList.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddList_Embedding::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void EmbeddList_Embedding::Swap(EmbeddList_Embedding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EmbeddList_Embedding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EmbeddList_Embedding::UnsafeArenaSwap(EmbeddList_Embedding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EmbeddList_Embedding::InternalSwap(EmbeddList_Embedding* other) {
  using std::swap;
  url_.Swap(&other->url_);
  data_.Swap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmbeddList_Embedding::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmbeddList_Embedding

// required string url = 1;
bool EmbeddList_Embedding::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EmbeddList_Embedding::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void EmbeddList_Embedding::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void EmbeddList_Embedding::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
const ::std::string& EmbeddList_Embedding::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  return url_.Get();
}
void EmbeddList_Embedding::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
#if LANG_CXX11
void EmbeddList_Embedding::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
#endif
void EmbeddList_Embedding::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
void EmbeddList_Embedding::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
::std::string* EmbeddList_Embedding::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbeddList_Embedding::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbeddList_Embedding::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EmbeddList_Embedding::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
void EmbeddList_Embedding::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}

// required bytes data = 2;
bool EmbeddList_Embedding::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EmbeddList_Embedding::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void EmbeddList_Embedding::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void EmbeddList_Embedding::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
const ::std::string& EmbeddList_Embedding::data() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  return data_.Get();
}
void EmbeddList_Embedding::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
#if LANG_CXX11
void EmbeddList_Embedding::set_data(::std::string&& value) {
  set_has_data();
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
#endif
void EmbeddList_Embedding::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
void EmbeddList_Embedding::set_data(const void* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
::std::string* EmbeddList_Embedding::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbeddList_Embedding::release_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbeddList_Embedding::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EmbeddList_Embedding::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
void EmbeddList_Embedding::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmbeddList::kEmbedListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmbeddList::EmbeddList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.EmbeddList)
}
EmbeddList::EmbeddList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  embed_list_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.EmbeddList)
}
EmbeddList::EmbeddList(const EmbeddList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      embed_list_(from.embed_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.EmbeddList)
}

void EmbeddList::SharedCtor() {
  _cached_size_ = 0;
}

EmbeddList::~EmbeddList() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.EmbeddList)
  SharedDtor();
}

void EmbeddList::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void EmbeddList::ArenaDtor(void* object) {
  EmbeddList* _this = reinterpret_cast< EmbeddList* >(object);
  (void)_this;
}
void EmbeddList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EmbeddList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbeddList::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmbeddList& EmbeddList::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmbeddList* EmbeddList::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EmbeddList>(arena);
}

void EmbeddList::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.EmbeddList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  embed_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmbeddList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.EmbeddList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_embed_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.EmbeddList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.EmbeddList)
  return false;
#undef DO_
}

void EmbeddList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.EmbeddList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->embed_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->embed_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.EmbeddList)
}

::google::protobuf::uint8* EmbeddList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.EmbeddList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->embed_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->embed_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.EmbeddList)
  return target;
}

size_t EmbeddList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.EmbeddList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->embed_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->embed_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbeddList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.EmbeddList)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbeddList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmbeddList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.EmbeddList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.EmbeddList)
    MergeFrom(*source);
  }
}

void EmbeddList::MergeFrom(const EmbeddList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.EmbeddList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  embed_list_.MergeFrom(from.embed_list_);
}

void EmbeddList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.EmbeddList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbeddList::CopyFrom(const EmbeddList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.EmbeddList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->embed_list())) return false;
  return true;
}

void EmbeddList::Swap(EmbeddList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EmbeddList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EmbeddList::UnsafeArenaSwap(EmbeddList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EmbeddList::InternalSwap(EmbeddList* other) {
  using std::swap;
  embed_list_.InternalSwap(&other->embed_list_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmbeddList::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmbeddList

// repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
int EmbeddList::embed_list_size() const {
  return embed_list_.size();
}
void EmbeddList::clear_embed_list() {
  embed_list_.Clear();
}
const ::pandao_imgsearcher::pb::EmbeddList_Embedding& EmbeddList::embed_list(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Get(index);
}
::pandao_imgsearcher::pb::EmbeddList_Embedding* EmbeddList::mutable_embed_list(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Mutable(index);
}
::pandao_imgsearcher::pb::EmbeddList_Embedding* EmbeddList::add_embed_list() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >*
EmbeddList::mutable_embed_list() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return &embed_list_;
}
const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >&
EmbeddList::embed_list() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmbedData_OriginalInfo::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmbedData_OriginalInfo::EmbedData_OriginalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
}
EmbedData_OriginalInfo::EmbedData_OriginalInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
}
EmbedData_OriginalInfo::EmbedData_OriginalInfo(const EmbedData_OriginalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
}

void EmbedData_OriginalInfo::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmbedData_OriginalInfo::~EmbedData_OriginalInfo() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  SharedDtor();
}

void EmbedData_OriginalInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void EmbedData_OriginalInfo::ArenaDtor(void* object) {
  EmbedData_OriginalInfo* _this = reinterpret_cast< EmbedData_OriginalInfo* >(object);
  (void)_this;
}
void EmbedData_OriginalInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EmbedData_OriginalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbedData_OriginalInfo::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmbedData_OriginalInfo& EmbedData_OriginalInfo::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmbedData_OriginalInfo* EmbedData_OriginalInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EmbedData_OriginalInfo>(arena);
}

void EmbedData_OriginalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_url()) {
    GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmbedData_OriginalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.EmbedData.OriginalInfo.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  return false;
#undef DO_
}

void EmbedData_OriginalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.EmbedData.OriginalInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
}

::google::protobuf::uint8* EmbedData_OriginalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.EmbedData.OriginalInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  return target;
}

size_t EmbedData_OriginalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string url = 1;
  if (has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbedData_OriginalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbedData_OriginalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmbedData_OriginalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
    MergeFrom(*source);
  }
}

void EmbedData_OriginalInfo::MergeFrom(const EmbedData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_url()) {
    set_url(from.url());
  }
}

void EmbedData_OriginalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbedData_OriginalInfo::CopyFrom(const EmbedData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbedData_OriginalInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void EmbedData_OriginalInfo::Swap(EmbedData_OriginalInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EmbedData_OriginalInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EmbedData_OriginalInfo::UnsafeArenaSwap(EmbedData_OriginalInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EmbedData_OriginalInfo::InternalSwap(EmbedData_OriginalInfo* other) {
  using std::swap;
  url_.Swap(&other->url_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmbedData_OriginalInfo::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmbedData_OriginalInfo

// required string url = 1;
bool EmbedData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EmbedData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void EmbedData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void EmbedData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
const ::std::string& EmbedData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  return url_.Get();
}
void EmbedData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
#if LANG_CXX11
void EmbedData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
#endif
void EmbedData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
void EmbedData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
::std::string* EmbedData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbedData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EmbedData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EmbedData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
void EmbedData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmbedData_AnnoyIndexMeta::kAnnoyIdxIdFieldNumber;
const int EmbedData_AnnoyIndexMeta::kAnnoyImgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmbedData_AnnoyIndexMeta::EmbedData_AnnoyIndexMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
}
EmbedData_AnnoyIndexMeta::EmbedData_AnnoyIndexMeta(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
}
EmbedData_AnnoyIndexMeta::EmbedData_AnnoyIndexMeta(const EmbedData_AnnoyIndexMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&annoy_idx_id_, &from.annoy_idx_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&annoy_img_id_) -
    reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_img_id_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
}

void EmbedData_AnnoyIndexMeta::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annoy_img_id_) -
      reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_img_id_));
}

EmbedData_AnnoyIndexMeta::~EmbedData_AnnoyIndexMeta() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  SharedDtor();
}

void EmbedData_AnnoyIndexMeta::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void EmbedData_AnnoyIndexMeta::ArenaDtor(void* object) {
  EmbedData_AnnoyIndexMeta* _this = reinterpret_cast< EmbedData_AnnoyIndexMeta* >(object);
  (void)_this;
}
void EmbedData_AnnoyIndexMeta::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EmbedData_AnnoyIndexMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbedData_AnnoyIndexMeta::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmbedData_AnnoyIndexMeta& EmbedData_AnnoyIndexMeta::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmbedData_AnnoyIndexMeta* EmbedData_AnnoyIndexMeta::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EmbedData_AnnoyIndexMeta>(arena);
}

void EmbedData_AnnoyIndexMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&annoy_img_id_) -
        reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_img_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmbedData_AnnoyIndexMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 annoy_idx_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_annoy_idx_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_idx_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 annoy_img_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_annoy_img_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_img_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  return false;
#undef DO_
}

void EmbedData_AnnoyIndexMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->annoy_idx_id(), output);
  }

  // required uint32 annoy_img_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->annoy_img_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
}

::google::protobuf::uint8* EmbedData_AnnoyIndexMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->annoy_idx_id(), target);
  }

  // required uint32 annoy_img_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->annoy_img_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  return target;
}

size_t EmbedData_AnnoyIndexMeta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  size_t total_size = 0;

  if (has_annoy_idx_id()) {
    // required uint32 annoy_idx_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_idx_id());
  }

  if (has_annoy_img_id()) {
    // required uint32 annoy_img_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_img_id());
  }

  return total_size;
}
size_t EmbedData_AnnoyIndexMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 annoy_idx_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_idx_id());

    // required uint32 annoy_img_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_img_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbedData_AnnoyIndexMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbedData_AnnoyIndexMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmbedData_AnnoyIndexMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
    MergeFrom(*source);
  }
}

void EmbedData_AnnoyIndexMeta::MergeFrom(const EmbedData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      annoy_idx_id_ = from.annoy_idx_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      annoy_img_id_ = from.annoy_img_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EmbedData_AnnoyIndexMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbedData_AnnoyIndexMeta::CopyFrom(const EmbedData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbedData_AnnoyIndexMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void EmbedData_AnnoyIndexMeta::Swap(EmbedData_AnnoyIndexMeta* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EmbedData_AnnoyIndexMeta* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EmbedData_AnnoyIndexMeta::UnsafeArenaSwap(EmbedData_AnnoyIndexMeta* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EmbedData_AnnoyIndexMeta::InternalSwap(EmbedData_AnnoyIndexMeta* other) {
  using std::swap;
  swap(annoy_idx_id_, other->annoy_idx_id_);
  swap(annoy_img_id_, other->annoy_img_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmbedData_AnnoyIndexMeta::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmbedData_AnnoyIndexMeta

// required uint32 annoy_idx_id = 1;
bool EmbedData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EmbedData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
void EmbedData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void EmbedData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
::google::protobuf::uint32 EmbedData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
void EmbedData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_idx_id)
}

// required uint32 annoy_img_id = 2;
bool EmbedData_AnnoyIndexMeta::has_annoy_img_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EmbedData_AnnoyIndexMeta::set_has_annoy_img_id() {
  _has_bits_[0] |= 0x00000002u;
}
void EmbedData_AnnoyIndexMeta::clear_has_annoy_img_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void EmbedData_AnnoyIndexMeta::clear_annoy_img_id() {
  annoy_img_id_ = 0u;
  clear_has_annoy_img_id();
}
::google::protobuf::uint32 EmbedData_AnnoyIndexMeta::annoy_img_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_img_id)
  return annoy_img_id_;
}
void EmbedData_AnnoyIndexMeta::set_annoy_img_id(::google::protobuf::uint32 value) {
  set_has_annoy_img_id();
  annoy_img_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_img_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void EmbedData::_slow_mutable_original_info() {
  original_info_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::EmbedData_OriginalInfo >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::_slow_release_original_info() {
  if (original_info_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* temp = new ::pandao_imgsearcher::pb::EmbedData_OriginalInfo(*original_info_);
    original_info_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::unsafe_arena_release_original_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbedData.original_info)
  clear_has_original_info();
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* temp = original_info_;
  original_info_ = NULL;
  return temp;
}
void EmbedData::_slow_set_allocated_original_info(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::EmbedData_OriginalInfo** original_info) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*original_info) == NULL) {
      message_arena->Own(*original_info);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*original_info)) {
      ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* new_original_info = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::EmbedData_OriginalInfo >(
            message_arena);
      new_original_info->CopyFrom(**original_info);
      *original_info = new_original_info;
    }
}
void EmbedData::unsafe_arena_set_allocated_original_info(
    ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete original_info_;
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbedData.original_info)
}
void EmbedData::_slow_mutable_annoy_index_meta() {
  annoy_index_meta_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::_slow_release_annoy_index_meta() {
  if (annoy_index_meta_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* temp = new ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta(*annoy_index_meta_);
    annoy_index_meta_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::unsafe_arena_release_annoy_index_meta() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  clear_has_annoy_index_meta();
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* temp = annoy_index_meta_;
  annoy_index_meta_ = NULL;
  return temp;
}
void EmbedData::_slow_set_allocated_annoy_index_meta(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta** annoy_index_meta) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*annoy_index_meta) == NULL) {
      message_arena->Own(*annoy_index_meta);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*annoy_index_meta)) {
      ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* new_annoy_index_meta = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta >(
            message_arena);
      new_annoy_index_meta->CopyFrom(**annoy_index_meta);
      *annoy_index_meta = new_annoy_index_meta;
    }
}
void EmbedData::unsafe_arena_set_allocated_annoy_index_meta(
    ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta) {
  if (GetArenaNoVirtual() == NULL) {
    delete annoy_index_meta_;
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmbedData::kImageIdFieldNumber;
const int EmbedData::kOriginalInfoFieldNumber;
const int EmbedData::kAnnoyIndexMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmbedData::EmbedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.EmbedData)
}
EmbedData::EmbedData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.EmbedData)
}
EmbedData::EmbedData(const EmbedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_info()) {
    original_info_ = new ::pandao_imgsearcher::pb::EmbedData_OriginalInfo(*from.original_info_);
  } else {
    original_info_ = NULL;
  }
  if (from.has_annoy_index_meta()) {
    annoy_index_meta_ = new ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta(*from.annoy_index_meta_);
  } else {
    annoy_index_meta_ = NULL;
  }
  image_id_ = from.image_id_;
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.EmbedData)
}

void EmbedData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&original_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_id_) -
      reinterpret_cast<char*>(&original_info_)) + sizeof(image_id_));
}

EmbedData::~EmbedData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.EmbedData)
  SharedDtor();
}

void EmbedData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete original_info_;
  if (this != internal_default_instance()) delete annoy_index_meta_;
}

void EmbedData::ArenaDtor(void* object) {
  EmbedData* _this = reinterpret_cast< EmbedData* >(object);
  (void)_this;
}
void EmbedData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EmbedData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbedData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmbedData& EmbedData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmbedData* EmbedData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EmbedData>(arena);
}

void EmbedData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.EmbedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(original_info_ != NULL);
      original_info_->::pandao_imgsearcher::pb::EmbedData_OriginalInfo::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(annoy_index_meta_ != NULL);
      annoy_index_meta_->::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta::Clear();
    }
  }
  image_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EmbedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.EmbedData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sfixed64 image_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_image_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &image_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_annoy_index_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.EmbedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.EmbedData)
  return false;
#undef DO_
}

void EmbedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.EmbedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 image_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(1, this->image_id(), output);
  }

  // optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->original_info_, output);
  }

  // optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->annoy_index_meta_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.EmbedData)
}

::google::protobuf::uint8* EmbedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.EmbedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 image_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(1, this->image_id(), target);
  }

  // optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->original_info_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->annoy_index_meta_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.EmbedData)
  return target;
}

size_t EmbedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.EmbedData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sfixed64 image_id = 1;
  if (has_image_id()) {
    total_size += 1 + 8;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
    if (has_original_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->original_info_);
    }

    // optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
    if (has_annoy_index_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->annoy_index_meta_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.EmbedData)
  GOOGLE_DCHECK_NE(&from, this);
  const EmbedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmbedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.EmbedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.EmbedData)
    MergeFrom(*source);
  }
}

void EmbedData::MergeFrom(const EmbedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.EmbedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_original_info()->::pandao_imgsearcher::pb::EmbedData_OriginalInfo::MergeFrom(from.original_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_annoy_index_meta()->::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta::MergeFrom(from.annoy_index_meta());
    }
    if (cached_has_bits & 0x00000004u) {
      image_id_ = from.image_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EmbedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.EmbedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbedData::CopyFrom(const EmbedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.EmbedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbedData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_original_info()) {
    if (!this->original_info_->IsInitialized()) return false;
  }
  if (has_annoy_index_meta()) {
    if (!this->annoy_index_meta_->IsInitialized()) return false;
  }
  return true;
}

void EmbedData::Swap(EmbedData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EmbedData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EmbedData::UnsafeArenaSwap(EmbedData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EmbedData::InternalSwap(EmbedData* other) {
  using std::swap;
  swap(original_info_, other->original_info_);
  swap(annoy_index_meta_, other->annoy_index_meta_);
  swap(image_id_, other->image_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmbedData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmbedData

// required sfixed64 image_id = 1;
bool EmbedData::has_image_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EmbedData::set_has_image_id() {
  _has_bits_[0] |= 0x00000004u;
}
void EmbedData::clear_has_image_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void EmbedData::clear_image_id() {
  image_id_ = GOOGLE_LONGLONG(0);
  clear_has_image_id();
}
::google::protobuf::int64 EmbedData::image_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.image_id)
  return image_id_;
}
void EmbedData::set_image_id(::google::protobuf::int64 value) {
  set_has_image_id();
  image_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.image_id)
}

// optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
bool EmbedData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EmbedData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
void EmbedData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void EmbedData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::EmbedData_OriginalInfo::Clear();
  clear_has_original_info();
}
const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo& EmbedData::original_info() const {
  const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_EmbedData_OriginalInfo_default_instance_);
}
::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.original_info)
  return original_info_;
}
::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
 void EmbedData::set_allocated_original_info(::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.original_info)
}

// optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
bool EmbedData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EmbedData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
void EmbedData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
void EmbedData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta& EmbedData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_EmbedData_AnnoyIndexMeta_default_instance_);
}
::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  return annoy_index_meta_;
}
::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
 void EmbedData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageData_OriginalInfo::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageData_OriginalInfo::ImageData_OriginalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ImageData.OriginalInfo)
}
ImageData_OriginalInfo::ImageData_OriginalInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ImageData.OriginalInfo)
}
ImageData_OriginalInfo::ImageData_OriginalInfo(const ImageData_OriginalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ImageData.OriginalInfo)
}

void ImageData_OriginalInfo::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImageData_OriginalInfo::~ImageData_OriginalInfo() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  SharedDtor();
}

void ImageData_OriginalInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ImageData_OriginalInfo::ArenaDtor(void* object) {
  ImageData_OriginalInfo* _this = reinterpret_cast< ImageData_OriginalInfo* >(object);
  (void)_this;
}
void ImageData_OriginalInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageData_OriginalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageData_OriginalInfo::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageData_OriginalInfo& ImageData_OriginalInfo::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageData_OriginalInfo* ImageData_OriginalInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageData_OriginalInfo>(arena);
}

void ImageData_OriginalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_url()) {
    GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageData_OriginalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ImageData.OriginalInfo.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  return false;
#undef DO_
}

void ImageData_OriginalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ImageData.OriginalInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ImageData.OriginalInfo)
}

::google::protobuf::uint8* ImageData_OriginalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ImageData.OriginalInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  return target;
}

size_t ImageData_OriginalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string url = 1;
  if (has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageData_OriginalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageData_OriginalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageData_OriginalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ImageData.OriginalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ImageData.OriginalInfo)
    MergeFrom(*source);
  }
}

void ImageData_OriginalInfo::MergeFrom(const ImageData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_url()) {
    set_url(from.url());
  }
}

void ImageData_OriginalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageData_OriginalInfo::CopyFrom(const ImageData_OriginalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ImageData.OriginalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageData_OriginalInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ImageData_OriginalInfo::Swap(ImageData_OriginalInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageData_OriginalInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageData_OriginalInfo::UnsafeArenaSwap(ImageData_OriginalInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageData_OriginalInfo::InternalSwap(ImageData_OriginalInfo* other) {
  using std::swap;
  url_.Swap(&other->url_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageData_OriginalInfo::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageData_OriginalInfo

// required string url = 1;
bool ImageData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImageData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void ImageData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImageData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
const ::std::string& ImageData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  return url_.Get();
}
void ImageData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
#if LANG_CXX11
void ImageData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
#endif
void ImageData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
void ImageData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
::std::string* ImageData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ImageData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ImageData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ImageData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
void ImageData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageData_AnnoyIndexMeta::kAnnoyIdxIdFieldNumber;
const int ImageData_AnnoyIndexMeta::kAnnoyImgIdFieldNumber;
const int ImageData_AnnoyIndexMeta::kAnnoyProdIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageData_AnnoyIndexMeta::ImageData_AnnoyIndexMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
}
ImageData_AnnoyIndexMeta::ImageData_AnnoyIndexMeta(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
}
ImageData_AnnoyIndexMeta::ImageData_AnnoyIndexMeta(const ImageData_AnnoyIndexMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&annoy_idx_id_, &from.annoy_idx_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&annoy_prod_id_) -
    reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
}

void ImageData_AnnoyIndexMeta::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annoy_prod_id_) -
      reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
}

ImageData_AnnoyIndexMeta::~ImageData_AnnoyIndexMeta() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  SharedDtor();
}

void ImageData_AnnoyIndexMeta::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void ImageData_AnnoyIndexMeta::ArenaDtor(void* object) {
  ImageData_AnnoyIndexMeta* _this = reinterpret_cast< ImageData_AnnoyIndexMeta* >(object);
  (void)_this;
}
void ImageData_AnnoyIndexMeta::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageData_AnnoyIndexMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageData_AnnoyIndexMeta::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageData_AnnoyIndexMeta& ImageData_AnnoyIndexMeta::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageData_AnnoyIndexMeta* ImageData_AnnoyIndexMeta::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageData_AnnoyIndexMeta>(arena);
}

void ImageData_AnnoyIndexMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&annoy_idx_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&annoy_prod_id_) -
        reinterpret_cast<char*>(&annoy_idx_id_)) + sizeof(annoy_prod_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageData_AnnoyIndexMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 annoy_idx_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_annoy_idx_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_idx_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 annoy_img_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_annoy_img_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_img_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 annoy_prod_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_annoy_prod_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annoy_prod_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  return false;
#undef DO_
}

void ImageData_AnnoyIndexMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->annoy_idx_id(), output);
  }

  // required uint32 annoy_img_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->annoy_img_id(), output);
  }

  // required uint32 annoy_prod_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->annoy_prod_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
}

::google::protobuf::uint8* ImageData_AnnoyIndexMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 annoy_idx_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->annoy_idx_id(), target);
  }

  // required uint32 annoy_img_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->annoy_img_id(), target);
  }

  // required uint32 annoy_prod_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->annoy_prod_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  return target;
}

size_t ImageData_AnnoyIndexMeta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  size_t total_size = 0;

  if (has_annoy_idx_id()) {
    // required uint32 annoy_idx_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_idx_id());
  }

  if (has_annoy_img_id()) {
    // required uint32 annoy_img_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_img_id());
  }

  if (has_annoy_prod_id()) {
    // required uint32 annoy_prod_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_prod_id());
  }

  return total_size;
}
size_t ImageData_AnnoyIndexMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 annoy_idx_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_idx_id());

    // required uint32 annoy_img_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_img_id());

    // required uint32 annoy_prod_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annoy_prod_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageData_AnnoyIndexMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageData_AnnoyIndexMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageData_AnnoyIndexMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
    MergeFrom(*source);
  }
}

void ImageData_AnnoyIndexMeta::MergeFrom(const ImageData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      annoy_idx_id_ = from.annoy_idx_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      annoy_img_id_ = from.annoy_img_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      annoy_prod_id_ = from.annoy_prod_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImageData_AnnoyIndexMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageData_AnnoyIndexMeta::CopyFrom(const ImageData_AnnoyIndexMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageData_AnnoyIndexMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ImageData_AnnoyIndexMeta::Swap(ImageData_AnnoyIndexMeta* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageData_AnnoyIndexMeta* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageData_AnnoyIndexMeta::UnsafeArenaSwap(ImageData_AnnoyIndexMeta* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageData_AnnoyIndexMeta::InternalSwap(ImageData_AnnoyIndexMeta* other) {
  using std::swap;
  swap(annoy_idx_id_, other->annoy_idx_id_);
  swap(annoy_img_id_, other->annoy_img_id_);
  swap(annoy_prod_id_, other->annoy_prod_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageData_AnnoyIndexMeta::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageData_AnnoyIndexMeta

// required uint32 annoy_idx_id = 1;
bool ImageData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImageData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ImageData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImageData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
void ImageData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_idx_id)
}

// required uint32 annoy_img_id = 2;
bool ImageData_AnnoyIndexMeta::has_annoy_img_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ImageData_AnnoyIndexMeta::set_has_annoy_img_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ImageData_AnnoyIndexMeta::clear_has_annoy_img_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ImageData_AnnoyIndexMeta::clear_annoy_img_id() {
  annoy_img_id_ = 0u;
  clear_has_annoy_img_id();
}
::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_img_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_img_id)
  return annoy_img_id_;
}
void ImageData_AnnoyIndexMeta::set_annoy_img_id(::google::protobuf::uint32 value) {
  set_has_annoy_img_id();
  annoy_img_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_img_id)
}

// required uint32 annoy_prod_id = 3;
bool ImageData_AnnoyIndexMeta::has_annoy_prod_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ImageData_AnnoyIndexMeta::set_has_annoy_prod_id() {
  _has_bits_[0] |= 0x00000004u;
}
void ImageData_AnnoyIndexMeta::clear_has_annoy_prod_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void ImageData_AnnoyIndexMeta::clear_annoy_prod_id() {
  annoy_prod_id_ = 0u;
  clear_has_annoy_prod_id();
}
::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_prod_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_prod_id)
  return annoy_prod_id_;
}
void ImageData_AnnoyIndexMeta::set_annoy_prod_id(::google::protobuf::uint32 value) {
  set_has_annoy_prod_id();
  annoy_prod_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_prod_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ImageData::_slow_mutable_original_info() {
  original_info_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ImageData_OriginalInfo >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::_slow_release_original_info() {
  if (original_info_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ImageData_OriginalInfo* temp = new ::pandao_imgsearcher::pb::ImageData_OriginalInfo(*original_info_);
    original_info_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::unsafe_arena_release_original_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ImageData.original_info)
  clear_has_original_info();
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* temp = original_info_;
  original_info_ = NULL;
  return temp;
}
void ImageData::_slow_set_allocated_original_info(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ImageData_OriginalInfo** original_info) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*original_info) == NULL) {
      message_arena->Own(*original_info);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*original_info)) {
      ::pandao_imgsearcher::pb::ImageData_OriginalInfo* new_original_info = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ImageData_OriginalInfo >(
            message_arena);
      new_original_info->CopyFrom(**original_info);
      *original_info = new_original_info;
    }
}
void ImageData::unsafe_arena_set_allocated_original_info(
    ::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete original_info_;
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ImageData.original_info)
}
void ImageData::_slow_mutable_annoy_index_meta() {
  annoy_index_meta_ = ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta >(
      GetArenaNoVirtual());
}
::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::_slow_release_annoy_index_meta() {
  if (annoy_index_meta_ == NULL) {
    return NULL;
  } else {
    ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* temp = new ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta(*annoy_index_meta_);
    annoy_index_meta_ = NULL;
    return temp;
  }
}
::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::unsafe_arena_release_annoy_index_meta() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  clear_has_annoy_index_meta();
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* temp = annoy_index_meta_;
  annoy_index_meta_ = NULL;
  return temp;
}
void ImageData::_slow_set_allocated_annoy_index_meta(
    ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta** annoy_index_meta) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*annoy_index_meta) == NULL) {
      message_arena->Own(*annoy_index_meta);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*annoy_index_meta)) {
      ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* new_annoy_index_meta = 
            ::google::protobuf::Arena::CreateMessage< ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta >(
            message_arena);
      new_annoy_index_meta->CopyFrom(**annoy_index_meta);
      *annoy_index_meta = new_annoy_index_meta;
    }
}
void ImageData::unsafe_arena_set_allocated_annoy_index_meta(
    ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta) {
  if (GetArenaNoVirtual() == NULL) {
    delete annoy_index_meta_;
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageData::kProductIdFieldNumber;
const int ImageData::kImageIdFieldNumber;
const int ImageData::kOriginalInfoFieldNumber;
const int ImageData::kAnnoyIndexMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageData::ImageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ImageData)
}
ImageData::ImageData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ImageData)
}
ImageData::ImageData(const ImageData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_info()) {
    original_info_ = new ::pandao_imgsearcher::pb::ImageData_OriginalInfo(*from.original_info_);
  } else {
    original_info_ = NULL;
  }
  if (from.has_annoy_index_meta()) {
    annoy_index_meta_ = new ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta(*from.annoy_index_meta_);
  } else {
    annoy_index_meta_ = NULL;
  }
  ::memcpy(&product_id_, &from.product_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_id_) -
    reinterpret_cast<char*>(&product_id_)) + sizeof(image_id_));
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ImageData)
}

void ImageData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&original_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_id_) -
      reinterpret_cast<char*>(&original_info_)) + sizeof(image_id_));
}

ImageData::~ImageData() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ImageData)
  SharedDtor();
}

void ImageData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) delete original_info_;
  if (this != internal_default_instance()) delete annoy_index_meta_;
}

void ImageData::ArenaDtor(void* object) {
  ImageData* _this = reinterpret_cast< ImageData* >(object);
  (void)_this;
}
void ImageData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageData::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageData& ImageData::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageData* ImageData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageData>(arena);
}

void ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(original_info_ != NULL);
      original_info_->::pandao_imgsearcher::pb::ImageData_OriginalInfo::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(annoy_index_meta_ != NULL);
      annoy_index_meta_->::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta::Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&product_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&image_id_) -
        reinterpret_cast<char*>(&product_id_)) + sizeof(image_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ImageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sfixed64 product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_product_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &product_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 image_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_image_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &image_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_annoy_index_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ImageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ImageData)
  return false;
#undef DO_
}

void ImageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 product_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(1, this->product_id(), output);
  }

  // required sfixed64 image_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->image_id(), output);
  }

  // optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->original_info_, output);
  }

  // optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->annoy_index_meta_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ImageData)
}

::google::protobuf::uint8* ImageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sfixed64 product_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(1, this->product_id(), target);
  }

  // required sfixed64 image_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->image_id(), target);
  }

  // optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->original_info_, deterministic, target);
  }

  // optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->annoy_index_meta_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ImageData)
  return target;
}

size_t ImageData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ImageData)
  size_t total_size = 0;

  if (has_product_id()) {
    // required sfixed64 product_id = 1;
    total_size += 1 + 8;
  }

  if (has_image_id()) {
    // required sfixed64 image_id = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t ImageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ImageData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required sfixed64 product_id = 1;
    total_size += 1 + 8;

    // required sfixed64 image_id = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
    if (has_original_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->original_info_);
    }

    // optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
    if (has_annoy_index_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->annoy_index_meta_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ImageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ImageData)
    MergeFrom(*source);
  }
}

void ImageData::MergeFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_original_info()->::pandao_imgsearcher::pb::ImageData_OriginalInfo::MergeFrom(from.original_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_annoy_index_meta()->::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta::MergeFrom(from.annoy_index_meta());
    }
    if (cached_has_bits & 0x00000004u) {
      product_id_ = from.product_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      image_id_ = from.image_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageData::CopyFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_original_info()) {
    if (!this->original_info_->IsInitialized()) return false;
  }
  if (has_annoy_index_meta()) {
    if (!this->annoy_index_meta_->IsInitialized()) return false;
  }
  return true;
}

void ImageData::Swap(ImageData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageData::UnsafeArenaSwap(ImageData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageData::InternalSwap(ImageData* other) {
  using std::swap;
  swap(original_info_, other->original_info_);
  swap(annoy_index_meta_, other->annoy_index_meta_);
  swap(product_id_, other->product_id_);
  swap(image_id_, other->image_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageData::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageData

// required sfixed64 product_id = 1;
bool ImageData::has_product_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ImageData::set_has_product_id() {
  _has_bits_[0] |= 0x00000004u;
}
void ImageData::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void ImageData::clear_product_id() {
  product_id_ = GOOGLE_LONGLONG(0);
  clear_has_product_id();
}
::google::protobuf::int64 ImageData::product_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.product_id)
  return product_id_;
}
void ImageData::set_product_id(::google::protobuf::int64 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.product_id)
}

// required sfixed64 image_id = 2;
bool ImageData::has_image_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ImageData::set_has_image_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ImageData::clear_has_image_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ImageData::clear_image_id() {
  image_id_ = GOOGLE_LONGLONG(0);
  clear_has_image_id();
}
::google::protobuf::int64 ImageData::image_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.image_id)
  return image_id_;
}
void ImageData::set_image_id(::google::protobuf::int64 value) {
  set_has_image_id();
  image_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.image_id)
}

// optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
bool ImageData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImageData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
void ImageData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImageData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::ImageData_OriginalInfo::Clear();
  clear_has_original_info();
}
const ::pandao_imgsearcher::pb::ImageData_OriginalInfo& ImageData::original_info() const {
  const ::pandao_imgsearcher::pb::ImageData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ImageData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_ImageData_OriginalInfo_default_instance_);
}
::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.original_info)
  return original_info_;
}
::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::ImageData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
 void ImageData::set_allocated_original_info(::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.original_info)
}

// optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
bool ImageData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ImageData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
void ImageData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
void ImageData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta& ImageData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_ImageData_AnnoyIndexMeta_default_instance_);
}
::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  return annoy_index_meta_;
}
::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
 void ImageData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductImages_ProductImage::kUrlFieldNumber;
const int ProductImages_ProductImage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductImages_ProductImage::ProductImages_ProductImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductImages.ProductImage)
}
ProductImages_ProductImage::ProductImages_ProductImage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductImages.ProductImage)
}
ProductImages_ProductImage::ProductImages_ProductImage(const ProductImages_ProductImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductImages.ProductImage)
}

void ProductImages_ProductImage::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProductImages_ProductImage::~ProductImages_ProductImage() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductImages.ProductImage)
  SharedDtor();
}

void ProductImages_ProductImage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  data_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ProductImages_ProductImage::ArenaDtor(void* object) {
  ProductImages_ProductImage* _this = reinterpret_cast< ProductImages_ProductImage* >(object);
  (void)_this;
}
void ProductImages_ProductImage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductImages_ProductImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductImages_ProductImage::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductImages_ProductImage& ProductImages_ProductImage::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductImages_ProductImage* ProductImages_ProductImage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductImages_ProductImage>(arena);
}

void ProductImages_ProductImage::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductImages_ProductImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductImages.ProductImage.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductImages.ProductImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductImages.ProductImage)
  return false;
#undef DO_
}

void ProductImages_ProductImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.ProductImage.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductImages.ProductImage)
}

::google::protobuf::uint8* ProductImages_ProductImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.ProductImage.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // required bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductImages.ProductImage)
  return target;
}

size_t ProductImages_ProductImage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_data()) {
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
size_t ProductImages_ProductImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductImages_ProductImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductImages_ProductImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductImages_ProductImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductImages.ProductImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductImages.ProductImage)
    MergeFrom(*source);
  }
}

void ProductImages_ProductImage::MergeFrom(const ProductImages_ProductImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_url(from.url());
    }
    if (cached_has_bits & 0x00000002u) {
      set_data(from.data());
    }
  }
}

void ProductImages_ProductImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductImages_ProductImage::CopyFrom(const ProductImages_ProductImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductImages.ProductImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductImages_ProductImage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProductImages_ProductImage::Swap(ProductImages_ProductImage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductImages_ProductImage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductImages_ProductImage::UnsafeArenaSwap(ProductImages_ProductImage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductImages_ProductImage::InternalSwap(ProductImages_ProductImage* other) {
  using std::swap;
  url_.Swap(&other->url_);
  data_.Swap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductImages_ProductImage::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductImages_ProductImage

// required string url = 1;
bool ProductImages_ProductImage::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductImages_ProductImage::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductImages_ProductImage::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductImages_ProductImage::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
const ::std::string& ProductImages_ProductImage::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  return url_.Get();
}
void ProductImages_ProductImage::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
#if LANG_CXX11
void ProductImages_ProductImage::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
#endif
void ProductImages_ProductImage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
void ProductImages_ProductImage::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
::std::string* ProductImages_ProductImage::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages_ProductImage::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages_ProductImage::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductImages_ProductImage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
void ProductImages_ProductImage::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}

// required bytes data = 2;
bool ProductImages_ProductImage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductImages_ProductImage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductImages_ProductImage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductImages_ProductImage::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
const ::std::string& ProductImages_ProductImage::data() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  return data_.Get();
}
void ProductImages_ProductImage::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
#if LANG_CXX11
void ProductImages_ProductImage::set_data(::std::string&& value) {
  set_has_data();
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
#endif
void ProductImages_ProductImage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
void ProductImages_ProductImage::set_data(const void* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
::std::string* ProductImages_ProductImage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages_ProductImage::release_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages_ProductImage::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductImages_ProductImage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
void ProductImages_ProductImage::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductImages::kProductUrlFieldNumber;
const int ProductImages::kHostFieldNumber;
const int ProductImages::kProductImagesFieldNumber;
const int ProductImages::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductImages::ProductImages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pandao_imgsearcher.pb.ProductImages)
}
ProductImages::ProductImages(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  product_images_(arena) {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pandao_imgsearcher.pb.ProductImages)
}
ProductImages::ProductImages(const ProductImages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      product_images_(from.product_images_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_url()) {
    product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_url(),
      GetArenaNoVirtual());
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host(),
      GetArenaNoVirtual());
  }
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:pandao_imgsearcher.pb.ProductImages)
}

void ProductImages::SharedCtor() {
  _cached_size_ = 0;
  product_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_ = GOOGLE_LONGLONG(0);
}

ProductImages::~ProductImages() {
  // @@protoc_insertion_point(destructor:pandao_imgsearcher.pb.ProductImages)
  SharedDtor();
}

void ProductImages::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  product_url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  host_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ProductImages::ArenaDtor(void* object) {
  ProductImages* _this = reinterpret_cast< ProductImages* >(object);
  (void)_this;
}
void ProductImages::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProductImages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductImages::descriptor() {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductImages& ProductImages::default_instance() {
  protobuf_pandao_5fimgsearcher_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductImages* ProductImages::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ProductImages>(arena);
}

void ProductImages::Clear() {
// @@protoc_insertion_point(message_clear_start:pandao_imgsearcher.pb.ProductImages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_images_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!product_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      product_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    }
  }
  hash_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProductImages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pandao_imgsearcher.pb.ProductImages)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string product_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_url().data(), static_cast<int>(this->product_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductImages.product_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pandao_imgsearcher.pb.ProductImages.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pandao_imgsearcher.pb.ProductImages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pandao_imgsearcher.pb.ProductImages)
  return false;
#undef DO_
}

void ProductImages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pandao_imgsearcher.pb.ProductImages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string product_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_url().data(), static_cast<int>(this->product_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.product_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_url(), output);
  }

  // optional string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product_images(static_cast<int>(i)), output);
  }

  // optional sfixed64 hash = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pandao_imgsearcher.pb.ProductImages)
}

::google::protobuf::uint8* ProductImages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pandao_imgsearcher.pb.ProductImages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string product_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_url().data(), static_cast<int>(this->product_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.product_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_url(), target);
  }

  // optional string host = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pandao_imgsearcher.pb.ProductImages.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->product_images(static_cast<int>(i)), deterministic, target);
  }

  // optional sfixed64 hash = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pandao_imgsearcher.pb.ProductImages)
  return target;
}

size_t ProductImages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pandao_imgsearcher.pb.ProductImages)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string product_url = 1;
  if (has_product_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_url());
  }
  // repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->product_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product_images(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string host = 2;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional sfixed64 hash = 4;
    if (has_hash()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductImages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pandao_imgsearcher.pb.ProductImages)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductImages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductImages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pandao_imgsearcher.pb.ProductImages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pandao_imgsearcher.pb.ProductImages)
    MergeFrom(*source);
  }
}

void ProductImages::MergeFrom(const ProductImages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pandao_imgsearcher.pb.ProductImages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_images_.MergeFrom(from.product_images_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_product_url(from.product_url());
    }
    if (cached_has_bits & 0x00000002u) {
      set_host(from.host());
    }
    if (cached_has_bits & 0x00000004u) {
      hash_ = from.hash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProductImages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pandao_imgsearcher.pb.ProductImages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductImages::CopyFrom(const ProductImages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pandao_imgsearcher.pb.ProductImages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductImages::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->product_images())) return false;
  return true;
}

void ProductImages::Swap(ProductImages* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProductImages* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProductImages::UnsafeArenaSwap(ProductImages* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProductImages::InternalSwap(ProductImages* other) {
  using std::swap;
  product_images_.InternalSwap(&other->product_images_);
  product_url_.Swap(&other->product_url_);
  host_.Swap(&other->host_);
  swap(hash_, other->hash_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductImages::GetMetadata() const {
  protobuf_pandao_5fimgsearcher_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pandao_5fimgsearcher_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductImages

// required string product_url = 1;
bool ProductImages::has_product_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProductImages::set_has_product_url() {
  _has_bits_[0] |= 0x00000001u;
}
void ProductImages::clear_has_product_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProductImages::clear_product_url() {
  product_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_product_url();
}
const ::std::string& ProductImages::product_url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.product_url)
  return product_url_.Get();
}
void ProductImages::set_product_url(const ::std::string& value) {
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.product_url)
}
#if LANG_CXX11
void ProductImages::set_product_url(::std::string&& value) {
  set_has_product_url();
  product_url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.product_url)
}
#endif
void ProductImages::set_product_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.product_url)
}
void ProductImages::set_product_url(const char* value,
    size_t size) {
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.product_url)
}
::std::string* ProductImages::mutable_product_url() {
  set_has_product_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.product_url)
  return product_url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages::release_product_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.product_url)
  clear_has_product_url();
  return product_url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages::unsafe_arena_release_product_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.product_url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_product_url();
  return product_url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductImages::set_allocated_product_url(::std::string* product_url) {
  if (product_url != NULL) {
    set_has_product_url();
  } else {
    clear_has_product_url();
  }
  product_url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.product_url)
}
void ProductImages::unsafe_arena_set_allocated_product_url(
    ::std::string* product_url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_url != NULL) {
    set_has_product_url();
  } else {
    clear_has_product_url();
  }
  product_url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.product_url)
}

// optional string host = 2;
bool ProductImages::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProductImages::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
void ProductImages::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProductImages::clear_host() {
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_host();
}
const ::std::string& ProductImages::host() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.host)
  return host_.Get();
}
void ProductImages::set_host(const ::std::string& value) {
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.host)
}
#if LANG_CXX11
void ProductImages::set_host(::std::string&& value) {
  set_has_host();
  host_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.host)
}
#endif
void ProductImages::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.host)
}
void ProductImages::set_host(const char* value,
    size_t size) {
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.host)
}
::std::string* ProductImages::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.host)
  return host_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages::release_host() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.host)
  clear_has_host();
  return host_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ProductImages::unsafe_arena_release_host() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.host)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_host();
  return host_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ProductImages::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.host)
}
void ProductImages::unsafe_arena_set_allocated_host(
    ::std::string* host) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      host, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.host)
}

// repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
int ProductImages::product_images_size() const {
  return product_images_.size();
}
void ProductImages::clear_product_images() {
  product_images_.Clear();
}
const ::pandao_imgsearcher::pb::ProductImages_ProductImage& ProductImages::product_images(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Get(index);
}
::pandao_imgsearcher::pb::ProductImages_ProductImage* ProductImages::mutable_product_images(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Mutable(index);
}
::pandao_imgsearcher::pb::ProductImages_ProductImage* ProductImages::add_product_images() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Add();
}
::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >*
ProductImages::mutable_product_images() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductImages.product_images)
  return &product_images_;
}
const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >&
ProductImages::product_images() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_;
}

// optional sfixed64 hash = 4;
bool ProductImages::has_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProductImages::set_has_hash() {
  _has_bits_[0] |= 0x00000004u;
}
void ProductImages::clear_has_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProductImages::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
  clear_has_hash();
}
::google::protobuf::int64 ProductImages::hash() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.hash)
  return hash_;
}
void ProductImages::set_hash(::google::protobuf::int64 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace pandao_imgsearcher

// @@protoc_insertion_point(global_scope)
