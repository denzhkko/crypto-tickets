// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pandao_imgsearcher.proto

#ifndef PROTOBUF_pandao_5fimgsearcher_2eproto__INCLUDED
#define PROTOBUF_pandao_5fimgsearcher_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pandao_imgsearcher {
namespace pb {
class EmbedData;
class EmbedDataDefaultTypeInternal;
extern EmbedDataDefaultTypeInternal _EmbedData_default_instance_;
class EmbedData_AnnoyIndexMeta;
class EmbedData_AnnoyIndexMetaDefaultTypeInternal;
extern EmbedData_AnnoyIndexMetaDefaultTypeInternal _EmbedData_AnnoyIndexMeta_default_instance_;
class EmbedData_OriginalInfo;
class EmbedData_OriginalInfoDefaultTypeInternal;
extern EmbedData_OriginalInfoDefaultTypeInternal _EmbedData_OriginalInfo_default_instance_;
class EmbeddList;
class EmbeddListDefaultTypeInternal;
extern EmbeddListDefaultTypeInternal _EmbeddList_default_instance_;
class EmbeddList_Embedding;
class EmbeddList_EmbeddingDefaultTypeInternal;
extern EmbeddList_EmbeddingDefaultTypeInternal _EmbeddList_Embedding_default_instance_;
class ImageData;
class ImageDataDefaultTypeInternal;
extern ImageDataDefaultTypeInternal _ImageData_default_instance_;
class ImageData_AnnoyIndexMeta;
class ImageData_AnnoyIndexMetaDefaultTypeInternal;
extern ImageData_AnnoyIndexMetaDefaultTypeInternal _ImageData_AnnoyIndexMeta_default_instance_;
class ImageData_OriginalInfo;
class ImageData_OriginalInfoDefaultTypeInternal;
extern ImageData_OriginalInfoDefaultTypeInternal _ImageData_OriginalInfo_default_instance_;
class ProductData;
class ProductDataDefaultTypeInternal;
extern ProductDataDefaultTypeInternal _ProductData_default_instance_;
class ProductData_AnnoyIndexMeta;
class ProductData_AnnoyIndexMetaDefaultTypeInternal;
extern ProductData_AnnoyIndexMetaDefaultTypeInternal _ProductData_AnnoyIndexMeta_default_instance_;
class ProductData_CommentsData;
class ProductData_CommentsDataDefaultTypeInternal;
extern ProductData_CommentsDataDefaultTypeInternal _ProductData_CommentsData_default_instance_;
class ProductData_CommentsData_Comment;
class ProductData_CommentsData_CommentDefaultTypeInternal;
extern ProductData_CommentsData_CommentDefaultTypeInternal _ProductData_CommentsData_Comment_default_instance_;
class ProductData_DurationData;
class ProductData_DurationDataDefaultTypeInternal;
extern ProductData_DurationDataDefaultTypeInternal _ProductData_DurationData_default_instance_;
class ProductData_OriginalInfo;
class ProductData_OriginalInfoDefaultTypeInternal;
extern ProductData_OriginalInfoDefaultTypeInternal _ProductData_OriginalInfo_default_instance_;
class ProductData_PriceData;
class ProductData_PriceDataDefaultTypeInternal;
extern ProductData_PriceDataDefaultTypeInternal _ProductData_PriceData_default_instance_;
class ProductData_ProductStat;
class ProductData_ProductStatDefaultTypeInternal;
extern ProductData_ProductStatDefaultTypeInternal _ProductData_ProductStat_default_instance_;
class ProductData_ShippingData;
class ProductData_ShippingDataDefaultTypeInternal;
extern ProductData_ShippingDataDefaultTypeInternal _ProductData_ShippingData_default_instance_;
class ProductImages;
class ProductImagesDefaultTypeInternal;
extern ProductImagesDefaultTypeInternal _ProductImages_default_instance_;
class ProductImages_ProductImage;
class ProductImages_ProductImageDefaultTypeInternal;
extern ProductImages_ProductImageDefaultTypeInternal _ProductImages_ProductImage_default_instance_;
}  // namespace pb
}  // namespace pandao_imgsearcher

namespace pandao_imgsearcher {
namespace pb {

namespace protobuf_pandao_5fimgsearcher_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pandao_5fimgsearcher_2eproto

enum ProductData_Currency {
  ProductData_Currency_RUB = 0,
  ProductData_Currency_USD = 1,
  ProductData_Currency_EUR = 2
};
bool ProductData_Currency_IsValid(int value);
const ProductData_Currency ProductData_Currency_Currency_MIN = ProductData_Currency_RUB;
const ProductData_Currency ProductData_Currency_Currency_MAX = ProductData_Currency_EUR;
const int ProductData_Currency_Currency_ARRAYSIZE = ProductData_Currency_Currency_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProductData_Currency_descriptor();
inline const ::std::string& ProductData_Currency_Name(ProductData_Currency value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProductData_Currency_descriptor(), value);
}
inline bool ProductData_Currency_Parse(
    const ::std::string& name, ProductData_Currency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProductData_Currency>(
    ProductData_Currency_descriptor(), name, value);
}
enum ProductData_TimeUnit {
  ProductData_TimeUnit_HOUR = 0,
  ProductData_TimeUnit_DAY = 1,
  ProductData_TimeUnit_MONTH = 2
};
bool ProductData_TimeUnit_IsValid(int value);
const ProductData_TimeUnit ProductData_TimeUnit_TimeUnit_MIN = ProductData_TimeUnit_HOUR;
const ProductData_TimeUnit ProductData_TimeUnit_TimeUnit_MAX = ProductData_TimeUnit_MONTH;
const int ProductData_TimeUnit_TimeUnit_ARRAYSIZE = ProductData_TimeUnit_TimeUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProductData_TimeUnit_descriptor();
inline const ::std::string& ProductData_TimeUnit_Name(ProductData_TimeUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProductData_TimeUnit_descriptor(), value);
}
inline bool ProductData_TimeUnit_Parse(
    const ::std::string& name, ProductData_TimeUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProductData_TimeUnit>(
    ProductData_TimeUnit_descriptor(), name, value);
}
// ===================================================================

class ProductData_OriginalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.OriginalInfo) */ {
 public:
  ProductData_OriginalInfo();
  virtual ~ProductData_OriginalInfo();

  ProductData_OriginalInfo(const ProductData_OriginalInfo& from);

  inline ProductData_OriginalInfo& operator=(const ProductData_OriginalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_OriginalInfo(ProductData_OriginalInfo&& from) noexcept
    : ProductData_OriginalInfo() {
    *this = ::std::move(from);
  }

  inline ProductData_OriginalInfo& operator=(ProductData_OriginalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_OriginalInfo& default_instance();

  static inline const ProductData_OriginalInfo* internal_default_instance() {
    return reinterpret_cast<const ProductData_OriginalInfo*>(
               &_ProductData_OriginalInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ProductData_OriginalInfo* other);
  void Swap(ProductData_OriginalInfo* other);
  friend void swap(ProductData_OriginalInfo& a, ProductData_OriginalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_OriginalInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_OriginalInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_OriginalInfo& from);
  void MergeFrom(const ProductData_OriginalInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_OriginalInfo* other);
  protected:
  explicit ProductData_OriginalInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  ::std::string* unsafe_arena_release_url();
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // required string source = 2;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);
  ::std::string* unsafe_arena_release_source();
  void unsafe_arena_set_allocated_source(
      ::std::string* source);

  // optional string title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  ::std::string* unsafe_arena_release_title();
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.OriginalInfo)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_source();
  void clear_has_source();
  void set_has_title();
  void clear_has_title();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_AnnoyIndexMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta) */ {
 public:
  ProductData_AnnoyIndexMeta();
  virtual ~ProductData_AnnoyIndexMeta();

  ProductData_AnnoyIndexMeta(const ProductData_AnnoyIndexMeta& from);

  inline ProductData_AnnoyIndexMeta& operator=(const ProductData_AnnoyIndexMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_AnnoyIndexMeta(ProductData_AnnoyIndexMeta&& from) noexcept
    : ProductData_AnnoyIndexMeta() {
    *this = ::std::move(from);
  }

  inline ProductData_AnnoyIndexMeta& operator=(ProductData_AnnoyIndexMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_AnnoyIndexMeta& default_instance();

  static inline const ProductData_AnnoyIndexMeta* internal_default_instance() {
    return reinterpret_cast<const ProductData_AnnoyIndexMeta*>(
               &_ProductData_AnnoyIndexMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ProductData_AnnoyIndexMeta* other);
  void Swap(ProductData_AnnoyIndexMeta* other);
  friend void swap(ProductData_AnnoyIndexMeta& a, ProductData_AnnoyIndexMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_AnnoyIndexMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_AnnoyIndexMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_AnnoyIndexMeta& from);
  void MergeFrom(const ProductData_AnnoyIndexMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_AnnoyIndexMeta* other);
  protected:
  explicit ProductData_AnnoyIndexMeta(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 annoy_idx_id = 1;
  bool has_annoy_idx_id() const;
  void clear_annoy_idx_id();
  static const int kAnnoyIdxIdFieldNumber = 1;
  ::google::protobuf::uint32 annoy_idx_id() const;
  void set_annoy_idx_id(::google::protobuf::uint32 value);

  // optional uint32 annoy_prod_id = 2;
  bool has_annoy_prod_id() const;
  void clear_annoy_prod_id();
  static const int kAnnoyProdIdFieldNumber = 2;
  ::google::protobuf::uint32 annoy_prod_id() const;
  void set_annoy_prod_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta)
 private:
  void set_has_annoy_idx_id();
  void clear_has_annoy_idx_id();
  void set_has_annoy_prod_id();
  void clear_has_annoy_prod_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 annoy_idx_id_;
  ::google::protobuf::uint32 annoy_prod_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_CommentsData_Comment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.CommentsData.Comment) */ {
 public:
  ProductData_CommentsData_Comment();
  virtual ~ProductData_CommentsData_Comment();

  ProductData_CommentsData_Comment(const ProductData_CommentsData_Comment& from);

  inline ProductData_CommentsData_Comment& operator=(const ProductData_CommentsData_Comment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_CommentsData_Comment(ProductData_CommentsData_Comment&& from) noexcept
    : ProductData_CommentsData_Comment() {
    *this = ::std::move(from);
  }

  inline ProductData_CommentsData_Comment& operator=(ProductData_CommentsData_Comment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_CommentsData_Comment& default_instance();

  static inline const ProductData_CommentsData_Comment* internal_default_instance() {
    return reinterpret_cast<const ProductData_CommentsData_Comment*>(
               &_ProductData_CommentsData_Comment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ProductData_CommentsData_Comment* other);
  void Swap(ProductData_CommentsData_Comment* other);
  friend void swap(ProductData_CommentsData_Comment& a, ProductData_CommentsData_Comment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_CommentsData_Comment* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_CommentsData_Comment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_CommentsData_Comment& from);
  void MergeFrom(const ProductData_CommentsData_Comment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_CommentsData_Comment* other);
  protected:
  explicit ProductData_CommentsData_Comment(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);
  ::std::string* unsafe_arena_release_text();
  void unsafe_arena_set_allocated_text(
      ::std::string* text);

  // optional string user_name = 3;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);
  ::std::string* unsafe_arena_release_user_name();
  void unsafe_arena_set_allocated_user_name(
      ::std::string* user_name);

  // optional float rating = 2;
  bool has_rating() const;
  void clear_rating();
  static const int kRatingFieldNumber = 2;
  float rating() const;
  void set_rating(float value);

  // optional uint32 time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.CommentsData.Comment)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_rating();
  void clear_has_rating();
  void set_has_user_name();
  void clear_has_user_name();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  float rating_;
  ::google::protobuf::uint32 time_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_CommentsData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.CommentsData) */ {
 public:
  ProductData_CommentsData();
  virtual ~ProductData_CommentsData();

  ProductData_CommentsData(const ProductData_CommentsData& from);

  inline ProductData_CommentsData& operator=(const ProductData_CommentsData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_CommentsData(ProductData_CommentsData&& from) noexcept
    : ProductData_CommentsData() {
    *this = ::std::move(from);
  }

  inline ProductData_CommentsData& operator=(ProductData_CommentsData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_CommentsData& default_instance();

  static inline const ProductData_CommentsData* internal_default_instance() {
    return reinterpret_cast<const ProductData_CommentsData*>(
               &_ProductData_CommentsData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ProductData_CommentsData* other);
  void Swap(ProductData_CommentsData* other);
  friend void swap(ProductData_CommentsData& a, ProductData_CommentsData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_CommentsData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_CommentsData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_CommentsData& from);
  void MergeFrom(const ProductData_CommentsData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_CommentsData* other);
  protected:
  explicit ProductData_CommentsData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProductData_CommentsData_Comment Comment;

  // accessors -------------------------------------------------------

  // repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
  int comments_size() const;
  void clear_comments();
  static const int kCommentsFieldNumber = 1;
  const ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment& comments(int index) const;
  ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* mutable_comments(int index);
  ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* add_comments();
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >*
      mutable_comments();
  const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >&
      comments() const;

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.CommentsData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment > comments_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_PriceData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.PriceData) */ {
 public:
  ProductData_PriceData();
  virtual ~ProductData_PriceData();

  ProductData_PriceData(const ProductData_PriceData& from);

  inline ProductData_PriceData& operator=(const ProductData_PriceData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_PriceData(ProductData_PriceData&& from) noexcept
    : ProductData_PriceData() {
    *this = ::std::move(from);
  }

  inline ProductData_PriceData& operator=(ProductData_PriceData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_PriceData& default_instance();

  static inline const ProductData_PriceData* internal_default_instance() {
    return reinterpret_cast<const ProductData_PriceData*>(
               &_ProductData_PriceData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ProductData_PriceData* other);
  void Swap(ProductData_PriceData* other);
  friend void swap(ProductData_PriceData& a, ProductData_PriceData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_PriceData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_PriceData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_PriceData& from);
  void MergeFrom(const ProductData_PriceData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_PriceData* other);
  protected:
  explicit ProductData_PriceData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
  bool has_currency() const;
  void clear_currency();
  static const int kCurrencyFieldNumber = 1;
  ::pandao_imgsearcher::pb::ProductData_Currency currency() const;
  void set_currency(::pandao_imgsearcher::pb::ProductData_Currency value);

  // required float low_price = 2;
  bool has_low_price() const;
  void clear_low_price();
  static const int kLowPriceFieldNumber = 2;
  float low_price() const;
  void set_low_price(float value);

  // optional float high_price = 3;
  bool has_high_price() const;
  void clear_high_price();
  static const int kHighPriceFieldNumber = 3;
  float high_price() const;
  void set_high_price(float value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.PriceData)
 private:
  void set_has_currency();
  void clear_has_currency();
  void set_has_low_price();
  void clear_has_low_price();
  void set_has_high_price();
  void clear_has_high_price();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int currency_;
  float low_price_;
  float high_price_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_ProductStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.ProductStat) */ {
 public:
  ProductData_ProductStat();
  virtual ~ProductData_ProductStat();

  ProductData_ProductStat(const ProductData_ProductStat& from);

  inline ProductData_ProductStat& operator=(const ProductData_ProductStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_ProductStat(ProductData_ProductStat&& from) noexcept
    : ProductData_ProductStat() {
    *this = ::std::move(from);
  }

  inline ProductData_ProductStat& operator=(ProductData_ProductStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_ProductStat& default_instance();

  static inline const ProductData_ProductStat* internal_default_instance() {
    return reinterpret_cast<const ProductData_ProductStat*>(
               &_ProductData_ProductStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ProductData_ProductStat* other);
  void Swap(ProductData_ProductStat* other);
  friend void swap(ProductData_ProductStat& a, ProductData_ProductStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_ProductStat* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_ProductStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_ProductStat& from);
  void MergeFrom(const ProductData_ProductStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_ProductStat* other);
  protected:
  explicit ProductData_ProductStat(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
  int shipping_data_size() const;
  void clear_shipping_data();
  static const int kShippingDataFieldNumber = 7;
  const ::pandao_imgsearcher::pb::ProductData_ShippingData& shipping_data(int index) const;
  ::pandao_imgsearcher::pb::ProductData_ShippingData* mutable_shipping_data(int index);
  ::pandao_imgsearcher::pb::ProductData_ShippingData* add_shipping_data();
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >*
      mutable_shipping_data();
  const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >&
      shipping_data() const;

  // optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
  bool has_old_price() const;
  void clear_old_price();
  static const int kOldPriceFieldNumber = 2;
  private:
  void _slow_mutable_old_price();
  void _slow_set_allocated_old_price(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** old_price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* _slow_release_old_price();
  public:
  const ::pandao_imgsearcher::pb::ProductData_PriceData& old_price() const;
  ::pandao_imgsearcher::pb::ProductData_PriceData* mutable_old_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* release_old_price();
  void set_allocated_old_price(::pandao_imgsearcher::pb::ProductData_PriceData* old_price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* unsafe_arena_release_old_price();
  void unsafe_arena_set_allocated_old_price(
      ::pandao_imgsearcher::pb::ProductData_PriceData* old_price);

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  private:
  void _slow_mutable_price();
  void _slow_set_allocated_price(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* _slow_release_price();
  public:
  const ::pandao_imgsearcher::pb::ProductData_PriceData& price() const;
  ::pandao_imgsearcher::pb::ProductData_PriceData* mutable_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* release_price();
  void set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* unsafe_arena_release_price();
  void unsafe_arena_set_allocated_price(
      ::pandao_imgsearcher::pb::ProductData_PriceData* price);

  // required uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional float orders_cnt = 4;
  bool has_orders_cnt() const;
  void clear_orders_cnt();
  static const int kOrdersCntFieldNumber = 4;
  float orders_cnt() const;
  void set_orders_cnt(float value);

  // optional float total_rating = 5;
  bool has_total_rating() const;
  void clear_total_rating();
  static const int kTotalRatingFieldNumber = 5;
  float total_rating() const;
  void set_total_rating(float value);

  // optional float reviews_cnt = 6;
  bool has_reviews_cnt() const;
  void clear_reviews_cnt();
  static const int kReviewsCntFieldNumber = 6;
  float reviews_cnt() const;
  void set_reviews_cnt(float value);

  // optional bool deleted = 8;
  bool has_deleted() const;
  void clear_deleted();
  static const int kDeletedFieldNumber = 8;
  bool deleted() const;
  void set_deleted(bool value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.ProductStat)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_old_price();
  void clear_has_old_price();
  void set_has_price();
  void clear_has_price();
  void set_has_orders_cnt();
  void clear_has_orders_cnt();
  void set_has_total_rating();
  void clear_has_total_rating();
  void set_has_reviews_cnt();
  void clear_has_reviews_cnt();
  void set_has_deleted();
  void clear_has_deleted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData > shipping_data_;
  ::pandao_imgsearcher::pb::ProductData_PriceData* old_price_;
  ::pandao_imgsearcher::pb::ProductData_PriceData* price_;
  ::google::protobuf::uint32 version_;
  float orders_cnt_;
  float total_rating_;
  float reviews_cnt_;
  bool deleted_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_DurationData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.DurationData) */ {
 public:
  ProductData_DurationData();
  virtual ~ProductData_DurationData();

  ProductData_DurationData(const ProductData_DurationData& from);

  inline ProductData_DurationData& operator=(const ProductData_DurationData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_DurationData(ProductData_DurationData&& from) noexcept
    : ProductData_DurationData() {
    *this = ::std::move(from);
  }

  inline ProductData_DurationData& operator=(ProductData_DurationData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_DurationData& default_instance();

  static inline const ProductData_DurationData* internal_default_instance() {
    return reinterpret_cast<const ProductData_DurationData*>(
               &_ProductData_DurationData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ProductData_DurationData* other);
  void Swap(ProductData_DurationData* other);
  friend void swap(ProductData_DurationData& a, ProductData_DurationData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_DurationData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_DurationData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_DurationData& from);
  void MergeFrom(const ProductData_DurationData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_DurationData* other);
  protected:
  explicit ProductData_DurationData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
  bool has_time_unit() const;
  void clear_time_unit();
  static const int kTimeUnitFieldNumber = 1;
  ::pandao_imgsearcher::pb::ProductData_TimeUnit time_unit() const;
  void set_time_unit(::pandao_imgsearcher::pb::ProductData_TimeUnit value);

  // required float low_time = 2;
  bool has_low_time() const;
  void clear_low_time();
  static const int kLowTimeFieldNumber = 2;
  float low_time() const;
  void set_low_time(float value);

  // optional float high_time = 3;
  bool has_high_time() const;
  void clear_high_time();
  static const int kHighTimeFieldNumber = 3;
  float high_time() const;
  void set_high_time(float value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.DurationData)
 private:
  void set_has_time_unit();
  void clear_has_time_unit();
  void set_has_low_time();
  void clear_has_low_time();
  void set_has_high_time();
  void clear_has_high_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int time_unit_;
  float low_time_;
  float high_time_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData_ShippingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData.ShippingData) */ {
 public:
  ProductData_ShippingData();
  virtual ~ProductData_ShippingData();

  ProductData_ShippingData(const ProductData_ShippingData& from);

  inline ProductData_ShippingData& operator=(const ProductData_ShippingData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData_ShippingData(ProductData_ShippingData&& from) noexcept
    : ProductData_ShippingData() {
    *this = ::std::move(from);
  }

  inline ProductData_ShippingData& operator=(ProductData_ShippingData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData_ShippingData& default_instance();

  static inline const ProductData_ShippingData* internal_default_instance() {
    return reinterpret_cast<const ProductData_ShippingData*>(
               &_ProductData_ShippingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ProductData_ShippingData* other);
  void Swap(ProductData_ShippingData* other);
  friend void swap(ProductData_ShippingData& a, ProductData_ShippingData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData_ShippingData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData_ShippingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData_ShippingData& from);
  void MergeFrom(const ProductData_ShippingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData_ShippingData* other);
  protected:
  explicit ProductData_ShippingData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string company = 3;
  bool has_company() const;
  void clear_company();
  static const int kCompanyFieldNumber = 3;
  const ::std::string& company() const;
  void set_company(const ::std::string& value);
  #if LANG_CXX11
  void set_company(::std::string&& value);
  #endif
  void set_company(const char* value);
  void set_company(const char* value, size_t size);
  ::std::string* mutable_company();
  ::std::string* release_company();
  void set_allocated_company(::std::string* company);
  ::std::string* unsafe_arena_release_company();
  void unsafe_arena_set_allocated_company(
      ::std::string* company);

  // required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  private:
  void _slow_mutable_duration();
  void _slow_set_allocated_duration(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_DurationData** duration);
  ::pandao_imgsearcher::pb::ProductData_DurationData* _slow_release_duration();
  public:
  const ::pandao_imgsearcher::pb::ProductData_DurationData& duration() const;
  ::pandao_imgsearcher::pb::ProductData_DurationData* mutable_duration();
  ::pandao_imgsearcher::pb::ProductData_DurationData* release_duration();
  void set_allocated_duration(::pandao_imgsearcher::pb::ProductData_DurationData* duration);
  ::pandao_imgsearcher::pb::ProductData_DurationData* unsafe_arena_release_duration();
  void unsafe_arena_set_allocated_duration(
      ::pandao_imgsearcher::pb::ProductData_DurationData* duration);

  // optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  private:
  void _slow_mutable_price();
  void _slow_set_allocated_price(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_PriceData** price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* _slow_release_price();
  public:
  const ::pandao_imgsearcher::pb::ProductData_PriceData& price() const;
  ::pandao_imgsearcher::pb::ProductData_PriceData* mutable_price();
  ::pandao_imgsearcher::pb::ProductData_PriceData* release_price();
  void set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price);
  ::pandao_imgsearcher::pb::ProductData_PriceData* unsafe_arena_release_price();
  void unsafe_arena_set_allocated_price(
      ::pandao_imgsearcher::pb::ProductData_PriceData* price);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData.ShippingData)
 private:
  void set_has_duration();
  void clear_has_duration();
  void set_has_price();
  void clear_has_price();
  void set_has_company();
  void clear_has_company();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr company_;
  ::pandao_imgsearcher::pb::ProductData_DurationData* duration_;
  ::pandao_imgsearcher::pb::ProductData_PriceData* price_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductData) */ {
 public:
  ProductData();
  virtual ~ProductData();

  ProductData(const ProductData& from);

  inline ProductData& operator=(const ProductData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData(ProductData&& from) noexcept
    : ProductData() {
    *this = ::std::move(from);
  }

  inline ProductData& operator=(ProductData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData& default_instance();

  static inline const ProductData* internal_default_instance() {
    return reinterpret_cast<const ProductData*>(
               &_ProductData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ProductData* other);
  void Swap(ProductData* other);
  friend void swap(ProductData& a, ProductData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData& from);
  void MergeFrom(const ProductData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData* other);
  protected:
  explicit ProductData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProductData_OriginalInfo OriginalInfo;
  typedef ProductData_AnnoyIndexMeta AnnoyIndexMeta;
  typedef ProductData_CommentsData CommentsData;
  typedef ProductData_PriceData PriceData;
  typedef ProductData_ProductStat ProductStat;
  typedef ProductData_DurationData DurationData;
  typedef ProductData_ShippingData ShippingData;

  typedef ProductData_Currency Currency;
  static const Currency RUB =
    ProductData_Currency_RUB;
  static const Currency USD =
    ProductData_Currency_USD;
  static const Currency EUR =
    ProductData_Currency_EUR;
  static inline bool Currency_IsValid(int value) {
    return ProductData_Currency_IsValid(value);
  }
  static const Currency Currency_MIN =
    ProductData_Currency_Currency_MIN;
  static const Currency Currency_MAX =
    ProductData_Currency_Currency_MAX;
  static const int Currency_ARRAYSIZE =
    ProductData_Currency_Currency_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Currency_descriptor() {
    return ProductData_Currency_descriptor();
  }
  static inline const ::std::string& Currency_Name(Currency value) {
    return ProductData_Currency_Name(value);
  }
  static inline bool Currency_Parse(const ::std::string& name,
      Currency* value) {
    return ProductData_Currency_Parse(name, value);
  }

  typedef ProductData_TimeUnit TimeUnit;
  static const TimeUnit HOUR =
    ProductData_TimeUnit_HOUR;
  static const TimeUnit DAY =
    ProductData_TimeUnit_DAY;
  static const TimeUnit MONTH =
    ProductData_TimeUnit_MONTH;
  static inline bool TimeUnit_IsValid(int value) {
    return ProductData_TimeUnit_IsValid(value);
  }
  static const TimeUnit TimeUnit_MIN =
    ProductData_TimeUnit_TimeUnit_MIN;
  static const TimeUnit TimeUnit_MAX =
    ProductData_TimeUnit_TimeUnit_MAX;
  static const int TimeUnit_ARRAYSIZE =
    ProductData_TimeUnit_TimeUnit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TimeUnit_descriptor() {
    return ProductData_TimeUnit_descriptor();
  }
  static inline const ::std::string& TimeUnit_Name(TimeUnit value) {
    return ProductData_TimeUnit_Name(value);
  }
  static inline bool TimeUnit_Parse(const ::std::string& name,
      TimeUnit* value) {
    return ProductData_TimeUnit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
  int product_stat_size() const;
  void clear_product_stat();
  static const int kProductStatFieldNumber = 5;
  const ::pandao_imgsearcher::pb::ProductData_ProductStat& product_stat(int index) const;
  ::pandao_imgsearcher::pb::ProductData_ProductStat* mutable_product_stat(int index);
  ::pandao_imgsearcher::pb::ProductData_ProductStat* add_product_stat();
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >*
      mutable_product_stat();
  const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >&
      product_stat() const;

  // optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
  bool has_original_info() const;
  void clear_original_info();
  static const int kOriginalInfoFieldNumber = 2;
  private:
  void _slow_mutable_original_info();
  void _slow_set_allocated_original_info(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_OriginalInfo** original_info);
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* _slow_release_original_info();
  public:
  const ::pandao_imgsearcher::pb::ProductData_OriginalInfo& original_info() const;
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* mutable_original_info();
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* release_original_info();
  void set_allocated_original_info(::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info);
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* unsafe_arena_release_original_info();
  void unsafe_arena_set_allocated_original_info(
      ::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info);

  // optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
  bool has_annoy_index_meta() const;
  void clear_annoy_index_meta();
  static const int kAnnoyIndexMetaFieldNumber = 3;
  private:
  void _slow_mutable_annoy_index_meta();
  void _slow_set_allocated_annoy_index_meta(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta** annoy_index_meta);
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* _slow_release_annoy_index_meta();
  public:
  const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta& annoy_index_meta() const;
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* mutable_annoy_index_meta();
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* release_annoy_index_meta();
  void set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta);
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* unsafe_arena_release_annoy_index_meta();
  void unsafe_arena_set_allocated_annoy_index_meta(
      ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta);

  // optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
  bool has_comments_data() const;
  void clear_comments_data();
  static const int kCommentsDataFieldNumber = 4;
  private:
  void _slow_mutable_comments_data();
  void _slow_set_allocated_comments_data(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ProductData_CommentsData** comments_data);
  ::pandao_imgsearcher::pb::ProductData_CommentsData* _slow_release_comments_data();
  public:
  const ::pandao_imgsearcher::pb::ProductData_CommentsData& comments_data() const;
  ::pandao_imgsearcher::pb::ProductData_CommentsData* mutable_comments_data();
  ::pandao_imgsearcher::pb::ProductData_CommentsData* release_comments_data();
  void set_allocated_comments_data(::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data);
  ::pandao_imgsearcher::pb::ProductData_CommentsData* unsafe_arena_release_comments_data();
  void unsafe_arena_set_allocated_comments_data(
      ::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data);

  // required sfixed64 product_id = 1;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  ::google::protobuf::int64 product_id() const;
  void set_product_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductData)
 private:
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_original_info();
  void clear_has_original_info();
  void set_has_annoy_index_meta();
  void clear_has_annoy_index_meta();
  void set_has_comments_data();
  void clear_has_comments_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat > product_stat_;
  ::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info_;
  ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta_;
  ::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data_;
  ::google::protobuf::int64 product_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmbeddList_Embedding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.EmbeddList.Embedding) */ {
 public:
  EmbeddList_Embedding();
  virtual ~EmbeddList_Embedding();

  EmbeddList_Embedding(const EmbeddList_Embedding& from);

  inline EmbeddList_Embedding& operator=(const EmbeddList_Embedding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmbeddList_Embedding(EmbeddList_Embedding&& from) noexcept
    : EmbeddList_Embedding() {
    *this = ::std::move(from);
  }

  inline EmbeddList_Embedding& operator=(EmbeddList_Embedding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmbeddList_Embedding& default_instance();

  static inline const EmbeddList_Embedding* internal_default_instance() {
    return reinterpret_cast<const EmbeddList_Embedding*>(
               &_EmbeddList_Embedding_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(EmbeddList_Embedding* other);
  void Swap(EmbeddList_Embedding* other);
  friend void swap(EmbeddList_Embedding& a, EmbeddList_Embedding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmbeddList_Embedding* New() const PROTOBUF_FINAL { return New(NULL); }

  EmbeddList_Embedding* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmbeddList_Embedding& from);
  void MergeFrom(const EmbeddList_Embedding& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmbeddList_Embedding* other);
  protected:
  explicit EmbeddList_Embedding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  ::std::string* unsafe_arena_release_url();
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);
  ::std::string* unsafe_arena_release_data();
  void unsafe_arena_set_allocated_data(
      ::std::string* data);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.EmbeddList.Embedding)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmbeddList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.EmbeddList) */ {
 public:
  EmbeddList();
  virtual ~EmbeddList();

  EmbeddList(const EmbeddList& from);

  inline EmbeddList& operator=(const EmbeddList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmbeddList(EmbeddList&& from) noexcept
    : EmbeddList() {
    *this = ::std::move(from);
  }

  inline EmbeddList& operator=(EmbeddList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmbeddList& default_instance();

  static inline const EmbeddList* internal_default_instance() {
    return reinterpret_cast<const EmbeddList*>(
               &_EmbeddList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(EmbeddList* other);
  void Swap(EmbeddList* other);
  friend void swap(EmbeddList& a, EmbeddList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmbeddList* New() const PROTOBUF_FINAL { return New(NULL); }

  EmbeddList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmbeddList& from);
  void MergeFrom(const EmbeddList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmbeddList* other);
  protected:
  explicit EmbeddList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EmbeddList_Embedding Embedding;

  // accessors -------------------------------------------------------

  // repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
  int embed_list_size() const;
  void clear_embed_list();
  static const int kEmbedListFieldNumber = 1;
  const ::pandao_imgsearcher::pb::EmbeddList_Embedding& embed_list(int index) const;
  ::pandao_imgsearcher::pb::EmbeddList_Embedding* mutable_embed_list(int index);
  ::pandao_imgsearcher::pb::EmbeddList_Embedding* add_embed_list();
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >*
      mutable_embed_list();
  const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >&
      embed_list() const;

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.EmbeddList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding > embed_list_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmbedData_OriginalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.EmbedData.OriginalInfo) */ {
 public:
  EmbedData_OriginalInfo();
  virtual ~EmbedData_OriginalInfo();

  EmbedData_OriginalInfo(const EmbedData_OriginalInfo& from);

  inline EmbedData_OriginalInfo& operator=(const EmbedData_OriginalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmbedData_OriginalInfo(EmbedData_OriginalInfo&& from) noexcept
    : EmbedData_OriginalInfo() {
    *this = ::std::move(from);
  }

  inline EmbedData_OriginalInfo& operator=(EmbedData_OriginalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmbedData_OriginalInfo& default_instance();

  static inline const EmbedData_OriginalInfo* internal_default_instance() {
    return reinterpret_cast<const EmbedData_OriginalInfo*>(
               &_EmbedData_OriginalInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(EmbedData_OriginalInfo* other);
  void Swap(EmbedData_OriginalInfo* other);
  friend void swap(EmbedData_OriginalInfo& a, EmbedData_OriginalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmbedData_OriginalInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EmbedData_OriginalInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmbedData_OriginalInfo& from);
  void MergeFrom(const EmbedData_OriginalInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmbedData_OriginalInfo* other);
  protected:
  explicit EmbedData_OriginalInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  ::std::string* unsafe_arena_release_url();
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.EmbedData.OriginalInfo)
 private:
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmbedData_AnnoyIndexMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta) */ {
 public:
  EmbedData_AnnoyIndexMeta();
  virtual ~EmbedData_AnnoyIndexMeta();

  EmbedData_AnnoyIndexMeta(const EmbedData_AnnoyIndexMeta& from);

  inline EmbedData_AnnoyIndexMeta& operator=(const EmbedData_AnnoyIndexMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmbedData_AnnoyIndexMeta(EmbedData_AnnoyIndexMeta&& from) noexcept
    : EmbedData_AnnoyIndexMeta() {
    *this = ::std::move(from);
  }

  inline EmbedData_AnnoyIndexMeta& operator=(EmbedData_AnnoyIndexMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmbedData_AnnoyIndexMeta& default_instance();

  static inline const EmbedData_AnnoyIndexMeta* internal_default_instance() {
    return reinterpret_cast<const EmbedData_AnnoyIndexMeta*>(
               &_EmbedData_AnnoyIndexMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(EmbedData_AnnoyIndexMeta* other);
  void Swap(EmbedData_AnnoyIndexMeta* other);
  friend void swap(EmbedData_AnnoyIndexMeta& a, EmbedData_AnnoyIndexMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmbedData_AnnoyIndexMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  EmbedData_AnnoyIndexMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmbedData_AnnoyIndexMeta& from);
  void MergeFrom(const EmbedData_AnnoyIndexMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmbedData_AnnoyIndexMeta* other);
  protected:
  explicit EmbedData_AnnoyIndexMeta(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 annoy_idx_id = 1;
  bool has_annoy_idx_id() const;
  void clear_annoy_idx_id();
  static const int kAnnoyIdxIdFieldNumber = 1;
  ::google::protobuf::uint32 annoy_idx_id() const;
  void set_annoy_idx_id(::google::protobuf::uint32 value);

  // required uint32 annoy_img_id = 2;
  bool has_annoy_img_id() const;
  void clear_annoy_img_id();
  static const int kAnnoyImgIdFieldNumber = 2;
  ::google::protobuf::uint32 annoy_img_id() const;
  void set_annoy_img_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta)
 private:
  void set_has_annoy_idx_id();
  void clear_has_annoy_idx_id();
  void set_has_annoy_img_id();
  void clear_has_annoy_img_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 annoy_idx_id_;
  ::google::protobuf::uint32 annoy_img_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmbedData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.EmbedData) */ {
 public:
  EmbedData();
  virtual ~EmbedData();

  EmbedData(const EmbedData& from);

  inline EmbedData& operator=(const EmbedData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmbedData(EmbedData&& from) noexcept
    : EmbedData() {
    *this = ::std::move(from);
  }

  inline EmbedData& operator=(EmbedData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmbedData& default_instance();

  static inline const EmbedData* internal_default_instance() {
    return reinterpret_cast<const EmbedData*>(
               &_EmbedData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(EmbedData* other);
  void Swap(EmbedData* other);
  friend void swap(EmbedData& a, EmbedData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmbedData* New() const PROTOBUF_FINAL { return New(NULL); }

  EmbedData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmbedData& from);
  void MergeFrom(const EmbedData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmbedData* other);
  protected:
  explicit EmbedData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EmbedData_OriginalInfo OriginalInfo;
  typedef EmbedData_AnnoyIndexMeta AnnoyIndexMeta;

  // accessors -------------------------------------------------------

  // optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
  bool has_original_info() const;
  void clear_original_info();
  static const int kOriginalInfoFieldNumber = 2;
  private:
  void _slow_mutable_original_info();
  void _slow_set_allocated_original_info(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::EmbedData_OriginalInfo** original_info);
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* _slow_release_original_info();
  public:
  const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo& original_info() const;
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* mutable_original_info();
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* release_original_info();
  void set_allocated_original_info(::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info);
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* unsafe_arena_release_original_info();
  void unsafe_arena_set_allocated_original_info(
      ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info);

  // optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
  bool has_annoy_index_meta() const;
  void clear_annoy_index_meta();
  static const int kAnnoyIndexMetaFieldNumber = 3;
  private:
  void _slow_mutable_annoy_index_meta();
  void _slow_set_allocated_annoy_index_meta(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta** annoy_index_meta);
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* _slow_release_annoy_index_meta();
  public:
  const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta& annoy_index_meta() const;
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* mutable_annoy_index_meta();
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* release_annoy_index_meta();
  void set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta);
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* unsafe_arena_release_annoy_index_meta();
  void unsafe_arena_set_allocated_annoy_index_meta(
      ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta);

  // required sfixed64 image_id = 1;
  bool has_image_id() const;
  void clear_image_id();
  static const int kImageIdFieldNumber = 1;
  ::google::protobuf::int64 image_id() const;
  void set_image_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.EmbedData)
 private:
  void set_has_image_id();
  void clear_has_image_id();
  void set_has_original_info();
  void clear_has_original_info();
  void set_has_annoy_index_meta();
  void clear_has_annoy_index_meta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info_;
  ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta_;
  ::google::protobuf::int64 image_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageData_OriginalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ImageData.OriginalInfo) */ {
 public:
  ImageData_OriginalInfo();
  virtual ~ImageData_OriginalInfo();

  ImageData_OriginalInfo(const ImageData_OriginalInfo& from);

  inline ImageData_OriginalInfo& operator=(const ImageData_OriginalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageData_OriginalInfo(ImageData_OriginalInfo&& from) noexcept
    : ImageData_OriginalInfo() {
    *this = ::std::move(from);
  }

  inline ImageData_OriginalInfo& operator=(ImageData_OriginalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageData_OriginalInfo& default_instance();

  static inline const ImageData_OriginalInfo* internal_default_instance() {
    return reinterpret_cast<const ImageData_OriginalInfo*>(
               &_ImageData_OriginalInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(ImageData_OriginalInfo* other);
  void Swap(ImageData_OriginalInfo* other);
  friend void swap(ImageData_OriginalInfo& a, ImageData_OriginalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageData_OriginalInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageData_OriginalInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageData_OriginalInfo& from);
  void MergeFrom(const ImageData_OriginalInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageData_OriginalInfo* other);
  protected:
  explicit ImageData_OriginalInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  ::std::string* unsafe_arena_release_url();
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ImageData.OriginalInfo)
 private:
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageData_AnnoyIndexMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta) */ {
 public:
  ImageData_AnnoyIndexMeta();
  virtual ~ImageData_AnnoyIndexMeta();

  ImageData_AnnoyIndexMeta(const ImageData_AnnoyIndexMeta& from);

  inline ImageData_AnnoyIndexMeta& operator=(const ImageData_AnnoyIndexMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageData_AnnoyIndexMeta(ImageData_AnnoyIndexMeta&& from) noexcept
    : ImageData_AnnoyIndexMeta() {
    *this = ::std::move(from);
  }

  inline ImageData_AnnoyIndexMeta& operator=(ImageData_AnnoyIndexMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageData_AnnoyIndexMeta& default_instance();

  static inline const ImageData_AnnoyIndexMeta* internal_default_instance() {
    return reinterpret_cast<const ImageData_AnnoyIndexMeta*>(
               &_ImageData_AnnoyIndexMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(ImageData_AnnoyIndexMeta* other);
  void Swap(ImageData_AnnoyIndexMeta* other);
  friend void swap(ImageData_AnnoyIndexMeta& a, ImageData_AnnoyIndexMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageData_AnnoyIndexMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageData_AnnoyIndexMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageData_AnnoyIndexMeta& from);
  void MergeFrom(const ImageData_AnnoyIndexMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageData_AnnoyIndexMeta* other);
  protected:
  explicit ImageData_AnnoyIndexMeta(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 annoy_idx_id = 1;
  bool has_annoy_idx_id() const;
  void clear_annoy_idx_id();
  static const int kAnnoyIdxIdFieldNumber = 1;
  ::google::protobuf::uint32 annoy_idx_id() const;
  void set_annoy_idx_id(::google::protobuf::uint32 value);

  // required uint32 annoy_img_id = 2;
  bool has_annoy_img_id() const;
  void clear_annoy_img_id();
  static const int kAnnoyImgIdFieldNumber = 2;
  ::google::protobuf::uint32 annoy_img_id() const;
  void set_annoy_img_id(::google::protobuf::uint32 value);

  // required uint32 annoy_prod_id = 3;
  bool has_annoy_prod_id() const;
  void clear_annoy_prod_id();
  static const int kAnnoyProdIdFieldNumber = 3;
  ::google::protobuf::uint32 annoy_prod_id() const;
  void set_annoy_prod_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta)
 private:
  void set_has_annoy_idx_id();
  void clear_has_annoy_idx_id();
  void set_has_annoy_img_id();
  void clear_has_annoy_img_id();
  void set_has_annoy_prod_id();
  void clear_has_annoy_prod_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 annoy_idx_id_;
  ::google::protobuf::uint32 annoy_img_id_;
  ::google::protobuf::uint32 annoy_prod_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ImageData) */ {
 public:
  ImageData();
  virtual ~ImageData();

  ImageData(const ImageData& from);

  inline ImageData& operator=(const ImageData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageData(ImageData&& from) noexcept
    : ImageData() {
    *this = ::std::move(from);
  }

  inline ImageData& operator=(ImageData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageData& default_instance();

  static inline const ImageData* internal_default_instance() {
    return reinterpret_cast<const ImageData*>(
               &_ImageData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(ImageData* other);
  void Swap(ImageData* other);
  friend void swap(ImageData& a, ImageData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageData* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageData& from);
  void MergeFrom(const ImageData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageData* other);
  protected:
  explicit ImageData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ImageData_OriginalInfo OriginalInfo;
  typedef ImageData_AnnoyIndexMeta AnnoyIndexMeta;

  // accessors -------------------------------------------------------

  // optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
  bool has_original_info() const;
  void clear_original_info();
  static const int kOriginalInfoFieldNumber = 3;
  private:
  void _slow_mutable_original_info();
  void _slow_set_allocated_original_info(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ImageData_OriginalInfo** original_info);
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* _slow_release_original_info();
  public:
  const ::pandao_imgsearcher::pb::ImageData_OriginalInfo& original_info() const;
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* mutable_original_info();
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* release_original_info();
  void set_allocated_original_info(::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info);
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* unsafe_arena_release_original_info();
  void unsafe_arena_set_allocated_original_info(
      ::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info);

  // optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
  bool has_annoy_index_meta() const;
  void clear_annoy_index_meta();
  static const int kAnnoyIndexMetaFieldNumber = 4;
  private:
  void _slow_mutable_annoy_index_meta();
  void _slow_set_allocated_annoy_index_meta(
      ::google::protobuf::Arena* message_arena, ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta** annoy_index_meta);
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* _slow_release_annoy_index_meta();
  public:
  const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta& annoy_index_meta() const;
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* mutable_annoy_index_meta();
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* release_annoy_index_meta();
  void set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta);
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* unsafe_arena_release_annoy_index_meta();
  void unsafe_arena_set_allocated_annoy_index_meta(
      ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta);

  // required sfixed64 product_id = 1;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  ::google::protobuf::int64 product_id() const;
  void set_product_id(::google::protobuf::int64 value);

  // required sfixed64 image_id = 2;
  bool has_image_id() const;
  void clear_image_id();
  static const int kImageIdFieldNumber = 2;
  ::google::protobuf::int64 image_id() const;
  void set_image_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ImageData)
 private:
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_image_id();
  void clear_has_image_id();
  void set_has_original_info();
  void clear_has_original_info();
  void set_has_annoy_index_meta();
  void clear_has_annoy_index_meta();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info_;
  ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta_;
  ::google::protobuf::int64 product_id_;
  ::google::protobuf::int64 image_id_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductImages_ProductImage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductImages.ProductImage) */ {
 public:
  ProductImages_ProductImage();
  virtual ~ProductImages_ProductImage();

  ProductImages_ProductImage(const ProductImages_ProductImage& from);

  inline ProductImages_ProductImage& operator=(const ProductImages_ProductImage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductImages_ProductImage(ProductImages_ProductImage&& from) noexcept
    : ProductImages_ProductImage() {
    *this = ::std::move(from);
  }

  inline ProductImages_ProductImage& operator=(ProductImages_ProductImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductImages_ProductImage& default_instance();

  static inline const ProductImages_ProductImage* internal_default_instance() {
    return reinterpret_cast<const ProductImages_ProductImage*>(
               &_ProductImages_ProductImage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(ProductImages_ProductImage* other);
  void Swap(ProductImages_ProductImage* other);
  friend void swap(ProductImages_ProductImage& a, ProductImages_ProductImage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductImages_ProductImage* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductImages_ProductImage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductImages_ProductImage& from);
  void MergeFrom(const ProductImages_ProductImage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductImages_ProductImage* other);
  protected:
  explicit ProductImages_ProductImage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);
  ::std::string* unsafe_arena_release_url();
  void unsafe_arena_set_allocated_url(
      ::std::string* url);

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);
  ::std::string* unsafe_arena_release_data();
  void unsafe_arena_set_allocated_data(
      ::std::string* data);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductImages.ProductImage)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductImages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_imgsearcher.pb.ProductImages) */ {
 public:
  ProductImages();
  virtual ~ProductImages();

  ProductImages(const ProductImages& from);

  inline ProductImages& operator=(const ProductImages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductImages(ProductImages&& from) noexcept
    : ProductImages() {
    *this = ::std::move(from);
  }

  inline ProductImages& operator=(ProductImages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductImages& default_instance();

  static inline const ProductImages* internal_default_instance() {
    return reinterpret_cast<const ProductImages*>(
               &_ProductImages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(ProductImages* other);
  void Swap(ProductImages* other);
  friend void swap(ProductImages& a, ProductImages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductImages* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductImages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductImages& from);
  void MergeFrom(const ProductImages& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductImages* other);
  protected:
  explicit ProductImages(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProductImages_ProductImage ProductImage;

  // accessors -------------------------------------------------------

  // repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
  int product_images_size() const;
  void clear_product_images();
  static const int kProductImagesFieldNumber = 3;
  const ::pandao_imgsearcher::pb::ProductImages_ProductImage& product_images(int index) const;
  ::pandao_imgsearcher::pb::ProductImages_ProductImage* mutable_product_images(int index);
  ::pandao_imgsearcher::pb::ProductImages_ProductImage* add_product_images();
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >*
      mutable_product_images();
  const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >&
      product_images() const;

  // required string product_url = 1;
  bool has_product_url() const;
  void clear_product_url();
  static const int kProductUrlFieldNumber = 1;
  const ::std::string& product_url() const;
  void set_product_url(const ::std::string& value);
  #if LANG_CXX11
  void set_product_url(::std::string&& value);
  #endif
  void set_product_url(const char* value);
  void set_product_url(const char* value, size_t size);
  ::std::string* mutable_product_url();
  ::std::string* release_product_url();
  void set_allocated_product_url(::std::string* product_url);
  ::std::string* unsafe_arena_release_product_url();
  void unsafe_arena_set_allocated_product_url(
      ::std::string* product_url);

  // optional string host = 2;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);
  ::std::string* unsafe_arena_release_host();
  void unsafe_arena_set_allocated_host(
      ::std::string* host);

  // optional sfixed64 hash = 4;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 4;
  ::google::protobuf::int64 hash() const;
  void set_hash(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pandao_imgsearcher.pb.ProductImages)
 private:
  void set_has_product_url();
  void clear_has_product_url();
  void set_has_host();
  void clear_has_host();
  void set_has_hash();
  void clear_has_hash();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage > product_images_;
  ::google::protobuf::internal::ArenaStringPtr product_url_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int64 hash_;
  friend struct protobuf_pandao_5fimgsearcher_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProductData_OriginalInfo

// required string url = 1;
inline bool ProductData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
inline const ::std::string& ProductData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  return url_.Get();
}
inline void ProductData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
#if LANG_CXX11
inline void ProductData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
#endif
inline void ProductData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
inline void ProductData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
inline ::std::string* ProductData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}
inline void ProductData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.url)
}

// required string source = 2;
inline bool ProductData_OriginalInfo::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_OriginalInfo::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_OriginalInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_OriginalInfo::clear_source() {
  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_source();
}
inline const ::std::string& ProductData_OriginalInfo::source() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  return source_.Get();
}
inline void ProductData_OriginalInfo::set_source(const ::std::string& value) {
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
#if LANG_CXX11
inline void ProductData_OriginalInfo::set_source(::std::string&& value) {
  set_has_source();
  source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
#endif
inline void ProductData_OriginalInfo::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
inline void ProductData_OriginalInfo::set_source(const char* value,
    size_t size) {
  set_has_source();
  source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
inline ::std::string* ProductData_OriginalInfo::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  return source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::release_source() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  clear_has_source();
  return source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_source();
  return source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_OriginalInfo::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}
inline void ProductData_OriginalInfo::unsafe_arena_set_allocated_source(
    ::std::string* source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.source)
}

// optional string title = 3;
inline bool ProductData_OriginalInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_OriginalInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_OriginalInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_OriginalInfo::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_title();
}
inline const ::std::string& ProductData_OriginalInfo::title() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  return title_.Get();
}
inline void ProductData_OriginalInfo::set_title(const ::std::string& value) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
#if LANG_CXX11
inline void ProductData_OriginalInfo::set_title(::std::string&& value) {
  set_has_title();
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
#endif
inline void ProductData_OriginalInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
inline void ProductData_OriginalInfo::set_title(const char* value,
    size_t size) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
inline ::std::string* ProductData_OriginalInfo::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::release_title() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  clear_has_title();
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_OriginalInfo::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_title();
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_OriginalInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}
inline void ProductData_OriginalInfo::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.OriginalInfo.title)
}

// -------------------------------------------------------------------

// ProductData_AnnoyIndexMeta

// optional uint32 annoy_idx_id = 1;
inline bool ProductData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
inline ::google::protobuf::uint32 ProductData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
inline void ProductData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_idx_id)
}

// optional uint32 annoy_prod_id = 2;
inline bool ProductData_AnnoyIndexMeta::has_annoy_prod_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_AnnoyIndexMeta::set_has_annoy_prod_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_AnnoyIndexMeta::clear_has_annoy_prod_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_AnnoyIndexMeta::clear_annoy_prod_id() {
  annoy_prod_id_ = 0u;
  clear_has_annoy_prod_id();
}
inline ::google::protobuf::uint32 ProductData_AnnoyIndexMeta::annoy_prod_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_prod_id)
  return annoy_prod_id_;
}
inline void ProductData_AnnoyIndexMeta::set_annoy_prod_id(::google::protobuf::uint32 value) {
  set_has_annoy_prod_id();
  annoy_prod_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta.annoy_prod_id)
}

// -------------------------------------------------------------------

// ProductData_CommentsData_Comment

// optional string text = 1;
inline bool ProductData_CommentsData_Comment::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_CommentsData_Comment::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_CommentsData_Comment::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_CommentsData_Comment::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_text();
}
inline const ::std::string& ProductData_CommentsData_Comment::text() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  return text_.Get();
}
inline void ProductData_CommentsData_Comment::set_text(const ::std::string& value) {
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
#if LANG_CXX11
inline void ProductData_CommentsData_Comment::set_text(::std::string&& value) {
  set_has_text();
  text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
#endif
inline void ProductData_CommentsData_Comment::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
inline void ProductData_CommentsData_Comment::set_text(const char* value,
    size_t size) {
  set_has_text();
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
inline ::std::string* ProductData_CommentsData_Comment::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_CommentsData_Comment::release_text() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  clear_has_text();
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_CommentsData_Comment::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_text();
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_CommentsData_Comment::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}
inline void ProductData_CommentsData_Comment::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.text)
}

// optional float rating = 2;
inline bool ProductData_CommentsData_Comment::has_rating() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_CommentsData_Comment::set_has_rating() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_CommentsData_Comment::clear_has_rating() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_CommentsData_Comment::clear_rating() {
  rating_ = 0;
  clear_has_rating();
}
inline float ProductData_CommentsData_Comment::rating() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.rating)
  return rating_;
}
inline void ProductData_CommentsData_Comment::set_rating(float value) {
  set_has_rating();
  rating_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.rating)
}

// optional string user_name = 3;
inline bool ProductData_CommentsData_Comment::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_CommentsData_Comment::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_CommentsData_Comment::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_CommentsData_Comment::clear_user_name() {
  user_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_user_name();
}
inline const ::std::string& ProductData_CommentsData_Comment::user_name() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  return user_name_.Get();
}
inline void ProductData_CommentsData_Comment::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
#if LANG_CXX11
inline void ProductData_CommentsData_Comment::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
#endif
inline void ProductData_CommentsData_Comment::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
inline void ProductData_CommentsData_Comment::set_user_name(const char* value,
    size_t size) {
  set_has_user_name();
  user_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
inline ::std::string* ProductData_CommentsData_Comment::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  return user_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_CommentsData_Comment::release_user_name() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  clear_has_user_name();
  return user_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_CommentsData_Comment::unsafe_arena_release_user_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_user_name();
  return user_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_CommentsData_Comment::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}
inline void ProductData_CommentsData_Comment::unsafe_arena_set_allocated_user_name(
    ::std::string* user_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      user_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.user_name)
}

// optional uint32 time = 4;
inline bool ProductData_CommentsData_Comment::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductData_CommentsData_Comment::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductData_CommentsData_Comment::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductData_CommentsData_Comment::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 ProductData_CommentsData_Comment::time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.time)
  return time_;
}
inline void ProductData_CommentsData_Comment::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.CommentsData.Comment.time)
}

// -------------------------------------------------------------------

// ProductData_CommentsData

// repeated .pandao_imgsearcher.pb.ProductData.CommentsData.Comment comments = 1;
inline int ProductData_CommentsData::comments_size() const {
  return comments_.size();
}
inline void ProductData_CommentsData::clear_comments() {
  comments_.Clear();
}
inline const ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment& ProductData_CommentsData::comments(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Get(index);
}
inline ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* ProductData_CommentsData::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Mutable(index);
}
inline ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment* ProductData_CommentsData::add_comments() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >*
ProductData_CommentsData::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return &comments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_CommentsData_Comment >&
ProductData_CommentsData::comments() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.CommentsData.comments)
  return comments_;
}

// -------------------------------------------------------------------

// ProductData_PriceData

// required .pandao_imgsearcher.pb.ProductData.Currency currency = 1;
inline bool ProductData_PriceData::has_currency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_PriceData::set_has_currency() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_PriceData::clear_has_currency() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_PriceData::clear_currency() {
  currency_ = 0;
  clear_has_currency();
}
inline ::pandao_imgsearcher::pb::ProductData_Currency ProductData_PriceData::currency() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.currency)
  return static_cast< ::pandao_imgsearcher::pb::ProductData_Currency >(currency_);
}
inline void ProductData_PriceData::set_currency(::pandao_imgsearcher::pb::ProductData_Currency value) {
  assert(::pandao_imgsearcher::pb::ProductData_Currency_IsValid(value));
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.currency)
}

// required float low_price = 2;
inline bool ProductData_PriceData::has_low_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_PriceData::set_has_low_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_PriceData::clear_has_low_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_PriceData::clear_low_price() {
  low_price_ = 0;
  clear_has_low_price();
}
inline float ProductData_PriceData::low_price() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.low_price)
  return low_price_;
}
inline void ProductData_PriceData::set_low_price(float value) {
  set_has_low_price();
  low_price_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.low_price)
}

// optional float high_price = 3;
inline bool ProductData_PriceData::has_high_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_PriceData::set_has_high_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_PriceData::clear_has_high_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_PriceData::clear_high_price() {
  high_price_ = 0;
  clear_has_high_price();
}
inline float ProductData_PriceData::high_price() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.PriceData.high_price)
  return high_price_;
}
inline void ProductData_PriceData::set_high_price(float value) {
  set_has_high_price();
  high_price_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.PriceData.high_price)
}

// -------------------------------------------------------------------

// ProductData_ProductStat

// required uint32 version = 1;
inline bool ProductData_ProductStat::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_ProductStat::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_ProductStat::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_ProductStat::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ProductData_ProductStat::version() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.version)
  return version_;
}
inline void ProductData_ProductStat::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.version)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData old_price = 2;
inline bool ProductData_ProductStat::has_old_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_ProductStat::set_has_old_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_ProductStat::clear_has_old_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_ProductStat::clear_old_price() {
  if (old_price_ != NULL) old_price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_old_price();
}
inline const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ProductStat::old_price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = old_price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::mutable_old_price() {
  set_has_old_price();
  if (old_price_ == NULL) {
    _slow_mutable_old_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  return old_price_;
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::release_old_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
  clear_has_old_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_old_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = old_price_;
    old_price_ = NULL;
    return temp;
  }
}
inline  void ProductData_ProductStat::set_allocated_old_price(::pandao_imgsearcher::pb::ProductData_PriceData* old_price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete old_price_;
  }
  if (old_price != NULL) {
    _slow_set_allocated_old_price(message_arena, &old_price);
  }
  old_price_ = old_price;
  if (old_price) {
    set_has_old_price();
  } else {
    clear_has_old_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.old_price)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData price = 3;
inline bool ProductData_ProductStat::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_ProductStat::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_ProductStat::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_ProductStat::clear_price() {
  if (price_ != NULL) price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_price();
}
inline const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ProductStat::price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::mutable_price() {
  set_has_price();
  if (price_ == NULL) {
    _slow_mutable_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  return price_;
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ProductStat::release_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ProductStat.price)
  clear_has_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
    price_ = NULL;
    return temp;
  }
}
inline  void ProductData_ProductStat::set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete price_;
  }
  if (price != NULL) {
    _slow_set_allocated_price(message_arena, &price);
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ProductStat.price)
}

// optional float orders_cnt = 4;
inline bool ProductData_ProductStat::has_orders_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductData_ProductStat::set_has_orders_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductData_ProductStat::clear_has_orders_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductData_ProductStat::clear_orders_cnt() {
  orders_cnt_ = 0;
  clear_has_orders_cnt();
}
inline float ProductData_ProductStat::orders_cnt() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.orders_cnt)
  return orders_cnt_;
}
inline void ProductData_ProductStat::set_orders_cnt(float value) {
  set_has_orders_cnt();
  orders_cnt_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.orders_cnt)
}

// optional float total_rating = 5;
inline bool ProductData_ProductStat::has_total_rating() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProductData_ProductStat::set_has_total_rating() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProductData_ProductStat::clear_has_total_rating() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProductData_ProductStat::clear_total_rating() {
  total_rating_ = 0;
  clear_has_total_rating();
}
inline float ProductData_ProductStat::total_rating() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.total_rating)
  return total_rating_;
}
inline void ProductData_ProductStat::set_total_rating(float value) {
  set_has_total_rating();
  total_rating_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.total_rating)
}

// optional float reviews_cnt = 6;
inline bool ProductData_ProductStat::has_reviews_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProductData_ProductStat::set_has_reviews_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProductData_ProductStat::clear_has_reviews_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProductData_ProductStat::clear_reviews_cnt() {
  reviews_cnt_ = 0;
  clear_has_reviews_cnt();
}
inline float ProductData_ProductStat::reviews_cnt() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.reviews_cnt)
  return reviews_cnt_;
}
inline void ProductData_ProductStat::set_reviews_cnt(float value) {
  set_has_reviews_cnt();
  reviews_cnt_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.reviews_cnt)
}

// repeated .pandao_imgsearcher.pb.ProductData.ShippingData shipping_data = 7;
inline int ProductData_ProductStat::shipping_data_size() const {
  return shipping_data_.size();
}
inline void ProductData_ProductStat::clear_shipping_data() {
  shipping_data_.Clear();
}
inline const ::pandao_imgsearcher::pb::ProductData_ShippingData& ProductData_ProductStat::shipping_data(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Get(index);
}
inline ::pandao_imgsearcher::pb::ProductData_ShippingData* ProductData_ProductStat::mutable_shipping_data(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Mutable(index);
}
inline ::pandao_imgsearcher::pb::ProductData_ShippingData* ProductData_ProductStat::add_shipping_data() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >*
ProductData_ProductStat::mutable_shipping_data() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return &shipping_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ShippingData >&
ProductData_ProductStat::shipping_data() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.ProductStat.shipping_data)
  return shipping_data_;
}

// optional bool deleted = 8;
inline bool ProductData_ProductStat::has_deleted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProductData_ProductStat::set_has_deleted() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProductData_ProductStat::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProductData_ProductStat::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool ProductData_ProductStat::deleted() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ProductStat.deleted)
  return deleted_;
}
inline void ProductData_ProductStat::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ProductStat.deleted)
}

// -------------------------------------------------------------------

// ProductData_DurationData

// required .pandao_imgsearcher.pb.ProductData.TimeUnit time_unit = 1;
inline bool ProductData_DurationData::has_time_unit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_DurationData::set_has_time_unit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_DurationData::clear_has_time_unit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_DurationData::clear_time_unit() {
  time_unit_ = 0;
  clear_has_time_unit();
}
inline ::pandao_imgsearcher::pb::ProductData_TimeUnit ProductData_DurationData::time_unit() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.time_unit)
  return static_cast< ::pandao_imgsearcher::pb::ProductData_TimeUnit >(time_unit_);
}
inline void ProductData_DurationData::set_time_unit(::pandao_imgsearcher::pb::ProductData_TimeUnit value) {
  assert(::pandao_imgsearcher::pb::ProductData_TimeUnit_IsValid(value));
  set_has_time_unit();
  time_unit_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.time_unit)
}

// required float low_time = 2;
inline bool ProductData_DurationData::has_low_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_DurationData::set_has_low_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_DurationData::clear_has_low_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_DurationData::clear_low_time() {
  low_time_ = 0;
  clear_has_low_time();
}
inline float ProductData_DurationData::low_time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.low_time)
  return low_time_;
}
inline void ProductData_DurationData::set_low_time(float value) {
  set_has_low_time();
  low_time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.low_time)
}

// optional float high_time = 3;
inline bool ProductData_DurationData::has_high_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_DurationData::set_has_high_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_DurationData::clear_has_high_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_DurationData::clear_high_time() {
  high_time_ = 0;
  clear_has_high_time();
}
inline float ProductData_DurationData::high_time() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.DurationData.high_time)
  return high_time_;
}
inline void ProductData_DurationData::set_high_time(float value) {
  set_has_high_time();
  high_time_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.DurationData.high_time)
}

// -------------------------------------------------------------------

// ProductData_ShippingData

// required .pandao_imgsearcher.pb.ProductData.DurationData duration = 1;
inline bool ProductData_ShippingData::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData_ShippingData::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData_ShippingData::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData_ShippingData::clear_duration() {
  if (duration_ != NULL) duration_->::pandao_imgsearcher::pb::ProductData_DurationData::Clear();
  clear_has_duration();
}
inline const ::pandao_imgsearcher::pb::ProductData_DurationData& ProductData_ShippingData::duration() const {
  const ::pandao_imgsearcher::pb::ProductData_DurationData* p = duration_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_DurationData*>(
      &::pandao_imgsearcher::pb::_ProductData_DurationData_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::mutable_duration() {
  set_has_duration();
  if (duration_ == NULL) {
    _slow_mutable_duration();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  return duration_;
}
inline ::pandao_imgsearcher::pb::ProductData_DurationData* ProductData_ShippingData::release_duration() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
  clear_has_duration();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_duration();
  } else {
    ::pandao_imgsearcher::pb::ProductData_DurationData* temp = duration_;
    duration_ = NULL;
    return temp;
  }
}
inline  void ProductData_ShippingData::set_allocated_duration(::pandao_imgsearcher::pb::ProductData_DurationData* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete duration_;
  }
  if (duration != NULL) {
    _slow_set_allocated_duration(message_arena, &duration);
  }
  duration_ = duration;
  if (duration) {
    set_has_duration();
  } else {
    clear_has_duration();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.duration)
}

// optional .pandao_imgsearcher.pb.ProductData.PriceData price = 2;
inline bool ProductData_ShippingData::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData_ShippingData::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData_ShippingData::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData_ShippingData::clear_price() {
  if (price_ != NULL) price_->::pandao_imgsearcher::pb::ProductData_PriceData::Clear();
  clear_has_price();
}
inline const ::pandao_imgsearcher::pb::ProductData_PriceData& ProductData_ShippingData::price() const {
  const ::pandao_imgsearcher::pb::ProductData_PriceData* p = price_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_PriceData*>(
      &::pandao_imgsearcher::pb::_ProductData_PriceData_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::mutable_price() {
  set_has_price();
  if (price_ == NULL) {
    _slow_mutable_price();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  return price_;
}
inline ::pandao_imgsearcher::pb::ProductData_PriceData* ProductData_ShippingData::release_price() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.price)
  clear_has_price();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_price();
  } else {
    ::pandao_imgsearcher::pb::ProductData_PriceData* temp = price_;
    price_ = NULL;
    return temp;
  }
}
inline  void ProductData_ShippingData::set_allocated_price(::pandao_imgsearcher::pb::ProductData_PriceData* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete price_;
  }
  if (price != NULL) {
    _slow_set_allocated_price(message_arena, &price);
  }
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.price)
}

// optional string company = 3;
inline bool ProductData_ShippingData::has_company() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData_ShippingData::set_has_company() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData_ShippingData::clear_has_company() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData_ShippingData::clear_company() {
  company_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_company();
}
inline const ::std::string& ProductData_ShippingData::company() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  return company_.Get();
}
inline void ProductData_ShippingData::set_company(const ::std::string& value) {
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
#if LANG_CXX11
inline void ProductData_ShippingData::set_company(::std::string&& value) {
  set_has_company();
  company_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
#endif
inline void ProductData_ShippingData::set_company(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
inline void ProductData_ShippingData::set_company(const char* value,
    size_t size) {
  set_has_company();
  company_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
inline ::std::string* ProductData_ShippingData::mutable_company() {
  set_has_company();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  return company_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_ShippingData::release_company() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  clear_has_company();
  return company_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData_ShippingData::unsafe_arena_release_company() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductData.ShippingData.company)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_company();
  return company_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData_ShippingData::set_allocated_company(::std::string* company) {
  if (company != NULL) {
    set_has_company();
  } else {
    clear_has_company();
  }
  company_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}
inline void ProductData_ShippingData::unsafe_arena_set_allocated_company(
    ::std::string* company) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (company != NULL) {
    set_has_company();
  } else {
    clear_has_company();
  }
  company_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      company, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductData.ShippingData.company)
}

// -------------------------------------------------------------------

// ProductData

// required sfixed64 product_id = 1;
inline bool ProductData::has_product_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductData::set_has_product_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductData::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductData::clear_product_id() {
  product_id_ = GOOGLE_LONGLONG(0);
  clear_has_product_id();
}
inline ::google::protobuf::int64 ProductData::product_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.product_id)
  return product_id_;
}
inline void ProductData::set_product_id(::google::protobuf::int64 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductData.product_id)
}

// optional .pandao_imgsearcher.pb.ProductData.OriginalInfo original_info = 2;
inline bool ProductData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::ProductData_OriginalInfo::Clear();
  clear_has_original_info();
}
inline const ::pandao_imgsearcher::pb::ProductData_OriginalInfo& ProductData::original_info() const {
  const ::pandao_imgsearcher::pb::ProductData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_ProductData_OriginalInfo_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.original_info)
  return original_info_;
}
inline ::pandao_imgsearcher::pb::ProductData_OriginalInfo* ProductData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::ProductData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
inline  void ProductData::set_allocated_original_info(::pandao_imgsearcher::pb::ProductData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.original_info)
}

// optional .pandao_imgsearcher.pb.ProductData.AnnoyIndexMeta annoy_index_meta = 3;
inline bool ProductData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
inline const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta& ProductData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_ProductData_AnnoyIndexMeta_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  return annoy_index_meta_;
}
inline ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* ProductData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
inline  void ProductData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ProductData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.annoy_index_meta)
}

// optional .pandao_imgsearcher.pb.ProductData.CommentsData comments_data = 4;
inline bool ProductData::has_comments_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData::set_has_comments_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData::clear_has_comments_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData::clear_comments_data() {
  if (comments_data_ != NULL) comments_data_->::pandao_imgsearcher::pb::ProductData_CommentsData::Clear();
  clear_has_comments_data();
}
inline const ::pandao_imgsearcher::pb::ProductData_CommentsData& ProductData::comments_data() const {
  const ::pandao_imgsearcher::pb::ProductData_CommentsData* p = comments_data_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.comments_data)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ProductData_CommentsData*>(
      &::pandao_imgsearcher::pb::_ProductData_CommentsData_default_instance_);
}
inline ::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::mutable_comments_data() {
  set_has_comments_data();
  if (comments_data_ == NULL) {
    _slow_mutable_comments_data();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.comments_data)
  return comments_data_;
}
inline ::pandao_imgsearcher::pb::ProductData_CommentsData* ProductData::release_comments_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductData.comments_data)
  clear_has_comments_data();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_comments_data();
  } else {
    ::pandao_imgsearcher::pb::ProductData_CommentsData* temp = comments_data_;
    comments_data_ = NULL;
    return temp;
  }
}
inline  void ProductData::set_allocated_comments_data(::pandao_imgsearcher::pb::ProductData_CommentsData* comments_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comments_data_;
  }
  if (comments_data != NULL) {
    _slow_set_allocated_comments_data(message_arena, &comments_data);
  }
  comments_data_ = comments_data;
  if (comments_data) {
    set_has_comments_data();
  } else {
    clear_has_comments_data();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductData.comments_data)
}

// repeated .pandao_imgsearcher.pb.ProductData.ProductStat product_stat = 5;
inline int ProductData::product_stat_size() const {
  return product_stat_.size();
}
inline void ProductData::clear_product_stat() {
  product_stat_.Clear();
}
inline const ::pandao_imgsearcher::pb::ProductData_ProductStat& ProductData::product_stat(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Get(index);
}
inline ::pandao_imgsearcher::pb::ProductData_ProductStat* ProductData::mutable_product_stat(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Mutable(index);
}
inline ::pandao_imgsearcher::pb::ProductData_ProductStat* ProductData::add_product_stat() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >*
ProductData::mutable_product_stat() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductData.product_stat)
  return &product_stat_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductData_ProductStat >&
ProductData::product_stat() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductData.product_stat)
  return product_stat_;
}

// -------------------------------------------------------------------

// EmbeddList_Embedding

// required string url = 1;
inline bool EmbeddList_Embedding::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmbeddList_Embedding::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmbeddList_Embedding::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmbeddList_Embedding::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
inline const ::std::string& EmbeddList_Embedding::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  return url_.Get();
}
inline void EmbeddList_Embedding::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
#if LANG_CXX11
inline void EmbeddList_Embedding::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
#endif
inline void EmbeddList_Embedding::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
inline void EmbeddList_Embedding::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
inline ::std::string* EmbeddList_Embedding::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbeddList_Embedding::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbeddList_Embedding::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EmbeddList_Embedding::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}
inline void EmbeddList_Embedding::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.url)
}

// required bytes data = 2;
inline bool EmbeddList_Embedding::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmbeddList_Embedding::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmbeddList_Embedding::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmbeddList_Embedding::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
inline const ::std::string& EmbeddList_Embedding::data() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  return data_.Get();
}
inline void EmbeddList_Embedding::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
#if LANG_CXX11
inline void EmbeddList_Embedding::set_data(::std::string&& value) {
  set_has_data();
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
#endif
inline void EmbeddList_Embedding::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
inline void EmbeddList_Embedding::set_data(const void* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
inline ::std::string* EmbeddList_Embedding::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbeddList_Embedding::release_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbeddList_Embedding::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EmbeddList_Embedding::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}
inline void EmbeddList_Embedding::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbeddList.Embedding.data)
}

// -------------------------------------------------------------------

// EmbeddList

// repeated .pandao_imgsearcher.pb.EmbeddList.Embedding embed_list = 1;
inline int EmbeddList::embed_list_size() const {
  return embed_list_.size();
}
inline void EmbeddList::clear_embed_list() {
  embed_list_.Clear();
}
inline const ::pandao_imgsearcher::pb::EmbeddList_Embedding& EmbeddList::embed_list(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Get(index);
}
inline ::pandao_imgsearcher::pb::EmbeddList_Embedding* EmbeddList::mutable_embed_list(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Mutable(index);
}
inline ::pandao_imgsearcher::pb::EmbeddList_Embedding* EmbeddList::add_embed_list() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >*
EmbeddList::mutable_embed_list() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return &embed_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::EmbeddList_Embedding >&
EmbeddList::embed_list() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.EmbeddList.embed_list)
  return embed_list_;
}

// -------------------------------------------------------------------

// EmbedData_OriginalInfo

// required string url = 1;
inline bool EmbedData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmbedData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmbedData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmbedData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
inline const ::std::string& EmbedData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  return url_.Get();
}
inline void EmbedData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
#if LANG_CXX11
inline void EmbedData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
#endif
inline void EmbedData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
inline void EmbedData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
inline ::std::string* EmbedData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbedData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EmbedData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EmbedData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}
inline void EmbedData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.EmbedData.OriginalInfo.url)
}

// -------------------------------------------------------------------

// EmbedData_AnnoyIndexMeta

// required uint32 annoy_idx_id = 1;
inline bool EmbedData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmbedData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmbedData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmbedData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
inline ::google::protobuf::uint32 EmbedData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
inline void EmbedData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_idx_id)
}

// required uint32 annoy_img_id = 2;
inline bool EmbedData_AnnoyIndexMeta::has_annoy_img_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmbedData_AnnoyIndexMeta::set_has_annoy_img_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmbedData_AnnoyIndexMeta::clear_has_annoy_img_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmbedData_AnnoyIndexMeta::clear_annoy_img_id() {
  annoy_img_id_ = 0u;
  clear_has_annoy_img_id();
}
inline ::google::protobuf::uint32 EmbedData_AnnoyIndexMeta::annoy_img_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_img_id)
  return annoy_img_id_;
}
inline void EmbedData_AnnoyIndexMeta::set_annoy_img_id(::google::protobuf::uint32 value) {
  set_has_annoy_img_id();
  annoy_img_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta.annoy_img_id)
}

// -------------------------------------------------------------------

// EmbedData

// required sfixed64 image_id = 1;
inline bool EmbedData::has_image_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EmbedData::set_has_image_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EmbedData::clear_has_image_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EmbedData::clear_image_id() {
  image_id_ = GOOGLE_LONGLONG(0);
  clear_has_image_id();
}
inline ::google::protobuf::int64 EmbedData::image_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.image_id)
  return image_id_;
}
inline void EmbedData::set_image_id(::google::protobuf::int64 value) {
  set_has_image_id();
  image_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.EmbedData.image_id)
}

// optional .pandao_imgsearcher.pb.EmbedData.OriginalInfo original_info = 2;
inline bool EmbedData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmbedData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmbedData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmbedData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::EmbedData_OriginalInfo::Clear();
  clear_has_original_info();
}
inline const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo& EmbedData::original_info() const {
  const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::EmbedData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_EmbedData_OriginalInfo_default_instance_);
}
inline ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.original_info)
  return original_info_;
}
inline ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* EmbedData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::EmbedData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
inline  void EmbedData::set_allocated_original_info(::pandao_imgsearcher::pb::EmbedData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.original_info)
}

// optional .pandao_imgsearcher.pb.EmbedData.AnnoyIndexMeta annoy_index_meta = 3;
inline bool EmbedData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmbedData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmbedData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmbedData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
inline const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta& EmbedData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_EmbedData_AnnoyIndexMeta_default_instance_);
}
inline ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  return annoy_index_meta_;
}
inline ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* EmbedData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
inline  void EmbedData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::EmbedData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.EmbedData.annoy_index_meta)
}

// -------------------------------------------------------------------

// ImageData_OriginalInfo

// required string url = 1;
inline bool ImageData_OriginalInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageData_OriginalInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageData_OriginalInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageData_OriginalInfo::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
inline const ::std::string& ImageData_OriginalInfo::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  return url_.Get();
}
inline void ImageData_OriginalInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
#if LANG_CXX11
inline void ImageData_OriginalInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
#endif
inline void ImageData_OriginalInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
inline void ImageData_OriginalInfo::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
inline ::std::string* ImageData_OriginalInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImageData_OriginalInfo::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImageData_OriginalInfo::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImageData_OriginalInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}
inline void ImageData_OriginalInfo::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ImageData.OriginalInfo.url)
}

// -------------------------------------------------------------------

// ImageData_AnnoyIndexMeta

// required uint32 annoy_idx_id = 1;
inline bool ImageData_AnnoyIndexMeta::has_annoy_idx_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageData_AnnoyIndexMeta::set_has_annoy_idx_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageData_AnnoyIndexMeta::clear_has_annoy_idx_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageData_AnnoyIndexMeta::clear_annoy_idx_id() {
  annoy_idx_id_ = 0u;
  clear_has_annoy_idx_id();
}
inline ::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_idx_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_idx_id)
  return annoy_idx_id_;
}
inline void ImageData_AnnoyIndexMeta::set_annoy_idx_id(::google::protobuf::uint32 value) {
  set_has_annoy_idx_id();
  annoy_idx_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_idx_id)
}

// required uint32 annoy_img_id = 2;
inline bool ImageData_AnnoyIndexMeta::has_annoy_img_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageData_AnnoyIndexMeta::set_has_annoy_img_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageData_AnnoyIndexMeta::clear_has_annoy_img_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageData_AnnoyIndexMeta::clear_annoy_img_id() {
  annoy_img_id_ = 0u;
  clear_has_annoy_img_id();
}
inline ::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_img_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_img_id)
  return annoy_img_id_;
}
inline void ImageData_AnnoyIndexMeta::set_annoy_img_id(::google::protobuf::uint32 value) {
  set_has_annoy_img_id();
  annoy_img_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_img_id)
}

// required uint32 annoy_prod_id = 3;
inline bool ImageData_AnnoyIndexMeta::has_annoy_prod_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageData_AnnoyIndexMeta::set_has_annoy_prod_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageData_AnnoyIndexMeta::clear_has_annoy_prod_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageData_AnnoyIndexMeta::clear_annoy_prod_id() {
  annoy_prod_id_ = 0u;
  clear_has_annoy_prod_id();
}
inline ::google::protobuf::uint32 ImageData_AnnoyIndexMeta::annoy_prod_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_prod_id)
  return annoy_prod_id_;
}
inline void ImageData_AnnoyIndexMeta::set_annoy_prod_id(::google::protobuf::uint32 value) {
  set_has_annoy_prod_id();
  annoy_prod_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta.annoy_prod_id)
}

// -------------------------------------------------------------------

// ImageData

// required sfixed64 product_id = 1;
inline bool ImageData::has_product_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageData::set_has_product_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageData::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageData::clear_product_id() {
  product_id_ = GOOGLE_LONGLONG(0);
  clear_has_product_id();
}
inline ::google::protobuf::int64 ImageData::product_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.product_id)
  return product_id_;
}
inline void ImageData::set_product_id(::google::protobuf::int64 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.product_id)
}

// required sfixed64 image_id = 2;
inline bool ImageData::has_image_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageData::set_has_image_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImageData::clear_has_image_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImageData::clear_image_id() {
  image_id_ = GOOGLE_LONGLONG(0);
  clear_has_image_id();
}
inline ::google::protobuf::int64 ImageData::image_id() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.image_id)
  return image_id_;
}
inline void ImageData::set_image_id(::google::protobuf::int64 value) {
  set_has_image_id();
  image_id_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ImageData.image_id)
}

// optional .pandao_imgsearcher.pb.ImageData.OriginalInfo original_info = 3;
inline bool ImageData::has_original_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageData::set_has_original_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageData::clear_has_original_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageData::clear_original_info() {
  if (original_info_ != NULL) original_info_->::pandao_imgsearcher::pb::ImageData_OriginalInfo::Clear();
  clear_has_original_info();
}
inline const ::pandao_imgsearcher::pb::ImageData_OriginalInfo& ImageData::original_info() const {
  const ::pandao_imgsearcher::pb::ImageData_OriginalInfo* p = original_info_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.original_info)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ImageData_OriginalInfo*>(
      &::pandao_imgsearcher::pb::_ImageData_OriginalInfo_default_instance_);
}
inline ::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::mutable_original_info() {
  set_has_original_info();
  if (original_info_ == NULL) {
    _slow_mutable_original_info();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.original_info)
  return original_info_;
}
inline ::pandao_imgsearcher::pb::ImageData_OriginalInfo* ImageData::release_original_info() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.original_info)
  clear_has_original_info();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_original_info();
  } else {
    ::pandao_imgsearcher::pb::ImageData_OriginalInfo* temp = original_info_;
    original_info_ = NULL;
    return temp;
  }
}
inline  void ImageData::set_allocated_original_info(::pandao_imgsearcher::pb::ImageData_OriginalInfo* original_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_info_;
  }
  if (original_info != NULL) {
    _slow_set_allocated_original_info(message_arena, &original_info);
  }
  original_info_ = original_info;
  if (original_info) {
    set_has_original_info();
  } else {
    clear_has_original_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.original_info)
}

// optional .pandao_imgsearcher.pb.ImageData.AnnoyIndexMeta annoy_index_meta = 4;
inline bool ImageData::has_annoy_index_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageData::set_has_annoy_index_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageData::clear_has_annoy_index_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageData::clear_annoy_index_meta() {
  if (annoy_index_meta_ != NULL) annoy_index_meta_->::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta::Clear();
  clear_has_annoy_index_meta();
}
inline const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta& ImageData::annoy_index_meta() const {
  const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* p = annoy_index_meta_;
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  return p != NULL ? *p : *reinterpret_cast<const ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta*>(
      &::pandao_imgsearcher::pb::_ImageData_AnnoyIndexMeta_default_instance_);
}
inline ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::mutable_annoy_index_meta() {
  set_has_annoy_index_meta();
  if (annoy_index_meta_ == NULL) {
    _slow_mutable_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  return annoy_index_meta_;
}
inline ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* ImageData::release_annoy_index_meta() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
  clear_has_annoy_index_meta();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_annoy_index_meta();
  } else {
    ::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* temp = annoy_index_meta_;
    annoy_index_meta_ = NULL;
    return temp;
  }
}
inline  void ImageData::set_allocated_annoy_index_meta(::pandao_imgsearcher::pb::ImageData_AnnoyIndexMeta* annoy_index_meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete annoy_index_meta_;
  }
  if (annoy_index_meta != NULL) {
    _slow_set_allocated_annoy_index_meta(message_arena, &annoy_index_meta);
  }
  annoy_index_meta_ = annoy_index_meta;
  if (annoy_index_meta) {
    set_has_annoy_index_meta();
  } else {
    clear_has_annoy_index_meta();
  }
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ImageData.annoy_index_meta)
}

// -------------------------------------------------------------------

// ProductImages_ProductImage

// required string url = 1;
inline bool ProductImages_ProductImage::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductImages_ProductImage::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductImages_ProductImage::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductImages_ProductImage::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_url();
}
inline const ::std::string& ProductImages_ProductImage::url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  return url_.Get();
}
inline void ProductImages_ProductImage::set_url(const ::std::string& value) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
#if LANG_CXX11
inline void ProductImages_ProductImage::set_url(::std::string&& value) {
  set_has_url();
  url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
#endif
inline void ProductImages_ProductImage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
inline void ProductImages_ProductImage::set_url(const char* value,
    size_t size) {
  set_has_url();
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
inline ::std::string* ProductImages_ProductImage::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages_ProductImage::release_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  clear_has_url();
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages_ProductImage::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_url();
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductImages_ProductImage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}
inline void ProductImages_ProductImage::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.url)
}

// required bytes data = 2;
inline bool ProductImages_ProductImage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductImages_ProductImage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductImages_ProductImage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductImages_ProductImage::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_data();
}
inline const ::std::string& ProductImages_ProductImage::data() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  return data_.Get();
}
inline void ProductImages_ProductImage::set_data(const ::std::string& value) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
#if LANG_CXX11
inline void ProductImages_ProductImage::set_data(::std::string&& value) {
  set_has_data();
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
#endif
inline void ProductImages_ProductImage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
inline void ProductImages_ProductImage::set_data(const void* value,
    size_t size) {
  set_has_data();
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
inline ::std::string* ProductImages_ProductImage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages_ProductImage::release_data() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  clear_has_data();
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages_ProductImage::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_data();
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductImages_ProductImage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}
inline void ProductImages_ProductImage::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.ProductImage.data)
}

// -------------------------------------------------------------------

// ProductImages

// required string product_url = 1;
inline bool ProductImages::has_product_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductImages::set_has_product_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductImages::clear_has_product_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductImages::clear_product_url() {
  product_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_product_url();
}
inline const ::std::string& ProductImages::product_url() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.product_url)
  return product_url_.Get();
}
inline void ProductImages::set_product_url(const ::std::string& value) {
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.product_url)
}
#if LANG_CXX11
inline void ProductImages::set_product_url(::std::string&& value) {
  set_has_product_url();
  product_url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.product_url)
}
#endif
inline void ProductImages::set_product_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.product_url)
}
inline void ProductImages::set_product_url(const char* value,
    size_t size) {
  set_has_product_url();
  product_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.product_url)
}
inline ::std::string* ProductImages::mutable_product_url() {
  set_has_product_url();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.product_url)
  return product_url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages::release_product_url() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.product_url)
  clear_has_product_url();
  return product_url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages::unsafe_arena_release_product_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.product_url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_product_url();
  return product_url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductImages::set_allocated_product_url(::std::string* product_url) {
  if (product_url != NULL) {
    set_has_product_url();
  } else {
    clear_has_product_url();
  }
  product_url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.product_url)
}
inline void ProductImages::unsafe_arena_set_allocated_product_url(
    ::std::string* product_url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_url != NULL) {
    set_has_product_url();
  } else {
    clear_has_product_url();
  }
  product_url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.product_url)
}

// optional string host = 2;
inline bool ProductImages::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductImages::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductImages::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductImages::clear_host() {
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_host();
}
inline const ::std::string& ProductImages::host() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.host)
  return host_.Get();
}
inline void ProductImages::set_host(const ::std::string& value) {
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.host)
}
#if LANG_CXX11
inline void ProductImages::set_host(::std::string&& value) {
  set_has_host();
  host_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_imgsearcher.pb.ProductImages.host)
}
#endif
inline void ProductImages::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_imgsearcher.pb.ProductImages.host)
}
inline void ProductImages::set_host(const char* value,
    size_t size) {
  set_has_host();
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_imgsearcher.pb.ProductImages.host)
}
inline ::std::string* ProductImages::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.host)
  return host_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages::release_host() {
  // @@protoc_insertion_point(field_release:pandao_imgsearcher.pb.ProductImages.host)
  clear_has_host();
  return host_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductImages::unsafe_arena_release_host() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_imgsearcher.pb.ProductImages.host)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_host();
  return host_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductImages::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_imgsearcher.pb.ProductImages.host)
}
inline void ProductImages::unsafe_arena_set_allocated_host(
    ::std::string* host) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      host, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_imgsearcher.pb.ProductImages.host)
}

// repeated .pandao_imgsearcher.pb.ProductImages.ProductImage product_images = 3;
inline int ProductImages::product_images_size() const {
  return product_images_.size();
}
inline void ProductImages::clear_product_images() {
  product_images_.Clear();
}
inline const ::pandao_imgsearcher::pb::ProductImages_ProductImage& ProductImages::product_images(int index) const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Get(index);
}
inline ::pandao_imgsearcher::pb::ProductImages_ProductImage* ProductImages::mutable_product_images(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Mutable(index);
}
inline ::pandao_imgsearcher::pb::ProductImages_ProductImage* ProductImages::add_product_images() {
  // @@protoc_insertion_point(field_add:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >*
ProductImages::mutable_product_images() {
  // @@protoc_insertion_point(field_mutable_list:pandao_imgsearcher.pb.ProductImages.product_images)
  return &product_images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_imgsearcher::pb::ProductImages_ProductImage >&
ProductImages::product_images() const {
  // @@protoc_insertion_point(field_list:pandao_imgsearcher.pb.ProductImages.product_images)
  return product_images_;
}

// optional sfixed64 hash = 4;
inline bool ProductImages::has_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductImages::set_has_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductImages::clear_has_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductImages::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
  clear_has_hash();
}
inline ::google::protobuf::int64 ProductImages::hash() const {
  // @@protoc_insertion_point(field_get:pandao_imgsearcher.pb.ProductImages.hash)
  return hash_;
}
inline void ProductImages::set_hash(::google::protobuf::int64 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:pandao_imgsearcher.pb.ProductImages.hash)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace pandao_imgsearcher

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pandao_imgsearcher::pb::ProductData_Currency> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pandao_imgsearcher::pb::ProductData_Currency>() {
  return ::pandao_imgsearcher::pb::ProductData_Currency_descriptor();
}
template <> struct is_proto_enum< ::pandao_imgsearcher::pb::ProductData_TimeUnit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pandao_imgsearcher::pb::ProductData_TimeUnit>() {
  return ::pandao_imgsearcher::pb::ProductData_TimeUnit_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pandao_5fimgsearcher_2eproto__INCLUDED
