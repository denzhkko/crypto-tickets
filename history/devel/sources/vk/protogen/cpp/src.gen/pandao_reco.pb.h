// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pandao_reco.proto

#ifndef PROTOBUF_pandao_5freco_2eproto__INCLUDED
#define PROTOBUF_pandao_5freco_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pandao_reco {
namespace pb {
class CategoryData;
class CategoryDataDefaultTypeInternal;
extern CategoryDataDefaultTypeInternal _CategoryData_default_instance_;
class Error;
class ErrorDefaultTypeInternal;
extern ErrorDefaultTypeInternal _Error_default_instance_;
class PandaoOutput;
class PandaoOutputDefaultTypeInternal;
extern PandaoOutputDefaultTypeInternal _PandaoOutput_default_instance_;
class ProductData;
class ProductDataDefaultTypeInternal;
extern ProductDataDefaultTypeInternal _ProductData_default_instance_;
}  // namespace pb
}  // namespace pandao_reco

namespace pandao_reco {
namespace pb {

namespace protobuf_pandao_5freco_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pandao_5freco_2eproto

enum CurrencyType {
  RUB = 1
};
bool CurrencyType_IsValid(int value);
const CurrencyType CurrencyType_MIN = RUB;
const CurrencyType CurrencyType_MAX = RUB;
const int CurrencyType_ARRAYSIZE = CurrencyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CurrencyType_descriptor();
inline const ::std::string& CurrencyType_Name(CurrencyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CurrencyType_descriptor(), value);
}
inline bool CurrencyType_Parse(
    const ::std::string& name, CurrencyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CurrencyType>(
    CurrencyType_descriptor(), name, value);
}
// ===================================================================

class CategoryData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_reco.pb.CategoryData) */ {
 public:
  CategoryData();
  virtual ~CategoryData();

  CategoryData(const CategoryData& from);

  inline CategoryData& operator=(const CategoryData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CategoryData(CategoryData&& from) noexcept
    : CategoryData() {
    *this = ::std::move(from);
  }

  inline CategoryData& operator=(CategoryData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CategoryData& default_instance();

  static inline const CategoryData* internal_default_instance() {
    return reinterpret_cast<const CategoryData*>(
               &_CategoryData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(CategoryData* other);
  void Swap(CategoryData* other);
  friend void swap(CategoryData& a, CategoryData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CategoryData* New() const PROTOBUF_FINAL { return New(NULL); }

  CategoryData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CategoryData& from);
  void MergeFrom(const CategoryData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CategoryData* other);
  protected:
  explicit CategoryData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // optional string parentId = 3;
  bool has_parentid() const;
  void clear_parentid();
  static const int kParentIdFieldNumber = 3;
  const ::std::string& parentid() const;
  void set_parentid(const ::std::string& value);
  #if LANG_CXX11
  void set_parentid(::std::string&& value);
  #endif
  void set_parentid(const char* value);
  void set_parentid(const char* value, size_t size);
  ::std::string* mutable_parentid();
  ::std::string* release_parentid();
  void set_allocated_parentid(::std::string* parentid);
  ::std::string* unsafe_arena_release_parentid();
  void unsafe_arena_set_allocated_parentid(
      ::std::string* parentid);

  // @@protoc_insertion_point(class_scope:pandao_reco.pb.CategoryData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_parentid();
  void clear_has_parentid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr parentid_;
  friend struct protobuf_pandao_5freco_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_reco.pb.ProductData) */ {
 public:
  ProductData();
  virtual ~ProductData();

  ProductData(const ProductData& from);

  inline ProductData& operator=(const ProductData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductData(ProductData&& from) noexcept
    : ProductData() {
    *this = ::std::move(from);
  }

  inline ProductData& operator=(ProductData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductData& default_instance();

  static inline const ProductData* internal_default_instance() {
    return reinterpret_cast<const ProductData*>(
               &_ProductData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ProductData* other);
  void Swap(ProductData* other);
  friend void swap(ProductData& a, ProductData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductData* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductData& from);
  void MergeFrom(const ProductData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductData* other);
  protected:
  explicit ProductData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string categories = 4;
  int categories_size() const;
  void clear_categories();
  static const int kCategoriesFieldNumber = 4;
  const ::std::string& categories(int index) const;
  ::std::string* mutable_categories(int index);
  void set_categories(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_categories(int index, ::std::string&& value);
  #endif
  void set_categories(int index, const char* value);
  void set_categories(int index, const char* value, size_t size);
  ::std::string* add_categories();
  void add_categories(const ::std::string& value);
  #if LANG_CXX11
  void add_categories(::std::string&& value);
  #endif
  void add_categories(const char* value);
  void add_categories(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& categories() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_categories();

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // optional string title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);
  ::std::string* unsafe_arena_release_title();
  void unsafe_arena_set_allocated_title(
      ::std::string* title);

  // optional string merchantid = 5;
  bool has_merchantid() const;
  void clear_merchantid();
  static const int kMerchantidFieldNumber = 5;
  const ::std::string& merchantid() const;
  void set_merchantid(const ::std::string& value);
  #if LANG_CXX11
  void set_merchantid(::std::string&& value);
  #endif
  void set_merchantid(const char* value);
  void set_merchantid(const char* value, size_t size);
  ::std::string* mutable_merchantid();
  ::std::string* release_merchantid();
  void set_allocated_merchantid(::std::string* merchantid);
  ::std::string* unsafe_arena_release_merchantid();
  void unsafe_arena_set_allocated_merchantid(
      ::std::string* merchantid);

  // optional float rank = 2;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  float rank() const;
  void set_rank(float value);

  // optional uint32 orders_count_week = 7;
  bool has_orders_count_week() const;
  void clear_orders_count_week();
  static const int kOrdersCountWeekFieldNumber = 7;
  ::google::protobuf::uint32 orders_count_week() const;
  void set_orders_count_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pandao_reco.pb.ProductData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_rank();
  void clear_has_rank();
  void set_has_title();
  void clear_has_title();
  void set_has_merchantid();
  void clear_has_merchantid();
  void set_has_orders_count_week();
  void clear_has_orders_count_week();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> categories_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr merchantid_;
  float rank_;
  ::google::protobuf::uint32 orders_count_week_;
  friend struct protobuf_pandao_5freco_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_reco.pb.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Error(Error&& from) noexcept
    : Error() {
    *this = ::std::move(from);
  }

  inline Error& operator=(Error&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static inline const Error* internal_default_instance() {
    return reinterpret_cast<const Error*>(
               &_Error_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Error* other);
  void Swap(Error* other);
  friend void swap(Error& a, Error& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Error* New() const PROTOBUF_FINAL { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Error* other);
  protected:
  explicit Error(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);
  ::std::string* unsafe_arena_release_msg();
  void unsafe_arena_set_allocated_msg(
      ::std::string* msg);

  // @@protoc_insertion_point(class_scope:pandao_reco.pb.Error)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_pandao_5freco_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PandaoOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pandao_reco.pb.PandaoOutput) */ {
 public:
  PandaoOutput();
  virtual ~PandaoOutput();

  PandaoOutput(const PandaoOutput& from);

  inline PandaoOutput& operator=(const PandaoOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PandaoOutput(PandaoOutput&& from) noexcept
    : PandaoOutput() {
    *this = ::std::move(from);
  }

  inline PandaoOutput& operator=(PandaoOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PandaoOutput& default_instance();

  static inline const PandaoOutput* internal_default_instance() {
    return reinterpret_cast<const PandaoOutput*>(
               &_PandaoOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(PandaoOutput* other);
  void Swap(PandaoOutput* other);
  friend void swap(PandaoOutput& a, PandaoOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PandaoOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  PandaoOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PandaoOutput& from);
  void MergeFrom(const PandaoOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PandaoOutput* other);
  protected:
  explicit PandaoOutput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pandao_reco.pb.ProductData products = 1;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 1;
  const ::pandao_reco::pb::ProductData& products(int index) const;
  ::pandao_reco::pb::ProductData* mutable_products(int index);
  ::pandao_reco::pb::ProductData* add_products();
  ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::ProductData >*
      mutable_products();
  const ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::ProductData >&
      products() const;

  // repeated .pandao_reco.pb.Error errors = 10;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 10;
  const ::pandao_reco::pb::Error& errors(int index) const;
  ::pandao_reco::pb::Error* mutable_errors(int index);
  ::pandao_reco::pb::Error* add_errors();
  ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::Error >*
      mutable_errors();
  const ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::Error >&
      errors() const;

  // @@protoc_insertion_point(class_scope:pandao_reco.pb.PandaoOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::ProductData > products_;
  ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::Error > errors_;
  friend struct protobuf_pandao_5freco_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CategoryData

// required string id = 1;
inline bool CategoryData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CategoryData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CategoryData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CategoryData::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_id();
}
inline const ::std::string& CategoryData::id() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.CategoryData.id)
  return id_.Get();
}
inline void CategoryData::set_id(const ::std::string& value) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.CategoryData.id)
}
#if LANG_CXX11
inline void CategoryData::set_id(::std::string&& value) {
  set_has_id();
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.CategoryData.id)
}
#endif
inline void CategoryData::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.CategoryData.id)
}
inline void CategoryData::set_id(const char* value,
    size_t size) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.CategoryData.id)
}
inline ::std::string* CategoryData::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.CategoryData.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::release_id() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.CategoryData.id)
  clear_has_id();
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.CategoryData.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_id();
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CategoryData::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.CategoryData.id)
}
inline void CategoryData::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.CategoryData.id)
}

// optional string name = 2;
inline bool CategoryData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CategoryData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CategoryData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CategoryData::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& CategoryData::name() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.CategoryData.name)
  return name_.Get();
}
inline void CategoryData::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.CategoryData.name)
}
#if LANG_CXX11
inline void CategoryData::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.CategoryData.name)
}
#endif
inline void CategoryData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.CategoryData.name)
}
inline void CategoryData::set_name(const char* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.CategoryData.name)
}
inline ::std::string* CategoryData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.CategoryData.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::release_name() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.CategoryData.name)
  clear_has_name();
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.CategoryData.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CategoryData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.CategoryData.name)
}
inline void CategoryData::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.CategoryData.name)
}

// optional string parentId = 3;
inline bool CategoryData::has_parentid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CategoryData::set_has_parentid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CategoryData::clear_has_parentid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CategoryData::clear_parentid() {
  parentid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_parentid();
}
inline const ::std::string& CategoryData::parentid() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.CategoryData.parentId)
  return parentid_.Get();
}
inline void CategoryData::set_parentid(const ::std::string& value) {
  set_has_parentid();
  parentid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.CategoryData.parentId)
}
#if LANG_CXX11
inline void CategoryData::set_parentid(::std::string&& value) {
  set_has_parentid();
  parentid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.CategoryData.parentId)
}
#endif
inline void CategoryData::set_parentid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parentid();
  parentid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.CategoryData.parentId)
}
inline void CategoryData::set_parentid(const char* value,
    size_t size) {
  set_has_parentid();
  parentid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.CategoryData.parentId)
}
inline ::std::string* CategoryData::mutable_parentid() {
  set_has_parentid();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.CategoryData.parentId)
  return parentid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::release_parentid() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.CategoryData.parentId)
  clear_has_parentid();
  return parentid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CategoryData::unsafe_arena_release_parentid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.CategoryData.parentId)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_parentid();
  return parentid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CategoryData::set_allocated_parentid(::std::string* parentid) {
  if (parentid != NULL) {
    set_has_parentid();
  } else {
    clear_has_parentid();
  }
  parentid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parentid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.CategoryData.parentId)
}
inline void CategoryData::unsafe_arena_set_allocated_parentid(
    ::std::string* parentid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parentid != NULL) {
    set_has_parentid();
  } else {
    clear_has_parentid();
  }
  parentid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parentid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.CategoryData.parentId)
}

// -------------------------------------------------------------------

// ProductData

// required string id = 1;
inline bool ProductData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductData::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_id();
}
inline const ::std::string& ProductData::id() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.id)
  return id_.Get();
}
inline void ProductData::set_id(const ::std::string& value) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.id)
}
#if LANG_CXX11
inline void ProductData::set_id(::std::string&& value) {
  set_has_id();
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.ProductData.id)
}
#endif
inline void ProductData::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.ProductData.id)
}
inline void ProductData::set_id(const char* value,
    size_t size) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.ProductData.id)
}
inline ::std::string* ProductData::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.ProductData.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::release_id() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.ProductData.id)
  clear_has_id();
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.ProductData.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_id();
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.ProductData.id)
}
inline void ProductData::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.ProductData.id)
}

// optional float rank = 2;
inline bool ProductData::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductData::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline float ProductData::rank() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.rank)
  return rank_;
}
inline void ProductData::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.rank)
}

// optional string title = 3;
inline bool ProductData::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductData::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductData::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductData::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_title();
}
inline const ::std::string& ProductData::title() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.title)
  return title_.Get();
}
inline void ProductData::set_title(const ::std::string& value) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.title)
}
#if LANG_CXX11
inline void ProductData::set_title(::std::string&& value) {
  set_has_title();
  title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.ProductData.title)
}
#endif
inline void ProductData::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.ProductData.title)
}
inline void ProductData::set_title(const char* value,
    size_t size) {
  set_has_title();
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.ProductData.title)
}
inline ::std::string* ProductData::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.ProductData.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::release_title() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.ProductData.title)
  clear_has_title();
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.ProductData.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_title();
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.ProductData.title)
}
inline void ProductData::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.ProductData.title)
}

// repeated string categories = 4;
inline int ProductData::categories_size() const {
  return categories_.size();
}
inline void ProductData::clear_categories() {
  categories_.Clear();
}
inline const ::std::string& ProductData::categories(int index) const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.categories)
  return categories_.Get(index);
}
inline ::std::string* ProductData::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.ProductData.categories)
  return categories_.Mutable(index);
}
inline void ProductData::set_categories(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.categories)
  categories_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProductData::set_categories(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.categories)
  categories_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProductData::set_categories(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  categories_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.ProductData.categories)
}
inline void ProductData::set_categories(int index, const char* value, size_t size) {
  categories_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.ProductData.categories)
}
inline ::std::string* ProductData::add_categories() {
  // @@protoc_insertion_point(field_add_mutable:pandao_reco.pb.ProductData.categories)
  return categories_.Add();
}
inline void ProductData::add_categories(const ::std::string& value) {
  categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pandao_reco.pb.ProductData.categories)
}
#if LANG_CXX11
inline void ProductData::add_categories(::std::string&& value) {
  categories_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pandao_reco.pb.ProductData.categories)
}
#endif
inline void ProductData::add_categories(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pandao_reco.pb.ProductData.categories)
}
inline void ProductData::add_categories(const char* value, size_t size) {
  categories_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pandao_reco.pb.ProductData.categories)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProductData::categories() const {
  // @@protoc_insertion_point(field_list:pandao_reco.pb.ProductData.categories)
  return categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProductData::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:pandao_reco.pb.ProductData.categories)
  return &categories_;
}

// optional string merchantid = 5;
inline bool ProductData::has_merchantid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductData::set_has_merchantid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductData::clear_has_merchantid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductData::clear_merchantid() {
  merchantid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_merchantid();
}
inline const ::std::string& ProductData::merchantid() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.merchantid)
  return merchantid_.Get();
}
inline void ProductData::set_merchantid(const ::std::string& value) {
  set_has_merchantid();
  merchantid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.merchantid)
}
#if LANG_CXX11
inline void ProductData::set_merchantid(::std::string&& value) {
  set_has_merchantid();
  merchantid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.ProductData.merchantid)
}
#endif
inline void ProductData::set_merchantid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_merchantid();
  merchantid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.ProductData.merchantid)
}
inline void ProductData::set_merchantid(const char* value,
    size_t size) {
  set_has_merchantid();
  merchantid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.ProductData.merchantid)
}
inline ::std::string* ProductData::mutable_merchantid() {
  set_has_merchantid();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.ProductData.merchantid)
  return merchantid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::release_merchantid() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.ProductData.merchantid)
  clear_has_merchantid();
  return merchantid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductData::unsafe_arena_release_merchantid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.ProductData.merchantid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_merchantid();
  return merchantid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductData::set_allocated_merchantid(::std::string* merchantid) {
  if (merchantid != NULL) {
    set_has_merchantid();
  } else {
    clear_has_merchantid();
  }
  merchantid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), merchantid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.ProductData.merchantid)
}
inline void ProductData::unsafe_arena_set_allocated_merchantid(
    ::std::string* merchantid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (merchantid != NULL) {
    set_has_merchantid();
  } else {
    clear_has_merchantid();
  }
  merchantid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      merchantid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.ProductData.merchantid)
}

// optional uint32 orders_count_week = 7;
inline bool ProductData::has_orders_count_week() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProductData::set_has_orders_count_week() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProductData::clear_has_orders_count_week() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProductData::clear_orders_count_week() {
  orders_count_week_ = 0u;
  clear_has_orders_count_week();
}
inline ::google::protobuf::uint32 ProductData::orders_count_week() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.ProductData.orders_count_week)
  return orders_count_week_;
}
inline void ProductData::set_orders_count_week(::google::protobuf::uint32 value) {
  set_has_orders_count_week();
  orders_count_week_ = value;
  // @@protoc_insertion_point(field_set:pandao_reco.pb.ProductData.orders_count_week)
}

// -------------------------------------------------------------------

// Error

// optional string msg = 1;
inline bool Error::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Error::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Error::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Error::clear_msg() {
  msg_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_msg();
}
inline const ::std::string& Error::msg() const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.Error.msg)
  return msg_.Get();
}
inline void Error::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pandao_reco.pb.Error.msg)
}
#if LANG_CXX11
inline void Error::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pandao_reco.pb.Error.msg)
}
#endif
inline void Error::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pandao_reco.pb.Error.msg)
}
inline void Error::set_msg(const char* value,
    size_t size) {
  set_has_msg();
  msg_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pandao_reco.pb.Error.msg)
}
inline ::std::string* Error::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.Error.msg)
  return msg_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Error::release_msg() {
  // @@protoc_insertion_point(field_release:pandao_reco.pb.Error.msg)
  clear_has_msg();
  return msg_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Error::unsafe_arena_release_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pandao_reco.pb.Error.msg)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_msg();
  return msg_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Error::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pandao_reco.pb.Error.msg)
}
inline void Error::unsafe_arena_set_allocated_msg(
    ::std::string* msg) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      msg, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pandao_reco.pb.Error.msg)
}

// -------------------------------------------------------------------

// PandaoOutput

// repeated .pandao_reco.pb.ProductData products = 1;
inline int PandaoOutput::products_size() const {
  return products_.size();
}
inline void PandaoOutput::clear_products() {
  products_.Clear();
}
inline const ::pandao_reco::pb::ProductData& PandaoOutput::products(int index) const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.PandaoOutput.products)
  return products_.Get(index);
}
inline ::pandao_reco::pb::ProductData* PandaoOutput::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.PandaoOutput.products)
  return products_.Mutable(index);
}
inline ::pandao_reco::pb::ProductData* PandaoOutput::add_products() {
  // @@protoc_insertion_point(field_add:pandao_reco.pb.PandaoOutput.products)
  return products_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::ProductData >*
PandaoOutput::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:pandao_reco.pb.PandaoOutput.products)
  return &products_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::ProductData >&
PandaoOutput::products() const {
  // @@protoc_insertion_point(field_list:pandao_reco.pb.PandaoOutput.products)
  return products_;
}

// repeated .pandao_reco.pb.Error errors = 10;
inline int PandaoOutput::errors_size() const {
  return errors_.size();
}
inline void PandaoOutput::clear_errors() {
  errors_.Clear();
}
inline const ::pandao_reco::pb::Error& PandaoOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:pandao_reco.pb.PandaoOutput.errors)
  return errors_.Get(index);
}
inline ::pandao_reco::pb::Error* PandaoOutput::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:pandao_reco.pb.PandaoOutput.errors)
  return errors_.Mutable(index);
}
inline ::pandao_reco::pb::Error* PandaoOutput::add_errors() {
  // @@protoc_insertion_point(field_add:pandao_reco.pb.PandaoOutput.errors)
  return errors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::Error >*
PandaoOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:pandao_reco.pb.PandaoOutput.errors)
  return &errors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pandao_reco::pb::Error >&
PandaoOutput::errors() const {
  // @@protoc_insertion_point(field_list:pandao_reco.pb.PandaoOutput.errors)
  return errors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace pandao_reco

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pandao_reco::pb::CurrencyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pandao_reco::pb::CurrencyType>() {
  return ::pandao_reco::pb::CurrencyType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pandao_5freco_2eproto__INCLUDED
