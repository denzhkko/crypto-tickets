// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_utils_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pb_utils_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace utils {
namespace pb {
class TestNestedMessage2DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TestNestedMessage2>
     _instance;
} _TestNestedMessage2_default_instance_;
class TestNestedMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TestNestedMessage>
     _instance;
} _TestNestedMessage_default_instance_;
class TestMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TestMessage>
     _instance;
} _TestMessage_default_instance_;

namespace protobuf_pb_5futils_5ftest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage2, ii1_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, i1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, i2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, i3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, s1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestNestedMessage, nested_msg_),
  2,
  3,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, i0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, msg_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(TestNestedMessage2)},
  { 7, 17, sizeof(TestNestedMessage)},
  { 22, 29, sizeof(TestMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestNestedMessage2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestNestedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pb_utils_test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TestNestedMessage2_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TestNestedMessage2_default_instance_);_TestNestedMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TestNestedMessage_default_instance_);_TestMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TestMessage_default_instance_);_TestNestedMessage_default_instance_._instance.get_mutable()->nested_msg_ = const_cast< ::utils::pb::TestNestedMessage2*>(
      ::utils::pb::TestNestedMessage2::internal_default_instance());
  _TestMessage_default_instance_._instance.get_mutable()->msg_ = const_cast< ::utils::pb::TestNestedMessage*>(
      ::utils::pb::TestNestedMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023pb_utils_test.proto\022\010utils.pb\"&\n\022TestN"
      "estedMessage2\022\020\n\003ii1\030\001 \001(\005:\003777\"}\n\021TestN"
      "estedMessage\022\016\n\002i1\030\001 \001(\005:\00220\022\016\n\002i2\030\002 \002(\005"
      ":\00230\022\n\n\002i3\030\003 \003(\005\022\n\n\002s1\030\004 \002(\t\0220\n\nnested_m"
      "sg\030\005 \001(\0132\034.utils.pb.TestNestedMessage2\"F"
      "\n\013TestMessage\022\r\n\002i0\030\001 \001(\005:\0015\022(\n\003msg\030\002 \002("
      "\0132\033.utils.pb.TestNestedMessage"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pb_utils_test.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pb_5futils_5ftest_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedMessage2::kIi1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestNestedMessage2::TestNestedMessage2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:utils.pb.TestNestedMessage2)
}
TestNestedMessage2::TestNestedMessage2(const TestNestedMessage2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ii1_ = from.ii1_;
  // @@protoc_insertion_point(copy_constructor:utils.pb.TestNestedMessage2)
}

void TestNestedMessage2::SharedCtor() {
  _cached_size_ = 0;
  ii1_ = 777;
}

TestNestedMessage2::~TestNestedMessage2() {
  // @@protoc_insertion_point(destructor:utils.pb.TestNestedMessage2)
  SharedDtor();
}

void TestNestedMessage2::SharedDtor() {
}

void TestNestedMessage2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessage2::descriptor() {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestNestedMessage2& TestNestedMessage2::default_instance() {
  protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestNestedMessage2* TestNestedMessage2::New(::google::protobuf::Arena* arena) const {
  TestNestedMessage2* n = new TestNestedMessage2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestNestedMessage2::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.pb.TestNestedMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ii1_ = 777;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestNestedMessage2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:utils.pb.TestNestedMessage2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ii1 = 1 [default = 777];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ii1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ii1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:utils.pb.TestNestedMessage2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:utils.pb.TestNestedMessage2)
  return false;
#undef DO_
}

void TestNestedMessage2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:utils.pb.TestNestedMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ii1 = 1 [default = 777];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ii1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:utils.pb.TestNestedMessage2)
}

::google::protobuf::uint8* TestNestedMessage2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:utils.pb.TestNestedMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ii1 = 1 [default = 777];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ii1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.pb.TestNestedMessage2)
  return target;
}

size_t TestNestedMessage2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.pb.TestNestedMessage2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 ii1 = 1 [default = 777];
  if (has_ii1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ii1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessage2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utils.pb.TestNestedMessage2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestNestedMessage2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestNestedMessage2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utils.pb.TestNestedMessage2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utils.pb.TestNestedMessage2)
    MergeFrom(*source);
  }
}

void TestNestedMessage2::MergeFrom(const TestNestedMessage2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.pb.TestNestedMessage2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ii1()) {
    set_ii1(from.ii1());
  }
}

void TestNestedMessage2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utils.pb.TestNestedMessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessage2::CopyFrom(const TestNestedMessage2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.pb.TestNestedMessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNestedMessage2::IsInitialized() const {
  return true;
}

void TestNestedMessage2::Swap(TestNestedMessage2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestNestedMessage2::InternalSwap(TestNestedMessage2* other) {
  using std::swap;
  swap(ii1_, other->ii1_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestNestedMessage2::GetMetadata() const {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestNestedMessage2

// optional int32 ii1 = 1 [default = 777];
bool TestNestedMessage2::has_ii1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestNestedMessage2::set_has_ii1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestNestedMessage2::clear_has_ii1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestNestedMessage2::clear_ii1() {
  ii1_ = 777;
  clear_has_ii1();
}
::google::protobuf::int32 TestNestedMessage2::ii1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage2.ii1)
  return ii1_;
}
void TestNestedMessage2::set_ii1(::google::protobuf::int32 value) {
  set_has_ii1();
  ii1_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage2.ii1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNestedMessage::kI1FieldNumber;
const int TestNestedMessage::kI2FieldNumber;
const int TestNestedMessage::kI3FieldNumber;
const int TestNestedMessage::kS1FieldNumber;
const int TestNestedMessage::kNestedMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestNestedMessage::TestNestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:utils.pb.TestNestedMessage)
}
TestNestedMessage::TestNestedMessage(const TestNestedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      i3_(from.i3_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  s1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s1()) {
    s1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s1_);
  }
  if (from.has_nested_msg()) {
    nested_msg_ = new ::utils::pb::TestNestedMessage2(*from.nested_msg_);
  } else {
    nested_msg_ = NULL;
  }
  ::memcpy(&i1_, &from.i1_,
    static_cast<size_t>(reinterpret_cast<char*>(&i2_) -
    reinterpret_cast<char*>(&i1_)) + sizeof(i2_));
  // @@protoc_insertion_point(copy_constructor:utils.pb.TestNestedMessage)
}

void TestNestedMessage::SharedCtor() {
  _cached_size_ = 0;
  s1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nested_msg_ = NULL;
  i1_ = 20;
  i2_ = 30;
}

TestNestedMessage::~TestNestedMessage() {
  // @@protoc_insertion_point(destructor:utils.pb.TestNestedMessage)
  SharedDtor();
}

void TestNestedMessage::SharedDtor() {
  s1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nested_msg_;
}

void TestNestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestNestedMessage::descriptor() {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestNestedMessage& TestNestedMessage::default_instance() {
  protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestNestedMessage* TestNestedMessage::New(::google::protobuf::Arena* arena) const {
  TestNestedMessage* n = new TestNestedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestNestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.pb.TestNestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  i3_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!s1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*s1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(nested_msg_ != NULL);
      nested_msg_->::utils::pb::TestNestedMessage2::Clear();
    }
    i1_ = 20;
    i2_ = 30;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestNestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:utils.pb.TestNestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 i1 = 1 [default = 20];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_i1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 i2 = 2 [default = 30];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_i2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 i3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_i3())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_i3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string s1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s1().data(), static_cast<int>(this->s1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "utils.pb.TestNestedMessage.s1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .utils.pb.TestNestedMessage2 nested_msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nested_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:utils.pb.TestNestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:utils.pb.TestNestedMessage)
  return false;
#undef DO_
}

void TestNestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:utils.pb.TestNestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i1 = 1 [default = 20];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->i1(), output);
  }

  // required int32 i2 = 2 [default = 30];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->i2(), output);
  }

  // repeated int32 i3 = 3;
  for (int i = 0, n = this->i3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->i3(i), output);
  }

  // required string s1 = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1().data(), static_cast<int>(this->s1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "utils.pb.TestNestedMessage.s1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->s1(), output);
  }

  // optional .utils.pb.TestNestedMessage2 nested_msg = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->nested_msg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:utils.pb.TestNestedMessage)
}

::google::protobuf::uint8* TestNestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:utils.pb.TestNestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i1 = 1 [default = 20];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->i1(), target);
  }

  // required int32 i2 = 2 [default = 30];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->i2(), target);
  }

  // repeated int32 i3 = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->i3_, target);

  // required string s1 = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1().data(), static_cast<int>(this->s1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "utils.pb.TestNestedMessage.s1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->s1(), target);
  }

  // optional .utils.pb.TestNestedMessage2 nested_msg = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->nested_msg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.pb.TestNestedMessage)
  return target;
}

size_t TestNestedMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:utils.pb.TestNestedMessage)
  size_t total_size = 0;

  if (has_s1()) {
    // required string s1 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s1());
  }

  if (has_i2()) {
    // required int32 i2 = 2 [default = 30];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i2());
  }

  return total_size;
}
size_t TestNestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.pb.TestNestedMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string s1 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s1());

    // required int32 i2 = 2 [default = 30];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 i3 = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->i3_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->i3_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional .utils.pb.TestNestedMessage2 nested_msg = 5;
    if (has_nested_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->nested_msg_);
    }

    // optional int32 i1 = 1 [default = 20];
    if (has_i1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestNestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utils.pb.TestNestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestNestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestNestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utils.pb.TestNestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utils.pb.TestNestedMessage)
    MergeFrom(*source);
  }
}

void TestNestedMessage::MergeFrom(const TestNestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.pb.TestNestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  i3_.MergeFrom(from.i3_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_s1();
      s1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s1_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_nested_msg()->::utils::pb::TestNestedMessage2::MergeFrom(from.nested_msg());
    }
    if (cached_has_bits & 0x00000004u) {
      i1_ = from.i1_;
    }
    if (cached_has_bits & 0x00000008u) {
      i2_ = from.i2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestNestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utils.pb.TestNestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNestedMessage::CopyFrom(const TestNestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.pb.TestNestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNestedMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void TestNestedMessage::Swap(TestNestedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestNestedMessage::InternalSwap(TestNestedMessage* other) {
  using std::swap;
  i3_.InternalSwap(&other->i3_);
  s1_.Swap(&other->s1_);
  swap(nested_msg_, other->nested_msg_);
  swap(i1_, other->i1_);
  swap(i2_, other->i2_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestNestedMessage::GetMetadata() const {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestNestedMessage

// optional int32 i1 = 1 [default = 20];
bool TestNestedMessage::has_i1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TestNestedMessage::set_has_i1() {
  _has_bits_[0] |= 0x00000004u;
}
void TestNestedMessage::clear_has_i1() {
  _has_bits_[0] &= ~0x00000004u;
}
void TestNestedMessage::clear_i1() {
  i1_ = 20;
  clear_has_i1();
}
::google::protobuf::int32 TestNestedMessage::i1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i1)
  return i1_;
}
void TestNestedMessage::set_i1(::google::protobuf::int32 value) {
  set_has_i1();
  i1_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i1)
}

// required int32 i2 = 2 [default = 30];
bool TestNestedMessage::has_i2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TestNestedMessage::set_has_i2() {
  _has_bits_[0] |= 0x00000008u;
}
void TestNestedMessage::clear_has_i2() {
  _has_bits_[0] &= ~0x00000008u;
}
void TestNestedMessage::clear_i2() {
  i2_ = 30;
  clear_has_i2();
}
::google::protobuf::int32 TestNestedMessage::i2() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i2)
  return i2_;
}
void TestNestedMessage::set_i2(::google::protobuf::int32 value) {
  set_has_i2();
  i2_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i2)
}

// repeated int32 i3 = 3;
int TestNestedMessage::i3_size() const {
  return i3_.size();
}
void TestNestedMessage::clear_i3() {
  i3_.Clear();
}
::google::protobuf::int32 TestNestedMessage::i3(int index) const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i3)
  return i3_.Get(index);
}
void TestNestedMessage::set_i3(int index, ::google::protobuf::int32 value) {
  i3_.Set(index, value);
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i3)
}
void TestNestedMessage::add_i3(::google::protobuf::int32 value) {
  i3_.Add(value);
  // @@protoc_insertion_point(field_add:utils.pb.TestNestedMessage.i3)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestNestedMessage::i3() const {
  // @@protoc_insertion_point(field_list:utils.pb.TestNestedMessage.i3)
  return i3_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestNestedMessage::mutable_i3() {
  // @@protoc_insertion_point(field_mutable_list:utils.pb.TestNestedMessage.i3)
  return &i3_;
}

// required string s1 = 4;
bool TestNestedMessage::has_s1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestNestedMessage::set_has_s1() {
  _has_bits_[0] |= 0x00000001u;
}
void TestNestedMessage::clear_has_s1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestNestedMessage::clear_s1() {
  s1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s1();
}
const ::std::string& TestNestedMessage::s1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.s1)
  return s1_.GetNoArena();
}
void TestNestedMessage::set_s1(const ::std::string& value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.s1)
}
#if LANG_CXX11
void TestNestedMessage::set_s1(::std::string&& value) {
  set_has_s1();
  s1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:utils.pb.TestNestedMessage.s1)
}
#endif
void TestNestedMessage::set_s1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:utils.pb.TestNestedMessage.s1)
}
void TestNestedMessage::set_s1(const char* value, size_t size) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:utils.pb.TestNestedMessage.s1)
}
::std::string* TestNestedMessage::mutable_s1() {
  set_has_s1();
  // @@protoc_insertion_point(field_mutable:utils.pb.TestNestedMessage.s1)
  return s1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestNestedMessage::release_s1() {
  // @@protoc_insertion_point(field_release:utils.pb.TestNestedMessage.s1)
  clear_has_s1();
  return s1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestNestedMessage::set_allocated_s1(::std::string* s1) {
  if (s1 != NULL) {
    set_has_s1();
  } else {
    clear_has_s1();
  }
  s1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s1);
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestNestedMessage.s1)
}

// optional .utils.pb.TestNestedMessage2 nested_msg = 5;
bool TestNestedMessage::has_nested_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestNestedMessage::set_has_nested_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void TestNestedMessage::clear_has_nested_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestNestedMessage::clear_nested_msg() {
  if (nested_msg_ != NULL) nested_msg_->::utils::pb::TestNestedMessage2::Clear();
  clear_has_nested_msg();
}
const ::utils::pb::TestNestedMessage2& TestNestedMessage::nested_msg() const {
  const ::utils::pb::TestNestedMessage2* p = nested_msg_;
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.nested_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::utils::pb::TestNestedMessage2*>(
      &::utils::pb::_TestNestedMessage2_default_instance_);
}
::utils::pb::TestNestedMessage2* TestNestedMessage::mutable_nested_msg() {
  set_has_nested_msg();
  if (nested_msg_ == NULL) {
    nested_msg_ = new ::utils::pb::TestNestedMessage2;
  }
  // @@protoc_insertion_point(field_mutable:utils.pb.TestNestedMessage.nested_msg)
  return nested_msg_;
}
::utils::pb::TestNestedMessage2* TestNestedMessage::release_nested_msg() {
  // @@protoc_insertion_point(field_release:utils.pb.TestNestedMessage.nested_msg)
  clear_has_nested_msg();
  ::utils::pb::TestNestedMessage2* temp = nested_msg_;
  nested_msg_ = NULL;
  return temp;
}
void TestNestedMessage::set_allocated_nested_msg(::utils::pb::TestNestedMessage2* nested_msg) {
  delete nested_msg_;
  nested_msg_ = nested_msg;
  if (nested_msg) {
    set_has_nested_msg();
  } else {
    clear_has_nested_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestNestedMessage.nested_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage::kI0FieldNumber;
const int TestMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage::TestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:utils.pb.TestMessage)
}
TestMessage::TestMessage(const TestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::utils::pb::TestNestedMessage(*from.msg_);
  } else {
    msg_ = NULL;
  }
  i0_ = from.i0_;
  // @@protoc_insertion_point(copy_constructor:utils.pb.TestMessage)
}

void TestMessage::SharedCtor() {
  _cached_size_ = 0;
  msg_ = NULL;
  i0_ = 5;
}

TestMessage::~TestMessage() {
  // @@protoc_insertion_point(destructor:utils.pb.TestMessage)
  SharedDtor();
}

void TestMessage::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void TestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessage::descriptor() {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage& TestMessage::default_instance() {
  protobuf_pb_5futils_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestMessage* TestMessage::New(::google::protobuf::Arena* arena) const {
  TestMessage* n = new TestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.pb.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(msg_ != NULL);
      msg_->::utils::pb::TestNestedMessage::Clear();
    }
    i0_ = 5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:utils.pb.TestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 i0 = 1 [default = 5];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_i0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .utils.pb.TestNestedMessage msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:utils.pb.TestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:utils.pb.TestMessage)
  return false;
#undef DO_
}

void TestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:utils.pb.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i0 = 1 [default = 5];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->i0(), output);
  }

  // required .utils.pb.TestNestedMessage msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:utils.pb.TestMessage)
}

::google::protobuf::uint8* TestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:utils.pb.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i0 = 1 [default = 5];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->i0(), target);
  }

  // required .utils.pb.TestNestedMessage msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.pb.TestMessage)
  return target;
}

size_t TestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.pb.TestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .utils.pb.TestNestedMessage msg = 2;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }
  // optional int32 i0 = 1 [default = 5];
  if (has_i0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i0());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utils.pb.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utils.pb.TestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utils.pb.TestMessage)
    MergeFrom(*source);
  }
}

void TestMessage::MergeFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.pb.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_msg()->::utils::pb::TestNestedMessage::MergeFrom(from.msg());
    }
    if (cached_has_bits & 0x00000002u) {
      i0_ = from.i0_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utils.pb.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage::CopyFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.pb.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_msg()) {
    if (!this->msg_->IsInitialized()) return false;
  }
  return true;
}

void TestMessage::Swap(TestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage::InternalSwap(TestMessage* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(i0_, other->i0_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMessage::GetMetadata() const {
  protobuf_pb_5futils_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5futils_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMessage

// optional int32 i0 = 1 [default = 5];
bool TestMessage::has_i0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestMessage::set_has_i0() {
  _has_bits_[0] |= 0x00000002u;
}
void TestMessage::clear_has_i0() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestMessage::clear_i0() {
  i0_ = 5;
  clear_has_i0();
}
::google::protobuf::int32 TestMessage::i0() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestMessage.i0)
  return i0_;
}
void TestMessage::set_i0(::google::protobuf::int32 value) {
  set_has_i0();
  i0_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestMessage.i0)
}

// required .utils.pb.TestNestedMessage msg = 2;
bool TestMessage::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestMessage::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void TestMessage::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestMessage::clear_msg() {
  if (msg_ != NULL) msg_->::utils::pb::TestNestedMessage::Clear();
  clear_has_msg();
}
const ::utils::pb::TestNestedMessage& TestMessage::msg() const {
  const ::utils::pb::TestNestedMessage* p = msg_;
  // @@protoc_insertion_point(field_get:utils.pb.TestMessage.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::utils::pb::TestNestedMessage*>(
      &::utils::pb::_TestNestedMessage_default_instance_);
}
::utils::pb::TestNestedMessage* TestMessage::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::utils::pb::TestNestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:utils.pb.TestMessage.msg)
  return msg_;
}
::utils::pb::TestNestedMessage* TestMessage::release_msg() {
  // @@protoc_insertion_point(field_release:utils.pb.TestMessage.msg)
  clear_has_msg();
  ::utils::pb::TestNestedMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
void TestMessage::set_allocated_msg(::utils::pb::TestNestedMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestMessage.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace utils

// @@protoc_insertion_point(global_scope)
