// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_utils_test.proto

#ifndef PROTOBUF_pb_5futils_5ftest_2eproto__INCLUDED
#define PROTOBUF_pb_5futils_5ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace utils {
namespace pb {
class TestMessage;
class TestMessageDefaultTypeInternal;
extern TestMessageDefaultTypeInternal _TestMessage_default_instance_;
class TestNestedMessage;
class TestNestedMessageDefaultTypeInternal;
extern TestNestedMessageDefaultTypeInternal _TestNestedMessage_default_instance_;
class TestNestedMessage2;
class TestNestedMessage2DefaultTypeInternal;
extern TestNestedMessage2DefaultTypeInternal _TestNestedMessage2_default_instance_;
}  // namespace pb
}  // namespace utils

namespace utils {
namespace pb {

namespace protobuf_pb_5futils_5ftest_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pb_5futils_5ftest_2eproto

// ===================================================================

class TestNestedMessage2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:utils.pb.TestNestedMessage2) */ {
 public:
  TestNestedMessage2();
  virtual ~TestNestedMessage2();

  TestNestedMessage2(const TestNestedMessage2& from);

  inline TestNestedMessage2& operator=(const TestNestedMessage2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestNestedMessage2(TestNestedMessage2&& from) noexcept
    : TestNestedMessage2() {
    *this = ::std::move(from);
  }

  inline TestNestedMessage2& operator=(TestNestedMessage2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestNestedMessage2& default_instance();

  static inline const TestNestedMessage2* internal_default_instance() {
    return reinterpret_cast<const TestNestedMessage2*>(
               &_TestNestedMessage2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TestNestedMessage2* other);
  friend void swap(TestNestedMessage2& a, TestNestedMessage2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestNestedMessage2* New() const PROTOBUF_FINAL { return New(NULL); }

  TestNestedMessage2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestNestedMessage2& from);
  void MergeFrom(const TestNestedMessage2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestNestedMessage2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ii1 = 1 [default = 777];
  bool has_ii1() const;
  void clear_ii1();
  static const int kIi1FieldNumber = 1;
  ::google::protobuf::int32 ii1() const;
  void set_ii1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:utils.pb.TestNestedMessage2)
 private:
  void set_has_ii1();
  void clear_has_ii1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ii1_;
  friend struct protobuf_pb_5futils_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestNestedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:utils.pb.TestNestedMessage) */ {
 public:
  TestNestedMessage();
  virtual ~TestNestedMessage();

  TestNestedMessage(const TestNestedMessage& from);

  inline TestNestedMessage& operator=(const TestNestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestNestedMessage(TestNestedMessage&& from) noexcept
    : TestNestedMessage() {
    *this = ::std::move(from);
  }

  inline TestNestedMessage& operator=(TestNestedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestNestedMessage& default_instance();

  static inline const TestNestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestNestedMessage*>(
               &_TestNestedMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TestNestedMessage* other);
  friend void swap(TestNestedMessage& a, TestNestedMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestNestedMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TestNestedMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestNestedMessage& from);
  void MergeFrom(const TestNestedMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestNestedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 i3 = 3;
  int i3_size() const;
  void clear_i3();
  static const int kI3FieldNumber = 3;
  ::google::protobuf::int32 i3(int index) const;
  void set_i3(int index, ::google::protobuf::int32 value);
  void add_i3(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      i3() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_i3();

  // required string s1 = 4;
  bool has_s1() const;
  void clear_s1();
  static const int kS1FieldNumber = 4;
  const ::std::string& s1() const;
  void set_s1(const ::std::string& value);
  #if LANG_CXX11
  void set_s1(::std::string&& value);
  #endif
  void set_s1(const char* value);
  void set_s1(const char* value, size_t size);
  ::std::string* mutable_s1();
  ::std::string* release_s1();
  void set_allocated_s1(::std::string* s1);

  // optional .utils.pb.TestNestedMessage2 nested_msg = 5;
  bool has_nested_msg() const;
  void clear_nested_msg();
  static const int kNestedMsgFieldNumber = 5;
  const ::utils::pb::TestNestedMessage2& nested_msg() const;
  ::utils::pb::TestNestedMessage2* mutable_nested_msg();
  ::utils::pb::TestNestedMessage2* release_nested_msg();
  void set_allocated_nested_msg(::utils::pb::TestNestedMessage2* nested_msg);

  // optional int32 i1 = 1 [default = 20];
  bool has_i1() const;
  void clear_i1();
  static const int kI1FieldNumber = 1;
  ::google::protobuf::int32 i1() const;
  void set_i1(::google::protobuf::int32 value);

  // required int32 i2 = 2 [default = 30];
  bool has_i2() const;
  void clear_i2();
  static const int kI2FieldNumber = 2;
  ::google::protobuf::int32 i2() const;
  void set_i2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:utils.pb.TestNestedMessage)
 private:
  void set_has_i1();
  void clear_has_i1();
  void set_has_i2();
  void clear_has_i2();
  void set_has_s1();
  void clear_has_s1();
  void set_has_nested_msg();
  void clear_has_nested_msg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > i3_;
  ::google::protobuf::internal::ArenaStringPtr s1_;
  ::utils::pb::TestNestedMessage2* nested_msg_;
  ::google::protobuf::int32 i1_;
  ::google::protobuf::int32 i2_;
  friend struct protobuf_pb_5futils_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:utils.pb.TestMessage) */ {
 public:
  TestMessage();
  virtual ~TestMessage();

  TestMessage(const TestMessage& from);

  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestMessage(TestMessage&& from) noexcept
    : TestMessage() {
    *this = ::std::move(from);
  }

  inline TestMessage& operator=(TestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMessage& default_instance();

  static inline const TestMessage* internal_default_instance() {
    return reinterpret_cast<const TestMessage*>(
               &_TestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TestMessage* other);
  friend void swap(TestMessage& a, TestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestMessage& from);
  void MergeFrom(const TestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .utils.pb.TestNestedMessage msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::utils::pb::TestNestedMessage& msg() const;
  ::utils::pb::TestNestedMessage* mutable_msg();
  ::utils::pb::TestNestedMessage* release_msg();
  void set_allocated_msg(::utils::pb::TestNestedMessage* msg);

  // optional int32 i0 = 1 [default = 5];
  bool has_i0() const;
  void clear_i0();
  static const int kI0FieldNumber = 1;
  ::google::protobuf::int32 i0() const;
  void set_i0(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:utils.pb.TestMessage)
 private:
  void set_has_i0();
  void clear_has_i0();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::utils::pb::TestNestedMessage* msg_;
  ::google::protobuf::int32 i0_;
  friend struct protobuf_pb_5futils_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestNestedMessage2

// optional int32 ii1 = 1 [default = 777];
inline bool TestNestedMessage2::has_ii1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestNestedMessage2::set_has_ii1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestNestedMessage2::clear_has_ii1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestNestedMessage2::clear_ii1() {
  ii1_ = 777;
  clear_has_ii1();
}
inline ::google::protobuf::int32 TestNestedMessage2::ii1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage2.ii1)
  return ii1_;
}
inline void TestNestedMessage2::set_ii1(::google::protobuf::int32 value) {
  set_has_ii1();
  ii1_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage2.ii1)
}

// -------------------------------------------------------------------

// TestNestedMessage

// optional int32 i1 = 1 [default = 20];
inline bool TestNestedMessage::has_i1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestNestedMessage::set_has_i1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestNestedMessage::clear_has_i1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestNestedMessage::clear_i1() {
  i1_ = 20;
  clear_has_i1();
}
inline ::google::protobuf::int32 TestNestedMessage::i1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i1)
  return i1_;
}
inline void TestNestedMessage::set_i1(::google::protobuf::int32 value) {
  set_has_i1();
  i1_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i1)
}

// required int32 i2 = 2 [default = 30];
inline bool TestNestedMessage::has_i2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestNestedMessage::set_has_i2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestNestedMessage::clear_has_i2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestNestedMessage::clear_i2() {
  i2_ = 30;
  clear_has_i2();
}
inline ::google::protobuf::int32 TestNestedMessage::i2() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i2)
  return i2_;
}
inline void TestNestedMessage::set_i2(::google::protobuf::int32 value) {
  set_has_i2();
  i2_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i2)
}

// repeated int32 i3 = 3;
inline int TestNestedMessage::i3_size() const {
  return i3_.size();
}
inline void TestNestedMessage::clear_i3() {
  i3_.Clear();
}
inline ::google::protobuf::int32 TestNestedMessage::i3(int index) const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.i3)
  return i3_.Get(index);
}
inline void TestNestedMessage::set_i3(int index, ::google::protobuf::int32 value) {
  i3_.Set(index, value);
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.i3)
}
inline void TestNestedMessage::add_i3(::google::protobuf::int32 value) {
  i3_.Add(value);
  // @@protoc_insertion_point(field_add:utils.pb.TestNestedMessage.i3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestNestedMessage::i3() const {
  // @@protoc_insertion_point(field_list:utils.pb.TestNestedMessage.i3)
  return i3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestNestedMessage::mutable_i3() {
  // @@protoc_insertion_point(field_mutable_list:utils.pb.TestNestedMessage.i3)
  return &i3_;
}

// required string s1 = 4;
inline bool TestNestedMessage::has_s1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestNestedMessage::set_has_s1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestNestedMessage::clear_has_s1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestNestedMessage::clear_s1() {
  s1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s1();
}
inline const ::std::string& TestNestedMessage::s1() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.s1)
  return s1_.GetNoArena();
}
inline void TestNestedMessage::set_s1(const ::std::string& value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:utils.pb.TestNestedMessage.s1)
}
#if LANG_CXX11
inline void TestNestedMessage::set_s1(::std::string&& value) {
  set_has_s1();
  s1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:utils.pb.TestNestedMessage.s1)
}
#endif
inline void TestNestedMessage::set_s1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:utils.pb.TestNestedMessage.s1)
}
inline void TestNestedMessage::set_s1(const char* value, size_t size) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:utils.pb.TestNestedMessage.s1)
}
inline ::std::string* TestNestedMessage::mutable_s1() {
  set_has_s1();
  // @@protoc_insertion_point(field_mutable:utils.pb.TestNestedMessage.s1)
  return s1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestNestedMessage::release_s1() {
  // @@protoc_insertion_point(field_release:utils.pb.TestNestedMessage.s1)
  clear_has_s1();
  return s1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestNestedMessage::set_allocated_s1(::std::string* s1) {
  if (s1 != NULL) {
    set_has_s1();
  } else {
    clear_has_s1();
  }
  s1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s1);
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestNestedMessage.s1)
}

// optional .utils.pb.TestNestedMessage2 nested_msg = 5;
inline bool TestNestedMessage::has_nested_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestNestedMessage::set_has_nested_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestNestedMessage::clear_has_nested_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestNestedMessage::clear_nested_msg() {
  if (nested_msg_ != NULL) nested_msg_->::utils::pb::TestNestedMessage2::Clear();
  clear_has_nested_msg();
}
inline const ::utils::pb::TestNestedMessage2& TestNestedMessage::nested_msg() const {
  const ::utils::pb::TestNestedMessage2* p = nested_msg_;
  // @@protoc_insertion_point(field_get:utils.pb.TestNestedMessage.nested_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::utils::pb::TestNestedMessage2*>(
      &::utils::pb::_TestNestedMessage2_default_instance_);
}
inline ::utils::pb::TestNestedMessage2* TestNestedMessage::mutable_nested_msg() {
  set_has_nested_msg();
  if (nested_msg_ == NULL) {
    nested_msg_ = new ::utils::pb::TestNestedMessage2;
  }
  // @@protoc_insertion_point(field_mutable:utils.pb.TestNestedMessage.nested_msg)
  return nested_msg_;
}
inline ::utils::pb::TestNestedMessage2* TestNestedMessage::release_nested_msg() {
  // @@protoc_insertion_point(field_release:utils.pb.TestNestedMessage.nested_msg)
  clear_has_nested_msg();
  ::utils::pb::TestNestedMessage2* temp = nested_msg_;
  nested_msg_ = NULL;
  return temp;
}
inline void TestNestedMessage::set_allocated_nested_msg(::utils::pb::TestNestedMessage2* nested_msg) {
  delete nested_msg_;
  nested_msg_ = nested_msg;
  if (nested_msg) {
    set_has_nested_msg();
  } else {
    clear_has_nested_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestNestedMessage.nested_msg)
}

// -------------------------------------------------------------------

// TestMessage

// optional int32 i0 = 1 [default = 5];
inline bool TestMessage::has_i0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestMessage::set_has_i0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestMessage::clear_has_i0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestMessage::clear_i0() {
  i0_ = 5;
  clear_has_i0();
}
inline ::google::protobuf::int32 TestMessage::i0() const {
  // @@protoc_insertion_point(field_get:utils.pb.TestMessage.i0)
  return i0_;
}
inline void TestMessage::set_i0(::google::protobuf::int32 value) {
  set_has_i0();
  i0_ = value;
  // @@protoc_insertion_point(field_set:utils.pb.TestMessage.i0)
}

// required .utils.pb.TestNestedMessage msg = 2;
inline bool TestMessage::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestMessage::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestMessage::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestMessage::clear_msg() {
  if (msg_ != NULL) msg_->::utils::pb::TestNestedMessage::Clear();
  clear_has_msg();
}
inline const ::utils::pb::TestNestedMessage& TestMessage::msg() const {
  const ::utils::pb::TestNestedMessage* p = msg_;
  // @@protoc_insertion_point(field_get:utils.pb.TestMessage.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::utils::pb::TestNestedMessage*>(
      &::utils::pb::_TestNestedMessage_default_instance_);
}
inline ::utils::pb::TestNestedMessage* TestMessage::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::utils::pb::TestNestedMessage;
  }
  // @@protoc_insertion_point(field_mutable:utils.pb.TestMessage.msg)
  return msg_;
}
inline ::utils::pb::TestNestedMessage* TestMessage::release_msg() {
  // @@protoc_insertion_point(field_release:utils.pb.TestMessage.msg)
  clear_has_msg();
  ::utils::pb::TestNestedMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void TestMessage::set_allocated_msg(::utils::pb::TestNestedMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:utils.pb.TestMessage.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace utils

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pb_5futils_5ftest_2eproto__INCLUDED
