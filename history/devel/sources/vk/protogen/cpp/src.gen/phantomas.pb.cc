// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phantomas.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "phantomas.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace phantomas {
namespace data {
class PhantomasResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PhantomasResponse>
     _instance;
} _PhantomasResponse_default_instance_;

namespace protobuf_phantomas_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, redirect_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, http_status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhantomasResponse, qid_),
  3,
  0,
  1,
  4,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(PhantomasResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhantomasResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "phantomas.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PhantomasResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PhantomasResponse_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017phantomas.proto\022\031ru.mail.go.phantomas."
      "data\"\242\001\n\021PhantomasResponse\022B\n\006status\030\001 \002"
      "(\01622.ru.mail.go.phantomas.data.Phantomas"
      "ResponseStatus\022\014\n\004data\030\002 \002(\t\022\024\n\014redirect"
      "_url\030\003 \001(\t\022\030\n\020http_status_code\030\004 \001(\005\022\013\n\003"
      "qid\030\005 \001(\t*+\n\027PhantomasResponseStatus\022\006\n\002"
      "OK\020\000\022\010\n\004FAIL\020\001B\021B\rPhantomasDataH\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 273);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "phantomas.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_phantomas_2eproto

const ::google::protobuf::EnumDescriptor* PhantomasResponseStatus_descriptor() {
  protobuf_phantomas_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phantomas_2eproto::file_level_enum_descriptors[0];
}
bool PhantomasResponseStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhantomasResponse::kStatusFieldNumber;
const int PhantomasResponse::kDataFieldNumber;
const int PhantomasResponse::kRedirectUrlFieldNumber;
const int PhantomasResponse::kHttpStatusCodeFieldNumber;
const int PhantomasResponse::kQidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhantomasResponse::PhantomasResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_phantomas_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.phantomas.data.PhantomasResponse)
}
PhantomasResponse::PhantomasResponse(const PhantomasResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  redirect_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect_url()) {
    redirect_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_url_);
  }
  qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qid()) {
    qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qid_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&http_status_code_) -
    reinterpret_cast<char*>(&status_)) + sizeof(http_status_code_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.phantomas.data.PhantomasResponse)
}

void PhantomasResponse::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_status_code_) -
      reinterpret_cast<char*>(&status_)) + sizeof(http_status_code_));
}

PhantomasResponse::~PhantomasResponse() {
  // @@protoc_insertion_point(destructor:ru.mail.go.phantomas.data.PhantomasResponse)
  SharedDtor();
}

void PhantomasResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhantomasResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhantomasResponse::descriptor() {
  protobuf_phantomas_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phantomas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhantomasResponse& PhantomasResponse::default_instance() {
  protobuf_phantomas_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhantomasResponse* PhantomasResponse::New(::google::protobuf::Arena* arena) const {
  PhantomasResponse* n = new PhantomasResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhantomasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.phantomas.data.PhantomasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!redirect_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*redirect_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!qid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*qid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&http_status_code_) -
        reinterpret_cast<char*>(&status_)) + sizeof(http_status_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PhantomasResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.phantomas.data.PhantomasResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::phantomas::data::PhantomasResponseStatus_IsValid(value)) {
            set_status(static_cast< ::ru::mail::go::phantomas::data::PhantomasResponseStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.phantomas.data.PhantomasResponse.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.phantomas.data.PhantomasResponse.redirect_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 http_status_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_http_status_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &http_status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string qid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qid().data(), static_cast<int>(this->qid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.phantomas.data.PhantomasResponse.qid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.phantomas.data.PhantomasResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.phantomas.data.PhantomasResponse)
  return false;
#undef DO_
}

void PhantomasResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.phantomas.data.PhantomasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required string data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // optional string redirect_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.redirect_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->redirect_url(), output);
  }

  // optional int32 http_status_code = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->http_status_code(), output);
  }

  // optional string qid = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qid().data(), static_cast<int>(this->qid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.qid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->qid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.phantomas.data.PhantomasResponse)
}

::google::protobuf::uint8* PhantomasResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.phantomas.data.PhantomasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required string data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // optional string redirect_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.redirect_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->redirect_url(), target);
  }

  // optional int32 http_status_code = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->http_status_code(), target);
  }

  // optional string qid = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qid().data(), static_cast<int>(this->qid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.phantomas.data.PhantomasResponse.qid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->qid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.phantomas.data.PhantomasResponse)
  return target;
}

size_t PhantomasResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.phantomas.data.PhantomasResponse)
  size_t total_size = 0;

  if (has_data()) {
    // required string data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (has_status()) {
    // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  return total_size;
}
size_t PhantomasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.phantomas.data.PhantomasResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());

    // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string redirect_url = 3;
    if (has_redirect_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_url());
    }

    // optional string qid = 5;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qid());
    }

  }
  // optional int32 http_status_code = 4;
  if (has_http_status_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->http_status_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhantomasResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.phantomas.data.PhantomasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhantomasResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhantomasResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.phantomas.data.PhantomasResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.phantomas.data.PhantomasResponse)
    MergeFrom(*source);
  }
}

void PhantomasResponse::MergeFrom(const PhantomasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.phantomas.data.PhantomasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_redirect_url();
      redirect_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_qid();
      qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qid_);
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000010u) {
      http_status_code_ = from.http_status_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PhantomasResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.phantomas.data.PhantomasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhantomasResponse::CopyFrom(const PhantomasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.phantomas.data.PhantomasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhantomasResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void PhantomasResponse::Swap(PhantomasResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhantomasResponse::InternalSwap(PhantomasResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  redirect_url_.Swap(&other->redirect_url_);
  qid_.Swap(&other->qid_);
  swap(status_, other->status_);
  swap(http_status_code_, other->http_status_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhantomasResponse::GetMetadata() const {
  protobuf_phantomas_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phantomas_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhantomasResponse

// required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
bool PhantomasResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PhantomasResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void PhantomasResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void PhantomasResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
::ru::mail::go::phantomas::data::PhantomasResponseStatus PhantomasResponse::status() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.status)
  return static_cast< ::ru::mail::go::phantomas::data::PhantomasResponseStatus >(status_);
}
void PhantomasResponse::set_status(::ru::mail::go::phantomas::data::PhantomasResponseStatus value) {
  assert(::ru::mail::go::phantomas::data::PhantomasResponseStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.status)
}

// required string data = 2;
bool PhantomasResponse::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PhantomasResponse::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void PhantomasResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void PhantomasResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& PhantomasResponse::data() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.data)
  return data_.GetNoArena();
}
void PhantomasResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
#if LANG_CXX11
void PhantomasResponse::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
#endif
void PhantomasResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
void PhantomasResponse::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
::std::string* PhantomasResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhantomasResponse::release_data() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhantomasResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.data)
}

// optional string redirect_url = 3;
bool PhantomasResponse::has_redirect_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PhantomasResponse::set_has_redirect_url() {
  _has_bits_[0] |= 0x00000002u;
}
void PhantomasResponse::clear_has_redirect_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void PhantomasResponse::clear_redirect_url() {
  redirect_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect_url();
}
const ::std::string& PhantomasResponse::redirect_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  return redirect_url_.GetNoArena();
}
void PhantomasResponse::set_redirect_url(const ::std::string& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
#if LANG_CXX11
void PhantomasResponse::set_redirect_url(::std::string&& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
#endif
void PhantomasResponse::set_redirect_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
void PhantomasResponse::set_redirect_url(const char* value, size_t size) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
::std::string* PhantomasResponse::mutable_redirect_url() {
  set_has_redirect_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  return redirect_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhantomasResponse::release_redirect_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  clear_has_redirect_url();
  return redirect_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhantomasResponse::set_allocated_redirect_url(::std::string* redirect_url) {
  if (redirect_url != NULL) {
    set_has_redirect_url();
  } else {
    clear_has_redirect_url();
  }
  redirect_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}

// optional int32 http_status_code = 4;
bool PhantomasResponse::has_http_status_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PhantomasResponse::set_has_http_status_code() {
  _has_bits_[0] |= 0x00000010u;
}
void PhantomasResponse::clear_has_http_status_code() {
  _has_bits_[0] &= ~0x00000010u;
}
void PhantomasResponse::clear_http_status_code() {
  http_status_code_ = 0;
  clear_has_http_status_code();
}
::google::protobuf::int32 PhantomasResponse::http_status_code() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.http_status_code)
  return http_status_code_;
}
void PhantomasResponse::set_http_status_code(::google::protobuf::int32 value) {
  set_has_http_status_code();
  http_status_code_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.http_status_code)
}

// optional string qid = 5;
bool PhantomasResponse::has_qid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PhantomasResponse::set_has_qid() {
  _has_bits_[0] |= 0x00000004u;
}
void PhantomasResponse::clear_has_qid() {
  _has_bits_[0] &= ~0x00000004u;
}
void PhantomasResponse::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qid();
}
const ::std::string& PhantomasResponse::qid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  return qid_.GetNoArena();
}
void PhantomasResponse::set_qid(const ::std::string& value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
#if LANG_CXX11
void PhantomasResponse::set_qid(::std::string&& value) {
  set_has_qid();
  qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
#endif
void PhantomasResponse::set_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
void PhantomasResponse::set_qid(const char* value, size_t size) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
::std::string* PhantomasResponse::mutable_qid() {
  set_has_qid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhantomasResponse::release_qid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  clear_has_qid();
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhantomasResponse::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    set_has_qid();
  } else {
    clear_has_qid();
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace phantomas
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
