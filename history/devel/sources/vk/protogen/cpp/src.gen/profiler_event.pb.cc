// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profiler_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "profiler_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class ProfilerEventProto_TrackedObjectDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProfilerEventProto_TrackedObject>
     _instance;
} _ProfilerEventProto_TrackedObject_default_instance_;
class ProfilerEventProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProfilerEventProto>
     _instance;
} _ProfilerEventProto_default_instance_;

namespace protobuf_profiler_5fevent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, birth_thread_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, exec_thread_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, source_file_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, source_function_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, source_line_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, exec_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, exec_time_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, exec_time_sampled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, queue_time_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, queue_time_sampled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, process_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto_TrackedObject, process_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, profile_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, time_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, past_session_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, profiling_start_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, profiling_finish_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilerEventProto, tracked_object_),
  0,
  1,
  ~0u,
  2,
  3,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(ProfilerEventProto_TrackedObject)},
  { 29, 40, sizeof(ProfilerEventProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfilerEventProto_TrackedObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfilerEventProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "profiler_event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProfilerEventProto_TrackedObject_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProfilerEventProto_TrackedObject_default_instance_);_ProfilerEventProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProfilerEventProto_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024profiler_event.proto\022\007metrics\"\223\t\n\022Prof"
      "ilerEventProto\022C\n\017profile_version\030\001 \001(\0162"
      "*.metrics.ProfilerEventProto.ProfileVers"
      "ion\022;\n\013time_source\030\002 \001(\0162&.metrics.Profi"
      "lerEventProto.TimeSource\022E\n\022past_session"
      "_event\030\004 \003(\0162).metrics.ProfilerEventProt"
      "o.ProfilerEvent\022\032\n\022profiling_start_ms\030\005 "
      "\001(\003\022\033\n\023profiling_finish_ms\030\006 \001(\003\022A\n\016trac"
      "ked_object\030\003 \003(\0132).metrics.ProfilerEvent"
      "Proto.TrackedObject\032\353\004\n\rTrackedObject\022\036\n"
      "\026birth_thread_name_hash\030\001 \001(\006\022\035\n\025exec_th"
      "read_name_hash\030\002 \001(\006\022\035\n\025source_file_name"
      "_hash\030\003 \001(\006\022!\n\031source_function_name_hash"
      "\030\004 \001(\006\022\032\n\022source_line_number\030\005 \001(\005\022\022\n\nex"
      "ec_count\030\006 \001(\005\022\027\n\017exec_time_total\030\007 \001(\005\022"
      "\031\n\021exec_time_sampled\030\010 \001(\005\022\030\n\020queue_time"
      "_total\030\t \001(\005\022\032\n\022queue_time_sampled\030\n \001(\005"
      "\022K\n\014process_type\030\013 \001(\01625.metrics.Profile"
      "rEventProto.TrackedObject.ProcessType\022\022\n"
      "\nprocess_id\030\014 \001(\r\"\335\001\n\013ProcessType\022\013\n\007UNK"
      "NOWN\020\000\022\013\n\007BROWSER\020\001\022\014\n\010RENDERER\020\002\022\n\n\006PLU"
      "GIN\020\003\022\n\n\006WORKER\020\004\022\017\n\013NACL_LOADER\020\005\022\013\n\007UT"
      "ILITY\020\006\022\022\n\016PROFILE_IMPORT\020\007\022\n\n\006ZYGOTE\020\010\022"
      "\022\n\016SANDBOX_HELPER\020\t\022\017\n\013NACL_BROKER\020\n\022\007\n\003"
      "GPU\020\013\022\020\n\014PPAPI_PLUGIN\020\014\022\020\n\014PPAPI_BROKER\020"
      "\r\"]\n\016ProfileVersion\022\023\n\017VERSION_UNKNOWN\020\000"
      "\022\033\n\027VERSION_STARTUP_PROFILE\020\001\022\031\n\025VERSION"
      "_SPLIT_PROFILE\020\002\":\n\nTimeSource\022\027\n\023UNKNOW"
      "N_TIME_SOURCE\020\000\022\023\n\017WALL_CLOCK_TIME\020\001\"/\n\r"
      "ProfilerEvent\022\036\n\032EVENT_FIRST_NONEMPTY_PA"
      "INT\020\000B6\n\037org.chromium.components.metrics"
      "B\023ProfilerEventProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "profiler_event.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_profiler_5fevent_2eproto

const ::google::protobuf::EnumDescriptor* ProfilerEventProto_TrackedObject_ProcessType_descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_enum_descriptors[0];
}
bool ProfilerEventProto_TrackedObject_ProcessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::UNKNOWN;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::BROWSER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::RENDERER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::PLUGIN;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::WORKER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::NACL_LOADER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::UTILITY;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::PROFILE_IMPORT;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::ZYGOTE;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::SANDBOX_HELPER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::NACL_BROKER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::GPU;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::PPAPI_PLUGIN;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::PPAPI_BROKER;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::ProcessType_MIN;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::ProcessType_MAX;
const int ProfilerEventProto_TrackedObject::ProcessType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProfilerEventProto_ProfileVersion_descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_enum_descriptors[1];
}
bool ProfilerEventProto_ProfileVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProfilerEventProto_ProfileVersion ProfilerEventProto::VERSION_UNKNOWN;
const ProfilerEventProto_ProfileVersion ProfilerEventProto::VERSION_STARTUP_PROFILE;
const ProfilerEventProto_ProfileVersion ProfilerEventProto::VERSION_SPLIT_PROFILE;
const ProfilerEventProto_ProfileVersion ProfilerEventProto::ProfileVersion_MIN;
const ProfilerEventProto_ProfileVersion ProfilerEventProto::ProfileVersion_MAX;
const int ProfilerEventProto::ProfileVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProfilerEventProto_TimeSource_descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_enum_descriptors[2];
}
bool ProfilerEventProto_TimeSource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProfilerEventProto_TimeSource ProfilerEventProto::UNKNOWN_TIME_SOURCE;
const ProfilerEventProto_TimeSource ProfilerEventProto::WALL_CLOCK_TIME;
const ProfilerEventProto_TimeSource ProfilerEventProto::TimeSource_MIN;
const ProfilerEventProto_TimeSource ProfilerEventProto::TimeSource_MAX;
const int ProfilerEventProto::TimeSource_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProfilerEventProto_ProfilerEvent_descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_enum_descriptors[3];
}
bool ProfilerEventProto_ProfilerEvent_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProfilerEventProto_ProfilerEvent ProfilerEventProto::EVENT_FIRST_NONEMPTY_PAINT;
const ProfilerEventProto_ProfilerEvent ProfilerEventProto::ProfilerEvent_MIN;
const ProfilerEventProto_ProfilerEvent ProfilerEventProto::ProfilerEvent_MAX;
const int ProfilerEventProto::ProfilerEvent_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfilerEventProto_TrackedObject::kBirthThreadNameHashFieldNumber;
const int ProfilerEventProto_TrackedObject::kExecThreadNameHashFieldNumber;
const int ProfilerEventProto_TrackedObject::kSourceFileNameHashFieldNumber;
const int ProfilerEventProto_TrackedObject::kSourceFunctionNameHashFieldNumber;
const int ProfilerEventProto_TrackedObject::kSourceLineNumberFieldNumber;
const int ProfilerEventProto_TrackedObject::kExecCountFieldNumber;
const int ProfilerEventProto_TrackedObject::kExecTimeTotalFieldNumber;
const int ProfilerEventProto_TrackedObject::kExecTimeSampledFieldNumber;
const int ProfilerEventProto_TrackedObject::kQueueTimeTotalFieldNumber;
const int ProfilerEventProto_TrackedObject::kQueueTimeSampledFieldNumber;
const int ProfilerEventProto_TrackedObject::kProcessTypeFieldNumber;
const int ProfilerEventProto_TrackedObject::kProcessIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfilerEventProto_TrackedObject::ProfilerEventProto_TrackedObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_profiler_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.ProfilerEventProto.TrackedObject)
}
ProfilerEventProto_TrackedObject::ProfilerEventProto_TrackedObject(const ProfilerEventProto_TrackedObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&birth_thread_name_hash_, &from.birth_thread_name_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&process_id_) -
    reinterpret_cast<char*>(&birth_thread_name_hash_)) + sizeof(process_id_));
  // @@protoc_insertion_point(copy_constructor:metrics.ProfilerEventProto.TrackedObject)
}

void ProfilerEventProto_TrackedObject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&birth_thread_name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_id_) -
      reinterpret_cast<char*>(&birth_thread_name_hash_)) + sizeof(process_id_));
}

ProfilerEventProto_TrackedObject::~ProfilerEventProto_TrackedObject() {
  // @@protoc_insertion_point(destructor:metrics.ProfilerEventProto.TrackedObject)
  SharedDtor();
}

void ProfilerEventProto_TrackedObject::SharedDtor() {
}

void ProfilerEventProto_TrackedObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilerEventProto_TrackedObject::descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfilerEventProto_TrackedObject& ProfilerEventProto_TrackedObject::default_instance() {
  protobuf_profiler_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfilerEventProto_TrackedObject* ProfilerEventProto_TrackedObject::New(::google::protobuf::Arena* arena) const {
  ProfilerEventProto_TrackedObject* n = new ProfilerEventProto_TrackedObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfilerEventProto_TrackedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.ProfilerEventProto.TrackedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&birth_thread_name_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exec_time_sampled_) -
        reinterpret_cast<char*>(&birth_thread_name_hash_)) + sizeof(exec_time_sampled_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&queue_time_total_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&process_id_) -
        reinterpret_cast<char*>(&queue_time_total_)) + sizeof(process_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfilerEventProto_TrackedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.ProfilerEventProto.TrackedObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 birth_thread_name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_birth_thread_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &birth_thread_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 exec_thread_name_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_exec_thread_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &exec_thread_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 source_file_name_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_source_file_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &source_file_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 source_function_name_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_source_function_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &source_function_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_line_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_source_line_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_line_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exec_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_exec_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exec_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exec_time_total = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_exec_time_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exec_time_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exec_time_sampled = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_exec_time_sampled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exec_time_sampled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_time_total = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_queue_time_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_time_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_time_sampled = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_queue_time_sampled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_time_sampled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ProfilerEventProto_TrackedObject_ProcessType_IsValid(value)) {
            set_process_type(static_cast< ::metrics::ProfilerEventProto_TrackedObject_ProcessType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 process_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.ProfilerEventProto.TrackedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.ProfilerEventProto.TrackedObject)
  return false;
#undef DO_
}

void ProfilerEventProto_TrackedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.ProfilerEventProto.TrackedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 birth_thread_name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->birth_thread_name_hash(), output);
  }

  // optional fixed64 exec_thread_name_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->exec_thread_name_hash(), output);
  }

  // optional fixed64 source_file_name_hash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->source_file_name_hash(), output);
  }

  // optional fixed64 source_function_name_hash = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->source_function_name_hash(), output);
  }

  // optional int32 source_line_number = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->source_line_number(), output);
  }

  // optional int32 exec_count = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exec_count(), output);
  }

  // optional int32 exec_time_total = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exec_time_total(), output);
  }

  // optional int32 exec_time_sampled = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exec_time_sampled(), output);
  }

  // optional int32 queue_time_total = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->queue_time_total(), output);
  }

  // optional int32 queue_time_sampled = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->queue_time_sampled(), output);
  }

  // optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->process_type(), output);
  }

  // optional uint32 process_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->process_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.ProfilerEventProto.TrackedObject)
}

::google::protobuf::uint8* ProfilerEventProto_TrackedObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.ProfilerEventProto.TrackedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 birth_thread_name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->birth_thread_name_hash(), target);
  }

  // optional fixed64 exec_thread_name_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->exec_thread_name_hash(), target);
  }

  // optional fixed64 source_file_name_hash = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->source_file_name_hash(), target);
  }

  // optional fixed64 source_function_name_hash = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->source_function_name_hash(), target);
  }

  // optional int32 source_line_number = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->source_line_number(), target);
  }

  // optional int32 exec_count = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->exec_count(), target);
  }

  // optional int32 exec_time_total = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exec_time_total(), target);
  }

  // optional int32 exec_time_sampled = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exec_time_sampled(), target);
  }

  // optional int32 queue_time_total = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->queue_time_total(), target);
  }

  // optional int32 queue_time_sampled = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->queue_time_sampled(), target);
  }

  // optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->process_type(), target);
  }

  // optional uint32 process_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->process_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.ProfilerEventProto.TrackedObject)
  return target;
}

size_t ProfilerEventProto_TrackedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.ProfilerEventProto.TrackedObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional fixed64 birth_thread_name_hash = 1;
    if (has_birth_thread_name_hash()) {
      total_size += 1 + 8;
    }

    // optional fixed64 exec_thread_name_hash = 2;
    if (has_exec_thread_name_hash()) {
      total_size += 1 + 8;
    }

    // optional fixed64 source_file_name_hash = 3;
    if (has_source_file_name_hash()) {
      total_size += 1 + 8;
    }

    // optional fixed64 source_function_name_hash = 4;
    if (has_source_function_name_hash()) {
      total_size += 1 + 8;
    }

    // optional int32 source_line_number = 5;
    if (has_source_line_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_line_number());
    }

    // optional int32 exec_count = 6;
    if (has_exec_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exec_count());
    }

    // optional int32 exec_time_total = 7;
    if (has_exec_time_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exec_time_total());
    }

    // optional int32 exec_time_sampled = 8;
    if (has_exec_time_sampled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exec_time_sampled());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional int32 queue_time_total = 9;
    if (has_queue_time_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_time_total());
    }

    // optional int32 queue_time_sampled = 10;
    if (has_queue_time_sampled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_time_sampled());
    }

    // optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
    if (has_process_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->process_type());
    }

    // optional uint32 process_id = 12;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->process_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilerEventProto_TrackedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.ProfilerEventProto.TrackedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfilerEventProto_TrackedObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfilerEventProto_TrackedObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.ProfilerEventProto.TrackedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.ProfilerEventProto.TrackedObject)
    MergeFrom(*source);
  }
}

void ProfilerEventProto_TrackedObject::MergeFrom(const ProfilerEventProto_TrackedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.ProfilerEventProto.TrackedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      birth_thread_name_hash_ = from.birth_thread_name_hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      exec_thread_name_hash_ = from.exec_thread_name_hash_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_file_name_hash_ = from.source_file_name_hash_;
    }
    if (cached_has_bits & 0x00000008u) {
      source_function_name_hash_ = from.source_function_name_hash_;
    }
    if (cached_has_bits & 0x00000010u) {
      source_line_number_ = from.source_line_number_;
    }
    if (cached_has_bits & 0x00000020u) {
      exec_count_ = from.exec_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      exec_time_total_ = from.exec_time_total_;
    }
    if (cached_has_bits & 0x00000080u) {
      exec_time_sampled_ = from.exec_time_sampled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      queue_time_total_ = from.queue_time_total_;
    }
    if (cached_has_bits & 0x00000200u) {
      queue_time_sampled_ = from.queue_time_sampled_;
    }
    if (cached_has_bits & 0x00000400u) {
      process_type_ = from.process_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      process_id_ = from.process_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProfilerEventProto_TrackedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.ProfilerEventProto.TrackedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilerEventProto_TrackedObject::CopyFrom(const ProfilerEventProto_TrackedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.ProfilerEventProto.TrackedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilerEventProto_TrackedObject::IsInitialized() const {
  return true;
}

void ProfilerEventProto_TrackedObject::Swap(ProfilerEventProto_TrackedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfilerEventProto_TrackedObject::InternalSwap(ProfilerEventProto_TrackedObject* other) {
  using std::swap;
  swap(birth_thread_name_hash_, other->birth_thread_name_hash_);
  swap(exec_thread_name_hash_, other->exec_thread_name_hash_);
  swap(source_file_name_hash_, other->source_file_name_hash_);
  swap(source_function_name_hash_, other->source_function_name_hash_);
  swap(source_line_number_, other->source_line_number_);
  swap(exec_count_, other->exec_count_);
  swap(exec_time_total_, other->exec_time_total_);
  swap(exec_time_sampled_, other->exec_time_sampled_);
  swap(queue_time_total_, other->queue_time_total_);
  swap(queue_time_sampled_, other->queue_time_sampled_);
  swap(process_type_, other->process_type_);
  swap(process_id_, other->process_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfilerEventProto_TrackedObject::GetMetadata() const {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfilerEventProto_TrackedObject

// optional fixed64 birth_thread_name_hash = 1;
bool ProfilerEventProto_TrackedObject::has_birth_thread_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_birth_thread_name_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void ProfilerEventProto_TrackedObject::clear_has_birth_thread_name_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProfilerEventProto_TrackedObject::clear_birth_thread_name_hash() {
  birth_thread_name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_birth_thread_name_hash();
}
::google::protobuf::uint64 ProfilerEventProto_TrackedObject::birth_thread_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.birth_thread_name_hash)
  return birth_thread_name_hash_;
}
void ProfilerEventProto_TrackedObject::set_birth_thread_name_hash(::google::protobuf::uint64 value) {
  set_has_birth_thread_name_hash();
  birth_thread_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.birth_thread_name_hash)
}

// optional fixed64 exec_thread_name_hash = 2;
bool ProfilerEventProto_TrackedObject::has_exec_thread_name_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_exec_thread_name_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void ProfilerEventProto_TrackedObject::clear_has_exec_thread_name_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProfilerEventProto_TrackedObject::clear_exec_thread_name_hash() {
  exec_thread_name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_exec_thread_name_hash();
}
::google::protobuf::uint64 ProfilerEventProto_TrackedObject::exec_thread_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_thread_name_hash)
  return exec_thread_name_hash_;
}
void ProfilerEventProto_TrackedObject::set_exec_thread_name_hash(::google::protobuf::uint64 value) {
  set_has_exec_thread_name_hash();
  exec_thread_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_thread_name_hash)
}

// optional fixed64 source_file_name_hash = 3;
bool ProfilerEventProto_TrackedObject::has_source_file_name_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_source_file_name_hash() {
  _has_bits_[0] |= 0x00000004u;
}
void ProfilerEventProto_TrackedObject::clear_has_source_file_name_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProfilerEventProto_TrackedObject::clear_source_file_name_hash() {
  source_file_name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_source_file_name_hash();
}
::google::protobuf::uint64 ProfilerEventProto_TrackedObject::source_file_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_file_name_hash)
  return source_file_name_hash_;
}
void ProfilerEventProto_TrackedObject::set_source_file_name_hash(::google::protobuf::uint64 value) {
  set_has_source_file_name_hash();
  source_file_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_file_name_hash)
}

// optional fixed64 source_function_name_hash = 4;
bool ProfilerEventProto_TrackedObject::has_source_function_name_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_source_function_name_hash() {
  _has_bits_[0] |= 0x00000008u;
}
void ProfilerEventProto_TrackedObject::clear_has_source_function_name_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProfilerEventProto_TrackedObject::clear_source_function_name_hash() {
  source_function_name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_source_function_name_hash();
}
::google::protobuf::uint64 ProfilerEventProto_TrackedObject::source_function_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_function_name_hash)
  return source_function_name_hash_;
}
void ProfilerEventProto_TrackedObject::set_source_function_name_hash(::google::protobuf::uint64 value) {
  set_has_source_function_name_hash();
  source_function_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_function_name_hash)
}

// optional int32 source_line_number = 5;
bool ProfilerEventProto_TrackedObject::has_source_line_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_source_line_number() {
  _has_bits_[0] |= 0x00000010u;
}
void ProfilerEventProto_TrackedObject::clear_has_source_line_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProfilerEventProto_TrackedObject::clear_source_line_number() {
  source_line_number_ = 0;
  clear_has_source_line_number();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::source_line_number() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_line_number)
  return source_line_number_;
}
void ProfilerEventProto_TrackedObject::set_source_line_number(::google::protobuf::int32 value) {
  set_has_source_line_number();
  source_line_number_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_line_number)
}

// optional int32 exec_count = 6;
bool ProfilerEventProto_TrackedObject::has_exec_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_exec_count() {
  _has_bits_[0] |= 0x00000020u;
}
void ProfilerEventProto_TrackedObject::clear_has_exec_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void ProfilerEventProto_TrackedObject::clear_exec_count() {
  exec_count_ = 0;
  clear_has_exec_count();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_count() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_count)
  return exec_count_;
}
void ProfilerEventProto_TrackedObject::set_exec_count(::google::protobuf::int32 value) {
  set_has_exec_count();
  exec_count_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_count)
}

// optional int32 exec_time_total = 7;
bool ProfilerEventProto_TrackedObject::has_exec_time_total() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_exec_time_total() {
  _has_bits_[0] |= 0x00000040u;
}
void ProfilerEventProto_TrackedObject::clear_has_exec_time_total() {
  _has_bits_[0] &= ~0x00000040u;
}
void ProfilerEventProto_TrackedObject::clear_exec_time_total() {
  exec_time_total_ = 0;
  clear_has_exec_time_total();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_time_total() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_time_total)
  return exec_time_total_;
}
void ProfilerEventProto_TrackedObject::set_exec_time_total(::google::protobuf::int32 value) {
  set_has_exec_time_total();
  exec_time_total_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_time_total)
}

// optional int32 exec_time_sampled = 8;
bool ProfilerEventProto_TrackedObject::has_exec_time_sampled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_exec_time_sampled() {
  _has_bits_[0] |= 0x00000080u;
}
void ProfilerEventProto_TrackedObject::clear_has_exec_time_sampled() {
  _has_bits_[0] &= ~0x00000080u;
}
void ProfilerEventProto_TrackedObject::clear_exec_time_sampled() {
  exec_time_sampled_ = 0;
  clear_has_exec_time_sampled();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_time_sampled() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_time_sampled)
  return exec_time_sampled_;
}
void ProfilerEventProto_TrackedObject::set_exec_time_sampled(::google::protobuf::int32 value) {
  set_has_exec_time_sampled();
  exec_time_sampled_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_time_sampled)
}

// optional int32 queue_time_total = 9;
bool ProfilerEventProto_TrackedObject::has_queue_time_total() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_queue_time_total() {
  _has_bits_[0] |= 0x00000100u;
}
void ProfilerEventProto_TrackedObject::clear_has_queue_time_total() {
  _has_bits_[0] &= ~0x00000100u;
}
void ProfilerEventProto_TrackedObject::clear_queue_time_total() {
  queue_time_total_ = 0;
  clear_has_queue_time_total();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::queue_time_total() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.queue_time_total)
  return queue_time_total_;
}
void ProfilerEventProto_TrackedObject::set_queue_time_total(::google::protobuf::int32 value) {
  set_has_queue_time_total();
  queue_time_total_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.queue_time_total)
}

// optional int32 queue_time_sampled = 10;
bool ProfilerEventProto_TrackedObject::has_queue_time_sampled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_queue_time_sampled() {
  _has_bits_[0] |= 0x00000200u;
}
void ProfilerEventProto_TrackedObject::clear_has_queue_time_sampled() {
  _has_bits_[0] &= ~0x00000200u;
}
void ProfilerEventProto_TrackedObject::clear_queue_time_sampled() {
  queue_time_sampled_ = 0;
  clear_has_queue_time_sampled();
}
::google::protobuf::int32 ProfilerEventProto_TrackedObject::queue_time_sampled() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.queue_time_sampled)
  return queue_time_sampled_;
}
void ProfilerEventProto_TrackedObject::set_queue_time_sampled(::google::protobuf::int32 value) {
  set_has_queue_time_sampled();
  queue_time_sampled_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.queue_time_sampled)
}

// optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
bool ProfilerEventProto_TrackedObject::has_process_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_process_type() {
  _has_bits_[0] |= 0x00000400u;
}
void ProfilerEventProto_TrackedObject::clear_has_process_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void ProfilerEventProto_TrackedObject::clear_process_type() {
  process_type_ = 0;
  clear_has_process_type();
}
::metrics::ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::process_type() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.process_type)
  return static_cast< ::metrics::ProfilerEventProto_TrackedObject_ProcessType >(process_type_);
}
void ProfilerEventProto_TrackedObject::set_process_type(::metrics::ProfilerEventProto_TrackedObject_ProcessType value) {
  assert(::metrics::ProfilerEventProto_TrackedObject_ProcessType_IsValid(value));
  set_has_process_type();
  process_type_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.process_type)
}

// optional uint32 process_id = 12;
bool ProfilerEventProto_TrackedObject::has_process_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ProfilerEventProto_TrackedObject::set_has_process_id() {
  _has_bits_[0] |= 0x00000800u;
}
void ProfilerEventProto_TrackedObject::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void ProfilerEventProto_TrackedObject::clear_process_id() {
  process_id_ = 0u;
  clear_has_process_id();
}
::google::protobuf::uint32 ProfilerEventProto_TrackedObject::process_id() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.process_id)
  return process_id_;
}
void ProfilerEventProto_TrackedObject::set_process_id(::google::protobuf::uint32 value) {
  set_has_process_id();
  process_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.process_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfilerEventProto::kProfileVersionFieldNumber;
const int ProfilerEventProto::kTimeSourceFieldNumber;
const int ProfilerEventProto::kPastSessionEventFieldNumber;
const int ProfilerEventProto::kProfilingStartMsFieldNumber;
const int ProfilerEventProto::kProfilingFinishMsFieldNumber;
const int ProfilerEventProto::kTrackedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfilerEventProto::ProfilerEventProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_profiler_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.ProfilerEventProto)
}
ProfilerEventProto::ProfilerEventProto(const ProfilerEventProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tracked_object_(from.tracked_object_),
      past_session_event_(from.past_session_event_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&profile_version_, &from.profile_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&profiling_finish_ms_) -
    reinterpret_cast<char*>(&profile_version_)) + sizeof(profiling_finish_ms_));
  // @@protoc_insertion_point(copy_constructor:metrics.ProfilerEventProto)
}

void ProfilerEventProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&profile_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profiling_finish_ms_) -
      reinterpret_cast<char*>(&profile_version_)) + sizeof(profiling_finish_ms_));
}

ProfilerEventProto::~ProfilerEventProto() {
  // @@protoc_insertion_point(destructor:metrics.ProfilerEventProto)
  SharedDtor();
}

void ProfilerEventProto::SharedDtor() {
}

void ProfilerEventProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilerEventProto::descriptor() {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfilerEventProto& ProfilerEventProto::default_instance() {
  protobuf_profiler_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfilerEventProto* ProfilerEventProto::New(::google::protobuf::Arena* arena) const {
  ProfilerEventProto* n = new ProfilerEventProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfilerEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.ProfilerEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tracked_object_.Clear();
  past_session_event_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&profile_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&profiling_finish_ms_) -
        reinterpret_cast<char*>(&profile_version_)) + sizeof(profiling_finish_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfilerEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.ProfilerEventProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ProfilerEventProto_ProfileVersion_IsValid(value)) {
            set_profile_version(static_cast< ::metrics::ProfilerEventProto_ProfileVersion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ProfilerEventProto_TimeSource_IsValid(value)) {
            set_time_source(static_cast< ::metrics::ProfilerEventProto_TimeSource >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tracked_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::ProfilerEventProto_ProfilerEvent_IsValid(value)) {
            add_past_session_event(static_cast< ::metrics::ProfilerEventProto_ProfilerEvent >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::metrics::ProfilerEventProto_ProfilerEvent_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_past_session_event())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 profiling_start_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_profiling_start_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &profiling_start_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 profiling_finish_ms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_profiling_finish_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &profiling_finish_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.ProfilerEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.ProfilerEventProto)
  return false;
#undef DO_
}

void ProfilerEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.ProfilerEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->profile_version(), output);
  }

  // optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->time_source(), output);
  }

  // repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_object_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tracked_object(static_cast<int>(i)), output);
  }

  // repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
  for (int i = 0, n = this->past_session_event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->past_session_event(i), output);
  }

  // optional int64 profiling_start_ms = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->profiling_start_ms(), output);
  }

  // optional int64 profiling_finish_ms = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->profiling_finish_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.ProfilerEventProto)
}

::google::protobuf::uint8* ProfilerEventProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.ProfilerEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->profile_version(), target);
  }

  // optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->time_source(), target);
  }

  // repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_object_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tracked_object(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    4, this->past_session_event_, target);

  // optional int64 profiling_start_ms = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->profiling_start_ms(), target);
  }

  // optional int64 profiling_finish_ms = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->profiling_finish_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.ProfilerEventProto)
  return target;
}

size_t ProfilerEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.ProfilerEventProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tracked_object_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracked_object(static_cast<int>(i)));
    }
  }

  // repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->past_session_event_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->past_session_event(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
    if (has_profile_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->profile_version());
    }

    // optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
    if (has_time_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_source());
    }

    // optional int64 profiling_start_ms = 5;
    if (has_profiling_start_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->profiling_start_ms());
    }

    // optional int64 profiling_finish_ms = 6;
    if (has_profiling_finish_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->profiling_finish_ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilerEventProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.ProfilerEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfilerEventProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfilerEventProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.ProfilerEventProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.ProfilerEventProto)
    MergeFrom(*source);
  }
}

void ProfilerEventProto::MergeFrom(const ProfilerEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.ProfilerEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracked_object_.MergeFrom(from.tracked_object_);
  past_session_event_.MergeFrom(from.past_session_event_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      profile_version_ = from.profile_version_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_source_ = from.time_source_;
    }
    if (cached_has_bits & 0x00000004u) {
      profiling_start_ms_ = from.profiling_start_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      profiling_finish_ms_ = from.profiling_finish_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProfilerEventProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.ProfilerEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilerEventProto::CopyFrom(const ProfilerEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.ProfilerEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilerEventProto::IsInitialized() const {
  return true;
}

void ProfilerEventProto::Swap(ProfilerEventProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfilerEventProto::InternalSwap(ProfilerEventProto* other) {
  using std::swap;
  tracked_object_.InternalSwap(&other->tracked_object_);
  past_session_event_.InternalSwap(&other->past_session_event_);
  swap(profile_version_, other->profile_version_);
  swap(time_source_, other->time_source_);
  swap(profiling_start_ms_, other->profiling_start_ms_);
  swap(profiling_finish_ms_, other->profiling_finish_ms_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfilerEventProto::GetMetadata() const {
  protobuf_profiler_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_profiler_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfilerEventProto

// optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
bool ProfilerEventProto::has_profile_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProfilerEventProto::set_has_profile_version() {
  _has_bits_[0] |= 0x00000001u;
}
void ProfilerEventProto::clear_has_profile_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProfilerEventProto::clear_profile_version() {
  profile_version_ = 0;
  clear_has_profile_version();
}
::metrics::ProfilerEventProto_ProfileVersion ProfilerEventProto::profile_version() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profile_version)
  return static_cast< ::metrics::ProfilerEventProto_ProfileVersion >(profile_version_);
}
void ProfilerEventProto::set_profile_version(::metrics::ProfilerEventProto_ProfileVersion value) {
  assert(::metrics::ProfilerEventProto_ProfileVersion_IsValid(value));
  set_has_profile_version();
  profile_version_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profile_version)
}

// optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
bool ProfilerEventProto::has_time_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProfilerEventProto::set_has_time_source() {
  _has_bits_[0] |= 0x00000002u;
}
void ProfilerEventProto::clear_has_time_source() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProfilerEventProto::clear_time_source() {
  time_source_ = 0;
  clear_has_time_source();
}
::metrics::ProfilerEventProto_TimeSource ProfilerEventProto::time_source() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.time_source)
  return static_cast< ::metrics::ProfilerEventProto_TimeSource >(time_source_);
}
void ProfilerEventProto::set_time_source(::metrics::ProfilerEventProto_TimeSource value) {
  assert(::metrics::ProfilerEventProto_TimeSource_IsValid(value));
  set_has_time_source();
  time_source_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.time_source)
}

// repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
int ProfilerEventProto::past_session_event_size() const {
  return past_session_event_.size();
}
void ProfilerEventProto::clear_past_session_event() {
  past_session_event_.Clear();
}
::metrics::ProfilerEventProto_ProfilerEvent ProfilerEventProto::past_session_event(int index) const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.past_session_event)
  return static_cast< ::metrics::ProfilerEventProto_ProfilerEvent >(past_session_event_.Get(index));
}
void ProfilerEventProto::set_past_session_event(int index, ::metrics::ProfilerEventProto_ProfilerEvent value) {
  assert(::metrics::ProfilerEventProto_ProfilerEvent_IsValid(value));
  past_session_event_.Set(index, value);
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.past_session_event)
}
void ProfilerEventProto::add_past_session_event(::metrics::ProfilerEventProto_ProfilerEvent value) {
  assert(::metrics::ProfilerEventProto_ProfilerEvent_IsValid(value));
  past_session_event_.Add(value);
  // @@protoc_insertion_point(field_add:metrics.ProfilerEventProto.past_session_event)
}
const ::google::protobuf::RepeatedField<int>&
ProfilerEventProto::past_session_event() const {
  // @@protoc_insertion_point(field_list:metrics.ProfilerEventProto.past_session_event)
  return past_session_event_;
}
::google::protobuf::RepeatedField<int>*
ProfilerEventProto::mutable_past_session_event() {
  // @@protoc_insertion_point(field_mutable_list:metrics.ProfilerEventProto.past_session_event)
  return &past_session_event_;
}

// optional int64 profiling_start_ms = 5;
bool ProfilerEventProto::has_profiling_start_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProfilerEventProto::set_has_profiling_start_ms() {
  _has_bits_[0] |= 0x00000004u;
}
void ProfilerEventProto::clear_has_profiling_start_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProfilerEventProto::clear_profiling_start_ms() {
  profiling_start_ms_ = GOOGLE_LONGLONG(0);
  clear_has_profiling_start_ms();
}
::google::protobuf::int64 ProfilerEventProto::profiling_start_ms() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profiling_start_ms)
  return profiling_start_ms_;
}
void ProfilerEventProto::set_profiling_start_ms(::google::protobuf::int64 value) {
  set_has_profiling_start_ms();
  profiling_start_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profiling_start_ms)
}

// optional int64 profiling_finish_ms = 6;
bool ProfilerEventProto::has_profiling_finish_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProfilerEventProto::set_has_profiling_finish_ms() {
  _has_bits_[0] |= 0x00000008u;
}
void ProfilerEventProto::clear_has_profiling_finish_ms() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProfilerEventProto::clear_profiling_finish_ms() {
  profiling_finish_ms_ = GOOGLE_LONGLONG(0);
  clear_has_profiling_finish_ms();
}
::google::protobuf::int64 ProfilerEventProto::profiling_finish_ms() const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profiling_finish_ms)
  return profiling_finish_ms_;
}
void ProfilerEventProto::set_profiling_finish_ms(::google::protobuf::int64 value) {
  set_has_profiling_finish_ms();
  profiling_finish_ms_ = value;
  // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profiling_finish_ms)
}

// repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
int ProfilerEventProto::tracked_object_size() const {
  return tracked_object_.size();
}
void ProfilerEventProto::clear_tracked_object() {
  tracked_object_.Clear();
}
const ::metrics::ProfilerEventProto_TrackedObject& ProfilerEventProto::tracked_object(int index) const {
  // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.tracked_object)
  return tracked_object_.Get(index);
}
::metrics::ProfilerEventProto_TrackedObject* ProfilerEventProto::mutable_tracked_object(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.ProfilerEventProto.tracked_object)
  return tracked_object_.Mutable(index);
}
::metrics::ProfilerEventProto_TrackedObject* ProfilerEventProto::add_tracked_object() {
  // @@protoc_insertion_point(field_add:metrics.ProfilerEventProto.tracked_object)
  return tracked_object_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::ProfilerEventProto_TrackedObject >*
ProfilerEventProto::mutable_tracked_object() {
  // @@protoc_insertion_point(field_mutable_list:metrics.ProfilerEventProto.tracked_object)
  return &tracked_object_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::ProfilerEventProto_TrackedObject >&
ProfilerEventProto::tracked_object() const {
  // @@protoc_insertion_point(field_list:metrics.ProfilerEventProto.tracked_object)
  return tracked_object_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
