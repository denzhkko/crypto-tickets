// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qquestion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "qquestion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qquestion {
namespace pb {
class QquestionPrediction_Prediction_Score_ThresholdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QquestionPrediction_Prediction_Score_Threshold>
     _instance;
} _QquestionPrediction_Prediction_Score_Threshold_default_instance_;
class QquestionPrediction_Prediction_ScoreDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QquestionPrediction_Prediction_Score>
     _instance;
} _QquestionPrediction_Prediction_Score_default_instance_;
class QquestionPrediction_PredictionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QquestionPrediction_Prediction>
     _instance;
} _QquestionPrediction_Prediction_default_instance_;
class QquestionPredictionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QquestionPrediction>
     _instance;
} _QquestionPrediction_default_instance_;

namespace protobuf_qquestion_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score_Threshold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score_Threshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score_Threshold, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score_Threshold, is_exceeded_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction_Score, threshold_list_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction, model_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction_Prediction, score_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction, prediction_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QquestionPrediction, error_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(QquestionPrediction_Prediction_Score_Threshold)},
  { 9, 17, sizeof(QquestionPrediction_Prediction_Score)},
  { 20, 27, sizeof(QquestionPrediction_Prediction)},
  { 29, 36, sizeof(QquestionPrediction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QquestionPrediction_Prediction_Score_Threshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QquestionPrediction_Prediction_Score_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QquestionPrediction_Prediction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QquestionPrediction_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qquestion.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _QquestionPrediction_Prediction_Score_Threshold_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QquestionPrediction_Prediction_Score_Threshold_default_instance_);_QquestionPrediction_Prediction_Score_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QquestionPrediction_Prediction_Score_default_instance_);_QquestionPrediction_Prediction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QquestionPrediction_Prediction_default_instance_);_QquestionPrediction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QquestionPrediction_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017qquestion.proto\022\014qquestion.pb\"\203\003\n\023Qque"
      "stionPrediction\022E\n\017prediction_list\030\001 \003(\013"
      "2,.qquestion.pb.QquestionPrediction.Pred"
      "iction\022\r\n\005error\030\002 \001(\t\032\225\002\n\nPrediction\022\022\n\n"
      "model_name\030\001 \001(\t\022F\n\nscore_list\030\002 \003(\01322.q"
      "question.pb.QquestionPrediction.Predicti"
      "on.Score\032\252\001\n\005Score\022\014\n\004name\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\002\022T\n\016threshold_list\030\003 \003(\0132<.qquest"
      "ion.pb.QquestionPrediction.Prediction.Sc"
      "ore.Threshold\032.\n\tThreshold\022\014\n\004name\030\001 \001(\t"
      "\022\023\n\013is_exceeded\030\002 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 421);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qquestion.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_qquestion_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QquestionPrediction_Prediction_Score_Threshold::kNameFieldNumber;
const int QquestionPrediction_Prediction_Score_Threshold::kIsExceededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QquestionPrediction_Prediction_Score_Threshold::QquestionPrediction_Prediction_Score_Threshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qquestion_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
}
QquestionPrediction_Prediction_Score_Threshold::QquestionPrediction_Prediction_Score_Threshold(const QquestionPrediction_Prediction_Score_Threshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  is_exceeded_ = from.is_exceeded_;
  // @@protoc_insertion_point(copy_constructor:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
}

void QquestionPrediction_Prediction_Score_Threshold::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_exceeded_ = false;
}

QquestionPrediction_Prediction_Score_Threshold::~QquestionPrediction_Prediction_Score_Threshold() {
  // @@protoc_insertion_point(destructor:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  SharedDtor();
}

void QquestionPrediction_Prediction_Score_Threshold::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QquestionPrediction_Prediction_Score_Threshold::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QquestionPrediction_Prediction_Score_Threshold::descriptor() {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QquestionPrediction_Prediction_Score_Threshold& QquestionPrediction_Prediction_Score_Threshold::default_instance() {
  protobuf_qquestion_2eproto::InitDefaults();
  return *internal_default_instance();
}

QquestionPrediction_Prediction_Score_Threshold* QquestionPrediction_Prediction_Score_Threshold::New(::google::protobuf::Arena* arena) const {
  QquestionPrediction_Prediction_Score_Threshold* n = new QquestionPrediction_Prediction_Score_Threshold;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QquestionPrediction_Prediction_Score_Threshold::Clear() {
// @@protoc_insertion_point(message_clear_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  is_exceeded_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QquestionPrediction_Prediction_Score_Threshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_exceeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_exceeded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_exceeded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  return false;
#undef DO_
}

void QquestionPrediction_Prediction_Score_Threshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool is_exceeded = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_exceeded(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
}

::google::protobuf::uint8* QquestionPrediction_Prediction_Score_Threshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool is_exceeded = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_exceeded(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  return target;
}

size_t QquestionPrediction_Prediction_Score_Threshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool is_exceeded = 2;
    if (has_is_exceeded()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QquestionPrediction_Prediction_Score_Threshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  GOOGLE_DCHECK_NE(&from, this);
  const QquestionPrediction_Prediction_Score_Threshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QquestionPrediction_Prediction_Score_Threshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
    MergeFrom(*source);
  }
}

void QquestionPrediction_Prediction_Score_Threshold::MergeFrom(const QquestionPrediction_Prediction_Score_Threshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_exceeded_ = from.is_exceeded_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QquestionPrediction_Prediction_Score_Threshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QquestionPrediction_Prediction_Score_Threshold::CopyFrom(const QquestionPrediction_Prediction_Score_Threshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QquestionPrediction_Prediction_Score_Threshold::IsInitialized() const {
  return true;
}

void QquestionPrediction_Prediction_Score_Threshold::Swap(QquestionPrediction_Prediction_Score_Threshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QquestionPrediction_Prediction_Score_Threshold::InternalSwap(QquestionPrediction_Prediction_Score_Threshold* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(is_exceeded_, other->is_exceeded_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QquestionPrediction_Prediction_Score_Threshold::GetMetadata() const {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QquestionPrediction_Prediction_Score_Threshold

// optional string name = 1;
bool QquestionPrediction_Prediction_Score_Threshold::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QquestionPrediction_Prediction_Score_Threshold::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void QquestionPrediction_Prediction_Score_Threshold::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void QquestionPrediction_Prediction_Score_Threshold::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& QquestionPrediction_Prediction_Score_Threshold::name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  return name_.GetNoArena();
}
void QquestionPrediction_Prediction_Score_Threshold::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
#if LANG_CXX11
void QquestionPrediction_Prediction_Score_Threshold::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
#endif
void QquestionPrediction_Prediction_Score_Threshold::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
void QquestionPrediction_Prediction_Score_Threshold::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
::std::string* QquestionPrediction_Prediction_Score_Threshold::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QquestionPrediction_Prediction_Score_Threshold::release_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QquestionPrediction_Prediction_Score_Threshold::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}

// optional bool is_exceeded = 2;
bool QquestionPrediction_Prediction_Score_Threshold::has_is_exceeded() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QquestionPrediction_Prediction_Score_Threshold::set_has_is_exceeded() {
  _has_bits_[0] |= 0x00000002u;
}
void QquestionPrediction_Prediction_Score_Threshold::clear_has_is_exceeded() {
  _has_bits_[0] &= ~0x00000002u;
}
void QquestionPrediction_Prediction_Score_Threshold::clear_is_exceeded() {
  is_exceeded_ = false;
  clear_has_is_exceeded();
}
bool QquestionPrediction_Prediction_Score_Threshold::is_exceeded() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.is_exceeded)
  return is_exceeded_;
}
void QquestionPrediction_Prediction_Score_Threshold::set_is_exceeded(bool value) {
  set_has_is_exceeded();
  is_exceeded_ = value;
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.is_exceeded)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QquestionPrediction_Prediction_Score::kNameFieldNumber;
const int QquestionPrediction_Prediction_Score::kValueFieldNumber;
const int QquestionPrediction_Prediction_Score::kThresholdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QquestionPrediction_Prediction_Score::QquestionPrediction_Prediction_Score()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qquestion_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qquestion.pb.QquestionPrediction.Prediction.Score)
}
QquestionPrediction_Prediction_Score::QquestionPrediction_Prediction_Score(const QquestionPrediction_Prediction_Score& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      threshold_list_(from.threshold_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:qquestion.pb.QquestionPrediction.Prediction.Score)
}

void QquestionPrediction_Prediction_Score::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

QquestionPrediction_Prediction_Score::~QquestionPrediction_Prediction_Score() {
  // @@protoc_insertion_point(destructor:qquestion.pb.QquestionPrediction.Prediction.Score)
  SharedDtor();
}

void QquestionPrediction_Prediction_Score::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QquestionPrediction_Prediction_Score::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QquestionPrediction_Prediction_Score::descriptor() {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QquestionPrediction_Prediction_Score& QquestionPrediction_Prediction_Score::default_instance() {
  protobuf_qquestion_2eproto::InitDefaults();
  return *internal_default_instance();
}

QquestionPrediction_Prediction_Score* QquestionPrediction_Prediction_Score::New(::google::protobuf::Arena* arena) const {
  QquestionPrediction_Prediction_Score* n = new QquestionPrediction_Prediction_Score;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QquestionPrediction_Prediction_Score::Clear() {
// @@protoc_insertion_point(message_clear_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  threshold_list_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QquestionPrediction_Prediction_Score::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qquestion.pb.QquestionPrediction.Prediction.Score.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_threshold_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qquestion.pb.QquestionPrediction.Prediction.Score)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qquestion.pb.QquestionPrediction.Prediction.Score)
  return false;
#undef DO_
}

void QquestionPrediction_Prediction_Score::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.Score.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->threshold_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->threshold_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qquestion.pb.QquestionPrediction.Prediction.Score)
}

::google::protobuf::uint8* QquestionPrediction_Prediction_Score::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.Score.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->threshold_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->threshold_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qquestion.pb.QquestionPrediction.Prediction.Score)
  return target;
}

size_t QquestionPrediction_Prediction_Score::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->threshold_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->threshold_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float value = 2;
    if (has_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QquestionPrediction_Prediction_Score::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  GOOGLE_DCHECK_NE(&from, this);
  const QquestionPrediction_Prediction_Score* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QquestionPrediction_Prediction_Score>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qquestion.pb.QquestionPrediction.Prediction.Score)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qquestion.pb.QquestionPrediction.Prediction.Score)
    MergeFrom(*source);
  }
}

void QquestionPrediction_Prediction_Score::MergeFrom(const QquestionPrediction_Prediction_Score& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  threshold_list_.MergeFrom(from.threshold_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QquestionPrediction_Prediction_Score::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QquestionPrediction_Prediction_Score::CopyFrom(const QquestionPrediction_Prediction_Score& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qquestion.pb.QquestionPrediction.Prediction.Score)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QquestionPrediction_Prediction_Score::IsInitialized() const {
  return true;
}

void QquestionPrediction_Prediction_Score::Swap(QquestionPrediction_Prediction_Score* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QquestionPrediction_Prediction_Score::InternalSwap(QquestionPrediction_Prediction_Score* other) {
  using std::swap;
  threshold_list_.InternalSwap(&other->threshold_list_);
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QquestionPrediction_Prediction_Score::GetMetadata() const {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QquestionPrediction_Prediction_Score

// optional string name = 1;
bool QquestionPrediction_Prediction_Score::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QquestionPrediction_Prediction_Score::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void QquestionPrediction_Prediction_Score::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void QquestionPrediction_Prediction_Score::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& QquestionPrediction_Prediction_Score::name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  return name_.GetNoArena();
}
void QquestionPrediction_Prediction_Score::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
#if LANG_CXX11
void QquestionPrediction_Prediction_Score::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
#endif
void QquestionPrediction_Prediction_Score::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
void QquestionPrediction_Prediction_Score::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
::std::string* QquestionPrediction_Prediction_Score::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QquestionPrediction_Prediction_Score::release_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QquestionPrediction_Prediction_Score::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}

// optional float value = 2;
bool QquestionPrediction_Prediction_Score::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QquestionPrediction_Prediction_Score::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void QquestionPrediction_Prediction_Score::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void QquestionPrediction_Prediction_Score::clear_value() {
  value_ = 0;
  clear_has_value();
}
float QquestionPrediction_Prediction_Score::value() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.value)
  return value_;
}
void QquestionPrediction_Prediction_Score::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.value)
}

// repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
int QquestionPrediction_Prediction_Score::threshold_list_size() const {
  return threshold_list_.size();
}
void QquestionPrediction_Prediction_Score::clear_threshold_list() {
  threshold_list_.Clear();
}
const ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold& QquestionPrediction_Prediction_Score::threshold_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Get(index);
}
::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* QquestionPrediction_Prediction_Score::mutable_threshold_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Mutable(index);
}
::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* QquestionPrediction_Prediction_Score::add_threshold_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >*
QquestionPrediction_Prediction_Score::mutable_threshold_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return &threshold_list_;
}
const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >&
QquestionPrediction_Prediction_Score::threshold_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QquestionPrediction_Prediction::kModelNameFieldNumber;
const int QquestionPrediction_Prediction::kScoreListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QquestionPrediction_Prediction::QquestionPrediction_Prediction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qquestion_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qquestion.pb.QquestionPrediction.Prediction)
}
QquestionPrediction_Prediction::QquestionPrediction_Prediction(const QquestionPrediction_Prediction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      score_list_(from.score_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_name()) {
    model_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  // @@protoc_insertion_point(copy_constructor:qquestion.pb.QquestionPrediction.Prediction)
}

void QquestionPrediction_Prediction::SharedCtor() {
  _cached_size_ = 0;
  model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QquestionPrediction_Prediction::~QquestionPrediction_Prediction() {
  // @@protoc_insertion_point(destructor:qquestion.pb.QquestionPrediction.Prediction)
  SharedDtor();
}

void QquestionPrediction_Prediction::SharedDtor() {
  model_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QquestionPrediction_Prediction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QquestionPrediction_Prediction::descriptor() {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QquestionPrediction_Prediction& QquestionPrediction_Prediction::default_instance() {
  protobuf_qquestion_2eproto::InitDefaults();
  return *internal_default_instance();
}

QquestionPrediction_Prediction* QquestionPrediction_Prediction::New(::google::protobuf::Arena* arena) const {
  QquestionPrediction_Prediction* n = new QquestionPrediction_Prediction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QquestionPrediction_Prediction::Clear() {
// @@protoc_insertion_point(message_clear_start:qquestion.pb.QquestionPrediction.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_list_.Clear();
  if (has_model_name()) {
    GOOGLE_DCHECK(!model_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*model_name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QquestionPrediction_Prediction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qquestion.pb.QquestionPrediction.Prediction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string model_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_name().data(), static_cast<int>(this->model_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qquestion.pb.QquestionPrediction.Prediction.model_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_score_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qquestion.pb.QquestionPrediction.Prediction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qquestion.pb.QquestionPrediction.Prediction)
  return false;
#undef DO_
}

void QquestionPrediction_Prediction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qquestion.pb.QquestionPrediction.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_name().data(), static_cast<int>(this->model_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.model_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model_name(), output);
  }

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->score_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->score_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qquestion.pb.QquestionPrediction.Prediction)
}

::google::protobuf::uint8* QquestionPrediction_Prediction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qquestion.pb.QquestionPrediction.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_name().data(), static_cast<int>(this->model_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.Prediction.model_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model_name(), target);
  }

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->score_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->score_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qquestion.pb.QquestionPrediction.Prediction)
  return target;
}

size_t QquestionPrediction_Prediction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qquestion.pb.QquestionPrediction.Prediction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->score_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->score_list(static_cast<int>(i)));
    }
  }

  // optional string model_name = 1;
  if (has_model_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QquestionPrediction_Prediction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qquestion.pb.QquestionPrediction.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  const QquestionPrediction_Prediction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QquestionPrediction_Prediction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qquestion.pb.QquestionPrediction.Prediction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qquestion.pb.QquestionPrediction.Prediction)
    MergeFrom(*source);
  }
}

void QquestionPrediction_Prediction::MergeFrom(const QquestionPrediction_Prediction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qquestion.pb.QquestionPrediction.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  score_list_.MergeFrom(from.score_list_);
  if (from.has_model_name()) {
    set_has_model_name();
    model_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
}

void QquestionPrediction_Prediction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qquestion.pb.QquestionPrediction.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QquestionPrediction_Prediction::CopyFrom(const QquestionPrediction_Prediction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qquestion.pb.QquestionPrediction.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QquestionPrediction_Prediction::IsInitialized() const {
  return true;
}

void QquestionPrediction_Prediction::Swap(QquestionPrediction_Prediction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QquestionPrediction_Prediction::InternalSwap(QquestionPrediction_Prediction* other) {
  using std::swap;
  score_list_.InternalSwap(&other->score_list_);
  model_name_.Swap(&other->model_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QquestionPrediction_Prediction::GetMetadata() const {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QquestionPrediction_Prediction

// optional string model_name = 1;
bool QquestionPrediction_Prediction::has_model_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QquestionPrediction_Prediction::set_has_model_name() {
  _has_bits_[0] |= 0x00000001u;
}
void QquestionPrediction_Prediction::clear_has_model_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void QquestionPrediction_Prediction::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_name();
}
const ::std::string& QquestionPrediction_Prediction::model_name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.model_name)
  return model_name_.GetNoArena();
}
void QquestionPrediction_Prediction::set_model_name(const ::std::string& value) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
#if LANG_CXX11
void QquestionPrediction_Prediction::set_model_name(::std::string&& value) {
  set_has_model_name();
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
#endif
void QquestionPrediction_Prediction::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
void QquestionPrediction_Prediction::set_model_name(const char* value, size_t size) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
::std::string* QquestionPrediction_Prediction::mutable_model_name() {
  set_has_model_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QquestionPrediction_Prediction::release_model_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.model_name)
  clear_has_model_name();
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QquestionPrediction_Prediction::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    set_has_model_name();
  } else {
    clear_has_model_name();
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.model_name)
}

// repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
int QquestionPrediction_Prediction::score_list_size() const {
  return score_list_.size();
}
void QquestionPrediction_Prediction::clear_score_list() {
  score_list_.Clear();
}
const ::qquestion::pb::QquestionPrediction_Prediction_Score& QquestionPrediction_Prediction::score_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Get(index);
}
::qquestion::pb::QquestionPrediction_Prediction_Score* QquestionPrediction_Prediction::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Mutable(index);
}
::qquestion::pb::QquestionPrediction_Prediction_Score* QquestionPrediction_Prediction::add_score_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >*
QquestionPrediction_Prediction::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return &score_list_;
}
const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >&
QquestionPrediction_Prediction::score_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QquestionPrediction::kPredictionListFieldNumber;
const int QquestionPrediction::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QquestionPrediction::QquestionPrediction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qquestion_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qquestion.pb.QquestionPrediction)
}
QquestionPrediction::QquestionPrediction(const QquestionPrediction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      prediction_list_(from.prediction_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:qquestion.pb.QquestionPrediction)
}

void QquestionPrediction::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QquestionPrediction::~QquestionPrediction() {
  // @@protoc_insertion_point(destructor:qquestion.pb.QquestionPrediction)
  SharedDtor();
}

void QquestionPrediction::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QquestionPrediction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QquestionPrediction::descriptor() {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QquestionPrediction& QquestionPrediction::default_instance() {
  protobuf_qquestion_2eproto::InitDefaults();
  return *internal_default_instance();
}

QquestionPrediction* QquestionPrediction::New(::google::protobuf::Arena* arena) const {
  QquestionPrediction* n = new QquestionPrediction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QquestionPrediction::Clear() {
// @@protoc_insertion_point(message_clear_start:qquestion.pb.QquestionPrediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prediction_list_.Clear();
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QquestionPrediction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qquestion.pb.QquestionPrediction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prediction_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qquestion.pb.QquestionPrediction.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qquestion.pb.QquestionPrediction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qquestion.pb.QquestionPrediction)
  return false;
#undef DO_
}

void QquestionPrediction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qquestion.pb.QquestionPrediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prediction_list(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qquestion.pb.QquestionPrediction)
}

::google::protobuf::uint8* QquestionPrediction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qquestion.pb.QquestionPrediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prediction_list(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qquestion.pb.QquestionPrediction.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qquestion.pb.QquestionPrediction)
  return target;
}

size_t QquestionPrediction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qquestion.pb.QquestionPrediction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prediction_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prediction_list(static_cast<int>(i)));
    }
  }

  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QquestionPrediction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qquestion.pb.QquestionPrediction)
  GOOGLE_DCHECK_NE(&from, this);
  const QquestionPrediction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QquestionPrediction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qquestion.pb.QquestionPrediction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qquestion.pb.QquestionPrediction)
    MergeFrom(*source);
  }
}

void QquestionPrediction::MergeFrom(const QquestionPrediction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qquestion.pb.QquestionPrediction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prediction_list_.MergeFrom(from.prediction_list_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void QquestionPrediction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qquestion.pb.QquestionPrediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QquestionPrediction::CopyFrom(const QquestionPrediction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qquestion.pb.QquestionPrediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QquestionPrediction::IsInitialized() const {
  return true;
}

void QquestionPrediction::Swap(QquestionPrediction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QquestionPrediction::InternalSwap(QquestionPrediction* other) {
  using std::swap;
  prediction_list_.InternalSwap(&other->prediction_list_);
  error_.Swap(&other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QquestionPrediction::GetMetadata() const {
  protobuf_qquestion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qquestion_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QquestionPrediction

// repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
int QquestionPrediction::prediction_list_size() const {
  return prediction_list_.size();
}
void QquestionPrediction::clear_prediction_list() {
  prediction_list_.Clear();
}
const ::qquestion::pb::QquestionPrediction_Prediction& QquestionPrediction::prediction_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Get(index);
}
::qquestion::pb::QquestionPrediction_Prediction* QquestionPrediction::mutable_prediction_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Mutable(index);
}
::qquestion::pb::QquestionPrediction_Prediction* QquestionPrediction::add_prediction_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >*
QquestionPrediction::mutable_prediction_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.prediction_list)
  return &prediction_list_;
}
const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >&
QquestionPrediction::prediction_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_;
}

// optional string error = 2;
bool QquestionPrediction::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QquestionPrediction::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void QquestionPrediction::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void QquestionPrediction::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& QquestionPrediction::error() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.error)
  return error_.GetNoArena();
}
void QquestionPrediction::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.error)
}
#if LANG_CXX11
void QquestionPrediction::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.error)
}
#endif
void QquestionPrediction::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.error)
}
void QquestionPrediction::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.error)
}
::std::string* QquestionPrediction::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QquestionPrediction::release_error() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QquestionPrediction::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace qquestion

// @@protoc_insertion_point(global_scope)
