// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qquestion.proto

#ifndef PROTOBUF_qquestion_2eproto__INCLUDED
#define PROTOBUF_qquestion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qquestion {
namespace pb {
class QquestionPrediction;
class QquestionPredictionDefaultTypeInternal;
extern QquestionPredictionDefaultTypeInternal _QquestionPrediction_default_instance_;
class QquestionPrediction_Prediction;
class QquestionPrediction_PredictionDefaultTypeInternal;
extern QquestionPrediction_PredictionDefaultTypeInternal _QquestionPrediction_Prediction_default_instance_;
class QquestionPrediction_Prediction_Score;
class QquestionPrediction_Prediction_ScoreDefaultTypeInternal;
extern QquestionPrediction_Prediction_ScoreDefaultTypeInternal _QquestionPrediction_Prediction_Score_default_instance_;
class QquestionPrediction_Prediction_Score_Threshold;
class QquestionPrediction_Prediction_Score_ThresholdDefaultTypeInternal;
extern QquestionPrediction_Prediction_Score_ThresholdDefaultTypeInternal _QquestionPrediction_Prediction_Score_Threshold_default_instance_;
}  // namespace pb
}  // namespace qquestion

namespace qquestion {
namespace pb {

namespace protobuf_qquestion_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_qquestion_2eproto

// ===================================================================

class QquestionPrediction_Prediction_Score_Threshold : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold) */ {
 public:
  QquestionPrediction_Prediction_Score_Threshold();
  virtual ~QquestionPrediction_Prediction_Score_Threshold();

  QquestionPrediction_Prediction_Score_Threshold(const QquestionPrediction_Prediction_Score_Threshold& from);

  inline QquestionPrediction_Prediction_Score_Threshold& operator=(const QquestionPrediction_Prediction_Score_Threshold& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QquestionPrediction_Prediction_Score_Threshold(QquestionPrediction_Prediction_Score_Threshold&& from) noexcept
    : QquestionPrediction_Prediction_Score_Threshold() {
    *this = ::std::move(from);
  }

  inline QquestionPrediction_Prediction_Score_Threshold& operator=(QquestionPrediction_Prediction_Score_Threshold&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QquestionPrediction_Prediction_Score_Threshold& default_instance();

  static inline const QquestionPrediction_Prediction_Score_Threshold* internal_default_instance() {
    return reinterpret_cast<const QquestionPrediction_Prediction_Score_Threshold*>(
               &_QquestionPrediction_Prediction_Score_Threshold_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QquestionPrediction_Prediction_Score_Threshold* other);
  friend void swap(QquestionPrediction_Prediction_Score_Threshold& a, QquestionPrediction_Prediction_Score_Threshold& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QquestionPrediction_Prediction_Score_Threshold* New() const PROTOBUF_FINAL { return New(NULL); }

  QquestionPrediction_Prediction_Score_Threshold* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QquestionPrediction_Prediction_Score_Threshold& from);
  void MergeFrom(const QquestionPrediction_Prediction_Score_Threshold& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QquestionPrediction_Prediction_Score_Threshold* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool is_exceeded = 2;
  bool has_is_exceeded() const;
  void clear_is_exceeded();
  static const int kIsExceededFieldNumber = 2;
  bool is_exceeded() const;
  void set_is_exceeded(bool value);

  // @@protoc_insertion_point(class_scope:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_is_exceeded();
  void clear_has_is_exceeded();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool is_exceeded_;
  friend struct protobuf_qquestion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QquestionPrediction_Prediction_Score : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qquestion.pb.QquestionPrediction.Prediction.Score) */ {
 public:
  QquestionPrediction_Prediction_Score();
  virtual ~QquestionPrediction_Prediction_Score();

  QquestionPrediction_Prediction_Score(const QquestionPrediction_Prediction_Score& from);

  inline QquestionPrediction_Prediction_Score& operator=(const QquestionPrediction_Prediction_Score& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QquestionPrediction_Prediction_Score(QquestionPrediction_Prediction_Score&& from) noexcept
    : QquestionPrediction_Prediction_Score() {
    *this = ::std::move(from);
  }

  inline QquestionPrediction_Prediction_Score& operator=(QquestionPrediction_Prediction_Score&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QquestionPrediction_Prediction_Score& default_instance();

  static inline const QquestionPrediction_Prediction_Score* internal_default_instance() {
    return reinterpret_cast<const QquestionPrediction_Prediction_Score*>(
               &_QquestionPrediction_Prediction_Score_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(QquestionPrediction_Prediction_Score* other);
  friend void swap(QquestionPrediction_Prediction_Score& a, QquestionPrediction_Prediction_Score& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QquestionPrediction_Prediction_Score* New() const PROTOBUF_FINAL { return New(NULL); }

  QquestionPrediction_Prediction_Score* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QquestionPrediction_Prediction_Score& from);
  void MergeFrom(const QquestionPrediction_Prediction_Score& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QquestionPrediction_Prediction_Score* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QquestionPrediction_Prediction_Score_Threshold Threshold;

  // accessors -------------------------------------------------------

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
  int threshold_list_size() const;
  void clear_threshold_list();
  static const int kThresholdListFieldNumber = 3;
  const ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold& threshold_list(int index) const;
  ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* mutable_threshold_list(int index);
  ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* add_threshold_list();
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >*
      mutable_threshold_list();
  const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >&
      threshold_list() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:qquestion.pb.QquestionPrediction.Prediction.Score)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold > threshold_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float value_;
  friend struct protobuf_qquestion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QquestionPrediction_Prediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qquestion.pb.QquestionPrediction.Prediction) */ {
 public:
  QquestionPrediction_Prediction();
  virtual ~QquestionPrediction_Prediction();

  QquestionPrediction_Prediction(const QquestionPrediction_Prediction& from);

  inline QquestionPrediction_Prediction& operator=(const QquestionPrediction_Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QquestionPrediction_Prediction(QquestionPrediction_Prediction&& from) noexcept
    : QquestionPrediction_Prediction() {
    *this = ::std::move(from);
  }

  inline QquestionPrediction_Prediction& operator=(QquestionPrediction_Prediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QquestionPrediction_Prediction& default_instance();

  static inline const QquestionPrediction_Prediction* internal_default_instance() {
    return reinterpret_cast<const QquestionPrediction_Prediction*>(
               &_QquestionPrediction_Prediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(QquestionPrediction_Prediction* other);
  friend void swap(QquestionPrediction_Prediction& a, QquestionPrediction_Prediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QquestionPrediction_Prediction* New() const PROTOBUF_FINAL { return New(NULL); }

  QquestionPrediction_Prediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QquestionPrediction_Prediction& from);
  void MergeFrom(const QquestionPrediction_Prediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QquestionPrediction_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QquestionPrediction_Prediction_Score Score;

  // accessors -------------------------------------------------------

  // repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 2;
  const ::qquestion::pb::QquestionPrediction_Prediction_Score& score_list(int index) const;
  ::qquestion::pb::QquestionPrediction_Prediction_Score* mutable_score_list(int index);
  ::qquestion::pb::QquestionPrediction_Prediction_Score* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >&
      score_list() const;

  // optional string model_name = 1;
  bool has_model_name() const;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // @@protoc_insertion_point(class_scope:qquestion.pb.QquestionPrediction.Prediction)
 private:
  void set_has_model_name();
  void clear_has_model_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score > score_list_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  friend struct protobuf_qquestion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QquestionPrediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qquestion.pb.QquestionPrediction) */ {
 public:
  QquestionPrediction();
  virtual ~QquestionPrediction();

  QquestionPrediction(const QquestionPrediction& from);

  inline QquestionPrediction& operator=(const QquestionPrediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QquestionPrediction(QquestionPrediction&& from) noexcept
    : QquestionPrediction() {
    *this = ::std::move(from);
  }

  inline QquestionPrediction& operator=(QquestionPrediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QquestionPrediction& default_instance();

  static inline const QquestionPrediction* internal_default_instance() {
    return reinterpret_cast<const QquestionPrediction*>(
               &_QquestionPrediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(QquestionPrediction* other);
  friend void swap(QquestionPrediction& a, QquestionPrediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QquestionPrediction* New() const PROTOBUF_FINAL { return New(NULL); }

  QquestionPrediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QquestionPrediction& from);
  void MergeFrom(const QquestionPrediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QquestionPrediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QquestionPrediction_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
  int prediction_list_size() const;
  void clear_prediction_list();
  static const int kPredictionListFieldNumber = 1;
  const ::qquestion::pb::QquestionPrediction_Prediction& prediction_list(int index) const;
  ::qquestion::pb::QquestionPrediction_Prediction* mutable_prediction_list(int index);
  ::qquestion::pb::QquestionPrediction_Prediction* add_prediction_list();
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >*
      mutable_prediction_list();
  const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >&
      prediction_list() const;

  // optional string error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:qquestion.pb.QquestionPrediction)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction > prediction_list_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  friend struct protobuf_qquestion_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QquestionPrediction_Prediction_Score_Threshold

// optional string name = 1;
inline bool QquestionPrediction_Prediction_Score_Threshold::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QquestionPrediction_Prediction_Score_Threshold::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QquestionPrediction_Prediction_Score_Threshold::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QquestionPrediction_Prediction_Score_Threshold::name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  return name_.GetNoArena();
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
#if LANG_CXX11
inline void QquestionPrediction_Prediction_Score_Threshold::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
#endif
inline void QquestionPrediction_Prediction_Score_Threshold::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}
inline ::std::string* QquestionPrediction_Prediction_Score_Threshold::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QquestionPrediction_Prediction_Score_Threshold::release_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.name)
}

// optional bool is_exceeded = 2;
inline bool QquestionPrediction_Prediction_Score_Threshold::has_is_exceeded() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_has_is_exceeded() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QquestionPrediction_Prediction_Score_Threshold::clear_has_is_exceeded() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QquestionPrediction_Prediction_Score_Threshold::clear_is_exceeded() {
  is_exceeded_ = false;
  clear_has_is_exceeded();
}
inline bool QquestionPrediction_Prediction_Score_Threshold::is_exceeded() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.is_exceeded)
  return is_exceeded_;
}
inline void QquestionPrediction_Prediction_Score_Threshold::set_is_exceeded(bool value) {
  set_has_is_exceeded();
  is_exceeded_ = value;
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.Threshold.is_exceeded)
}

// -------------------------------------------------------------------

// QquestionPrediction_Prediction_Score

// optional string name = 1;
inline bool QquestionPrediction_Prediction_Score::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QquestionPrediction_Prediction_Score::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QquestionPrediction_Prediction_Score::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QquestionPrediction_Prediction_Score::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QquestionPrediction_Prediction_Score::name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  return name_.GetNoArena();
}
inline void QquestionPrediction_Prediction_Score::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
#if LANG_CXX11
inline void QquestionPrediction_Prediction_Score::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
#endif
inline void QquestionPrediction_Prediction_Score::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
inline void QquestionPrediction_Prediction_Score::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}
inline ::std::string* QquestionPrediction_Prediction_Score::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QquestionPrediction_Prediction_Score::release_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.Score.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QquestionPrediction_Prediction_Score::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.Score.name)
}

// optional float value = 2;
inline bool QquestionPrediction_Prediction_Score::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QquestionPrediction_Prediction_Score::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QquestionPrediction_Prediction_Score::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QquestionPrediction_Prediction_Score::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float QquestionPrediction_Prediction_Score::value() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.value)
  return value_;
}
inline void QquestionPrediction_Prediction_Score::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.Score.value)
}

// repeated .qquestion.pb.QquestionPrediction.Prediction.Score.Threshold threshold_list = 3;
inline int QquestionPrediction_Prediction_Score::threshold_list_size() const {
  return threshold_list_.size();
}
inline void QquestionPrediction_Prediction_Score::clear_threshold_list() {
  threshold_list_.Clear();
}
inline const ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold& QquestionPrediction_Prediction_Score::threshold_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Get(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* QquestionPrediction_Prediction_Score::mutable_threshold_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Mutable(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold* QquestionPrediction_Prediction_Score::add_threshold_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >*
QquestionPrediction_Prediction_Score::mutable_threshold_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return &threshold_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score_Threshold >&
QquestionPrediction_Prediction_Score::threshold_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.Prediction.Score.threshold_list)
  return threshold_list_;
}

// -------------------------------------------------------------------

// QquestionPrediction_Prediction

// optional string model_name = 1;
inline bool QquestionPrediction_Prediction::has_model_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QquestionPrediction_Prediction::set_has_model_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QquestionPrediction_Prediction::clear_has_model_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QquestionPrediction_Prediction::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_name();
}
inline const ::std::string& QquestionPrediction_Prediction::model_name() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.model_name)
  return model_name_.GetNoArena();
}
inline void QquestionPrediction_Prediction::set_model_name(const ::std::string& value) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
#if LANG_CXX11
inline void QquestionPrediction_Prediction::set_model_name(::std::string&& value) {
  set_has_model_name();
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
#endif
inline void QquestionPrediction_Prediction::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
inline void QquestionPrediction_Prediction::set_model_name(const char* value, size_t size) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.Prediction.model_name)
}
inline ::std::string* QquestionPrediction_Prediction::mutable_model_name() {
  set_has_model_name();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QquestionPrediction_Prediction::release_model_name() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.Prediction.model_name)
  clear_has_model_name();
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QquestionPrediction_Prediction::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    set_has_model_name();
  } else {
    clear_has_model_name();
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.Prediction.model_name)
}

// repeated .qquestion.pb.QquestionPrediction.Prediction.Score score_list = 2;
inline int QquestionPrediction_Prediction::score_list_size() const {
  return score_list_.size();
}
inline void QquestionPrediction_Prediction::clear_score_list() {
  score_list_.Clear();
}
inline const ::qquestion::pb::QquestionPrediction_Prediction_Score& QquestionPrediction_Prediction::score_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Get(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction_Score* QquestionPrediction_Prediction::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Mutable(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction_Score* QquestionPrediction_Prediction::add_score_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >*
QquestionPrediction_Prediction::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return &score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction_Score >&
QquestionPrediction_Prediction::score_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.Prediction.score_list)
  return score_list_;
}

// -------------------------------------------------------------------

// QquestionPrediction

// repeated .qquestion.pb.QquestionPrediction.Prediction prediction_list = 1;
inline int QquestionPrediction::prediction_list_size() const {
  return prediction_list_.size();
}
inline void QquestionPrediction::clear_prediction_list() {
  prediction_list_.Clear();
}
inline const ::qquestion::pb::QquestionPrediction_Prediction& QquestionPrediction::prediction_list(int index) const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Get(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction* QquestionPrediction::mutable_prediction_list(int index) {
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Mutable(index);
}
inline ::qquestion::pb::QquestionPrediction_Prediction* QquestionPrediction::add_prediction_list() {
  // @@protoc_insertion_point(field_add:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >*
QquestionPrediction::mutable_prediction_list() {
  // @@protoc_insertion_point(field_mutable_list:qquestion.pb.QquestionPrediction.prediction_list)
  return &prediction_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qquestion::pb::QquestionPrediction_Prediction >&
QquestionPrediction::prediction_list() const {
  // @@protoc_insertion_point(field_list:qquestion.pb.QquestionPrediction.prediction_list)
  return prediction_list_;
}

// optional string error = 2;
inline bool QquestionPrediction::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QquestionPrediction::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QquestionPrediction::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QquestionPrediction::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& QquestionPrediction::error() const {
  // @@protoc_insertion_point(field_get:qquestion.pb.QquestionPrediction.error)
  return error_.GetNoArena();
}
inline void QquestionPrediction::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qquestion.pb.QquestionPrediction.error)
}
#if LANG_CXX11
inline void QquestionPrediction::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qquestion.pb.QquestionPrediction.error)
}
#endif
inline void QquestionPrediction::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qquestion.pb.QquestionPrediction.error)
}
inline void QquestionPrediction::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qquestion.pb.QquestionPrediction.error)
}
inline ::std::string* QquestionPrediction::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:qquestion.pb.QquestionPrediction.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QquestionPrediction::release_error() {
  // @@protoc_insertion_point(field_release:qquestion.pb.QquestionPrediction.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QquestionPrediction::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:qquestion.pb.QquestionPrediction.error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace qquestion

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_qquestion_2eproto__INCLUDED
