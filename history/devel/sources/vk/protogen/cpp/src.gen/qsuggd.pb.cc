// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qsuggd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "qsuggd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qsuggd {
namespace pb {
class QSuggDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QSugg>
     _instance;
} _QSugg_default_instance_;
class QSuggsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QSuggs>
     _instance;
} _QSuggs_default_instance_;

namespace protobuf_qsuggd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSugg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSugg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSugg, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSugg, query_hl_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSuggs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSuggs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QSuggs, suggs_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(QSugg)},
  { 9, 15, sizeof(QSuggs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QSugg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QSuggs_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qsuggd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _QSugg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QSugg_default_instance_);_QSuggs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QSuggs_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014qsuggd.proto\022\tqsuggd.pb\"(\n\005QSugg\022\r\n\005qu"
      "ery\030\001 \001(\t\022\020\n\010query_hl\030\002 \001(\t\")\n\006QSuggs\022\037\n"
      "\005suggs\030\001 \003(\0132\020.qsuggd.pb.QSugg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 110);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qsuggd.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_qsuggd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QSugg::kQueryFieldNumber;
const int QSugg::kQueryHlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QSugg::QSugg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qsuggd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qsuggd.pb.QSugg)
}
QSugg::QSugg(const QSugg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_query()) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  query_hl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_query_hl()) {
    query_hl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hl_);
  }
  // @@protoc_insertion_point(copy_constructor:qsuggd.pb.QSugg)
}

void QSugg::SharedCtor() {
  _cached_size_ = 0;
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_hl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QSugg::~QSugg() {
  // @@protoc_insertion_point(destructor:qsuggd.pb.QSugg)
  SharedDtor();
}

void QSugg::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_hl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QSugg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QSugg::descriptor() {
  protobuf_qsuggd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qsuggd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QSugg& QSugg::default_instance() {
  protobuf_qsuggd_2eproto::InitDefaults();
  return *internal_default_instance();
}

QSugg* QSugg::New(::google::protobuf::Arena* arena) const {
  QSugg* n = new QSugg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QSugg::Clear() {
// @@protoc_insertion_point(message_clear_start:qsuggd.pb.QSugg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!query_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*query_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!query_hl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*query_hl_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QSugg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qsuggd.pb.QSugg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qsuggd.pb.QSugg.query");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string query_hl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_hl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_hl().data(), static_cast<int>(this->query_hl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qsuggd.pb.QSugg.query_hl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qsuggd.pb.QSugg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qsuggd.pb.QSugg)
  return false;
#undef DO_
}

void QSugg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qsuggd.pb.QSugg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string query = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qsuggd.pb.QSugg.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // optional string query_hl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_hl().data(), static_cast<int>(this->query_hl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qsuggd.pb.QSugg.query_hl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query_hl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qsuggd.pb.QSugg)
}

::google::protobuf::uint8* QSugg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qsuggd.pb.QSugg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string query = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qsuggd.pb.QSugg.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // optional string query_hl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_hl().data(), static_cast<int>(this->query_hl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qsuggd.pb.QSugg.query_hl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query_hl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qsuggd.pb.QSugg)
  return target;
}

size_t QSugg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qsuggd.pb.QSugg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string query = 1;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query());
    }

    // optional string query_hl = 2;
    if (has_query_hl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_hl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QSugg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qsuggd.pb.QSugg)
  GOOGLE_DCHECK_NE(&from, this);
  const QSugg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QSugg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qsuggd.pb.QSugg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qsuggd.pb.QSugg)
    MergeFrom(*source);
  }
}

void QSugg::MergeFrom(const QSugg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qsuggd.pb.QSugg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_query();
      query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_query_hl();
      query_hl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hl_);
    }
  }
}

void QSugg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qsuggd.pb.QSugg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QSugg::CopyFrom(const QSugg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qsuggd.pb.QSugg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QSugg::IsInitialized() const {
  return true;
}

void QSugg::Swap(QSugg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QSugg::InternalSwap(QSugg* other) {
  using std::swap;
  query_.Swap(&other->query_);
  query_hl_.Swap(&other->query_hl_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QSugg::GetMetadata() const {
  protobuf_qsuggd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qsuggd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QSugg

// optional string query = 1;
bool QSugg::has_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QSugg::set_has_query() {
  _has_bits_[0] |= 0x00000001u;
}
void QSugg::clear_has_query() {
  _has_bits_[0] &= ~0x00000001u;
}
void QSugg::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
const ::std::string& QSugg::query() const {
  // @@protoc_insertion_point(field_get:qsuggd.pb.QSugg.query)
  return query_.GetNoArena();
}
void QSugg::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qsuggd.pb.QSugg.query)
}
#if LANG_CXX11
void QSugg::set_query(::std::string&& value) {
  set_has_query();
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qsuggd.pb.QSugg.query)
}
#endif
void QSugg::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qsuggd.pb.QSugg.query)
}
void QSugg::set_query(const char* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qsuggd.pb.QSugg.query)
}
::std::string* QSugg::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:qsuggd.pb.QSugg.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QSugg::release_query() {
  // @@protoc_insertion_point(field_release:qsuggd.pb.QSugg.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QSugg::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:qsuggd.pb.QSugg.query)
}

// optional string query_hl = 2;
bool QSugg::has_query_hl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QSugg::set_has_query_hl() {
  _has_bits_[0] |= 0x00000002u;
}
void QSugg::clear_has_query_hl() {
  _has_bits_[0] &= ~0x00000002u;
}
void QSugg::clear_query_hl() {
  query_hl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query_hl();
}
const ::std::string& QSugg::query_hl() const {
  // @@protoc_insertion_point(field_get:qsuggd.pb.QSugg.query_hl)
  return query_hl_.GetNoArena();
}
void QSugg::set_query_hl(const ::std::string& value) {
  set_has_query_hl();
  query_hl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qsuggd.pb.QSugg.query_hl)
}
#if LANG_CXX11
void QSugg::set_query_hl(::std::string&& value) {
  set_has_query_hl();
  query_hl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qsuggd.pb.QSugg.query_hl)
}
#endif
void QSugg::set_query_hl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_query_hl();
  query_hl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qsuggd.pb.QSugg.query_hl)
}
void QSugg::set_query_hl(const char* value, size_t size) {
  set_has_query_hl();
  query_hl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qsuggd.pb.QSugg.query_hl)
}
::std::string* QSugg::mutable_query_hl() {
  set_has_query_hl();
  // @@protoc_insertion_point(field_mutable:qsuggd.pb.QSugg.query_hl)
  return query_hl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QSugg::release_query_hl() {
  // @@protoc_insertion_point(field_release:qsuggd.pb.QSugg.query_hl)
  clear_has_query_hl();
  return query_hl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QSugg::set_allocated_query_hl(::std::string* query_hl) {
  if (query_hl != NULL) {
    set_has_query_hl();
  } else {
    clear_has_query_hl();
  }
  query_hl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_hl);
  // @@protoc_insertion_point(field_set_allocated:qsuggd.pb.QSugg.query_hl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QSuggs::kSuggsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QSuggs::QSuggs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qsuggd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qsuggd.pb.QSuggs)
}
QSuggs::QSuggs(const QSuggs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      suggs_(from.suggs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qsuggd.pb.QSuggs)
}

void QSuggs::SharedCtor() {
  _cached_size_ = 0;
}

QSuggs::~QSuggs() {
  // @@protoc_insertion_point(destructor:qsuggd.pb.QSuggs)
  SharedDtor();
}

void QSuggs::SharedDtor() {
}

void QSuggs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QSuggs::descriptor() {
  protobuf_qsuggd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qsuggd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QSuggs& QSuggs::default_instance() {
  protobuf_qsuggd_2eproto::InitDefaults();
  return *internal_default_instance();
}

QSuggs* QSuggs::New(::google::protobuf::Arena* arena) const {
  QSuggs* n = new QSuggs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QSuggs::Clear() {
// @@protoc_insertion_point(message_clear_start:qsuggd.pb.QSuggs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suggs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QSuggs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qsuggd.pb.QSuggs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qsuggd.pb.QSugg suggs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_suggs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qsuggd.pb.QSuggs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qsuggd.pb.QSuggs)
  return false;
#undef DO_
}

void QSuggs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qsuggd.pb.QSuggs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qsuggd.pb.QSugg suggs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->suggs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qsuggd.pb.QSuggs)
}

::google::protobuf::uint8* QSuggs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qsuggd.pb.QSuggs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qsuggd.pb.QSugg suggs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suggs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->suggs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qsuggd.pb.QSuggs)
  return target;
}

size_t QSuggs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qsuggd.pb.QSuggs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .qsuggd.pb.QSugg suggs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->suggs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->suggs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QSuggs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qsuggd.pb.QSuggs)
  GOOGLE_DCHECK_NE(&from, this);
  const QSuggs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QSuggs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qsuggd.pb.QSuggs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qsuggd.pb.QSuggs)
    MergeFrom(*source);
  }
}

void QSuggs::MergeFrom(const QSuggs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qsuggd.pb.QSuggs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suggs_.MergeFrom(from.suggs_);
}

void QSuggs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qsuggd.pb.QSuggs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QSuggs::CopyFrom(const QSuggs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qsuggd.pb.QSuggs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QSuggs::IsInitialized() const {
  return true;
}

void QSuggs::Swap(QSuggs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QSuggs::InternalSwap(QSuggs* other) {
  using std::swap;
  suggs_.InternalSwap(&other->suggs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QSuggs::GetMetadata() const {
  protobuf_qsuggd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qsuggd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QSuggs

// repeated .qsuggd.pb.QSugg suggs = 1;
int QSuggs::suggs_size() const {
  return suggs_.size();
}
void QSuggs::clear_suggs() {
  suggs_.Clear();
}
const ::qsuggd::pb::QSugg& QSuggs::suggs(int index) const {
  // @@protoc_insertion_point(field_get:qsuggd.pb.QSuggs.suggs)
  return suggs_.Get(index);
}
::qsuggd::pb::QSugg* QSuggs::mutable_suggs(int index) {
  // @@protoc_insertion_point(field_mutable:qsuggd.pb.QSuggs.suggs)
  return suggs_.Mutable(index);
}
::qsuggd::pb::QSugg* QSuggs::add_suggs() {
  // @@protoc_insertion_point(field_add:qsuggd.pb.QSuggs.suggs)
  return suggs_.Add();
}
::google::protobuf::RepeatedPtrField< ::qsuggd::pb::QSugg >*
QSuggs::mutable_suggs() {
  // @@protoc_insertion_point(field_mutable_list:qsuggd.pb.QSuggs.suggs)
  return &suggs_;
}
const ::google::protobuf::RepeatedPtrField< ::qsuggd::pb::QSugg >&
QSuggs::suggs() const {
  // @@protoc_insertion_point(field_list:qsuggd.pb.QSuggs.suggs)
  return suggs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace qsuggd

// @@protoc_insertion_point(global_scope)
