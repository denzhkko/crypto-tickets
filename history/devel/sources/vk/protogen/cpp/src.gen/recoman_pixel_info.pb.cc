// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recoman_pixel_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "recoman_pixel_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace recoman {
namespace pb {
class OpenRTBMetaInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenRTBMetaInfo>
     _instance;
} _OpenRTBMetaInfo_default_instance_;
class PixelMetaInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PixelMetaInfo>
     _instance;
} _PixelMetaInfo_default_instance_;

namespace protobuf_recoman_5fpixel_5finfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRTBMetaInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRTBMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRTBMetaInfo, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRTBMetaInfo, price_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, docs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, user_clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, advert_positions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, geo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PixelMetaInfo, openrtb_adverts_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  ~0u,
  2,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(OpenRTBMetaInfo)},
  { 9, 22, sizeof(PixelMetaInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenRTBMetaInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PixelMetaInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "recoman_pixel_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _OpenRTBMetaInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenRTBMetaInfo_default_instance_);_PixelMetaInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PixelMetaInfo_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030recoman_pixel_info.proto\022\nrecoman.pb\"2"
      "\n\017OpenRTBMetaInfo\022\020\n\010position\030\001 \001(\005\022\r\n\005p"
      "rice\030\002 \001(\002\"\277\001\n\rPixelMetaInfo\022\014\n\004docs\030\001 \003"
      "(\003\022\017\n\007sources\030\002 \003(\003\022\016\n\006gender\030\003 \001(\005\022\013\n\003a"
      "ge\030\004 \001(\005\022\025\n\ruser_clusters\030\005 \003(\r\022\030\n\020adver"
      "t_positions\030\006 \003(\005\022\013\n\003geo\030\007 \001(\005\0224\n\017openrt"
      "b_adverts\030\010 \003(\0132\033.recoman.pb.OpenRTBMeta"
      "InfoB\024B\022PixelMetaInfoProto"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "recoman_pixel_info.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_recoman_5fpixel_5finfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRTBMetaInfo::kPositionFieldNumber;
const int OpenRTBMetaInfo::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRTBMetaInfo::OpenRTBMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recoman_5fpixel_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:recoman.pb.OpenRTBMetaInfo)
}
OpenRTBMetaInfo::OpenRTBMetaInfo(const OpenRTBMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&position_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:recoman.pb.OpenRTBMetaInfo)
}

void OpenRTBMetaInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&position_)) + sizeof(price_));
}

OpenRTBMetaInfo::~OpenRTBMetaInfo() {
  // @@protoc_insertion_point(destructor:recoman.pb.OpenRTBMetaInfo)
  SharedDtor();
}

void OpenRTBMetaInfo::SharedDtor() {
}

void OpenRTBMetaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenRTBMetaInfo::descriptor() {
  protobuf_recoman_5fpixel_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recoman_5fpixel_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenRTBMetaInfo& OpenRTBMetaInfo::default_instance() {
  protobuf_recoman_5fpixel_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenRTBMetaInfo* OpenRTBMetaInfo::New(::google::protobuf::Arena* arena) const {
  OpenRTBMetaInfo* n = new OpenRTBMetaInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenRTBMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:recoman.pb.OpenRTBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&position_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&position_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpenRTBMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:recoman.pb.OpenRTBMetaInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:recoman.pb.OpenRTBMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:recoman.pb.OpenRTBMetaInfo)
  return false;
#undef DO_
}

void OpenRTBMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:recoman.pb.OpenRTBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->position(), output);
  }

  // optional float price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:recoman.pb.OpenRTBMetaInfo)
}

::google::protobuf::uint8* OpenRTBMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:recoman.pb.OpenRTBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->position(), target);
  }

  // optional float price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recoman.pb.OpenRTBMetaInfo)
  return target;
}

size_t OpenRTBMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:recoman.pb.OpenRTBMetaInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 position = 1;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }

    // optional float price = 2;
    if (has_price()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenRTBMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:recoman.pb.OpenRTBMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenRTBMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenRTBMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:recoman.pb.OpenRTBMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:recoman.pb.OpenRTBMetaInfo)
    MergeFrom(*source);
  }
}

void OpenRTBMetaInfo::MergeFrom(const OpenRTBMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:recoman.pb.OpenRTBMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpenRTBMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:recoman.pb.OpenRTBMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRTBMetaInfo::CopyFrom(const OpenRTBMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recoman.pb.OpenRTBMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRTBMetaInfo::IsInitialized() const {
  return true;
}

void OpenRTBMetaInfo::Swap(OpenRTBMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRTBMetaInfo::InternalSwap(OpenRTBMetaInfo* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenRTBMetaInfo::GetMetadata() const {
  protobuf_recoman_5fpixel_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recoman_5fpixel_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenRTBMetaInfo

// optional int32 position = 1;
bool OpenRTBMetaInfo::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpenRTBMetaInfo::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
void OpenRTBMetaInfo::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpenRTBMetaInfo::clear_position() {
  position_ = 0;
  clear_has_position();
}
::google::protobuf::int32 OpenRTBMetaInfo::position() const {
  // @@protoc_insertion_point(field_get:recoman.pb.OpenRTBMetaInfo.position)
  return position_;
}
void OpenRTBMetaInfo::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:recoman.pb.OpenRTBMetaInfo.position)
}

// optional float price = 2;
bool OpenRTBMetaInfo::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpenRTBMetaInfo::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void OpenRTBMetaInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpenRTBMetaInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
float OpenRTBMetaInfo::price() const {
  // @@protoc_insertion_point(field_get:recoman.pb.OpenRTBMetaInfo.price)
  return price_;
}
void OpenRTBMetaInfo::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:recoman.pb.OpenRTBMetaInfo.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PixelMetaInfo::kDocsFieldNumber;
const int PixelMetaInfo::kSourcesFieldNumber;
const int PixelMetaInfo::kGenderFieldNumber;
const int PixelMetaInfo::kAgeFieldNumber;
const int PixelMetaInfo::kUserClustersFieldNumber;
const int PixelMetaInfo::kAdvertPositionsFieldNumber;
const int PixelMetaInfo::kGeoFieldNumber;
const int PixelMetaInfo::kOpenrtbAdvertsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PixelMetaInfo::PixelMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recoman_5fpixel_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:recoman.pb.PixelMetaInfo)
}
PixelMetaInfo::PixelMetaInfo(const PixelMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      docs_(from.docs_),
      sources_(from.sources_),
      user_clusters_(from.user_clusters_),
      advert_positions_(from.advert_positions_),
      openrtb_adverts_(from.openrtb_adverts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gender_, &from.gender_,
    static_cast<size_t>(reinterpret_cast<char*>(&geo_) -
    reinterpret_cast<char*>(&gender_)) + sizeof(geo_));
  // @@protoc_insertion_point(copy_constructor:recoman.pb.PixelMetaInfo)
}

void PixelMetaInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geo_) -
      reinterpret_cast<char*>(&gender_)) + sizeof(geo_));
}

PixelMetaInfo::~PixelMetaInfo() {
  // @@protoc_insertion_point(destructor:recoman.pb.PixelMetaInfo)
  SharedDtor();
}

void PixelMetaInfo::SharedDtor() {
}

void PixelMetaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PixelMetaInfo::descriptor() {
  protobuf_recoman_5fpixel_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recoman_5fpixel_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PixelMetaInfo& PixelMetaInfo::default_instance() {
  protobuf_recoman_5fpixel_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

PixelMetaInfo* PixelMetaInfo::New(::google::protobuf::Arena* arena) const {
  PixelMetaInfo* n = new PixelMetaInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PixelMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:recoman.pb.PixelMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docs_.Clear();
  sources_.Clear();
  user_clusters_.Clear();
  advert_positions_.Clear();
  openrtb_adverts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&gender_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&geo_) -
        reinterpret_cast<char*>(&gender_)) + sizeof(geo_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PixelMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:recoman.pb.PixelMetaInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 docs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8u, input, this->mutable_docs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_docs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 sources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_sources())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_sources())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 user_clusters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_user_clusters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_user_clusters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 advert_positions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_advert_positions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_advert_positions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 geo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_geo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &geo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .recoman.pb.OpenRTBMetaInfo openrtb_adverts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_openrtb_adverts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:recoman.pb.PixelMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:recoman.pb.PixelMetaInfo)
  return false;
#undef DO_
}

void PixelMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:recoman.pb.PixelMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 docs = 1;
  for (int i = 0, n = this->docs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->docs(i), output);
  }

  // repeated int64 sources = 2;
  for (int i = 0, n = this->sources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->sources(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 gender = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gender(), output);
  }

  // optional int32 age = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->age(), output);
  }

  // repeated uint32 user_clusters = 5;
  for (int i = 0, n = this->user_clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->user_clusters(i), output);
  }

  // repeated int32 advert_positions = 6;
  for (int i = 0, n = this->advert_positions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->advert_positions(i), output);
  }

  // optional int32 geo = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->geo(), output);
  }

  // repeated .recoman.pb.OpenRTBMetaInfo openrtb_adverts = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->openrtb_adverts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->openrtb_adverts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:recoman.pb.PixelMetaInfo)
}

::google::protobuf::uint8* PixelMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:recoman.pb.PixelMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 docs = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(1, this->docs_, target);

  // repeated int64 sources = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->sources_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 gender = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gender(), target);
  }

  // optional int32 age = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->age(), target);
  }

  // repeated uint32 user_clusters = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->user_clusters_, target);

  // repeated int32 advert_positions = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->advert_positions_, target);

  // optional int32 geo = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->geo(), target);
  }

  // repeated .recoman.pb.OpenRTBMetaInfo openrtb_adverts = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->openrtb_adverts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->openrtb_adverts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recoman.pb.PixelMetaInfo)
  return target;
}

size_t PixelMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:recoman.pb.PixelMetaInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int64 docs = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->docs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->docs_size());
    total_size += data_size;
  }

  // repeated int64 sources = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->sources_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sources_size());
    total_size += data_size;
  }

  // repeated uint32 user_clusters = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->user_clusters_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->user_clusters_size());
    total_size += data_size;
  }

  // repeated int32 advert_positions = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->advert_positions_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->advert_positions_size());
    total_size += data_size;
  }

  // repeated .recoman.pb.OpenRTBMetaInfo openrtb_adverts = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->openrtb_adverts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->openrtb_adverts(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 gender = 3;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gender());
    }

    // optional int32 age = 4;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 geo = 7;
    if (has_geo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->geo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PixelMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:recoman.pb.PixelMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PixelMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PixelMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:recoman.pb.PixelMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:recoman.pb.PixelMetaInfo)
    MergeFrom(*source);
  }
}

void PixelMetaInfo::MergeFrom(const PixelMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:recoman.pb.PixelMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docs_.MergeFrom(from.docs_);
  sources_.MergeFrom(from.sources_);
  user_clusters_.MergeFrom(from.user_clusters_);
  advert_positions_.MergeFrom(from.advert_positions_);
  openrtb_adverts_.MergeFrom(from.openrtb_adverts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      gender_ = from.gender_;
    }
    if (cached_has_bits & 0x00000002u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x00000004u) {
      geo_ = from.geo_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PixelMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:recoman.pb.PixelMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PixelMetaInfo::CopyFrom(const PixelMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recoman.pb.PixelMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PixelMetaInfo::IsInitialized() const {
  return true;
}

void PixelMetaInfo::Swap(PixelMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PixelMetaInfo::InternalSwap(PixelMetaInfo* other) {
  using std::swap;
  docs_.InternalSwap(&other->docs_);
  sources_.InternalSwap(&other->sources_);
  user_clusters_.InternalSwap(&other->user_clusters_);
  advert_positions_.InternalSwap(&other->advert_positions_);
  openrtb_adverts_.InternalSwap(&other->openrtb_adverts_);
  swap(gender_, other->gender_);
  swap(age_, other->age_);
  swap(geo_, other->geo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PixelMetaInfo::GetMetadata() const {
  protobuf_recoman_5fpixel_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recoman_5fpixel_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PixelMetaInfo

// repeated int64 docs = 1;
int PixelMetaInfo::docs_size() const {
  return docs_.size();
}
void PixelMetaInfo::clear_docs() {
  docs_.Clear();
}
::google::protobuf::int64 PixelMetaInfo::docs(int index) const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.docs)
  return docs_.Get(index);
}
void PixelMetaInfo::set_docs(int index, ::google::protobuf::int64 value) {
  docs_.Set(index, value);
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.docs)
}
void PixelMetaInfo::add_docs(::google::protobuf::int64 value) {
  docs_.Add(value);
  // @@protoc_insertion_point(field_add:recoman.pb.PixelMetaInfo.docs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PixelMetaInfo::docs() const {
  // @@protoc_insertion_point(field_list:recoman.pb.PixelMetaInfo.docs)
  return docs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PixelMetaInfo::mutable_docs() {
  // @@protoc_insertion_point(field_mutable_list:recoman.pb.PixelMetaInfo.docs)
  return &docs_;
}

// repeated int64 sources = 2;
int PixelMetaInfo::sources_size() const {
  return sources_.size();
}
void PixelMetaInfo::clear_sources() {
  sources_.Clear();
}
::google::protobuf::int64 PixelMetaInfo::sources(int index) const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.sources)
  return sources_.Get(index);
}
void PixelMetaInfo::set_sources(int index, ::google::protobuf::int64 value) {
  sources_.Set(index, value);
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.sources)
}
void PixelMetaInfo::add_sources(::google::protobuf::int64 value) {
  sources_.Add(value);
  // @@protoc_insertion_point(field_add:recoman.pb.PixelMetaInfo.sources)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PixelMetaInfo::sources() const {
  // @@protoc_insertion_point(field_list:recoman.pb.PixelMetaInfo.sources)
  return sources_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PixelMetaInfo::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:recoman.pb.PixelMetaInfo.sources)
  return &sources_;
}

// optional int32 gender = 3;
bool PixelMetaInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PixelMetaInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000001u;
}
void PixelMetaInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000001u;
}
void PixelMetaInfo::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
::google::protobuf::int32 PixelMetaInfo::gender() const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.gender)
  return gender_;
}
void PixelMetaInfo::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.gender)
}

// optional int32 age = 4;
bool PixelMetaInfo::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PixelMetaInfo::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
void PixelMetaInfo::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
void PixelMetaInfo::clear_age() {
  age_ = 0;
  clear_has_age();
}
::google::protobuf::int32 PixelMetaInfo::age() const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.age)
  return age_;
}
void PixelMetaInfo::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.age)
}

// repeated uint32 user_clusters = 5;
int PixelMetaInfo::user_clusters_size() const {
  return user_clusters_.size();
}
void PixelMetaInfo::clear_user_clusters() {
  user_clusters_.Clear();
}
::google::protobuf::uint32 PixelMetaInfo::user_clusters(int index) const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.user_clusters)
  return user_clusters_.Get(index);
}
void PixelMetaInfo::set_user_clusters(int index, ::google::protobuf::uint32 value) {
  user_clusters_.Set(index, value);
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.user_clusters)
}
void PixelMetaInfo::add_user_clusters(::google::protobuf::uint32 value) {
  user_clusters_.Add(value);
  // @@protoc_insertion_point(field_add:recoman.pb.PixelMetaInfo.user_clusters)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PixelMetaInfo::user_clusters() const {
  // @@protoc_insertion_point(field_list:recoman.pb.PixelMetaInfo.user_clusters)
  return user_clusters_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PixelMetaInfo::mutable_user_clusters() {
  // @@protoc_insertion_point(field_mutable_list:recoman.pb.PixelMetaInfo.user_clusters)
  return &user_clusters_;
}

// repeated int32 advert_positions = 6;
int PixelMetaInfo::advert_positions_size() const {
  return advert_positions_.size();
}
void PixelMetaInfo::clear_advert_positions() {
  advert_positions_.Clear();
}
::google::protobuf::int32 PixelMetaInfo::advert_positions(int index) const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.advert_positions)
  return advert_positions_.Get(index);
}
void PixelMetaInfo::set_advert_positions(int index, ::google::protobuf::int32 value) {
  advert_positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.advert_positions)
}
void PixelMetaInfo::add_advert_positions(::google::protobuf::int32 value) {
  advert_positions_.Add(value);
  // @@protoc_insertion_point(field_add:recoman.pb.PixelMetaInfo.advert_positions)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PixelMetaInfo::advert_positions() const {
  // @@protoc_insertion_point(field_list:recoman.pb.PixelMetaInfo.advert_positions)
  return advert_positions_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PixelMetaInfo::mutable_advert_positions() {
  // @@protoc_insertion_point(field_mutable_list:recoman.pb.PixelMetaInfo.advert_positions)
  return &advert_positions_;
}

// optional int32 geo = 7;
bool PixelMetaInfo::has_geo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PixelMetaInfo::set_has_geo() {
  _has_bits_[0] |= 0x00000004u;
}
void PixelMetaInfo::clear_has_geo() {
  _has_bits_[0] &= ~0x00000004u;
}
void PixelMetaInfo::clear_geo() {
  geo_ = 0;
  clear_has_geo();
}
::google::protobuf::int32 PixelMetaInfo::geo() const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.geo)
  return geo_;
}
void PixelMetaInfo::set_geo(::google::protobuf::int32 value) {
  set_has_geo();
  geo_ = value;
  // @@protoc_insertion_point(field_set:recoman.pb.PixelMetaInfo.geo)
}

// repeated .recoman.pb.OpenRTBMetaInfo openrtb_adverts = 8;
int PixelMetaInfo::openrtb_adverts_size() const {
  return openrtb_adverts_.size();
}
void PixelMetaInfo::clear_openrtb_adverts() {
  openrtb_adverts_.Clear();
}
const ::recoman::pb::OpenRTBMetaInfo& PixelMetaInfo::openrtb_adverts(int index) const {
  // @@protoc_insertion_point(field_get:recoman.pb.PixelMetaInfo.openrtb_adverts)
  return openrtb_adverts_.Get(index);
}
::recoman::pb::OpenRTBMetaInfo* PixelMetaInfo::mutable_openrtb_adverts(int index) {
  // @@protoc_insertion_point(field_mutable:recoman.pb.PixelMetaInfo.openrtb_adverts)
  return openrtb_adverts_.Mutable(index);
}
::recoman::pb::OpenRTBMetaInfo* PixelMetaInfo::add_openrtb_adverts() {
  // @@protoc_insertion_point(field_add:recoman.pb.PixelMetaInfo.openrtb_adverts)
  return openrtb_adverts_.Add();
}
::google::protobuf::RepeatedPtrField< ::recoman::pb::OpenRTBMetaInfo >*
PixelMetaInfo::mutable_openrtb_adverts() {
  // @@protoc_insertion_point(field_mutable_list:recoman.pb.PixelMetaInfo.openrtb_adverts)
  return &openrtb_adverts_;
}
const ::google::protobuf::RepeatedPtrField< ::recoman::pb::OpenRTBMetaInfo >&
PixelMetaInfo::openrtb_adverts() const {
  // @@protoc_insertion_point(field_list:recoman.pb.PixelMetaInfo.openrtb_adverts)
  return openrtb_adverts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace recoman

// @@protoc_insertion_point(global_scope)
