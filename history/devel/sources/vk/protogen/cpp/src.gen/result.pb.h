// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#ifndef PROTOBUF_result_2eproto__INCLUDED
#define PROTOBUF_result_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
class BBContainer;
class BBContainerDefaultTypeInternal;
extern BBContainerDefaultTypeInternal _BBContainer_default_instance_;
class BBResult;
class BBResultDefaultTypeInternal;
extern BBResultDefaultTypeInternal _BBResult_default_instance_;
class ComputedValues;
class ComputedValuesDefaultTypeInternal;
extern ComputedValuesDefaultTypeInternal _ComputedValues_default_instance_;
class ComputedValues_Record;
class ComputedValues_RecordDefaultTypeInternal;
extern ComputedValues_RecordDefaultTypeInternal _ComputedValues_Record_default_instance_;
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {

namespace protobuf_result_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_result_2eproto

// ===================================================================

class BBContainer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.BBContainer) */ {
 public:
  BBContainer();
  virtual ~BBContainer();

  BBContainer(const BBContainer& from);

  inline BBContainer& operator=(const BBContainer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BBContainer(BBContainer&& from) noexcept
    : BBContainer() {
    *this = ::std::move(from);
  }

  inline BBContainer& operator=(BBContainer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BBContainer& default_instance();

  static inline const BBContainer* internal_default_instance() {
    return reinterpret_cast<const BBContainer*>(
               &_BBContainer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BBContainer* other);
  friend void swap(BBContainer& a, BBContainer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BBContainer* New() const PROTOBUF_FINAL { return New(NULL); }

  BBContainer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BBContainer& from);
  void MergeFrom(const BBContainer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BBContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.BBResult ranks = 2;
  int ranks_size() const;
  void clear_ranks();
  static const int kRanksFieldNumber = 2;
  const ::ru::mail::go::webbase::BBResult& ranks(int index) const;
  ::ru::mail::go::webbase::BBResult* mutable_ranks(int index);
  ::ru::mail::go::webbase::BBResult* add_ranks();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >*
      mutable_ranks();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >&
      ranks() const;

  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  bool has_headervalues() const;
  void clear_headervalues();
  static const int kHeaderValuesFieldNumber = 1;
  const ::ru::mail::go::webbase::ComputedValues& headervalues() const;
  ::ru::mail::go::webbase::ComputedValues* mutable_headervalues();
  ::ru::mail::go::webbase::ComputedValues* release_headervalues();
  void set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.BBContainer)
 private:
  void set_has_headervalues();
  void clear_has_headervalues();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult > ranks_;
  ::ru::mail::go::webbase::ComputedValues* headervalues_;
  friend struct protobuf_result_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BBResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.BBResult) */ {
 public:
  BBResult();
  virtual ~BBResult();

  BBResult(const BBResult& from);

  inline BBResult& operator=(const BBResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BBResult(BBResult&& from) noexcept
    : BBResult() {
    *this = ::std::move(from);
  }

  inline BBResult& operator=(BBResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BBResult& default_instance();

  static inline const BBResult* internal_default_instance() {
    return reinterpret_cast<const BBResult*>(
               &_BBResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(BBResult* other);
  friend void swap(BBResult& a, BBResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BBResult* New() const PROTOBUF_FINAL { return New(NULL); }

  BBResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BBResult& from);
  void MergeFrom(const BBResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BBResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
  int urlvalues_size() const;
  void clear_urlvalues();
  static const int kUrlValuesFieldNumber = 2;
  const ::ru::mail::go::webbase::ComputedValues& urlvalues(int index) const;
  ::ru::mail::go::webbase::ComputedValues* mutable_urlvalues(int index);
  ::ru::mail::go::webbase::ComputedValues* add_urlvalues();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >*
      mutable_urlvalues();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >&
      urlvalues() const;

  // optional string navigationUrl = 3;
  bool has_navigationurl() const;
  void clear_navigationurl();
  static const int kNavigationUrlFieldNumber = 3;
  const ::std::string& navigationurl() const;
  void set_navigationurl(const ::std::string& value);
  #if LANG_CXX11
  void set_navigationurl(::std::string&& value);
  #endif
  void set_navigationurl(const char* value);
  void set_navigationurl(const char* value, size_t size);
  ::std::string* mutable_navigationurl();
  ::std::string* release_navigationurl();
  void set_allocated_navigationurl(::std::string* navigationurl);

  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  bool has_headervalues() const;
  void clear_headervalues();
  static const int kHeaderValuesFieldNumber = 1;
  const ::ru::mail::go::webbase::ComputedValues& headervalues() const;
  ::ru::mail::go::webbase::ComputedValues* mutable_headervalues();
  ::ru::mail::go::webbase::ComputedValues* release_headervalues();
  void set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.BBResult)
 private:
  void set_has_headervalues();
  void clear_has_headervalues();
  void set_has_navigationurl();
  void clear_has_navigationurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues > urlvalues_;
  ::google::protobuf::internal::ArenaStringPtr navigationurl_;
  ::ru::mail::go::webbase::ComputedValues* headervalues_;
  friend struct protobuf_result_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComputedValues_Record : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.ComputedValues.Record) */ {
 public:
  ComputedValues_Record();
  virtual ~ComputedValues_Record();

  ComputedValues_Record(const ComputedValues_Record& from);

  inline ComputedValues_Record& operator=(const ComputedValues_Record& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputedValues_Record(ComputedValues_Record&& from) noexcept
    : ComputedValues_Record() {
    *this = ::std::move(from);
  }

  inline ComputedValues_Record& operator=(ComputedValues_Record&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputedValues_Record& default_instance();

  static inline const ComputedValues_Record* internal_default_instance() {
    return reinterpret_cast<const ComputedValues_Record*>(
               &_ComputedValues_Record_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ComputedValues_Record* other);
  friend void swap(ComputedValues_Record& a, ComputedValues_Record& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputedValues_Record* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputedValues_Record* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputedValues_Record& from);
  void MergeFrom(const ComputedValues_Record& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputedValues_Record* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required float value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.ComputedValues.Record)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  float value_;
  friend struct protobuf_result_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComputedValues : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.ComputedValues) */ {
 public:
  ComputedValues();
  virtual ~ComputedValues();

  ComputedValues(const ComputedValues& from);

  inline ComputedValues& operator=(const ComputedValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputedValues(ComputedValues&& from) noexcept
    : ComputedValues() {
    *this = ::std::move(from);
  }

  inline ComputedValues& operator=(ComputedValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputedValues& default_instance();

  static inline const ComputedValues* internal_default_instance() {
    return reinterpret_cast<const ComputedValues*>(
               &_ComputedValues_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ComputedValues* other);
  friend void swap(ComputedValues& a, ComputedValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputedValues* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputedValues* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputedValues& from);
  void MergeFrom(const ComputedValues& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputedValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ComputedValues_Record Record;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
  int entryresult_size() const;
  void clear_entryresult();
  static const int kEntryResultFieldNumber = 2;
  const ::ru::mail::go::webbase::ComputedValues_Record& entryresult(int index) const;
  ::ru::mail::go::webbase::ComputedValues_Record* mutable_entryresult(int index);
  ::ru::mail::go::webbase::ComputedValues_Record* add_entryresult();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >*
      mutable_entryresult();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >&
      entryresult() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool site_entry = 3 [default = false];
  bool has_site_entry() const;
  void clear_site_entry();
  static const int kSiteEntryFieldNumber = 3;
  bool site_entry() const;
  void set_site_entry(bool value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.ComputedValues)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_site_entry();
  void clear_has_site_entry();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record > entryresult_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool site_entry_;
  friend struct protobuf_result_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BBContainer

// required .ru.mail.go.webbase.ComputedValues headerValues = 1;
inline bool BBContainer::has_headervalues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BBContainer::set_has_headervalues() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BBContainer::clear_has_headervalues() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BBContainer::clear_headervalues() {
  if (headervalues_ != NULL) headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
  clear_has_headervalues();
}
inline const ::ru::mail::go::webbase::ComputedValues& BBContainer::headervalues() const {
  const ::ru::mail::go::webbase::ComputedValues* p = headervalues_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBContainer.headerValues)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::ComputedValues*>(
      &::ru::mail::go::webbase::_ComputedValues_default_instance_);
}
inline ::ru::mail::go::webbase::ComputedValues* BBContainer::mutable_headervalues() {
  set_has_headervalues();
  if (headervalues_ == NULL) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBContainer.headerValues)
  return headervalues_;
}
inline ::ru::mail::go::webbase::ComputedValues* BBContainer::release_headervalues() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBContainer.headerValues)
  clear_has_headervalues();
  ::ru::mail::go::webbase::ComputedValues* temp = headervalues_;
  headervalues_ = NULL;
  return temp;
}
inline void BBContainer::set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues) {
  delete headervalues_;
  headervalues_ = headervalues;
  if (headervalues) {
    set_has_headervalues();
  } else {
    clear_has_headervalues();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBContainer.headerValues)
}

// repeated .ru.mail.go.webbase.BBResult ranks = 2;
inline int BBContainer::ranks_size() const {
  return ranks_.size();
}
inline void BBContainer::clear_ranks() {
  ranks_.Clear();
}
inline const ::ru::mail::go::webbase::BBResult& BBContainer::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Get(index);
}
inline ::ru::mail::go::webbase::BBResult* BBContainer::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Mutable(index);
}
inline ::ru::mail::go::webbase::BBResult* BBContainer::add_ranks() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >*
BBContainer::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.BBContainer.ranks)
  return &ranks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >&
BBContainer::ranks() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_;
}

// -------------------------------------------------------------------

// BBResult

// required .ru.mail.go.webbase.ComputedValues headerValues = 1;
inline bool BBResult::has_headervalues() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BBResult::set_has_headervalues() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BBResult::clear_has_headervalues() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BBResult::clear_headervalues() {
  if (headervalues_ != NULL) headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
  clear_has_headervalues();
}
inline const ::ru::mail::go::webbase::ComputedValues& BBResult::headervalues() const {
  const ::ru::mail::go::webbase::ComputedValues* p = headervalues_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.headerValues)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::ComputedValues*>(
      &::ru::mail::go::webbase::_ComputedValues_default_instance_);
}
inline ::ru::mail::go::webbase::ComputedValues* BBResult::mutable_headervalues() {
  set_has_headervalues();
  if (headervalues_ == NULL) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.headerValues)
  return headervalues_;
}
inline ::ru::mail::go::webbase::ComputedValues* BBResult::release_headervalues() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBResult.headerValues)
  clear_has_headervalues();
  ::ru::mail::go::webbase::ComputedValues* temp = headervalues_;
  headervalues_ = NULL;
  return temp;
}
inline void BBResult::set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues) {
  delete headervalues_;
  headervalues_ = headervalues;
  if (headervalues) {
    set_has_headervalues();
  } else {
    clear_has_headervalues();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBResult.headerValues)
}

// repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
inline int BBResult::urlvalues_size() const {
  return urlvalues_.size();
}
inline void BBResult::clear_urlvalues() {
  urlvalues_.Clear();
}
inline const ::ru::mail::go::webbase::ComputedValues& BBResult::urlvalues(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Get(index);
}
inline ::ru::mail::go::webbase::ComputedValues* BBResult::mutable_urlvalues(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Mutable(index);
}
inline ::ru::mail::go::webbase::ComputedValues* BBResult::add_urlvalues() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >*
BBResult::mutable_urlvalues() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.BBResult.urlValues)
  return &urlvalues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >&
BBResult::urlvalues() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_;
}

// optional string navigationUrl = 3;
inline bool BBResult::has_navigationurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BBResult::set_has_navigationurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BBResult::clear_has_navigationurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BBResult::clear_navigationurl() {
  navigationurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_navigationurl();
}
inline const ::std::string& BBResult::navigationurl() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.navigationUrl)
  return navigationurl_.GetNoArena();
}
inline void BBResult::set_navigationurl(const ::std::string& value) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.BBResult.navigationUrl)
}
#if LANG_CXX11
inline void BBResult::set_navigationurl(::std::string&& value) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.BBResult.navigationUrl)
}
#endif
inline void BBResult::set_navigationurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.BBResult.navigationUrl)
}
inline void BBResult::set_navigationurl(const char* value, size_t size) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.BBResult.navigationUrl)
}
inline ::std::string* BBResult::mutable_navigationurl() {
  set_has_navigationurl();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.navigationUrl)
  return navigationurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BBResult::release_navigationurl() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBResult.navigationUrl)
  clear_has_navigationurl();
  return navigationurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BBResult::set_allocated_navigationurl(::std::string* navigationurl) {
  if (navigationurl != NULL) {
    set_has_navigationurl();
  } else {
    clear_has_navigationurl();
  }
  navigationurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), navigationurl);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBResult.navigationUrl)
}

// -------------------------------------------------------------------

// ComputedValues_Record

// required string key = 1;
inline bool ComputedValues_Record::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComputedValues_Record::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComputedValues_Record::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComputedValues_Record::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ComputedValues_Record::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.Record.key)
  return key_.GetNoArena();
}
inline void ComputedValues_Record::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.Record.key)
}
#if LANG_CXX11
inline void ComputedValues_Record::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.ComputedValues.Record.key)
}
#endif
inline void ComputedValues_Record::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.ComputedValues.Record.key)
}
inline void ComputedValues_Record::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.ComputedValues.Record.key)
}
inline ::std::string* ComputedValues_Record::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.Record.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComputedValues_Record::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.ComputedValues.Record.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComputedValues_Record::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.ComputedValues.Record.key)
}

// required float value = 2;
inline bool ComputedValues_Record::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComputedValues_Record::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComputedValues_Record::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComputedValues_Record::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float ComputedValues_Record::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.Record.value)
  return value_;
}
inline void ComputedValues_Record::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.Record.value)
}

// -------------------------------------------------------------------

// ComputedValues

// required string name = 1;
inline bool ComputedValues::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComputedValues::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComputedValues::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComputedValues::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ComputedValues::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.name)
  return name_.GetNoArena();
}
inline void ComputedValues::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.name)
}
#if LANG_CXX11
inline void ComputedValues::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.ComputedValues.name)
}
#endif
inline void ComputedValues::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.ComputedValues.name)
}
inline void ComputedValues::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.ComputedValues.name)
}
inline ::std::string* ComputedValues::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComputedValues::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.ComputedValues.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComputedValues::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.ComputedValues.name)
}

// repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
inline int ComputedValues::entryresult_size() const {
  return entryresult_.size();
}
inline void ComputedValues::clear_entryresult() {
  entryresult_.Clear();
}
inline const ::ru::mail::go::webbase::ComputedValues_Record& ComputedValues::entryresult(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Get(index);
}
inline ::ru::mail::go::webbase::ComputedValues_Record* ComputedValues::mutable_entryresult(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Mutable(index);
}
inline ::ru::mail::go::webbase::ComputedValues_Record* ComputedValues::add_entryresult() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >*
ComputedValues::mutable_entryresult() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.ComputedValues.entryResult)
  return &entryresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >&
ComputedValues::entryresult() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_;
}

// optional bool site_entry = 3 [default = false];
inline bool ComputedValues::has_site_entry() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComputedValues::set_has_site_entry() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComputedValues::clear_has_site_entry() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComputedValues::clear_site_entry() {
  site_entry_ = false;
  clear_has_site_entry();
}
inline bool ComputedValues::site_entry() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.site_entry)
  return site_entry_;
}
inline void ComputedValues::set_site_entry(bool value) {
  set_has_site_entry();
  site_entry_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.site_entry)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_result_2eproto__INCLUDED
