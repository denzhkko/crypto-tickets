// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sekitei_experimental.proto

#ifndef PROTOBUF_sekitei_5fexperimental_2eproto__INCLUDED
#define PROTOBUF_sekitei_5fexperimental_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace sekitei {
class OptBlock;
class OptBlockDefaultTypeInternal;
extern OptBlockDefaultTypeInternal _OptBlock_default_instance_;
class Segment_e;
class Segment_eDefaultTypeInternal;
extern Segment_eDefaultTypeInternal _Segment_e_default_instance_;
class Sekitei_e;
class Sekitei_eDefaultTypeInternal;
extern Sekitei_eDefaultTypeInternal _Sekitei_e_default_instance_;
class SelectedFeature_e;
class SelectedFeature_eDefaultTypeInternal;
extern SelectedFeature_eDefaultTypeInternal _SelectedFeature_e_default_instance_;
}  // namespace sekitei
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace sekitei {

namespace protobuf_sekitei_5fexperimental_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sekitei_5fexperimental_2eproto

// ===================================================================

class Sekitei_e : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_e) */ {
 public:
  Sekitei_e();
  virtual ~Sekitei_e();

  Sekitei_e(const Sekitei_e& from);

  inline Sekitei_e& operator=(const Sekitei_e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_e(Sekitei_e&& from) noexcept
    : Sekitei_e() {
    *this = ::std::move(from);
  }

  inline Sekitei_e& operator=(Sekitei_e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_e& default_instance();

  static inline const Sekitei_e* internal_default_instance() {
    return reinterpret_cast<const Sekitei_e*>(
               &_Sekitei_e_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Sekitei_e* other);
  friend void swap(Sekitei_e& a, Sekitei_e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_e* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_e* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_e& from);
  void MergeFrom(const Sekitei_e& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 6;
  const ::ru::mail::go::webbase::sekitei::Segment_e& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_e* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_e* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >&
      segments() const;

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 7;
  const ::ru::mail::go::webbase::sekitei::SelectedFeature_e& features(int index) const;
  ::ru::mail::go::webbase::sekitei::SelectedFeature_e* mutable_features(int index);
  ::ru::mail::go::webbase::sekitei::SelectedFeature_e* add_features();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >&
      features() const;

  // repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
  int segmentsorder_size() const;
  void clear_segmentsorder();
  static const int kSegmentsOrderFieldNumber = 8;
  const ::ru::mail::go::webbase::sekitei::OptBlock& segmentsorder(int index) const;
  ::ru::mail::go::webbase::sekitei::OptBlock* mutable_segmentsorder(int index);
  ::ru::mail::go::webbase::sekitei::OptBlock* add_segmentsorder();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >*
      mutable_segmentsorder();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >&
      segmentsorder() const;

  // required string host_name = 1;
  bool has_host_name() const;
  void clear_host_name();
  static const int kHostNameFieldNumber = 1;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // required int64 total_url_num = 2;
  bool has_total_url_num() const;
  void clear_total_url_num();
  static const int kTotalUrlNumFieldNumber = 2;
  ::google::protobuf::int64 total_url_num() const;
  void set_total_url_num(::google::protobuf::int64 value);

  // optional int64 bad_urls = 3;
  bool has_bad_urls() const;
  void clear_bad_urls();
  static const int kBadUrlsFieldNumber = 3;
  ::google::protobuf::int64 bad_urls() const;
  void set_bad_urls(::google::protobuf::int64 value);

  // optional int64 normal_urls = 4;
  bool has_normal_urls() const;
  void clear_normal_urls();
  static const int kNormalUrlsFieldNumber = 4;
  ::google::protobuf::int64 normal_urls() const;
  void set_normal_urls(::google::protobuf::int64 value);

  // optional int64 good_urls = 5;
  bool has_good_urls() const;
  void clear_good_urls();
  static const int kGoodUrlsFieldNumber = 5;
  ::google::protobuf::int64 good_urls() const;
  void set_good_urls(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_e)
 private:
  void set_has_host_name();
  void clear_has_host_name();
  void set_has_total_url_num();
  void clear_has_total_url_num();
  void set_has_bad_urls();
  void clear_has_bad_urls();
  void set_has_normal_urls();
  void clear_has_normal_urls();
  void set_has_good_urls();
  void clear_has_good_urls();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e > segments_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e > features_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock > segmentsorder_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::google::protobuf::int64 total_url_num_;
  ::google::protobuf::int64 bad_urls_;
  ::google::protobuf::int64 normal_urls_;
  ::google::protobuf::int64 good_urls_;
  friend struct protobuf_sekitei_5fexperimental_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_e : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_e) */ {
 public:
  Segment_e();
  virtual ~Segment_e();

  Segment_e(const Segment_e& from);

  inline Segment_e& operator=(const Segment_e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_e(Segment_e&& from) noexcept
    : Segment_e() {
    *this = ::std::move(from);
  }

  inline Segment_e& operator=(Segment_e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_e& default_instance();

  static inline const Segment_e* internal_default_instance() {
    return reinterpret_cast<const Segment_e*>(
               &_Segment_e_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Segment_e* other);
  friend void swap(Segment_e& a, Segment_e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_e* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_e* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_e& from);
  void MergeFrom(const Segment_e& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string samples = 11;
  int samples_size() const;
  void clear_samples();
  static const int kSamplesFieldNumber = 11;
  const ::std::string& samples(int index) const;
  ::std::string* mutable_samples(int index);
  void set_samples(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_samples(int index, ::std::string&& value);
  #endif
  void set_samples(int index, const char* value);
  void set_samples(int index, const char* value, size_t size);
  ::std::string* add_samples();
  void add_samples(const ::std::string& value);
  #if LANG_CXX11
  void add_samples(::std::string&& value);
  #endif
  void add_samples(const char* value);
  void add_samples(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& samples() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_samples();

  // optional string segment_name = 2;
  bool has_segment_name() const;
  void clear_segment_name();
  static const int kSegmentNameFieldNumber = 2;
  const ::std::string& segment_name() const;
  void set_segment_name(const ::std::string& value);
  #if LANG_CXX11
  void set_segment_name(::std::string&& value);
  #endif
  void set_segment_name(const char* value);
  void set_segment_name(const char* value, size_t size);
  ::std::string* mutable_segment_name();
  ::std::string* release_segment_name();
  void set_allocated_segment_name(::std::string* segment_name);

  // optional string description = 10;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 10;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // optional int32 part = 3;
  bool has_part() const;
  void clear_part();
  static const int kPartFieldNumber = 3;
  ::google::protobuf::int32 part() const;
  void set_part(::google::protobuf::int32 value);

  // optional double wp = 4;
  bool has_wp() const;
  void clear_wp();
  static const int kWpFieldNumber = 4;
  double wp() const;
  void set_wp(double value);

  // optional double bayes_n = 5;
  bool has_bayes_n() const;
  void clear_bayes_n();
  static const int kBayesNFieldNumber = 5;
  double bayes_n() const;
  void set_bayes_n(double value);

  // optional double bayes_g = 6;
  bool has_bayes_g() const;
  void clear_bayes_g();
  static const int kBayesGFieldNumber = 6;
  double bayes_g() const;
  void set_bayes_g(double value);

  // optional int32 bad_urls = 7;
  bool has_bad_urls() const;
  void clear_bad_urls();
  static const int kBadUrlsFieldNumber = 7;
  ::google::protobuf::int32 bad_urls() const;
  void set_bad_urls(::google::protobuf::int32 value);

  // optional int32 normal_urls = 8;
  bool has_normal_urls() const;
  void clear_normal_urls();
  static const int kNormalUrlsFieldNumber = 8;
  ::google::protobuf::int32 normal_urls() const;
  void set_normal_urls(::google::protobuf::int32 value);

  // optional int32 good_urls = 9;
  bool has_good_urls() const;
  void clear_good_urls();
  static const int kGoodUrlsFieldNumber = 9;
  ::google::protobuf::int32 good_urls() const;
  void set_good_urls(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_e)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_segment_name();
  void clear_has_segment_name();
  void set_has_part();
  void clear_has_part();
  void set_has_wp();
  void clear_has_wp();
  void set_has_bayes_n();
  void clear_has_bayes_n();
  void set_has_bayes_g();
  void clear_has_bayes_g();
  void set_has_bad_urls();
  void clear_has_bad_urls();
  void set_has_normal_urls();
  void clear_has_normal_urls();
  void set_has_good_urls();
  void clear_has_good_urls();
  void set_has_description();
  void clear_has_description();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> samples_;
  ::google::protobuf::internal::ArenaStringPtr segment_name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 segment_num_;
  ::google::protobuf::int32 part_;
  double wp_;
  double bayes_n_;
  double bayes_g_;
  ::google::protobuf::int32 bad_urls_;
  ::google::protobuf::int32 normal_urls_;
  ::google::protobuf::int32 good_urls_;
  friend struct protobuf_sekitei_5fexperimental_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectedFeature_e : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.SelectedFeature_e) */ {
 public:
  SelectedFeature_e();
  virtual ~SelectedFeature_e();

  SelectedFeature_e(const SelectedFeature_e& from);

  inline SelectedFeature_e& operator=(const SelectedFeature_e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectedFeature_e(SelectedFeature_e&& from) noexcept
    : SelectedFeature_e() {
    *this = ::std::move(from);
  }

  inline SelectedFeature_e& operator=(SelectedFeature_e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectedFeature_e& default_instance();

  static inline const SelectedFeature_e* internal_default_instance() {
    return reinterpret_cast<const SelectedFeature_e*>(
               &_SelectedFeature_e_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SelectedFeature_e* other);
  friend void swap(SelectedFeature_e& a, SelectedFeature_e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectedFeature_e* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectedFeature_e* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectedFeature_e& from);
  void MergeFrom(const SelectedFeature_e& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectedFeature_e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // required int32 quote = 2;
  bool has_quote() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 2;
  ::google::protobuf::int32 quote() const;
  void set_quote(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.SelectedFeature_e)
 private:
  void set_has_idx();
  void clear_has_idx();
  void set_has_quote();
  void clear_has_quote();
  void set_has_key();
  void clear_has_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 quote_;
  friend struct protobuf_sekitei_5fexperimental_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OptBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.OptBlock) */ {
 public:
  OptBlock();
  virtual ~OptBlock();

  OptBlock(const OptBlock& from);

  inline OptBlock& operator=(const OptBlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OptBlock(OptBlock&& from) noexcept
    : OptBlock() {
    *this = ::std::move(from);
  }

  inline OptBlock& operator=(OptBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OptBlock& default_instance();

  static inline const OptBlock* internal_default_instance() {
    return reinterpret_cast<const OptBlock*>(
               &_OptBlock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(OptBlock* other);
  friend void swap(OptBlock& a, OptBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OptBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  OptBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OptBlock& from);
  void MergeFrom(const OptBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OptBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 child_list = 2;
  int child_list_size() const;
  void clear_child_list();
  static const int kChildListFieldNumber = 2;
  ::google::protobuf::int32 child_list(int index) const;
  void set_child_list(int index, ::google::protobuf::int32 value);
  void add_child_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      child_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_child_list();

  // required int32 current_num = 1;
  bool has_current_num() const;
  void clear_current_num();
  static const int kCurrentNumFieldNumber = 1;
  ::google::protobuf::int32 current_num() const;
  void set_current_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.OptBlock)
 private:
  void set_has_current_num();
  void clear_has_current_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > child_list_;
  ::google::protobuf::int32 current_num_;
  friend struct protobuf_sekitei_5fexperimental_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Sekitei_e

// required string host_name = 1;
inline bool Sekitei_e::has_host_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sekitei_e::set_has_host_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sekitei_e::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sekitei_e::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_name();
}
inline const ::std::string& Sekitei_e::host_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  return host_name_.GetNoArena();
}
inline void Sekitei_e::set_host_name(const ::std::string& value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
#if LANG_CXX11
inline void Sekitei_e::set_host_name(::std::string&& value) {
  set_has_host_name();
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
#endif
inline void Sekitei_e::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
inline void Sekitei_e::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
inline ::std::string* Sekitei_e::mutable_host_name() {
  set_has_host_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sekitei_e::release_host_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  clear_has_host_name();
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sekitei_e::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    set_has_host_name();
  } else {
    clear_has_host_name();
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}

// required int64 total_url_num = 2;
inline bool Sekitei_e::has_total_url_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sekitei_e::set_has_total_url_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sekitei_e::clear_has_total_url_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sekitei_e::clear_total_url_num() {
  total_url_num_ = GOOGLE_LONGLONG(0);
  clear_has_total_url_num();
}
inline ::google::protobuf::int64 Sekitei_e::total_url_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.total_url_num)
  return total_url_num_;
}
inline void Sekitei_e::set_total_url_num(::google::protobuf::int64 value) {
  set_has_total_url_num();
  total_url_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.total_url_num)
}

// optional int64 bad_urls = 3;
inline bool Sekitei_e::has_bad_urls() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sekitei_e::set_has_bad_urls() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sekitei_e::clear_has_bad_urls() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sekitei_e::clear_bad_urls() {
  bad_urls_ = GOOGLE_LONGLONG(0);
  clear_has_bad_urls();
}
inline ::google::protobuf::int64 Sekitei_e::bad_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.bad_urls)
  return bad_urls_;
}
inline void Sekitei_e::set_bad_urls(::google::protobuf::int64 value) {
  set_has_bad_urls();
  bad_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.bad_urls)
}

// optional int64 normal_urls = 4;
inline bool Sekitei_e::has_normal_urls() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sekitei_e::set_has_normal_urls() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sekitei_e::clear_has_normal_urls() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sekitei_e::clear_normal_urls() {
  normal_urls_ = GOOGLE_LONGLONG(0);
  clear_has_normal_urls();
}
inline ::google::protobuf::int64 Sekitei_e::normal_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.normal_urls)
  return normal_urls_;
}
inline void Sekitei_e::set_normal_urls(::google::protobuf::int64 value) {
  set_has_normal_urls();
  normal_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.normal_urls)
}

// optional int64 good_urls = 5;
inline bool Sekitei_e::has_good_urls() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Sekitei_e::set_has_good_urls() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Sekitei_e::clear_has_good_urls() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Sekitei_e::clear_good_urls() {
  good_urls_ = GOOGLE_LONGLONG(0);
  clear_has_good_urls();
}
inline ::google::protobuf::int64 Sekitei_e::good_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.good_urls)
  return good_urls_;
}
inline void Sekitei_e::set_good_urls(::google::protobuf::int64 value) {
  set_has_good_urls();
  good_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.good_urls)
}

// repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
inline int Sekitei_e::segments_size() const {
  return segments_.size();
}
inline void Sekitei_e::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_e& Sekitei_e::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_e* Sekitei_e::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_e* Sekitei_e::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >*
Sekitei_e::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >&
Sekitei_e::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_;
}

// repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
inline int Sekitei_e::features_size() const {
  return features_.size();
}
inline void Sekitei_e::clear_features() {
  features_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::SelectedFeature_e& Sekitei_e::features(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature_e* Sekitei_e::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature_e* Sekitei_e::add_features() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >*
Sekitei_e::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >&
Sekitei_e::features() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_;
}

// repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
inline int Sekitei_e::segmentsorder_size() const {
  return segmentsorder_.size();
}
inline void Sekitei_e::clear_segmentsorder() {
  segmentsorder_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::OptBlock& Sekitei_e::segmentsorder(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::OptBlock* Sekitei_e::mutable_segmentsorder(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::OptBlock* Sekitei_e::add_segmentsorder() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >*
Sekitei_e::mutable_segmentsorder() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return &segmentsorder_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >&
Sekitei_e::segmentsorder() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_;
}

// -------------------------------------------------------------------

// Segment_e

// required int32 segment_num = 1;
inline bool Segment_e::has_segment_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_e::set_has_segment_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_e::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_e::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_e::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.segment_num)
  return segment_num_;
}
inline void Segment_e::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.segment_num)
}

// optional string segment_name = 2;
inline bool Segment_e::has_segment_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_e::set_has_segment_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_e::clear_has_segment_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_e::clear_segment_name() {
  segment_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_segment_name();
}
inline const ::std::string& Segment_e::segment_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  return segment_name_.GetNoArena();
}
inline void Segment_e::set_segment_name(const ::std::string& value) {
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
#if LANG_CXX11
inline void Segment_e::set_segment_name(::std::string&& value) {
  set_has_segment_name();
  segment_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
#endif
inline void Segment_e::set_segment_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
inline void Segment_e::set_segment_name(const char* value, size_t size) {
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
inline ::std::string* Segment_e::mutable_segment_name() {
  set_has_segment_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  return segment_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment_e::release_segment_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  clear_has_segment_name();
  return segment_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment_e::set_allocated_segment_name(::std::string* segment_name) {
  if (segment_name != NULL) {
    set_has_segment_name();
  } else {
    clear_has_segment_name();
  }
  segment_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segment_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}

// optional int32 part = 3;
inline bool Segment_e::has_part() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_e::set_has_part() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_e::clear_has_part() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_e::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 Segment_e::part() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.part)
  return part_;
}
inline void Segment_e::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.part)
}

// optional double wp = 4;
inline bool Segment_e::has_wp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Segment_e::set_has_wp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Segment_e::clear_has_wp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Segment_e::clear_wp() {
  wp_ = 0;
  clear_has_wp();
}
inline double Segment_e::wp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.wp)
  return wp_;
}
inline void Segment_e::set_wp(double value) {
  set_has_wp();
  wp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.wp)
}

// optional double bayes_n = 5;
inline bool Segment_e::has_bayes_n() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Segment_e::set_has_bayes_n() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Segment_e::clear_has_bayes_n() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Segment_e::clear_bayes_n() {
  bayes_n_ = 0;
  clear_has_bayes_n();
}
inline double Segment_e::bayes_n() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bayes_n)
  return bayes_n_;
}
inline void Segment_e::set_bayes_n(double value) {
  set_has_bayes_n();
  bayes_n_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bayes_n)
}

// optional double bayes_g = 6;
inline bool Segment_e::has_bayes_g() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Segment_e::set_has_bayes_g() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Segment_e::clear_has_bayes_g() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Segment_e::clear_bayes_g() {
  bayes_g_ = 0;
  clear_has_bayes_g();
}
inline double Segment_e::bayes_g() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bayes_g)
  return bayes_g_;
}
inline void Segment_e::set_bayes_g(double value) {
  set_has_bayes_g();
  bayes_g_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bayes_g)
}

// optional int32 bad_urls = 7;
inline bool Segment_e::has_bad_urls() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Segment_e::set_has_bad_urls() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Segment_e::clear_has_bad_urls() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Segment_e::clear_bad_urls() {
  bad_urls_ = 0;
  clear_has_bad_urls();
}
inline ::google::protobuf::int32 Segment_e::bad_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bad_urls)
  return bad_urls_;
}
inline void Segment_e::set_bad_urls(::google::protobuf::int32 value) {
  set_has_bad_urls();
  bad_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bad_urls)
}

// optional int32 normal_urls = 8;
inline bool Segment_e::has_normal_urls() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Segment_e::set_has_normal_urls() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Segment_e::clear_has_normal_urls() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Segment_e::clear_normal_urls() {
  normal_urls_ = 0;
  clear_has_normal_urls();
}
inline ::google::protobuf::int32 Segment_e::normal_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.normal_urls)
  return normal_urls_;
}
inline void Segment_e::set_normal_urls(::google::protobuf::int32 value) {
  set_has_normal_urls();
  normal_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.normal_urls)
}

// optional int32 good_urls = 9;
inline bool Segment_e::has_good_urls() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Segment_e::set_has_good_urls() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Segment_e::clear_has_good_urls() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Segment_e::clear_good_urls() {
  good_urls_ = 0;
  clear_has_good_urls();
}
inline ::google::protobuf::int32 Segment_e::good_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.good_urls)
  return good_urls_;
}
inline void Segment_e::set_good_urls(::google::protobuf::int32 value) {
  set_has_good_urls();
  good_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.good_urls)
}

// optional string description = 10;
inline bool Segment_e::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_e::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_e::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_e::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Segment_e::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.description)
  return description_.GetNoArena();
}
inline void Segment_e::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.description)
}
#if LANG_CXX11
inline void Segment_e::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_e.description)
}
#endif
inline void Segment_e::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.description)
}
inline void Segment_e::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.description)
}
inline ::std::string* Segment_e::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment_e::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_e.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment_e::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_e.description)
}

// repeated string samples = 11;
inline int Segment_e::samples_size() const {
  return samples_.size();
}
inline void Segment_e::clear_samples() {
  samples_.Clear();
}
inline const ::std::string& Segment_e::samples(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Get(index);
}
inline ::std::string* Segment_e::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Mutable(index);
}
inline void Segment_e::set_samples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.samples)
  samples_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Segment_e::set_samples(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.samples)
  samples_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Segment_e::set_samples(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
inline void Segment_e::set_samples(int index, const char* value, size_t size) {
  samples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
inline ::std::string* Segment_e::add_samples() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Add();
}
inline void Segment_e::add_samples(const ::std::string& value) {
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
#if LANG_CXX11
inline void Segment_e::add_samples(::std::string&& value) {
  samples_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
#endif
inline void Segment_e::add_samples(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
inline void Segment_e::add_samples(const char* value, size_t size) {
  samples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Segment_e::samples() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Segment_e::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return &samples_;
}

// -------------------------------------------------------------------

// SelectedFeature_e

// required int32 idx = 1;
inline bool SelectedFeature_e::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectedFeature_e::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectedFeature_e::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectedFeature_e::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 SelectedFeature_e::idx() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.idx)
  return idx_;
}
inline void SelectedFeature_e::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.idx)
}

// required int32 quote = 2;
inline bool SelectedFeature_e::has_quote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectedFeature_e::set_has_quote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectedFeature_e::clear_has_quote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectedFeature_e::clear_quote() {
  quote_ = 0;
  clear_has_quote();
}
inline ::google::protobuf::int32 SelectedFeature_e::quote() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.quote)
  return quote_;
}
inline void SelectedFeature_e::set_quote(::google::protobuf::int32 value) {
  set_has_quote();
  quote_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.quote)
}

// required string key = 3;
inline bool SelectedFeature_e::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectedFeature_e::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectedFeature_e::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectedFeature_e::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& SelectedFeature_e::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  return key_.GetNoArena();
}
inline void SelectedFeature_e::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
#if LANG_CXX11
inline void SelectedFeature_e::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
#endif
inline void SelectedFeature_e::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
inline void SelectedFeature_e::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
inline ::std::string* SelectedFeature_e::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectedFeature_e::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectedFeature_e::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}

// -------------------------------------------------------------------

// OptBlock

// required int32 current_num = 1;
inline bool OptBlock::has_current_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OptBlock::set_has_current_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OptBlock::clear_has_current_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OptBlock::clear_current_num() {
  current_num_ = 0;
  clear_has_current_num();
}
inline ::google::protobuf::int32 OptBlock::current_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.OptBlock.current_num)
  return current_num_;
}
inline void OptBlock::set_current_num(::google::protobuf::int32 value) {
  set_has_current_num();
  current_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.OptBlock.current_num)
}

// repeated int32 child_list = 2;
inline int OptBlock::child_list_size() const {
  return child_list_.size();
}
inline void OptBlock::clear_child_list() {
  child_list_.Clear();
}
inline ::google::protobuf::int32 OptBlock::child_list(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return child_list_.Get(index);
}
inline void OptBlock::set_child_list(int index, ::google::protobuf::int32 value) {
  child_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.OptBlock.child_list)
}
inline void OptBlock::add_child_list(::google::protobuf::int32 value) {
  child_list_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.OptBlock.child_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OptBlock::child_list() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return child_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OptBlock::mutable_child_list() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return &child_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sekitei
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sekitei_5fexperimental_2eproto__INCLUDED
