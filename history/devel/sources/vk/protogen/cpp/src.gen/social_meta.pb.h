// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social_meta.proto

#ifndef PROTOBUF_social_5fmeta_2eproto__INCLUDED
#define PROTOBUF_social_5fmeta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace social {
namespace meta {
class LayoutState;
class LayoutStateDefaultTypeInternal;
extern LayoutStateDefaultTypeInternal _LayoutState_default_instance_;
class SocialState;
class SocialStateDefaultTypeInternal;
extern SocialStateDefaultTypeInternal _SocialState_default_instance_;
}  // namespace meta
}  // namespace social

namespace social {
namespace meta {

namespace protobuf_social_5fmeta_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_social_5fmeta_2eproto

enum LayoutType {
  POSTS = 1,
  PROFILES_ONLY = 2,
  PROFILES_CAROUSEL = 4
};
bool LayoutType_IsValid(int value);
const LayoutType LayoutType_MIN = POSTS;
const LayoutType LayoutType_MAX = PROFILES_CAROUSEL;
const int LayoutType_ARRAYSIZE = LayoutType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LayoutType_descriptor();
inline const ::std::string& LayoutType_Name(LayoutType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LayoutType_descriptor(), value);
}
inline bool LayoutType_Parse(
    const ::std::string& name, LayoutType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LayoutType>(
    LayoutType_descriptor(), name, value);
}
// ===================================================================

class LayoutState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:social.meta.LayoutState) */ {
 public:
  LayoutState();
  virtual ~LayoutState();

  LayoutState(const LayoutState& from);

  inline LayoutState& operator=(const LayoutState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LayoutState(LayoutState&& from) noexcept
    : LayoutState() {
    *this = ::std::move(from);
  }

  inline LayoutState& operator=(LayoutState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LayoutState& default_instance();

  static inline const LayoutState* internal_default_instance() {
    return reinterpret_cast<const LayoutState*>(
               &_LayoutState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LayoutState* other);
  friend void swap(LayoutState& a, LayoutState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LayoutState* New() const PROTOBUF_FINAL { return New(NULL); }

  LayoutState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LayoutState& from);
  void MergeFrom(const LayoutState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LayoutState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 used_urls = 5;
  int used_urls_size() const;
  void clear_used_urls();
  static const int kUsedUrlsFieldNumber = 5;
  ::google::protobuf::int32 used_urls(int index) const;
  void set_used_urls(int index, ::google::protobuf::int32 value);
  void add_used_urls(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      used_urls() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_used_urls();

  // repeated uint64 used_texts = 6;
  int used_texts_size() const;
  void clear_used_texts();
  static const int kUsedTextsFieldNumber = 6;
  ::google::protobuf::uint64 used_texts(int index) const;
  void set_used_texts(int index, ::google::protobuf::uint64 value);
  void add_used_texts(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      used_texts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_used_texts();

  // required uint32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // required bool porno_query = 4;
  bool has_porno_query() const;
  void clear_porno_query();
  static const int kPornoQueryFieldNumber = 4;
  bool porno_query() const;
  void set_porno_query(bool value);

  // required int32 last_shown_idx = 7 [default = 0];
  bool has_last_shown_idx() const;
  void clear_last_shown_idx();
  static const int kLastShownIdxFieldNumber = 7;
  ::google::protobuf::int32 last_shown_idx() const;
  void set_last_shown_idx(::google::protobuf::int32 value);

  // optional bool fast_posts_remains = 8 [default = true];
  bool has_fast_posts_remains() const;
  void clear_fast_posts_remains();
  static const int kFastPostsRemainsFieldNumber = 8;
  bool fast_posts_remains() const;
  void set_fast_posts_remains(bool value);

  // required .social.meta.LayoutType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::social::meta::LayoutType type() const;
  void set_type(::social::meta::LayoutType value);

  // required int32 last_used_idx = 3 [default = -1];
  bool has_last_used_idx() const;
  void clear_last_used_idx();
  static const int kLastUsedIdxFieldNumber = 3;
  ::google::protobuf::int32 last_used_idx() const;
  void set_last_used_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:social.meta.LayoutState)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_type();
  void clear_has_type();
  void set_has_last_used_idx();
  void clear_has_last_used_idx();
  void set_has_porno_query();
  void clear_has_porno_query();
  void set_has_last_shown_idx();
  void clear_has_last_shown_idx();
  void set_has_fast_posts_remains();
  void clear_has_fast_posts_remains();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > used_urls_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > used_texts_;
  ::google::protobuf::uint32 index_;
  bool porno_query_;
  ::google::protobuf::int32 last_shown_idx_;
  bool fast_posts_remains_;
  int type_;
  ::google::protobuf::int32 last_used_idx_;
  friend struct protobuf_social_5fmeta_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SocialState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:social.meta.SocialState) */ {
 public:
  SocialState();
  virtual ~SocialState();

  SocialState(const SocialState& from);

  inline SocialState& operator=(const SocialState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocialState(SocialState&& from) noexcept
    : SocialState() {
    *this = ::std::move(from);
  }

  inline SocialState& operator=(SocialState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialState& default_instance();

  static inline const SocialState* internal_default_instance() {
    return reinterpret_cast<const SocialState*>(
               &_SocialState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SocialState* other);
  friend void swap(SocialState& a, SocialState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocialState* New() const PROTOBUF_FINAL { return New(NULL); }

  SocialState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SocialState& from);
  void MergeFrom(const SocialState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SocialState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 used_texts = 4;
  int used_texts_size() const;
  void clear_used_texts();
  static const int kUsedTextsFieldNumber = 4;
  ::google::protobuf::uint64 used_texts(int index) const;
  void set_used_texts(int index, ::google::protobuf::uint64 value);
  void add_used_texts(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      used_texts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_used_texts();

  // required int32 last_used_idx = 1 [default = 0];
  bool has_last_used_idx() const;
  void clear_last_used_idx();
  static const int kLastUsedIdxFieldNumber = 1;
  ::google::protobuf::int32 last_used_idx() const;
  void set_last_used_idx(::google::protobuf::int32 value);

  // required bool porno_query = 2 [default = false];
  bool has_porno_query() const;
  void clear_porno_query();
  static const int kPornoQueryFieldNumber = 2;
  bool porno_query() const;
  void set_porno_query(bool value);

  // required int32 last_n = 3 [default = 0];
  bool has_last_n() const;
  void clear_last_n();
  static const int kLastNFieldNumber = 3;
  ::google::protobuf::int32 last_n() const;
  void set_last_n(::google::protobuf::int32 value);

  // optional int32 last_source = 5 [default = 0];
  bool has_last_source() const;
  void clear_last_source();
  static const int kLastSourceFieldNumber = 5;
  ::google::protobuf::int32 last_source() const;
  void set_last_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:social.meta.SocialState)
 private:
  void set_has_last_used_idx();
  void clear_has_last_used_idx();
  void set_has_porno_query();
  void clear_has_porno_query();
  void set_has_last_n();
  void clear_has_last_n();
  void set_has_last_source();
  void clear_has_last_source();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > used_texts_;
  ::google::protobuf::int32 last_used_idx_;
  bool porno_query_;
  ::google::protobuf::int32 last_n_;
  ::google::protobuf::int32 last_source_;
  friend struct protobuf_social_5fmeta_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LayoutState

// required uint32 index = 1;
inline bool LayoutState::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LayoutState::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LayoutState::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LayoutState::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 LayoutState::index() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.index)
  return index_;
}
inline void LayoutState::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.index)
}

// required .social.meta.LayoutType type = 2;
inline bool LayoutState::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LayoutState::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LayoutState::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LayoutState::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::social::meta::LayoutType LayoutState::type() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.type)
  return static_cast< ::social::meta::LayoutType >(type_);
}
inline void LayoutState::set_type(::social::meta::LayoutType value) {
  assert(::social::meta::LayoutType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.type)
}

// required int32 last_used_idx = 3 [default = -1];
inline bool LayoutState::has_last_used_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LayoutState::set_has_last_used_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LayoutState::clear_has_last_used_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LayoutState::clear_last_used_idx() {
  last_used_idx_ = -1;
  clear_has_last_used_idx();
}
inline ::google::protobuf::int32 LayoutState::last_used_idx() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.last_used_idx)
  return last_used_idx_;
}
inline void LayoutState::set_last_used_idx(::google::protobuf::int32 value) {
  set_has_last_used_idx();
  last_used_idx_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.last_used_idx)
}

// required bool porno_query = 4;
inline bool LayoutState::has_porno_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LayoutState::set_has_porno_query() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LayoutState::clear_has_porno_query() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LayoutState::clear_porno_query() {
  porno_query_ = false;
  clear_has_porno_query();
}
inline bool LayoutState::porno_query() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.porno_query)
  return porno_query_;
}
inline void LayoutState::set_porno_query(bool value) {
  set_has_porno_query();
  porno_query_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.porno_query)
}

// repeated int32 used_urls = 5;
inline int LayoutState::used_urls_size() const {
  return used_urls_.size();
}
inline void LayoutState::clear_used_urls() {
  used_urls_.Clear();
}
inline ::google::protobuf::int32 LayoutState::used_urls(int index) const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.used_urls)
  return used_urls_.Get(index);
}
inline void LayoutState::set_used_urls(int index, ::google::protobuf::int32 value) {
  used_urls_.Set(index, value);
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.used_urls)
}
inline void LayoutState::add_used_urls(::google::protobuf::int32 value) {
  used_urls_.Add(value);
  // @@protoc_insertion_point(field_add:social.meta.LayoutState.used_urls)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LayoutState::used_urls() const {
  // @@protoc_insertion_point(field_list:social.meta.LayoutState.used_urls)
  return used_urls_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LayoutState::mutable_used_urls() {
  // @@protoc_insertion_point(field_mutable_list:social.meta.LayoutState.used_urls)
  return &used_urls_;
}

// repeated uint64 used_texts = 6;
inline int LayoutState::used_texts_size() const {
  return used_texts_.size();
}
inline void LayoutState::clear_used_texts() {
  used_texts_.Clear();
}
inline ::google::protobuf::uint64 LayoutState::used_texts(int index) const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.used_texts)
  return used_texts_.Get(index);
}
inline void LayoutState::set_used_texts(int index, ::google::protobuf::uint64 value) {
  used_texts_.Set(index, value);
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.used_texts)
}
inline void LayoutState::add_used_texts(::google::protobuf::uint64 value) {
  used_texts_.Add(value);
  // @@protoc_insertion_point(field_add:social.meta.LayoutState.used_texts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LayoutState::used_texts() const {
  // @@protoc_insertion_point(field_list:social.meta.LayoutState.used_texts)
  return used_texts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LayoutState::mutable_used_texts() {
  // @@protoc_insertion_point(field_mutable_list:social.meta.LayoutState.used_texts)
  return &used_texts_;
}

// required int32 last_shown_idx = 7 [default = 0];
inline bool LayoutState::has_last_shown_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LayoutState::set_has_last_shown_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LayoutState::clear_has_last_shown_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LayoutState::clear_last_shown_idx() {
  last_shown_idx_ = 0;
  clear_has_last_shown_idx();
}
inline ::google::protobuf::int32 LayoutState::last_shown_idx() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.last_shown_idx)
  return last_shown_idx_;
}
inline void LayoutState::set_last_shown_idx(::google::protobuf::int32 value) {
  set_has_last_shown_idx();
  last_shown_idx_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.last_shown_idx)
}

// optional bool fast_posts_remains = 8 [default = true];
inline bool LayoutState::has_fast_posts_remains() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LayoutState::set_has_fast_posts_remains() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LayoutState::clear_has_fast_posts_remains() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LayoutState::clear_fast_posts_remains() {
  fast_posts_remains_ = true;
  clear_has_fast_posts_remains();
}
inline bool LayoutState::fast_posts_remains() const {
  // @@protoc_insertion_point(field_get:social.meta.LayoutState.fast_posts_remains)
  return fast_posts_remains_;
}
inline void LayoutState::set_fast_posts_remains(bool value) {
  set_has_fast_posts_remains();
  fast_posts_remains_ = value;
  // @@protoc_insertion_point(field_set:social.meta.LayoutState.fast_posts_remains)
}

// -------------------------------------------------------------------

// SocialState

// required int32 last_used_idx = 1 [default = 0];
inline bool SocialState::has_last_used_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialState::set_has_last_used_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialState::clear_has_last_used_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialState::clear_last_used_idx() {
  last_used_idx_ = 0;
  clear_has_last_used_idx();
}
inline ::google::protobuf::int32 SocialState::last_used_idx() const {
  // @@protoc_insertion_point(field_get:social.meta.SocialState.last_used_idx)
  return last_used_idx_;
}
inline void SocialState::set_last_used_idx(::google::protobuf::int32 value) {
  set_has_last_used_idx();
  last_used_idx_ = value;
  // @@protoc_insertion_point(field_set:social.meta.SocialState.last_used_idx)
}

// required bool porno_query = 2 [default = false];
inline bool SocialState::has_porno_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialState::set_has_porno_query() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialState::clear_has_porno_query() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialState::clear_porno_query() {
  porno_query_ = false;
  clear_has_porno_query();
}
inline bool SocialState::porno_query() const {
  // @@protoc_insertion_point(field_get:social.meta.SocialState.porno_query)
  return porno_query_;
}
inline void SocialState::set_porno_query(bool value) {
  set_has_porno_query();
  porno_query_ = value;
  // @@protoc_insertion_point(field_set:social.meta.SocialState.porno_query)
}

// required int32 last_n = 3 [default = 0];
inline bool SocialState::has_last_n() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialState::set_has_last_n() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialState::clear_has_last_n() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialState::clear_last_n() {
  last_n_ = 0;
  clear_has_last_n();
}
inline ::google::protobuf::int32 SocialState::last_n() const {
  // @@protoc_insertion_point(field_get:social.meta.SocialState.last_n)
  return last_n_;
}
inline void SocialState::set_last_n(::google::protobuf::int32 value) {
  set_has_last_n();
  last_n_ = value;
  // @@protoc_insertion_point(field_set:social.meta.SocialState.last_n)
}

// repeated uint64 used_texts = 4;
inline int SocialState::used_texts_size() const {
  return used_texts_.size();
}
inline void SocialState::clear_used_texts() {
  used_texts_.Clear();
}
inline ::google::protobuf::uint64 SocialState::used_texts(int index) const {
  // @@protoc_insertion_point(field_get:social.meta.SocialState.used_texts)
  return used_texts_.Get(index);
}
inline void SocialState::set_used_texts(int index, ::google::protobuf::uint64 value) {
  used_texts_.Set(index, value);
  // @@protoc_insertion_point(field_set:social.meta.SocialState.used_texts)
}
inline void SocialState::add_used_texts(::google::protobuf::uint64 value) {
  used_texts_.Add(value);
  // @@protoc_insertion_point(field_add:social.meta.SocialState.used_texts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SocialState::used_texts() const {
  // @@protoc_insertion_point(field_list:social.meta.SocialState.used_texts)
  return used_texts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SocialState::mutable_used_texts() {
  // @@protoc_insertion_point(field_mutable_list:social.meta.SocialState.used_texts)
  return &used_texts_;
}

// optional int32 last_source = 5 [default = 0];
inline bool SocialState::has_last_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SocialState::set_has_last_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SocialState::clear_has_last_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SocialState::clear_last_source() {
  last_source_ = 0;
  clear_has_last_source();
}
inline ::google::protobuf::int32 SocialState::last_source() const {
  // @@protoc_insertion_point(field_get:social.meta.SocialState.last_source)
  return last_source_;
}
inline void SocialState::set_last_source(::google::protobuf::int32 value) {
  set_has_last_source();
  last_source_ = value;
  // @@protoc_insertion_point(field_set:social.meta.SocialState.last_source)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace meta
}  // namespace social

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::social::meta::LayoutType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::social::meta::LayoutType>() {
  return ::social::meta::LayoutType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_social_5fmeta_2eproto__INCLUDED
