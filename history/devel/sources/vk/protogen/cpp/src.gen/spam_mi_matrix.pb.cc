// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spam_mi_matrix.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "spam_mi_matrix.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class Matrix_MatrixRowDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Matrix_MatrixRow>
     _instance;
} _Matrix_MatrixRow_default_instance_;
class MatrixDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Matrix>
     _instance;
} _Matrix_default_instance_;

namespace protobuf_spam_5fmi_5fmatrix_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix_MatrixRow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix_MatrixRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix_MatrixRow, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix_MatrixRow, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix_MatrixRow, weight_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, cluster_id_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(Matrix_MatrixRow)},
  { 11, 18, sizeof(Matrix)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Matrix_MatrixRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Matrix_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "spam_mi_matrix.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Matrix_MatrixRow_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Matrix_MatrixRow_default_instance_);_Matrix_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Matrix_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024spam_mi_matrix.proto\022\030ru.mail.go.webba"
      "se.blobs\"\217\001\n\006Matrix\0227\n\003row\030\001 \003(\0132*.ru.ma"
      "il.go.webbase.blobs.Matrix.MatrixRow\022\022\n\n"
      "cluster_id\030\002 \002(\003\0328\n\tMatrixRow\022\014\n\004term\030\001 "
      "\002(\t\022\r\n\005index\030\002 \003(\003\022\016\n\006weight\030\003 \003(\002B\022B\020Sp"
      "amMIDataMatrix"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "spam_mi_matrix.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_spam_5fmi_5fmatrix_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Matrix_MatrixRow::kTermFieldNumber;
const int Matrix_MatrixRow::kIndexFieldNumber;
const int Matrix_MatrixRow::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Matrix_MatrixRow::Matrix_MatrixRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spam_5fmi_5fmatrix_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
}
Matrix_MatrixRow::Matrix_MatrixRow(const Matrix_MatrixRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      index_(from.index_),
      weight_(from.weight_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  term_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_term()) {
    term_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
}

void Matrix_MatrixRow::SharedCtor() {
  _cached_size_ = 0;
  term_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Matrix_MatrixRow::~Matrix_MatrixRow() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  SharedDtor();
}

void Matrix_MatrixRow::SharedDtor() {
  term_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Matrix_MatrixRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Matrix_MatrixRow::descriptor() {
  protobuf_spam_5fmi_5fmatrix_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spam_5fmi_5fmatrix_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Matrix_MatrixRow& Matrix_MatrixRow::default_instance() {
  protobuf_spam_5fmi_5fmatrix_2eproto::InitDefaults();
  return *internal_default_instance();
}

Matrix_MatrixRow* Matrix_MatrixRow::New(::google::protobuf::Arena* arena) const {
  Matrix_MatrixRow* n = new Matrix_MatrixRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Matrix_MatrixRow::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_.Clear();
  weight_.Clear();
  if (has_term()) {
    GOOGLE_DCHECK(!term_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*term_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Matrix_MatrixRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_term()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->term().data(), static_cast<int>(this->term().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.Matrix.MatrixRow.term");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_weight())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_weight())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  return false;
#undef DO_
}

void Matrix_MatrixRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string term = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term().data(), static_cast<int>(this->term().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.Matrix.MatrixRow.term");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->term(), output);
  }

  // repeated int64 index = 2;
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->index(i), output);
  }

  // repeated float weight = 3;
  for (int i = 0, n = this->weight_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->weight(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
}

::google::protobuf::uint8* Matrix_MatrixRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string term = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term().data(), static_cast<int>(this->term().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.Matrix.MatrixRow.term");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->term(), target);
  }

  // repeated int64 index = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->index_, target);

  // repeated float weight = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->weight_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  return target;
}

size_t Matrix_MatrixRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string term = 1;
  if (has_term()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->term());
  }
  // repeated int64 index = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->index_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->index_size());
    total_size += data_size;
  }

  // repeated float weight = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->weight_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->weight_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Matrix_MatrixRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  GOOGLE_DCHECK_NE(&from, this);
  const Matrix_MatrixRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Matrix_MatrixRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
    MergeFrom(*source);
  }
}

void Matrix_MatrixRow::MergeFrom(const Matrix_MatrixRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_.MergeFrom(from.index_);
  weight_.MergeFrom(from.weight_);
  if (from.has_term()) {
    set_has_term();
    term_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_);
  }
}

void Matrix_MatrixRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix_MatrixRow::CopyFrom(const Matrix_MatrixRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.Matrix.MatrixRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix_MatrixRow::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Matrix_MatrixRow::Swap(Matrix_MatrixRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Matrix_MatrixRow::InternalSwap(Matrix_MatrixRow* other) {
  using std::swap;
  index_.InternalSwap(&other->index_);
  weight_.InternalSwap(&other->weight_);
  term_.Swap(&other->term_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Matrix_MatrixRow::GetMetadata() const {
  protobuf_spam_5fmi_5fmatrix_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spam_5fmi_5fmatrix_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Matrix_MatrixRow

// required string term = 1;
bool Matrix_MatrixRow::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Matrix_MatrixRow::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
void Matrix_MatrixRow::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
void Matrix_MatrixRow::clear_term() {
  term_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_term();
}
const ::std::string& Matrix_MatrixRow::term() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
  return term_.GetNoArena();
}
void Matrix_MatrixRow::set_term(const ::std::string& value) {
  set_has_term();
  term_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
}
#if LANG_CXX11
void Matrix_MatrixRow::set_term(::std::string&& value) {
  set_has_term();
  term_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
}
#endif
void Matrix_MatrixRow::set_term(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_term();
  term_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
}
void Matrix_MatrixRow::set_term(const char* value, size_t size) {
  set_has_term();
  term_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
}
::std::string* Matrix_MatrixRow::mutable_term() {
  set_has_term();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
  return term_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Matrix_MatrixRow::release_term() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
  clear_has_term();
  return term_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Matrix_MatrixRow::set_allocated_term(::std::string* term) {
  if (term != NULL) {
    set_has_term();
  } else {
    clear_has_term();
  }
  term_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), term);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.Matrix.MatrixRow.term)
}

// repeated int64 index = 2;
int Matrix_MatrixRow::index_size() const {
  return index_.size();
}
void Matrix_MatrixRow::clear_index() {
  index_.Clear();
}
::google::protobuf::int64 Matrix_MatrixRow::index(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.Matrix.MatrixRow.index)
  return index_.Get(index);
}
void Matrix_MatrixRow::set_index(int index, ::google::protobuf::int64 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.Matrix.MatrixRow.index)
}
void Matrix_MatrixRow::add_index(::google::protobuf::int64 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.Matrix.MatrixRow.index)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Matrix_MatrixRow::index() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.Matrix.MatrixRow.index)
  return index_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Matrix_MatrixRow::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.Matrix.MatrixRow.index)
  return &index_;
}

// repeated float weight = 3;
int Matrix_MatrixRow::weight_size() const {
  return weight_.size();
}
void Matrix_MatrixRow::clear_weight() {
  weight_.Clear();
}
float Matrix_MatrixRow::weight(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.Matrix.MatrixRow.weight)
  return weight_.Get(index);
}
void Matrix_MatrixRow::set_weight(int index, float value) {
  weight_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.Matrix.MatrixRow.weight)
}
void Matrix_MatrixRow::add_weight(float value) {
  weight_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.Matrix.MatrixRow.weight)
}
const ::google::protobuf::RepeatedField< float >&
Matrix_MatrixRow::weight() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.Matrix.MatrixRow.weight)
  return weight_;
}
::google::protobuf::RepeatedField< float >*
Matrix_MatrixRow::mutable_weight() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.Matrix.MatrixRow.weight)
  return &weight_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Matrix::kRowFieldNumber;
const int Matrix::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Matrix::Matrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spam_5fmi_5fmatrix_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.Matrix)
}
Matrix::Matrix(const Matrix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      row_(from.row_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_id_ = from.cluster_id_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.Matrix)
}

void Matrix::SharedCtor() {
  _cached_size_ = 0;
  cluster_id_ = GOOGLE_LONGLONG(0);
}

Matrix::~Matrix() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.Matrix)
  SharedDtor();
}

void Matrix::SharedDtor() {
}

void Matrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Matrix::descriptor() {
  protobuf_spam_5fmi_5fmatrix_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spam_5fmi_5fmatrix_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Matrix& Matrix::default_instance() {
  protobuf_spam_5fmi_5fmatrix_2eproto::InitDefaults();
  return *internal_default_instance();
}

Matrix* Matrix::New(::google::protobuf::Arena* arena) const {
  Matrix* n = new Matrix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Matrix::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.Matrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  cluster_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Matrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.Matrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.Matrix.MatrixRow row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 cluster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cluster_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.Matrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.Matrix)
  return false;
#undef DO_
}

void Matrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.Matrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.Matrix.MatrixRow row = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->row(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 cluster_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cluster_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.Matrix)
}

::google::protobuf::uint8* Matrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.Matrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.Matrix.MatrixRow row = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->row(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int64 cluster_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cluster_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.Matrix)
  return target;
}

size_t Matrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.Matrix)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 cluster_id = 2;
  if (has_cluster_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cluster_id());
  }
  // repeated .ru.mail.go.webbase.blobs.Matrix.MatrixRow row = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->row(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Matrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.Matrix)
  GOOGLE_DCHECK_NE(&from, this);
  const Matrix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Matrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.Matrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.Matrix)
    MergeFrom(*source);
  }
}

void Matrix::MergeFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.Matrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
  if (from.has_cluster_id()) {
    set_cluster_id(from.cluster_id());
  }
}

void Matrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix::CopyFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->row())) return false;
  return true;
}

void Matrix::Swap(Matrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Matrix::InternalSwap(Matrix* other) {
  using std::swap;
  row_.InternalSwap(&other->row_);
  swap(cluster_id_, other->cluster_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Matrix::GetMetadata() const {
  protobuf_spam_5fmi_5fmatrix_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spam_5fmi_5fmatrix_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Matrix

// repeated .ru.mail.go.webbase.blobs.Matrix.MatrixRow row = 1;
int Matrix::row_size() const {
  return row_.size();
}
void Matrix::clear_row() {
  row_.Clear();
}
const ::ru::mail::go::webbase::blobs::Matrix_MatrixRow& Matrix::row(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.Matrix.row)
  return row_.Get(index);
}
::ru::mail::go::webbase::blobs::Matrix_MatrixRow* Matrix::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.Matrix.row)
  return row_.Mutable(index);
}
::ru::mail::go::webbase::blobs::Matrix_MatrixRow* Matrix::add_row() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.Matrix.row)
  return row_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::Matrix_MatrixRow >*
Matrix::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.Matrix.row)
  return &row_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::Matrix_MatrixRow >&
Matrix::row() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.Matrix.row)
  return row_;
}

// required int64 cluster_id = 2;
bool Matrix::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Matrix::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Matrix::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Matrix::clear_cluster_id() {
  cluster_id_ = GOOGLE_LONGLONG(0);
  clear_has_cluster_id();
}
::google::protobuf::int64 Matrix::cluster_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.Matrix.cluster_id)
  return cluster_id_;
}
void Matrix::set_cluster_id(::google::protobuf::int64 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.Matrix.cluster_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
