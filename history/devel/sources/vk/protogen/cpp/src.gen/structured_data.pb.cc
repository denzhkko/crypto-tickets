// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structured_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "structured_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class StructuredEventProto_MetricDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StructuredEventProto_Metric>
     _instance;
  ::google::protobuf::uint64 value_hmac_;
  ::google::protobuf::int64 value_int64_;
  ::google::protobuf::internal::ArenaStringPtr value_string_;
} _StructuredEventProto_Metric_default_instance_;
class StructuredEventProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StructuredEventProto>
     _instance;
} _StructuredEventProto_default_instance_;
class StructuredDataProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StructuredDataProto>
     _instance;
} _StructuredDataProto_default_instance_;

namespace protobuf_structured_5fdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto_Metric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto_Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto_Metric, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto_Metric, name_hash_),
  offsetof(StructuredEventProto_MetricDefaultTypeInternal, value_hmac_),
  offsetof(StructuredEventProto_MetricDefaultTypeInternal, value_int64_),
  offsetof(StructuredEventProto_MetricDefaultTypeInternal, value_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto_Metric, value_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, profile_event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, event_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredEventProto, event_type_),
  0,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredDataProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredDataProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredDataProto, events_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(StructuredEventProto_Metric)},
  { 14, 23, sizeof(StructuredEventProto)},
  { 27, 33, sizeof(StructuredDataProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructuredEventProto_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructuredEventProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructuredDataProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "structured_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StructuredEventProto_Metric_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StructuredEventProto_Metric_default_instance_);_StructuredEventProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StructuredEventProto_default_instance_);_StructuredDataProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StructuredDataProto_default_instance_);_StructuredEventProto_Metric_default_instance_.value_hmac_ = GOOGLE_ULONGLONG(0);
  _StructuredEventProto_Metric_default_instance_.value_int64_ = GOOGLE_LONGLONG(0);
  _StructuredEventProto_Metric_default_instance_.value_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025structured_data.proto\022\007metrics\"\337\002\n\024Str"
      "ucturedEventProto\022\030\n\020profile_event_id\030\001 "
      "\001(\006\022\027\n\017event_name_hash\030\002 \001(\006\0225\n\007metrics\030"
      "\003 \003(\0132$.metrics.StructuredEventProto.Met"
      "ric\022;\n\nevent_type\030\004 \001(\0162\'.metrics.Struct"
      "uredEventProto.EventType\032i\n\006Metric\022\021\n\tna"
      "me_hash\030\001 \001(\006\022\024\n\nvalue_hmac\030\002 \001(\006H\000\022\025\n\013v"
      "alue_int64\030\003 \001(\003H\000\022\026\n\014value_string\030\004 \001(\t"
      "H\000B\007\n\005value\"5\n\tEventType\022\013\n\007UNKNOWN\020\000\022\013\n"
      "\007REGULAR\020\001\022\016\n\nRAW_STRING\020\002\"D\n\023Structured"
      "DataProto\022-\n\006events\030\001 \003(\0132\035.metrics.Stru"
      "cturedEventProtoB!\n\037org.chromium.compone"
      "nts.metrics"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 491);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "structured_data.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_structured_5fdata_2eproto

const ::google::protobuf::EnumDescriptor* StructuredEventProto_EventType_descriptor() {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool StructuredEventProto_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StructuredEventProto_EventType StructuredEventProto::UNKNOWN;
const StructuredEventProto_EventType StructuredEventProto::REGULAR;
const StructuredEventProto_EventType StructuredEventProto::RAW_STRING;
const StructuredEventProto_EventType StructuredEventProto::EventType_MIN;
const StructuredEventProto_EventType StructuredEventProto::EventType_MAX;
const int StructuredEventProto::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructuredEventProto_Metric::kNameHashFieldNumber;
const int StructuredEventProto_Metric::kValueHmacFieldNumber;
const int StructuredEventProto_Metric::kValueInt64FieldNumber;
const int StructuredEventProto_Metric::kValueStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructuredEventProto_Metric::StructuredEventProto_Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_structured_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.StructuredEventProto.Metric)
}
StructuredEventProto_Metric::StructuredEventProto_Metric(const StructuredEventProto_Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_hash_ = from.name_hash_;
  clear_has_value();
  switch (from.value_case()) {
    case kValueHmac: {
      set_value_hmac(from.value_hmac());
      break;
    }
    case kValueInt64: {
      set_value_int64(from.value_int64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:metrics.StructuredEventProto.Metric)
}

void StructuredEventProto_Metric::SharedCtor() {
  _cached_size_ = 0;
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}

StructuredEventProto_Metric::~StructuredEventProto_Metric() {
  // @@protoc_insertion_point(destructor:metrics.StructuredEventProto.Metric)
  SharedDtor();
}

void StructuredEventProto_Metric::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void StructuredEventProto_Metric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructuredEventProto_Metric::descriptor() {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StructuredEventProto_Metric& StructuredEventProto_Metric::default_instance() {
  protobuf_structured_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructuredEventProto_Metric* StructuredEventProto_Metric::New(::google::protobuf::Arena* arena) const {
  StructuredEventProto_Metric* n = new StructuredEventProto_Metric;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructuredEventProto_Metric::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:metrics.StructuredEventProto.Metric)
  switch (value_case()) {
    case kValueHmac: {
      // No need to clear
      break;
    }
    case kValueInt64: {
      // No need to clear
      break;
    }
    case kValueString: {
      value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void StructuredEventProto_Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.StructuredEventProto.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StructuredEventProto_Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.StructuredEventProto.Metric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 value_hmac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &value_.value_hmac_)));
          set_has_value_hmac();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value_int64 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.value_int64_)));
          set_has_value_int64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value_string().data(), static_cast<int>(this->value_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metrics.StructuredEventProto.Metric.value_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.StructuredEventProto.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.StructuredEventProto.Metric)
  return false;
#undef DO_
}

void StructuredEventProto_Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.StructuredEventProto.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->name_hash(), output);
  }

  switch (value_case()) {
    case kValueHmac:
      ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->value_hmac(), output);
      break;
    case kValueInt64:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->value_int64(), output);
      break;
    case kValueString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->value_string().data(), static_cast<int>(this->value_string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "metrics.StructuredEventProto.Metric.value_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        4, this->value_string(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.StructuredEventProto.Metric)
}

::google::protobuf::uint8* StructuredEventProto_Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.StructuredEventProto.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->name_hash(), target);
  }

  switch (value_case()) {
    case kValueHmac:
      target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->value_hmac(), target);
      break;
    case kValueInt64:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->value_int64(), target);
      break;
    case kValueString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->value_string().data(), static_cast<int>(this->value_string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "metrics.StructuredEventProto.Metric.value_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          4, this->value_string(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.StructuredEventProto.Metric)
  return target;
}

size_t StructuredEventProto_Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.StructuredEventProto.Metric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 name_hash = 1;
  if (has_name_hash()) {
    total_size += 1 + 8;
  }

  switch (value_case()) {
    // optional fixed64 value_hmac = 2;
    case kValueHmac: {
      total_size += 1 + 8;
      break;
    }
    // optional int64 value_int64 = 3;
    case kValueInt64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value_int64());
      break;
    }
    // optional string value_string = 4;
    case kValueString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructuredEventProto_Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.StructuredEventProto.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const StructuredEventProto_Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructuredEventProto_Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.StructuredEventProto.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.StructuredEventProto.Metric)
    MergeFrom(*source);
  }
}

void StructuredEventProto_Metric::MergeFrom(const StructuredEventProto_Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.StructuredEventProto.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name_hash()) {
    set_name_hash(from.name_hash());
  }
  switch (from.value_case()) {
    case kValueHmac: {
      set_value_hmac(from.value_hmac());
      break;
    }
    case kValueInt64: {
      set_value_int64(from.value_int64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void StructuredEventProto_Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.StructuredEventProto.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructuredEventProto_Metric::CopyFrom(const StructuredEventProto_Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.StructuredEventProto.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructuredEventProto_Metric::IsInitialized() const {
  return true;
}

void StructuredEventProto_Metric::Swap(StructuredEventProto_Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructuredEventProto_Metric::InternalSwap(StructuredEventProto_Metric* other) {
  using std::swap;
  swap(name_hash_, other->name_hash_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructuredEventProto_Metric::GetMetadata() const {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructuredEventProto_Metric

// optional fixed64 name_hash = 1;
bool StructuredEventProto_Metric::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StructuredEventProto_Metric::set_has_name_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void StructuredEventProto_Metric::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void StructuredEventProto_Metric::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
::google::protobuf::uint64 StructuredEventProto_Metric::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.name_hash)
  return name_hash_;
}
void StructuredEventProto_Metric::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.name_hash)
}

// optional fixed64 value_hmac = 2;
bool StructuredEventProto_Metric::has_value_hmac() const {
  return value_case() == kValueHmac;
}
void StructuredEventProto_Metric::set_has_value_hmac() {
  _oneof_case_[0] = kValueHmac;
}
void StructuredEventProto_Metric::clear_value_hmac() {
  if (has_value_hmac()) {
    value_.value_hmac_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::uint64 StructuredEventProto_Metric::value_hmac() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.value_hmac)
  if (has_value_hmac()) {
    return value_.value_hmac_;
  }
  return GOOGLE_ULONGLONG(0);
}
void StructuredEventProto_Metric::set_value_hmac(::google::protobuf::uint64 value) {
  if (!has_value_hmac()) {
    clear_value();
    set_has_value_hmac();
  }
  value_.value_hmac_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_hmac)
}

// optional int64 value_int64 = 3;
bool StructuredEventProto_Metric::has_value_int64() const {
  return value_case() == kValueInt64;
}
void StructuredEventProto_Metric::set_has_value_int64() {
  _oneof_case_[0] = kValueInt64;
}
void StructuredEventProto_Metric::clear_value_int64() {
  if (has_value_int64()) {
    value_.value_int64_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 StructuredEventProto_Metric::value_int64() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.value_int64)
  if (has_value_int64()) {
    return value_.value_int64_;
  }
  return GOOGLE_LONGLONG(0);
}
void StructuredEventProto_Metric::set_value_int64(::google::protobuf::int64 value) {
  if (!has_value_int64()) {
    clear_value();
    set_has_value_int64();
  }
  value_.value_int64_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_int64)
}

// optional string value_string = 4;
bool StructuredEventProto_Metric::has_value_string() const {
  return value_case() == kValueString;
}
void StructuredEventProto_Metric::set_has_value_string() {
  _oneof_case_[0] = kValueString;
}
void StructuredEventProto_Metric::clear_value_string() {
  if (has_value_string()) {
    value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& StructuredEventProto_Metric::value_string() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.value_string)
  if (has_value_string()) {
    return value_.value_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void StructuredEventProto_Metric::set_value_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_string)
}
#if LANG_CXX11
void StructuredEventProto_Metric::set_value_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metrics.StructuredEventProto.Metric.value_string)
}
#endif
void StructuredEventProto_Metric::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metrics.StructuredEventProto.Metric.value_string)
}
void StructuredEventProto_Metric::set_value_string(const char* value, size_t size) {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metrics.StructuredEventProto.Metric.value_string)
}
::std::string* StructuredEventProto_Metric::mutable_value_string() {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:metrics.StructuredEventProto.Metric.value_string)
  return value_.value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StructuredEventProto_Metric::release_value_string() {
  // @@protoc_insertion_point(field_release:metrics.StructuredEventProto.Metric.value_string)
  if (has_value_string()) {
    clear_has_value();
    return value_.value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void StructuredEventProto_Metric::set_allocated_value_string(::std::string* value_string) {
  if (!has_value_string()) {
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (value_string != NULL) {
    set_has_value_string();
    value_.value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_string);
  }
  // @@protoc_insertion_point(field_set_allocated:metrics.StructuredEventProto.Metric.value_string)
}

bool StructuredEventProto_Metric::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void StructuredEventProto_Metric::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
StructuredEventProto_Metric::ValueCase StructuredEventProto_Metric::value_case() const {
  return StructuredEventProto_Metric::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructuredEventProto::kProfileEventIdFieldNumber;
const int StructuredEventProto::kEventNameHashFieldNumber;
const int StructuredEventProto::kMetricsFieldNumber;
const int StructuredEventProto::kEventTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructuredEventProto::StructuredEventProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_structured_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.StructuredEventProto)
}
StructuredEventProto::StructuredEventProto(const StructuredEventProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&profile_event_id_, &from.profile_event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_type_) -
    reinterpret_cast<char*>(&profile_event_id_)) + sizeof(event_type_));
  // @@protoc_insertion_point(copy_constructor:metrics.StructuredEventProto)
}

void StructuredEventProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&profile_event_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_type_) -
      reinterpret_cast<char*>(&profile_event_id_)) + sizeof(event_type_));
}

StructuredEventProto::~StructuredEventProto() {
  // @@protoc_insertion_point(destructor:metrics.StructuredEventProto)
  SharedDtor();
}

void StructuredEventProto::SharedDtor() {
}

void StructuredEventProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructuredEventProto::descriptor() {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StructuredEventProto& StructuredEventProto::default_instance() {
  protobuf_structured_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructuredEventProto* StructuredEventProto::New(::google::protobuf::Arena* arena) const {
  StructuredEventProto* n = new StructuredEventProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructuredEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.StructuredEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&profile_event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_type_) -
        reinterpret_cast<char*>(&profile_event_id_)) + sizeof(event_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StructuredEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.StructuredEventProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 profile_event_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_profile_event_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &profile_event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 event_name_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_event_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &event_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metrics.StructuredEventProto.Metric metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.StructuredEventProto.EventType event_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::StructuredEventProto_EventType_IsValid(value)) {
            set_event_type(static_cast< ::metrics::StructuredEventProto_EventType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.StructuredEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.StructuredEventProto)
  return false;
#undef DO_
}

void StructuredEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.StructuredEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 profile_event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->profile_event_id(), output);
  }

  // optional fixed64 event_name_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->event_name_hash(), output);
  }

  // repeated .metrics.StructuredEventProto.Metric metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->metrics(static_cast<int>(i)), output);
  }

  // optional .metrics.StructuredEventProto.EventType event_type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->event_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.StructuredEventProto)
}

::google::protobuf::uint8* StructuredEventProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.StructuredEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 profile_event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->profile_event_id(), target);
  }

  // optional fixed64 event_name_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->event_name_hash(), target);
  }

  // repeated .metrics.StructuredEventProto.Metric metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  // optional .metrics.StructuredEventProto.EventType event_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->event_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.StructuredEventProto)
  return target;
}

size_t StructuredEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.StructuredEventProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.StructuredEventProto.Metric metrics = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metrics(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 profile_event_id = 1;
    if (has_profile_event_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 event_name_hash = 2;
    if (has_event_name_hash()) {
      total_size += 1 + 8;
    }

    // optional .metrics.StructuredEventProto.EventType event_type = 4;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructuredEventProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.StructuredEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StructuredEventProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructuredEventProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.StructuredEventProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.StructuredEventProto)
    MergeFrom(*source);
  }
}

void StructuredEventProto::MergeFrom(const StructuredEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.StructuredEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      profile_event_id_ = from.profile_event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_name_hash_ = from.event_name_hash_;
    }
    if (cached_has_bits & 0x00000004u) {
      event_type_ = from.event_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StructuredEventProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.StructuredEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructuredEventProto::CopyFrom(const StructuredEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.StructuredEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructuredEventProto::IsInitialized() const {
  return true;
}

void StructuredEventProto::Swap(StructuredEventProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructuredEventProto::InternalSwap(StructuredEventProto* other) {
  using std::swap;
  metrics_.InternalSwap(&other->metrics_);
  swap(profile_event_id_, other->profile_event_id_);
  swap(event_name_hash_, other->event_name_hash_);
  swap(event_type_, other->event_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructuredEventProto::GetMetadata() const {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructuredEventProto

// optional fixed64 profile_event_id = 1;
bool StructuredEventProto::has_profile_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StructuredEventProto::set_has_profile_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
void StructuredEventProto::clear_has_profile_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void StructuredEventProto::clear_profile_event_id() {
  profile_event_id_ = GOOGLE_ULONGLONG(0);
  clear_has_profile_event_id();
}
::google::protobuf::uint64 StructuredEventProto::profile_event_id() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.profile_event_id)
  return profile_event_id_;
}
void StructuredEventProto::set_profile_event_id(::google::protobuf::uint64 value) {
  set_has_profile_event_id();
  profile_event_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.profile_event_id)
}

// optional fixed64 event_name_hash = 2;
bool StructuredEventProto::has_event_name_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StructuredEventProto::set_has_event_name_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void StructuredEventProto::clear_has_event_name_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void StructuredEventProto::clear_event_name_hash() {
  event_name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_event_name_hash();
}
::google::protobuf::uint64 StructuredEventProto::event_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.event_name_hash)
  return event_name_hash_;
}
void StructuredEventProto::set_event_name_hash(::google::protobuf::uint64 value) {
  set_has_event_name_hash();
  event_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.event_name_hash)
}

// repeated .metrics.StructuredEventProto.Metric metrics = 3;
int StructuredEventProto::metrics_size() const {
  return metrics_.size();
}
void StructuredEventProto::clear_metrics() {
  metrics_.Clear();
}
const ::metrics::StructuredEventProto_Metric& StructuredEventProto::metrics(int index) const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.metrics)
  return metrics_.Get(index);
}
::metrics::StructuredEventProto_Metric* StructuredEventProto::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.StructuredEventProto.metrics)
  return metrics_.Mutable(index);
}
::metrics::StructuredEventProto_Metric* StructuredEventProto::add_metrics() {
  // @@protoc_insertion_point(field_add:metrics.StructuredEventProto.metrics)
  return metrics_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >*
StructuredEventProto::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:metrics.StructuredEventProto.metrics)
  return &metrics_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >&
StructuredEventProto::metrics() const {
  // @@protoc_insertion_point(field_list:metrics.StructuredEventProto.metrics)
  return metrics_;
}

// optional .metrics.StructuredEventProto.EventType event_type = 4;
bool StructuredEventProto::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StructuredEventProto::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
void StructuredEventProto::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void StructuredEventProto::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
::metrics::StructuredEventProto_EventType StructuredEventProto::event_type() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.event_type)
  return static_cast< ::metrics::StructuredEventProto_EventType >(event_type_);
}
void StructuredEventProto::set_event_type(::metrics::StructuredEventProto_EventType value) {
  assert(::metrics::StructuredEventProto_EventType_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.event_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructuredDataProto::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructuredDataProto::StructuredDataProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_structured_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.StructuredDataProto)
}
StructuredDataProto::StructuredDataProto(const StructuredDataProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metrics.StructuredDataProto)
}

void StructuredDataProto::SharedCtor() {
  _cached_size_ = 0;
}

StructuredDataProto::~StructuredDataProto() {
  // @@protoc_insertion_point(destructor:metrics.StructuredDataProto)
  SharedDtor();
}

void StructuredDataProto::SharedDtor() {
}

void StructuredDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructuredDataProto::descriptor() {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StructuredDataProto& StructuredDataProto::default_instance() {
  protobuf_structured_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructuredDataProto* StructuredDataProto::New(::google::protobuf::Arena* arena) const {
  StructuredDataProto* n = new StructuredDataProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructuredDataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.StructuredDataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StructuredDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.StructuredDataProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metrics.StructuredEventProto events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.StructuredDataProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.StructuredDataProto)
  return false;
#undef DO_
}

void StructuredDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.StructuredDataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.StructuredEventProto events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->events(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.StructuredDataProto)
}

::google::protobuf::uint8* StructuredDataProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.StructuredDataProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metrics.StructuredEventProto events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->events(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.StructuredDataProto)
  return target;
}

size_t StructuredDataProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.StructuredDataProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .metrics.StructuredEventProto events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructuredDataProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.StructuredDataProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StructuredDataProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructuredDataProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.StructuredDataProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.StructuredDataProto)
    MergeFrom(*source);
  }
}

void StructuredDataProto::MergeFrom(const StructuredDataProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.StructuredDataProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void StructuredDataProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.StructuredDataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructuredDataProto::CopyFrom(const StructuredDataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.StructuredDataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructuredDataProto::IsInitialized() const {
  return true;
}

void StructuredDataProto::Swap(StructuredDataProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructuredDataProto::InternalSwap(StructuredDataProto* other) {
  using std::swap;
  events_.InternalSwap(&other->events_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructuredDataProto::GetMetadata() const {
  protobuf_structured_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_structured_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructuredDataProto

// repeated .metrics.StructuredEventProto events = 1;
int StructuredDataProto::events_size() const {
  return events_.size();
}
void StructuredDataProto::clear_events() {
  events_.Clear();
}
const ::metrics::StructuredEventProto& StructuredDataProto::events(int index) const {
  // @@protoc_insertion_point(field_get:metrics.StructuredDataProto.events)
  return events_.Get(index);
}
::metrics::StructuredEventProto* StructuredDataProto::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.StructuredDataProto.events)
  return events_.Mutable(index);
}
::metrics::StructuredEventProto* StructuredDataProto::add_events() {
  // @@protoc_insertion_point(field_add:metrics.StructuredDataProto.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::metrics::StructuredEventProto >*
StructuredDataProto::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:metrics.StructuredDataProto.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::metrics::StructuredEventProto >&
StructuredDataProto::events() const {
  // @@protoc_insertion_point(field_list:metrics.StructuredDataProto.events)
  return events_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
