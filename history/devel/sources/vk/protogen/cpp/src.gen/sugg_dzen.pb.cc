// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_dzen.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sugg_dzen.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
namespace suggests {
namespace dzen {
class IdxQuery_VariantDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery_Variant>
     _instance;
} _IdxQuery_Variant_default_instance_;
class IdxQuery_NavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery_Navig>
     _instance;
} _IdxQuery_Navig_default_instance_;
class IdxQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery>
     _instance;
} _IdxQuery_default_instance_;
class IdxNavigDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxNavigData>
     _instance;
} _IdxNavigData_default_instance_;
class StorageNavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageNavig>
     _instance;
} _StorageNavig_default_instance_;
class StorageQueryFeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageQueryFeatures>
     _instance;
} _StorageQueryFeatures_default_instance_;
class StorageQueryNavigFeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageQueryNavigFeatures>
     _instance;
} _StorageQueryNavigFeatures_default_instance_;
class ResponseItem_Navig_ItemNavigFeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem_Navig_ItemNavigFeatures>
     _instance;
} _ResponseItem_Navig_ItemNavigFeatures_default_instance_;
class ResponseItem_NavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem_Navig>
     _instance;
} _ResponseItem_Navig_default_instance_;
class ResponseItem_FeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem_Features>
     _instance;
} _ResponseItem_Features_default_instance_;
class ResponseItem_MatchedPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem_MatchedPair>
     _instance;
} _ResponseItem_MatchedPair_default_instance_;
class ResponseItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem>
     _instance;
} _ResponseItem_default_instance_;
class ResponseNavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseNavig>
     _instance;
} _ResponseNavig_default_instance_;
class Response_TermsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Response_Terms>
     _instance;
} _Response_Terms_default_instance_;
class ResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Response>
     _instance;
} _Response_default_instance_;

namespace protobuf_sugg_5fdzen_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, click_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Navig, count_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, count_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, glue_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, variants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, navigs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, click_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, nid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, publisher_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, count_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, nid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryNavigFeatures, count_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig_ItemNavigFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig_ItemNavigFeatures, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig_ItemNavigFeatures, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig_ItemNavigFeatures, uniq_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Navig, features_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Features, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Features, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Features, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_Features, uniq_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_MatchedPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_MatchedPair, begin_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem_MatchedPair, end_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, text_marked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, navigs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, matched_ranges_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNavig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNavig, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNavig, prob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Terms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Terms, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, qid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, navigs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(IdxQuery_Variant)},
  { 8, -1, sizeof(IdxQuery_Navig)},
  { 18, -1, sizeof(IdxQuery)},
  { 31, -1, sizeof(IdxNavigData)},
  { 37, -1, sizeof(StorageNavig)},
  { 44, -1, sizeof(StorageQueryFeatures)},
  { 54, -1, sizeof(StorageQueryNavigFeatures)},
  { 65, -1, sizeof(ResponseItem_Navig_ItemNavigFeatures)},
  { 73, -1, sizeof(ResponseItem_Navig)},
  { 80, -1, sizeof(ResponseItem_Features)},
  { 88, -1, sizeof(ResponseItem_MatchedPair)},
  { 95, -1, sizeof(ResponseItem)},
  { 105, -1, sizeof(ResponseNavig)},
  { 112, -1, sizeof(Response_Terms)},
  { 118, -1, sizeof(Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_Variant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_Navig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxNavigData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageNavig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageQueryFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageQueryNavigFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_Navig_ItemNavigFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_Navig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_Features_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_MatchedPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseNavig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_Terms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sugg_dzen.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gogo::protobuf_options_2eproto::InitDefaults();
  _IdxQuery_Variant_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_Variant_default_instance_);_IdxQuery_Navig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_Navig_default_instance_);_IdxQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_default_instance_);_IdxNavigData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxNavigData_default_instance_);_StorageNavig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageNavig_default_instance_);_StorageQueryFeatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageQueryFeatures_default_instance_);_StorageQueryNavigFeatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageQueryNavigFeatures_default_instance_);_ResponseItem_Navig_ItemNavigFeatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_Navig_ItemNavigFeatures_default_instance_);_ResponseItem_Navig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_Navig_default_instance_);_ResponseItem_Features_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_Features_default_instance_);_ResponseItem_MatchedPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_MatchedPair_default_instance_);_ResponseItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_default_instance_);_ResponseNavig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseNavig_default_instance_);_Response_Terms_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Response_Terms_default_instance_);_Response_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Response_default_instance_);_ResponseItem_Navig_default_instance_._instance.get_mutable()->features_ = const_cast< ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures*>(
      ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures::internal_default_instance());
  _ResponseItem_default_instance_._instance.get_mutable()->features_ = const_cast< ::pb::suggests::dzen::ResponseItem_Features*>(
      ::pb::suggests::dzen::ResponseItem_Features::internal_default_instance());
  _Response_default_instance_._instance.get_mutable()->terms_ = const_cast< ::pb::suggests::dzen::Response_Terms*>(
      ::pb::suggests::dzen::Response_Terms::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017sugg_dzen.proto\022\020pb.suggests.dzen\032\ropt"
      "ions.proto\"\307\004\n\010IdxQuery\022\032\n\005query\030\001 \001(\tB\013"
      "\222\265\030\007\n\005query\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n"
      "\007uniq_1d\030\003 \001(\rB\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\004"
      " \001(\rB\013\222\265\030\007\n\005count\022 \n\010count_1d\030\005 \001(\rB\016\222\265\030"
      "\n\n\010count_1d\022 \n\010glue_ids\030\006 \003(\005B\016\222\265\030\n\n\010glu"
      "e_ids\022D\n\010variants\030\007 \003(\0132\".pb.suggests.dz"
      "en.IdxQuery.VariantB\016\222\265\030\n\n\010variants\022>\n\006n"
      "avigs\030\010 \003(\0132 .pb.suggests.dzen.IdxQuery."
      "NavigB\014\222\265\030\010\n\006navigs\032[\n\007Variant\022\032\n\005query\030"
      "\001 \001(\tB\013\222\265\030\007\n\005query\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004"
      "uniq\022\032\n\005flags\030\003 \001(\rB\013\222\265\030\007\n\005flags\032\241\001\n\005Nav"
      "ig\022 \n\010click_id\030\001 \001(\tB\016\222\265\030\n\n\010click_id\022\030\n\004"
      "uniq\030\004 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n\007uniq_1d\030\005 \001(\rB"
      "\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\006 \001(\rB\013\222\265\030\007\n\005cou"
      "nt\022 \n\010count_1d\030\007 \001(\rB\016\222\265\030\n\n\010count_1d\"0\n\014"
      "IdxNavigData\022 \n\010click_id\030\001 \001(\tB\016\222\265\030\n\n\010cl"
      "ick_id\"E\n\014StorageNavig\022\013\n\003nid\030\001 \001(\004\022(\n\014p"
      "ublisher_id\030\002 \001(\tB\022\222\265\030\016\n\014publisher_id\"\235\001"
      "\n\024StorageQueryFeatures\022\r\n\005query\030\001 \001(\t\022\030\n"
      "\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n\007uniq_1d\030\003 \001(\r"
      "B\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\004 \001(\rB\013\222\265\030\007\n\005co"
      "unt\022 \n\010count_1d\030\005 \001(\rB\016\222\265\030\n\n\010count_1d\"\257\001"
      "\n\031StorageQueryNavigFeatures\022\r\n\005query\030\001 \001"
      "(\t\022\013\n\003nid\030\002 \001(\004\022\030\n\004uniq\030\003 \001(\rB\n\222\265\030\006\n\004uni"
      "q\022\036\n\007uniq_1d\030\004 \001(\rB\r\222\265\030\t\n\007uniq_1d\022\032\n\005cou"
      "nt\030\005 \001(\rB\013\222\265\030\007\n\005count\022 \n\010count_1d\030\006 \001(\rB"
      "\016\222\265\030\n\n\010count_1d\"\320\005\n\014ResponseItem\022\030\n\004text"
      "\030\001 \001(\tB\n\222\265\030\006\n\004text\022%\n\013text_marked\030\002 \001(\tB"
      "\020\222\265\030\014\n\ntextMarked\022I\n\010features\030\003 \001(\0132\'.pb"
      ".suggests.dzen.ResponseItem.FeaturesB\016\222\265"
      "\030\n\n\010features\022B\n\006navigs\030\004 \003(\0132$.pb.sugges"
      "ts.dzen.ResponseItem.NavigB\014\222\265\030\010\n\006navigs"
      "\022X\n\016matched_ranges\030\005 \003(\0132*.pb.suggests.d"
      "zen.ResponseItem.MatchedPairB\024\222\265\030\020\n\016matc"
      "hed_ranges\032\342\001\n\005Navig\022\024\n\002id\030\001 \001(\tB\010\222\265\030\004\n\002"
      "id\022X\n\010features\030\002 \001(\01326.pb.suggests.dzen."
      "ResponseItem.Navig.ItemNavigFeaturesB\016\222\265"
      "\030\n\n\010features\032i\n\021ItemNavigFeatures\022\032\n\005cou"
      "nt\030\001 \001(\rB\013\222\265\030\007\n\005count\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030"
      "\006\n\004uniq\022\036\n\007uniq_1d\030\003 \001(\rB\r\222\265\030\t\n\007uniq_1d\032"
      "`\n\010Features\022\032\n\005count\030\001 \001(\rB\013\222\265\030\007\n\005count\022"
      "\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n\007uniq_1d\030\003 \001"
      "(\rB\r\222\265\030\t\n\007uniq_1d\032O\n\013MatchedPair\022 \n\tbegi"
      "n_pos\030\001 \001(\rB\r\222\265\030\003\n\001l\222\265\030\002\020\001\022\036\n\007end_pos\030\002 "
      "\001(\rB\r\222\265\030\003\n\001r\222\265\030\002\020\001\"\?\n\rResponseNavig\022\024\n\002i"
      "d\030\001 \001(\tB\010\222\265\030\004\n\002id\022\030\n\004prob\030\002 \001(\001B\n\222\265\030\006\n\004p"
      "rob\"\200\002\n\010Response\022\026\n\003qid\030\001 \001(\tB\t\222\265\030\005\n\003qid"
      "\022<\n\005terms\030\002 \001(\0132 .pb.suggests.dzen.Respo"
      "nse.TermsB\013\222\265\030\007\n\005terms\022:\n\005items\030\003 \003(\0132\036."
      "pb.suggests.dzen.ResponseItemB\013\222\265\030\007\n\005ite"
      "ms\022=\n\006navigs\030\004 \003(\0132\037.pb.suggests.dzen.Re"
      "sponseNavigB\014\222\265\030\010\n\006navigs\032#\n\005Terms\022\032\n\005qu"
      "ery\030\001 \001(\tB\013\222\265\030\007\n\005queryb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2150);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sugg_dzen.proto", &protobuf_RegisterTypes);
  ::gogo::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sugg_5fdzen_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery_Variant::kQueryFieldNumber;
const int IdxQuery_Variant::kUniqFieldNumber;
const int IdxQuery_Variant::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery_Variant::IdxQuery_Variant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.IdxQuery.Variant)
}
IdxQuery_Variant::IdxQuery_Variant(const IdxQuery_Variant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.IdxQuery.Variant)
}

void IdxQuery_Variant::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  _cached_size_ = 0;
}

IdxQuery_Variant::~IdxQuery_Variant() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.IdxQuery.Variant)
  SharedDtor();
}

void IdxQuery_Variant::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery_Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery_Variant::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery_Variant& IdxQuery_Variant::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery_Variant* IdxQuery_Variant::New(::google::protobuf::Arena* arena) const {
  IdxQuery_Variant* n = new IdxQuery_Variant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery_Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool IdxQuery_Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.IdxQuery.Variant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.IdxQuery.Variant.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.IdxQuery.Variant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.IdxQuery.Variant)
  return false;
#undef DO_
}

void IdxQuery_Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.Variant.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.IdxQuery.Variant)
}

::google::protobuf::uint8* IdxQuery_Variant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.Variant.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.IdxQuery.Variant)
  return target;
}

size_t IdxQuery_Variant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.IdxQuery.Variant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery_Variant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.IdxQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery_Variant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery_Variant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.IdxQuery.Variant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.IdxQuery.Variant)
    MergeFrom(*source);
  }
}

void IdxQuery_Variant::MergeFrom(const IdxQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.IdxQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void IdxQuery_Variant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.IdxQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery_Variant::CopyFrom(const IdxQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.IdxQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery_Variant::IsInitialized() const {
  return true;
}

void IdxQuery_Variant::Swap(IdxQuery_Variant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery_Variant::InternalSwap(IdxQuery_Variant* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery_Variant::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery_Variant

// string query = 1 [(.gogo.json) = {
void IdxQuery_Variant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery_Variant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.query)
  return query_.GetNoArena();
}
void IdxQuery_Variant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.query)
}
#if LANG_CXX11
void IdxQuery_Variant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.Variant.query)
}
#endif
void IdxQuery_Variant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.Variant.query)
}
void IdxQuery_Variant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.Variant.query)
}
::std::string* IdxQuery_Variant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.Variant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery_Variant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.Variant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery_Variant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.Variant.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void IdxQuery_Variant::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Variant::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.uniq)
  return uniq_;
}
void IdxQuery_Variant::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.uniq)
}

// uint32 flags = 3 [(.gogo.json) = {
void IdxQuery_Variant::clear_flags() {
  flags_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.flags)
  return flags_;
}
void IdxQuery_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery_Navig::kClickIdFieldNumber;
const int IdxQuery_Navig::kUniqFieldNumber;
const int IdxQuery_Navig::kUniq1DFieldNumber;
const int IdxQuery_Navig::kCountFieldNumber;
const int IdxQuery_Navig::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery_Navig::IdxQuery_Navig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.IdxQuery.Navig)
}
IdxQuery_Navig::IdxQuery_Navig(const IdxQuery_Navig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  click_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.click_id().size() > 0) {
    click_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.click_id_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.IdxQuery.Navig)
}

void IdxQuery_Navig::SharedCtor() {
  click_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

IdxQuery_Navig::~IdxQuery_Navig() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.IdxQuery.Navig)
  SharedDtor();
}

void IdxQuery_Navig::SharedDtor() {
  click_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery_Navig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery_Navig::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery_Navig& IdxQuery_Navig::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery_Navig* IdxQuery_Navig::New(::google::protobuf::Arena* arena) const {
  IdxQuery_Navig* n = new IdxQuery_Navig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery_Navig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.IdxQuery.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool IdxQuery_Navig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.IdxQuery.Navig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string click_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_click_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->click_id().data(), static_cast<int>(this->click_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.IdxQuery.Navig.click_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 7 [(.gogo.json) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.IdxQuery.Navig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.IdxQuery.Navig)
  return false;
#undef DO_
}

void IdxQuery_Navig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.IdxQuery.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->click_id().data(), static_cast<int>(this->click_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.Navig.click_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->click_id(), output);
  }

  // uint32 uniq = 4 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uniq(), output);
  }

  // uint32 uniq_1d = 5 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uniq_1d(), output);
  }

  // uint32 count = 6 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->count(), output);
  }

  // uint32 count_1d = 7 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.IdxQuery.Navig)
}

::google::protobuf::uint8* IdxQuery_Navig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.IdxQuery.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->click_id().data(), static_cast<int>(this->click_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.Navig.click_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->click_id(), target);
  }

  // uint32 uniq = 4 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uniq(), target);
  }

  // uint32 uniq_1d = 5 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uniq_1d(), target);
  }

  // uint32 count = 6 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->count(), target);
  }

  // uint32 count_1d = 7 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.IdxQuery.Navig)
  return target;
}

size_t IdxQuery_Navig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.IdxQuery.Navig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->click_id());
  }

  // uint32 uniq = 4 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 5 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 6 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 7 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery_Navig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.IdxQuery.Navig)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery_Navig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery_Navig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.IdxQuery.Navig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.IdxQuery.Navig)
    MergeFrom(*source);
  }
}

void IdxQuery_Navig::MergeFrom(const IdxQuery_Navig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.IdxQuery.Navig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.click_id().size() > 0) {

    click_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.click_id_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void IdxQuery_Navig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.IdxQuery.Navig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery_Navig::CopyFrom(const IdxQuery_Navig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.IdxQuery.Navig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery_Navig::IsInitialized() const {
  return true;
}

void IdxQuery_Navig::Swap(IdxQuery_Navig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery_Navig::InternalSwap(IdxQuery_Navig* other) {
  using std::swap;
  click_id_.Swap(&other->click_id_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery_Navig::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery_Navig

// string click_id = 1 [(.gogo.json) = {
void IdxQuery_Navig::clear_click_id() {
  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery_Navig::click_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.click_id)
  return click_id_.GetNoArena();
}
void IdxQuery_Navig::set_click_id(const ::std::string& value) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
#if LANG_CXX11
void IdxQuery_Navig::set_click_id(::std::string&& value) {
  
  click_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
#endif
void IdxQuery_Navig::set_click_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
void IdxQuery_Navig::set_click_id(const char* value, size_t size) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
::std::string* IdxQuery_Navig::mutable_click_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.Navig.click_id)
  return click_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery_Navig::release_click_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.Navig.click_id)
  
  return click_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery_Navig::set_allocated_click_id(::std::string* click_id) {
  if (click_id != NULL) {
    
  } else {
    
  }
  click_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.Navig.click_id)
}

// uint32 uniq = 4 [(.gogo.json) = {
void IdxQuery_Navig::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Navig::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.uniq)
  return uniq_;
}
void IdxQuery_Navig::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.uniq)
}

// uint32 uniq_1d = 5 [(.gogo.json) = {
void IdxQuery_Navig::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Navig::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.uniq_1d)
  return uniq_1d_;
}
void IdxQuery_Navig::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.uniq_1d)
}

// uint32 count = 6 [(.gogo.json) = {
void IdxQuery_Navig::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Navig::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.count)
  return count_;
}
void IdxQuery_Navig::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.count)
}

// uint32 count_1d = 7 [(.gogo.json) = {
void IdxQuery_Navig::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Navig::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.count_1d)
  return count_1d_;
}
void IdxQuery_Navig::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery::kQueryFieldNumber;
const int IdxQuery::kUniqFieldNumber;
const int IdxQuery::kUniq1DFieldNumber;
const int IdxQuery::kCountFieldNumber;
const int IdxQuery::kCount1DFieldNumber;
const int IdxQuery::kGlueIdsFieldNumber;
const int IdxQuery::kVariantsFieldNumber;
const int IdxQuery::kNavigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery::IdxQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.IdxQuery)
}
IdxQuery::IdxQuery(const IdxQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      glue_ids_(from.glue_ids_),
      variants_(from.variants_),
      navigs_(from.navigs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.IdxQuery)
}

void IdxQuery::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

IdxQuery::~IdxQuery() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.IdxQuery)
  SharedDtor();
}

void IdxQuery::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery& IdxQuery::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery* IdxQuery::New(::google::protobuf::Arena* arena) const {
  IdxQuery* n = new IdxQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  glue_ids_.Clear();
  variants_.Clear();
  navigs_.Clear();
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool IdxQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.IdxQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.IdxQuery.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 glue_ids = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_glue_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_glue_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variants()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_navigs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.IdxQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.IdxQuery)
  return false;
#undef DO_
}

void IdxQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count_1d(), output);
  }

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _glue_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->glue_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->glue_ids(i), output);
  }

  // repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->variants(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->navigs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.IdxQuery)
}

::google::protobuf::uint8* IdxQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxQuery.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count_1d(), target);
  }

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _glue_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->glue_ids_, target);
  }

  // repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->variants(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->navigs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.IdxQuery)
  return target;
}

size_t IdxQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.IdxQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->glue_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _glue_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->variants_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variants(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->navigs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigs(static_cast<int>(i)));
    }
  }

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.IdxQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.IdxQuery)
    MergeFrom(*source);
  }
}

void IdxQuery::MergeFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  glue_ids_.MergeFrom(from.glue_ids_);
  variants_.MergeFrom(from.variants_);
  navigs_.MergeFrom(from.navigs_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void IdxQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery::CopyFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery::IsInitialized() const {
  return true;
}

void IdxQuery::Swap(IdxQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery::InternalSwap(IdxQuery* other) {
  using std::swap;
  glue_ids_.InternalSwap(&other->glue_ids_);
  variants_.InternalSwap(&other->variants_);
  navigs_.InternalSwap(&other->navigs_);
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery

// string query = 1 [(.gogo.json) = {
void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.query)
  return query_.GetNoArena();
}
void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.query)
}
#if LANG_CXX11
void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.query)
}
#endif
void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.query)
}
void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.query)
}
::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void IdxQuery::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.uniq)
  return uniq_;
}
void IdxQuery::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void IdxQuery::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.uniq_1d)
  return uniq_1d_;
}
void IdxQuery::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
void IdxQuery::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 IdxQuery::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.count)
  return count_;
}
void IdxQuery::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
void IdxQuery::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.count_1d)
  return count_1d_;
}
void IdxQuery::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.count_1d)
}

// repeated int32 glue_ids = 6 [(.gogo.json) = {
int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
::google::protobuf::int32 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
void IdxQuery::set_glue_ids(int index, ::google::protobuf::int32 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.glue_ids)
}
void IdxQuery::add_glue_ids(::google::protobuf::int32 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.glue_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.glue_ids)
  return glue_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.glue_ids)
  return &glue_ids_;
}

// repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
int IdxQuery::variants_size() const {
  return variants_.size();
}
void IdxQuery::clear_variants() {
  variants_.Clear();
}
const ::pb::suggests::dzen::IdxQuery_Variant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Get(index);
}
::pb::suggests::dzen::IdxQuery_Variant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Mutable(index);
}
::pb::suggests::dzen::IdxQuery_Variant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.variants)
  return &variants_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
int IdxQuery::navigs_size() const {
  return navigs_.size();
}
void IdxQuery::clear_navigs() {
  navigs_.Clear();
}
const ::pb::suggests::dzen::IdxQuery_Navig& IdxQuery::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Get(index);
}
::pb::suggests::dzen::IdxQuery_Navig* IdxQuery::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Mutable(index);
}
::pb::suggests::dzen::IdxQuery_Navig* IdxQuery::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >*
IdxQuery::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.navigs)
  return &navigs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >&
IdxQuery::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxNavigData::kClickIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxNavigData::IdxNavigData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.IdxNavigData)
}
IdxNavigData::IdxNavigData(const IdxNavigData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  click_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.click_id().size() > 0) {
    click_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.click_id_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.IdxNavigData)
}

void IdxNavigData::SharedCtor() {
  click_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IdxNavigData::~IdxNavigData() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.IdxNavigData)
  SharedDtor();
}

void IdxNavigData::SharedDtor() {
  click_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxNavigData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxNavigData::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxNavigData& IdxNavigData::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxNavigData* IdxNavigData::New(::google::protobuf::Arena* arena) const {
  IdxNavigData* n = new IdxNavigData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxNavigData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IdxNavigData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.IdxNavigData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string click_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_click_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->click_id().data(), static_cast<int>(this->click_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.IdxNavigData.click_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.IdxNavigData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.IdxNavigData)
  return false;
#undef DO_
}

void IdxNavigData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->click_id().data(), static_cast<int>(this->click_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxNavigData.click_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->click_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.IdxNavigData)
}

::google::protobuf::uint8* IdxNavigData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->click_id().data(), static_cast<int>(this->click_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.IdxNavigData.click_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->click_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.IdxNavigData)
  return target;
}

size_t IdxNavigData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.IdxNavigData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string click_id = 1 [(.gogo.json) = {
  if (this->click_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->click_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxNavigData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.IdxNavigData)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxNavigData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxNavigData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.IdxNavigData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.IdxNavigData)
    MergeFrom(*source);
  }
}

void IdxNavigData::MergeFrom(const IdxNavigData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.IdxNavigData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.click_id().size() > 0) {

    click_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.click_id_);
  }
}

void IdxNavigData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.IdxNavigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxNavigData::CopyFrom(const IdxNavigData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.IdxNavigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxNavigData::IsInitialized() const {
  return true;
}

void IdxNavigData::Swap(IdxNavigData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxNavigData::InternalSwap(IdxNavigData* other) {
  using std::swap;
  click_id_.Swap(&other->click_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxNavigData::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxNavigData

// string click_id = 1 [(.gogo.json) = {
void IdxNavigData::clear_click_id() {
  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavigData::click_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxNavigData.click_id)
  return click_id_.GetNoArena();
}
void IdxNavigData::set_click_id(const ::std::string& value) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxNavigData.click_id)
}
#if LANG_CXX11
void IdxNavigData::set_click_id(::std::string&& value) {
  
  click_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxNavigData.click_id)
}
#endif
void IdxNavigData::set_click_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxNavigData.click_id)
}
void IdxNavigData::set_click_id(const char* value, size_t size) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxNavigData.click_id)
}
::std::string* IdxNavigData::mutable_click_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxNavigData.click_id)
  return click_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavigData::release_click_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxNavigData.click_id)
  
  return click_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavigData::set_allocated_click_id(::std::string* click_id) {
  if (click_id != NULL) {
    
  } else {
    
  }
  click_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxNavigData.click_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageNavig::kNidFieldNumber;
const int StorageNavig::kPublisherIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageNavig::StorageNavig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.StorageNavig)
}
StorageNavig::StorageNavig(const StorageNavig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publisher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publisher_id().size() > 0) {
    publisher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_id_);
  }
  nid_ = from.nid_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.StorageNavig)
}

void StorageNavig::SharedCtor() {
  publisher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

StorageNavig::~StorageNavig() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.StorageNavig)
  SharedDtor();
}

void StorageNavig::SharedDtor() {
  publisher_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageNavig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageNavig::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageNavig& StorageNavig::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageNavig* StorageNavig::New(::google::protobuf::Arena* arena) const {
  StorageNavig* n = new StorageNavig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageNavig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool StorageNavig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.StorageNavig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 nid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string publisher_id = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publisher_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.StorageNavig.publisher_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.StorageNavig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.StorageNavig)
  return false;
#undef DO_
}

void StorageNavig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nid(), output);
  }

  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageNavig.publisher_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->publisher_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.StorageNavig)
}

::google::protobuf::uint8* StorageNavig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nid(), target);
  }

  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageNavig.publisher_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->publisher_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.StorageNavig)
  return target;
}

size_t StorageNavig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.StorageNavig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publisher_id());
  }

  // uint64 nid = 1;
  if (this->nid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageNavig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.StorageNavig)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageNavig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageNavig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.StorageNavig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.StorageNavig)
    MergeFrom(*source);
  }
}

void StorageNavig::MergeFrom(const StorageNavig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.StorageNavig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publisher_id().size() > 0) {

    publisher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_id_);
  }
  if (from.nid() != 0) {
    set_nid(from.nid());
  }
}

void StorageNavig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.StorageNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageNavig::CopyFrom(const StorageNavig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.StorageNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageNavig::IsInitialized() const {
  return true;
}

void StorageNavig::Swap(StorageNavig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageNavig::InternalSwap(StorageNavig* other) {
  using std::swap;
  publisher_id_.Swap(&other->publisher_id_);
  swap(nid_, other->nid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageNavig::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageNavig

// uint64 nid = 1;
void StorageNavig::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageNavig::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageNavig.nid)
  return nid_;
}
void StorageNavig::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageNavig.nid)
}

// string publisher_id = 2 [(.gogo.json) = {
void StorageNavig::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageNavig::publisher_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageNavig.publisher_id)
  return publisher_id_.GetNoArena();
}
void StorageNavig::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageNavig.publisher_id)
}
#if LANG_CXX11
void StorageNavig::set_publisher_id(::std::string&& value) {
  
  publisher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageNavig.publisher_id)
}
#endif
void StorageNavig::set_publisher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageNavig.publisher_id)
}
void StorageNavig::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageNavig.publisher_id)
}
::std::string* StorageNavig::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageNavig.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageNavig::release_publisher_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageNavig.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageNavig::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageNavig.publisher_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageQueryFeatures::kQueryFieldNumber;
const int StorageQueryFeatures::kUniqFieldNumber;
const int StorageQueryFeatures::kUniq1DFieldNumber;
const int StorageQueryFeatures::kCountFieldNumber;
const int StorageQueryFeatures::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageQueryFeatures::StorageQueryFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.StorageQueryFeatures)
}
StorageQueryFeatures::StorageQueryFeatures(const StorageQueryFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.StorageQueryFeatures)
}

void StorageQueryFeatures::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

StorageQueryFeatures::~StorageQueryFeatures() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.StorageQueryFeatures)
  SharedDtor();
}

void StorageQueryFeatures::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageQueryFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageQueryFeatures::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageQueryFeatures& StorageQueryFeatures::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageQueryFeatures* StorageQueryFeatures::New(::google::protobuf::Arena* arena) const {
  StorageQueryFeatures* n = new StorageQueryFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageQueryFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool StorageQueryFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.StorageQueryFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.StorageQueryFeatures.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.StorageQueryFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.StorageQueryFeatures)
  return false;
#undef DO_
}

void StorageQueryFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageQueryFeatures.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.StorageQueryFeatures)
}

::google::protobuf::uint8* StorageQueryFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageQueryFeatures.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.StorageQueryFeatures)
  return target;
}

size_t StorageQueryFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.StorageQueryFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageQueryFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.StorageQueryFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageQueryFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageQueryFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.StorageQueryFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.StorageQueryFeatures)
    MergeFrom(*source);
  }
}

void StorageQueryFeatures::MergeFrom(const StorageQueryFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.StorageQueryFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void StorageQueryFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.StorageQueryFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageQueryFeatures::CopyFrom(const StorageQueryFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.StorageQueryFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageQueryFeatures::IsInitialized() const {
  return true;
}

void StorageQueryFeatures::Swap(StorageQueryFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageQueryFeatures::InternalSwap(StorageQueryFeatures* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageQueryFeatures::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageQueryFeatures

// string query = 1;
void StorageQueryFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageQueryFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.query)
  return query_.GetNoArena();
}
void StorageQueryFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.query)
}
#if LANG_CXX11
void StorageQueryFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageQueryFeatures.query)
}
#endif
void StorageQueryFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageQueryFeatures.query)
}
void StorageQueryFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageQueryFeatures.query)
}
::std::string* StorageQueryFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageQueryFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageQueryFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageQueryFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageQueryFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageQueryFeatures.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void StorageQueryFeatures::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.uniq)
  return uniq_;
}
void StorageQueryFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void StorageQueryFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.uniq_1d)
  return uniq_1d_;
}
void StorageQueryFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
void StorageQueryFeatures::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.count)
  return count_;
}
void StorageQueryFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
void StorageQueryFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.count_1d)
  return count_1d_;
}
void StorageQueryFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageQueryNavigFeatures::kQueryFieldNumber;
const int StorageQueryNavigFeatures::kNidFieldNumber;
const int StorageQueryNavigFeatures::kUniqFieldNumber;
const int StorageQueryNavigFeatures::kUniq1DFieldNumber;
const int StorageQueryNavigFeatures::kCountFieldNumber;
const int StorageQueryNavigFeatures::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageQueryNavigFeatures::StorageQueryNavigFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.StorageQueryNavigFeatures)
}
StorageQueryNavigFeatures::StorageQueryNavigFeatures(const StorageQueryNavigFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&nid_, &from.nid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.StorageQueryNavigFeatures)
}

void StorageQueryNavigFeatures::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

StorageQueryNavigFeatures::~StorageQueryNavigFeatures() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.StorageQueryNavigFeatures)
  SharedDtor();
}

void StorageQueryNavigFeatures::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageQueryNavigFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageQueryNavigFeatures::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageQueryNavigFeatures& StorageQueryNavigFeatures::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageQueryNavigFeatures* StorageQueryNavigFeatures::New(::google::protobuf::Arena* arena) const {
  StorageQueryNavigFeatures* n = new StorageQueryNavigFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageQueryNavigFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool StorageQueryNavigFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.StorageQueryNavigFeatures.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.StorageQueryNavigFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.StorageQueryNavigFeatures)
  return false;
#undef DO_
}

void StorageQueryNavigFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageQueryNavigFeatures.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nid(), output);
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq(), output);
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uniq_1d(), output);
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.StorageQueryNavigFeatures)
}

::google::protobuf::uint8* StorageQueryNavigFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.StorageQueryNavigFeatures.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nid(), target);
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq(), target);
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uniq_1d(), target);
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.StorageQueryNavigFeatures)
  return target;
}

size_t StorageQueryNavigFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nid());
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageQueryNavigFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageQueryNavigFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageQueryNavigFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.StorageQueryNavigFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.StorageQueryNavigFeatures)
    MergeFrom(*source);
  }
}

void StorageQueryNavigFeatures::MergeFrom(const StorageQueryNavigFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.nid() != 0) {
    set_nid(from.nid());
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void StorageQueryNavigFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageQueryNavigFeatures::CopyFrom(const StorageQueryNavigFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.StorageQueryNavigFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageQueryNavigFeatures::IsInitialized() const {
  return true;
}

void StorageQueryNavigFeatures::Swap(StorageQueryNavigFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageQueryNavigFeatures::InternalSwap(StorageQueryNavigFeatures* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(nid_, other->nid_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageQueryNavigFeatures::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageQueryNavigFeatures

// string query = 1;
void StorageQueryNavigFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageQueryNavigFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  return query_.GetNoArena();
}
void StorageQueryNavigFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
#if LANG_CXX11
void StorageQueryNavigFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
#endif
void StorageQueryNavigFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
void StorageQueryNavigFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
::std::string* StorageQueryNavigFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageQueryNavigFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageQueryNavigFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}

// uint64 nid = 2;
void StorageQueryNavigFeatures::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageQueryNavigFeatures::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.nid)
  return nid_;
}
void StorageQueryNavigFeatures::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.nid)
}

// uint32 uniq = 3 [(.gogo.json) = {
void StorageQueryNavigFeatures::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 StorageQueryNavigFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.uniq)
  return uniq_;
}
void StorageQueryNavigFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.uniq)
}

// uint32 uniq_1d = 4 [(.gogo.json) = {
void StorageQueryNavigFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryNavigFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.uniq_1d)
  return uniq_1d_;
}
void StorageQueryNavigFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.uniq_1d)
}

// uint32 count = 5 [(.gogo.json) = {
void StorageQueryNavigFeatures::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 StorageQueryNavigFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.count)
  return count_;
}
void StorageQueryNavigFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.count)
}

// uint32 count_1d = 6 [(.gogo.json) = {
void StorageQueryNavigFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryNavigFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.count_1d)
  return count_1d_;
}
void StorageQueryNavigFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem_Navig_ItemNavigFeatures::kCountFieldNumber;
const int ResponseItem_Navig_ItemNavigFeatures::kUniqFieldNumber;
const int ResponseItem_Navig_ItemNavigFeatures::kUniq1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem_Navig_ItemNavigFeatures::ResponseItem_Navig_ItemNavigFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
}
ResponseItem_Navig_ItemNavigFeatures::ResponseItem_Navig_ItemNavigFeatures(const ResponseItem_Navig_ItemNavigFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&uniq_1d_) -
    reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
}

void ResponseItem_Navig_ItemNavigFeatures::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniq_1d_) -
      reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  _cached_size_ = 0;
}

ResponseItem_Navig_ItemNavigFeatures::~ResponseItem_Navig_ItemNavigFeatures() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  SharedDtor();
}

void ResponseItem_Navig_ItemNavigFeatures::SharedDtor() {
}

void ResponseItem_Navig_ItemNavigFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem_Navig_ItemNavigFeatures::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem_Navig_ItemNavigFeatures& ResponseItem_Navig_ItemNavigFeatures::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem_Navig_ItemNavigFeatures* ResponseItem_Navig_ItemNavigFeatures::New(::google::protobuf::Arena* arena) const {
  ResponseItem_Navig_ItemNavigFeatures* n = new ResponseItem_Navig_ItemNavigFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem_Navig_ItemNavigFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniq_1d_) -
      reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  _internal_metadata_.Clear();
}

bool ResponseItem_Navig_ItemNavigFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  return false;
#undef DO_
}

void ResponseItem_Navig_ItemNavigFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
}

::google::protobuf::uint8* ResponseItem_Navig_ItemNavigFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  return target;
}

size_t ResponseItem_Navig_ItemNavigFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem_Navig_ItemNavigFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem_Navig_ItemNavigFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem_Navig_ItemNavigFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
    MergeFrom(*source);
  }
}

void ResponseItem_Navig_ItemNavigFeatures::MergeFrom(const ResponseItem_Navig_ItemNavigFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
}

void ResponseItem_Navig_ItemNavigFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem_Navig_ItemNavigFeatures::CopyFrom(const ResponseItem_Navig_ItemNavigFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem_Navig_ItemNavigFeatures::IsInitialized() const {
  return true;
}

void ResponseItem_Navig_ItemNavigFeatures::Swap(ResponseItem_Navig_ItemNavigFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem_Navig_ItemNavigFeatures::InternalSwap(ResponseItem_Navig_ItemNavigFeatures* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem_Navig_ItemNavigFeatures::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem_Navig_ItemNavigFeatures

// uint32 count = 1 [(.gogo.json) = {
void ResponseItem_Navig_ItemNavigFeatures::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.count)
  return count_;
}
void ResponseItem_Navig_ItemNavigFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.count)
}

// uint32 uniq = 2 [(.gogo.json) = {
void ResponseItem_Navig_ItemNavigFeatures::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq)
  return uniq_;
}
void ResponseItem_Navig_ItemNavigFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void ResponseItem_Navig_ItemNavigFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq_1d)
  return uniq_1d_;
}
void ResponseItem_Navig_ItemNavigFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem_Navig::kIdFieldNumber;
const int ResponseItem_Navig::kFeaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem_Navig::ResponseItem_Navig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseItem.Navig)
}
ResponseItem_Navig::ResponseItem_Navig(const ResponseItem_Navig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_features()) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures(*from.features_);
  } else {
    features_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseItem.Navig)
}

void ResponseItem_Navig::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  features_ = NULL;
  _cached_size_ = 0;
}

ResponseItem_Navig::~ResponseItem_Navig() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseItem.Navig)
  SharedDtor();
}

void ResponseItem_Navig::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete features_;
}

void ResponseItem_Navig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem_Navig::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem_Navig& ResponseItem_Navig::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem_Navig* ResponseItem_Navig::New(::google::protobuf::Arena* arena) const {
  ResponseItem_Navig* n = new ResponseItem_Navig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem_Navig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseItem.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && features_ != NULL) {
    delete features_;
  }
  features_ = NULL;
  _internal_metadata_.Clear();
}

bool ResponseItem_Navig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseItem.Navig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.ResponseItem.Navig.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseItem.Navig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseItem.Navig)
  return false;
#undef DO_
}

void ResponseItem_Navig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseItem.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.Navig.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
  if (this->has_features()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->features_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseItem.Navig)
}

::google::protobuf::uint8* ResponseItem_Navig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseItem.Navig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.Navig.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
  if (this->has_features()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->features_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseItem.Navig)
  return target;
}

size_t ResponseItem_Navig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseItem.Navig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
  if (this->has_features()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->features_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem_Navig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseItem.Navig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem_Navig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem_Navig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseItem.Navig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseItem.Navig)
    MergeFrom(*source);
  }
}

void ResponseItem_Navig::MergeFrom(const ResponseItem_Navig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseItem.Navig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_features()) {
    mutable_features()->::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures::MergeFrom(from.features());
  }
}

void ResponseItem_Navig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseItem.Navig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem_Navig::CopyFrom(const ResponseItem_Navig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseItem.Navig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem_Navig::IsInitialized() const {
  return true;
}

void ResponseItem_Navig::Swap(ResponseItem_Navig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem_Navig::InternalSwap(ResponseItem_Navig* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(features_, other->features_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem_Navig::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem_Navig

// string id = 1 [(.gogo.json) = {
void ResponseItem_Navig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem_Navig::id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.id)
  return id_.GetNoArena();
}
void ResponseItem_Navig::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.id)
}
#if LANG_CXX11
void ResponseItem_Navig::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.Navig.id)
}
#endif
void ResponseItem_Navig::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.Navig.id)
}
void ResponseItem_Navig::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.Navig.id)
}
::std::string* ResponseItem_Navig::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.Navig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem_Navig::release_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.Navig.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem_Navig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.Navig.id)
}

// .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
bool ResponseItem_Navig::has_features() const {
  return this != internal_default_instance() && features_ != NULL;
}
void ResponseItem_Navig::clear_features() {
  if (GetArenaNoVirtual() == NULL && features_ != NULL) delete features_;
  features_ = NULL;
}
const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures& ResponseItem_Navig::features() const {
  const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* p = features_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.features)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures*>(
      &::pb::suggests::dzen::_ResponseItem_Navig_ItemNavigFeatures_default_instance_);
}
::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* ResponseItem_Navig::mutable_features() {
  
  if (features_ == NULL) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.Navig.features)
  return features_;
}
::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* ResponseItem_Navig::release_features() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.Navig.features)
  
  ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* temp = features_;
  features_ = NULL;
  return temp;
}
void ResponseItem_Navig::set_allocated_features(::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* features) {
  delete features_;
  features_ = features;
  if (features) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.Navig.features)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem_Features::kCountFieldNumber;
const int ResponseItem_Features::kUniqFieldNumber;
const int ResponseItem_Features::kUniq1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem_Features::ResponseItem_Features()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseItem.Features)
}
ResponseItem_Features::ResponseItem_Features(const ResponseItem_Features& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&uniq_1d_) -
    reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseItem.Features)
}

void ResponseItem_Features::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniq_1d_) -
      reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  _cached_size_ = 0;
}

ResponseItem_Features::~ResponseItem_Features() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseItem.Features)
  SharedDtor();
}

void ResponseItem_Features::SharedDtor() {
}

void ResponseItem_Features::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem_Features::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem_Features& ResponseItem_Features::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem_Features* ResponseItem_Features::New(::google::protobuf::Arena* arena) const {
  ResponseItem_Features* n = new ResponseItem_Features;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem_Features::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseItem.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniq_1d_) -
      reinterpret_cast<char*>(&count_)) + sizeof(uniq_1d_));
  _internal_metadata_.Clear();
}

bool ResponseItem_Features::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseItem.Features)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseItem.Features)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseItem.Features)
  return false;
#undef DO_
}

void ResponseItem_Features::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseItem.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseItem.Features)
}

::google::protobuf::uint8* ResponseItem_Features::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseItem.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseItem.Features)
  return target;
}

size_t ResponseItem_Features::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseItem.Features)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 count = 1 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem_Features::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseItem.Features)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem_Features* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem_Features>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseItem.Features)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseItem.Features)
    MergeFrom(*source);
  }
}

void ResponseItem_Features::MergeFrom(const ResponseItem_Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseItem.Features)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
}

void ResponseItem_Features::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseItem.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem_Features::CopyFrom(const ResponseItem_Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseItem.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem_Features::IsInitialized() const {
  return true;
}

void ResponseItem_Features::Swap(ResponseItem_Features* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem_Features::InternalSwap(ResponseItem_Features* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem_Features::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem_Features

// uint32 count = 1 [(.gogo.json) = {
void ResponseItem_Features::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Features::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.count)
  return count_;
}
void ResponseItem_Features::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.count)
}

// uint32 uniq = 2 [(.gogo.json) = {
void ResponseItem_Features::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Features::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.uniq)
  return uniq_;
}
void ResponseItem_Features::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void ResponseItem_Features::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 ResponseItem_Features::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.uniq_1d)
  return uniq_1d_;
}
void ResponseItem_Features::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.uniq_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem_MatchedPair::kBeginPosFieldNumber;
const int ResponseItem_MatchedPair::kEndPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem_MatchedPair::ResponseItem_MatchedPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseItem.MatchedPair)
}
ResponseItem_MatchedPair::ResponseItem_MatchedPair(const ResponseItem_MatchedPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&begin_pos_, &from.begin_pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_pos_) -
    reinterpret_cast<char*>(&begin_pos_)) + sizeof(end_pos_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseItem.MatchedPair)
}

void ResponseItem_MatchedPair::SharedCtor() {
  ::memset(&begin_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_pos_) -
      reinterpret_cast<char*>(&begin_pos_)) + sizeof(end_pos_));
  _cached_size_ = 0;
}

ResponseItem_MatchedPair::~ResponseItem_MatchedPair() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseItem.MatchedPair)
  SharedDtor();
}

void ResponseItem_MatchedPair::SharedDtor() {
}

void ResponseItem_MatchedPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem_MatchedPair::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem_MatchedPair& ResponseItem_MatchedPair::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem_MatchedPair* ResponseItem_MatchedPair::New(::google::protobuf::Arena* arena) const {
  ResponseItem_MatchedPair* n = new ResponseItem_MatchedPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem_MatchedPair::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&begin_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_pos_) -
      reinterpret_cast<char*>(&begin_pos_)) + sizeof(end_pos_));
  _internal_metadata_.Clear();
}

bool ResponseItem_MatchedPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 begin_pos = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_pos = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseItem.MatchedPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseItem.MatchedPair)
  return false;
#undef DO_
}

void ResponseItem_MatchedPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 begin_pos = 1 [(.gogo.json) = {
  if (this->begin_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->begin_pos(), output);
  }

  // uint32 end_pos = 2 [(.gogo.json) = {
  if (this->end_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->end_pos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseItem.MatchedPair)
}

::google::protobuf::uint8* ResponseItem_MatchedPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 begin_pos = 1 [(.gogo.json) = {
  if (this->begin_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->begin_pos(), target);
  }

  // uint32 end_pos = 2 [(.gogo.json) = {
  if (this->end_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->end_pos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseItem.MatchedPair)
  return target;
}

size_t ResponseItem_MatchedPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 begin_pos = 1 [(.gogo.json) = {
  if (this->begin_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_pos());
  }

  // uint32 end_pos = 2 [(.gogo.json) = {
  if (this->end_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem_MatchedPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem_MatchedPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem_MatchedPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseItem.MatchedPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseItem.MatchedPair)
    MergeFrom(*source);
  }
}

void ResponseItem_MatchedPair::MergeFrom(const ResponseItem_MatchedPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin_pos() != 0) {
    set_begin_pos(from.begin_pos());
  }
  if (from.end_pos() != 0) {
    set_end_pos(from.end_pos());
  }
}

void ResponseItem_MatchedPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem_MatchedPair::CopyFrom(const ResponseItem_MatchedPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseItem.MatchedPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem_MatchedPair::IsInitialized() const {
  return true;
}

void ResponseItem_MatchedPair::Swap(ResponseItem_MatchedPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem_MatchedPair::InternalSwap(ResponseItem_MatchedPair* other) {
  using std::swap;
  swap(begin_pos_, other->begin_pos_);
  swap(end_pos_, other->end_pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem_MatchedPair::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem_MatchedPair

// uint32 begin_pos = 1 [(.gogo.json) = {
void ResponseItem_MatchedPair::clear_begin_pos() {
  begin_pos_ = 0u;
}
::google::protobuf::uint32 ResponseItem_MatchedPair::begin_pos() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.MatchedPair.begin_pos)
  return begin_pos_;
}
void ResponseItem_MatchedPair::set_begin_pos(::google::protobuf::uint32 value) {
  
  begin_pos_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.MatchedPair.begin_pos)
}

// uint32 end_pos = 2 [(.gogo.json) = {
void ResponseItem_MatchedPair::clear_end_pos() {
  end_pos_ = 0u;
}
::google::protobuf::uint32 ResponseItem_MatchedPair::end_pos() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.MatchedPair.end_pos)
  return end_pos_;
}
void ResponseItem_MatchedPair::set_end_pos(::google::protobuf::uint32 value) {
  
  end_pos_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.MatchedPair.end_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem::kTextFieldNumber;
const int ResponseItem::kTextMarkedFieldNumber;
const int ResponseItem::kFeaturesFieldNumber;
const int ResponseItem::kNavigsFieldNumber;
const int ResponseItem::kMatchedRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem::ResponseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseItem)
}
ResponseItem::ResponseItem(const ResponseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      navigs_(from.navigs_),
      matched_ranges_(from.matched_ranges_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  text_marked_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text_marked().size() > 0) {
    text_marked_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_marked_);
  }
  if (from.has_features()) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Features(*from.features_);
  } else {
    features_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseItem)
}

void ResponseItem::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  features_ = NULL;
  _cached_size_ = 0;
}

ResponseItem::~ResponseItem() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseItem)
  SharedDtor();
}

void ResponseItem::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete features_;
}

void ResponseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem& ResponseItem::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem* ResponseItem::New(::google::protobuf::Arena* arena) const {
  ResponseItem* n = new ResponseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  navigs_.Clear();
  matched_ranges_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && features_ != NULL) {
    delete features_;
  }
  features_ = NULL;
  _internal_metadata_.Clear();
}

bool ResponseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.ResponseItem.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text_marked = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text_marked()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text_marked().data(), static_cast<int>(this->text_marked().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.ResponseItem.text_marked"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_navigs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matched_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseItem)
  return false;
#undef DO_
}

void ResponseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_marked().data(), static_cast<int>(this->text_marked().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.text_marked");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text_marked(), output);
  }

  // .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
  if (this->has_features()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->features_, output);
  }

  // repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->navigs(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->matched_ranges(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseItem)
}

::google::protobuf::uint8* ResponseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_marked().data(), static_cast<int>(this->text_marked().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseItem.text_marked");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text_marked(), target);
  }

  // .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
  if (this->has_features()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->features_, deterministic, target);
  }

  // repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->navigs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matched_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->matched_ranges(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseItem)
  return target;
}

size_t ResponseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->navigs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigs(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->matched_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matched_ranges(static_cast<int>(i)));
    }
  }

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text_marked());
  }

  // .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
  if (this->has_features()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->features_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseItem)
    MergeFrom(*source);
  }
}

void ResponseItem::MergeFrom(const ResponseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  navigs_.MergeFrom(from.navigs_);
  matched_ranges_.MergeFrom(from.matched_ranges_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.text_marked().size() > 0) {

    text_marked_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_marked_);
  }
  if (from.has_features()) {
    mutable_features()->::pb::suggests::dzen::ResponseItem_Features::MergeFrom(from.features());
  }
}

void ResponseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem::CopyFrom(const ResponseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem::IsInitialized() const {
  return true;
}

void ResponseItem::Swap(ResponseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem::InternalSwap(ResponseItem* other) {
  using std::swap;
  navigs_.InternalSwap(&other->navigs_);
  matched_ranges_.InternalSwap(&other->matched_ranges_);
  text_.Swap(&other->text_);
  text_marked_.Swap(&other->text_marked_);
  swap(features_, other->features_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem

// string text = 1 [(.gogo.json) = {
void ResponseItem::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem::text() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.text)
  return text_.GetNoArena();
}
void ResponseItem::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.text)
}
#if LANG_CXX11
void ResponseItem::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.text)
}
#endif
void ResponseItem::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.text)
}
void ResponseItem::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.text)
}
::std::string* ResponseItem::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem::release_text() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.text)
}

// string text_marked = 2 [(.gogo.json) = {
void ResponseItem::clear_text_marked() {
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem::text_marked() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.text_marked)
  return text_marked_.GetNoArena();
}
void ResponseItem::set_text_marked(const ::std::string& value) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.text_marked)
}
#if LANG_CXX11
void ResponseItem::set_text_marked(::std::string&& value) {
  
  text_marked_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.text_marked)
}
#endif
void ResponseItem::set_text_marked(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.text_marked)
}
void ResponseItem::set_text_marked(const char* value, size_t size) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.text_marked)
}
::std::string* ResponseItem::mutable_text_marked() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.text_marked)
  return text_marked_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem::release_text_marked() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.text_marked)
  
  return text_marked_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem::set_allocated_text_marked(::std::string* text_marked) {
  if (text_marked != NULL) {
    
  } else {
    
  }
  text_marked_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_marked);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.text_marked)
}

// .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
bool ResponseItem::has_features() const {
  return this != internal_default_instance() && features_ != NULL;
}
void ResponseItem::clear_features() {
  if (GetArenaNoVirtual() == NULL && features_ != NULL) delete features_;
  features_ = NULL;
}
const ::pb::suggests::dzen::ResponseItem_Features& ResponseItem::features() const {
  const ::pb::suggests::dzen::ResponseItem_Features* p = features_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.features)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::ResponseItem_Features*>(
      &::pb::suggests::dzen::_ResponseItem_Features_default_instance_);
}
::pb::suggests::dzen::ResponseItem_Features* ResponseItem::mutable_features() {
  
  if (features_ == NULL) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Features;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.features)
  return features_;
}
::pb::suggests::dzen::ResponseItem_Features* ResponseItem::release_features() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.features)
  
  ::pb::suggests::dzen::ResponseItem_Features* temp = features_;
  features_ = NULL;
  return temp;
}
void ResponseItem::set_allocated_features(::pb::suggests::dzen::ResponseItem_Features* features) {
  delete features_;
  features_ = features;
  if (features) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.features)
}

// repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
int ResponseItem::navigs_size() const {
  return navigs_.size();
}
void ResponseItem::clear_navigs() {
  navigs_.Clear();
}
const ::pb::suggests::dzen::ResponseItem_Navig& ResponseItem::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Get(index);
}
::pb::suggests::dzen::ResponseItem_Navig* ResponseItem::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Mutable(index);
}
::pb::suggests::dzen::ResponseItem_Navig* ResponseItem::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >*
ResponseItem::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.ResponseItem.navigs)
  return &navigs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >&
ResponseItem::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_;
}

// repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
int ResponseItem::matched_ranges_size() const {
  return matched_ranges_.size();
}
void ResponseItem::clear_matched_ranges() {
  matched_ranges_.Clear();
}
const ::pb::suggests::dzen::ResponseItem_MatchedPair& ResponseItem::matched_ranges(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Get(index);
}
::pb::suggests::dzen::ResponseItem_MatchedPair* ResponseItem::mutable_matched_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Mutable(index);
}
::pb::suggests::dzen::ResponseItem_MatchedPair* ResponseItem::add_matched_ranges() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >*
ResponseItem::mutable_matched_ranges() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.ResponseItem.matched_ranges)
  return &matched_ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >&
ResponseItem::matched_ranges() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseNavig::kIdFieldNumber;
const int ResponseNavig::kProbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseNavig::ResponseNavig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.ResponseNavig)
}
ResponseNavig::ResponseNavig(const ResponseNavig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  prob_ = from.prob_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.ResponseNavig)
}

void ResponseNavig::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prob_ = 0;
  _cached_size_ = 0;
}

ResponseNavig::~ResponseNavig() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.ResponseNavig)
  SharedDtor();
}

void ResponseNavig::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseNavig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseNavig::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseNavig& ResponseNavig::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseNavig* ResponseNavig::New(::google::protobuf::Arena* arena) const {
  ResponseNavig* n = new ResponseNavig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseNavig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.ResponseNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prob_ = 0;
  _internal_metadata_.Clear();
}

bool ResponseNavig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.ResponseNavig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.ResponseNavig.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double prob = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.ResponseNavig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.ResponseNavig)
  return false;
#undef DO_
}

void ResponseNavig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.ResponseNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseNavig.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // double prob = 2 [(.gogo.json) = {
  if (this->prob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->prob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.ResponseNavig)
}

::google::protobuf::uint8* ResponseNavig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.ResponseNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.ResponseNavig.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // double prob = 2 [(.gogo.json) = {
  if (this->prob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->prob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.ResponseNavig)
  return target;
}

size_t ResponseNavig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.ResponseNavig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // double prob = 2 [(.gogo.json) = {
  if (this->prob() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseNavig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.ResponseNavig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseNavig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseNavig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.ResponseNavig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.ResponseNavig)
    MergeFrom(*source);
  }
}

void ResponseNavig::MergeFrom(const ResponseNavig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.ResponseNavig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.prob() != 0) {
    set_prob(from.prob());
  }
}

void ResponseNavig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.ResponseNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseNavig::CopyFrom(const ResponseNavig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.ResponseNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseNavig::IsInitialized() const {
  return true;
}

void ResponseNavig::Swap(ResponseNavig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseNavig::InternalSwap(ResponseNavig* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(prob_, other->prob_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseNavig::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseNavig

// string id = 1 [(.gogo.json) = {
void ResponseNavig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseNavig::id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseNavig.id)
  return id_.GetNoArena();
}
void ResponseNavig::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseNavig.id)
}
#if LANG_CXX11
void ResponseNavig::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseNavig.id)
}
#endif
void ResponseNavig::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseNavig.id)
}
void ResponseNavig::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseNavig.id)
}
::std::string* ResponseNavig::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseNavig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseNavig::release_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseNavig.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseNavig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseNavig.id)
}

// double prob = 2 [(.gogo.json) = {
void ResponseNavig::clear_prob() {
  prob_ = 0;
}
double ResponseNavig::prob() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseNavig.prob)
  return prob_;
}
void ResponseNavig::set_prob(double value) {
  
  prob_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseNavig.prob)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Terms::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Terms::Response_Terms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.Response.Terms)
}
Response_Terms::Response_Terms(const Response_Terms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.Response.Terms)
}

void Response_Terms::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Response_Terms::~Response_Terms() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.Response.Terms)
  SharedDtor();
}

void Response_Terms::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_Terms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Terms::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_Terms& Response_Terms::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response_Terms* Response_Terms::New(::google::protobuf::Arena* arena) const {
  Response_Terms* n = new Response_Terms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Terms::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.Response.Terms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Response_Terms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.Response.Terms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.Response.Terms.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.Response.Terms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.Response.Terms)
  return false;
#undef DO_
}

void Response_Terms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.Response.Terms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.Response.Terms.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.Response.Terms)
}

::google::protobuf::uint8* Response_Terms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.Response.Terms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.Response.Terms.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.Response.Terms)
  return target;
}

size_t Response_Terms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.Response.Terms)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Terms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.Response.Terms)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_Terms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Terms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.Response.Terms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.Response.Terms)
    MergeFrom(*source);
  }
}

void Response_Terms::MergeFrom(const Response_Terms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.Response.Terms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void Response_Terms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.Response.Terms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Terms::CopyFrom(const Response_Terms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.Response.Terms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Terms::IsInitialized() const {
  return true;
}

void Response_Terms::Swap(Response_Terms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Terms::InternalSwap(Response_Terms* other) {
  using std::swap;
  query_.Swap(&other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Terms::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_Terms

// string query = 1 [(.gogo.json) = {
void Response_Terms::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response_Terms::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.Terms.query)
  return query_.GetNoArena();
}
void Response_Terms::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.Response.Terms.query)
}
#if LANG_CXX11
void Response_Terms::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.Response.Terms.query)
}
#endif
void Response_Terms::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.Response.Terms.query)
}
void Response_Terms::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.Response.Terms.query)
}
::std::string* Response_Terms::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.Terms.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response_Terms::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.Terms.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response_Terms::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.Terms.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kQidFieldNumber;
const int Response::kTermsFieldNumber;
const int Response::kItemsFieldNumber;
const int Response::kNavigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.dzen.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      navigs_(from.navigs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qid().size() > 0) {
    qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qid_);
  }
  if (from.has_terms()) {
    terms_ = new ::pb::suggests::dzen::Response_Terms(*from.terms_);
  } else {
    terms_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.dzen.Response)
}

void Response::SharedCtor() {
  qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  terms_ = NULL;
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:pb.suggests.dzen.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  qid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete terms_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  protobuf_sugg_5fdzen_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.dzen.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  navigs_.Clear();
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && terms_ != NULL) {
    delete terms_;
  }
  terms_ = NULL;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.dzen.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string qid = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qid().data(), static_cast<int>(this->qid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.dzen.Response.qid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_terms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_navigs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.dzen.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.dzen.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.dzen.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qid = 1 [(.gogo.json) = {
  if (this->qid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qid().data(), static_cast<int>(this->qid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.Response.qid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qid(), output);
  }

  // .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
  if (this->has_terms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->terms_, output);
  }

  // repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->navigs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.dzen.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.dzen.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qid = 1 [(.gogo.json) = {
  if (this->qid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qid().data(), static_cast<int>(this->qid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.dzen.Response.qid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qid(), target);
  }

  // .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
  if (this->has_terms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->terms_, deterministic, target);
  }

  // repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->items(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->navigs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.dzen.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.dzen.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->navigs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigs(static_cast<int>(i)));
    }
  }

  // string qid = 1 [(.gogo.json) = {
  if (this->qid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qid());
  }

  // .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
  if (this->has_terms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->terms_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.dzen.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.dzen.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.dzen.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.dzen.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  navigs_.MergeFrom(from.navigs_);
  if (from.qid().size() > 0) {

    qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qid_);
  }
  if (from.has_terms()) {
    mutable_terms()->::pb::suggests::dzen::Response_Terms::MergeFrom(from.terms());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.dzen.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.dzen.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  navigs_.InternalSwap(&other->navigs_);
  qid_.Swap(&other->qid_);
  swap(terms_, other->terms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_sugg_5fdzen_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// string qid = 1 [(.gogo.json) = {
void Response::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response::qid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.qid)
  return qid_.GetNoArena();
}
void Response::set_qid(const ::std::string& value) {
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.Response.qid)
}
#if LANG_CXX11
void Response::set_qid(::std::string&& value) {
  
  qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.Response.qid)
}
#endif
void Response::set_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.Response.qid)
}
void Response::set_qid(const char* value, size_t size) {
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.Response.qid)
}
::std::string* Response::mutable_qid() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response::release_qid() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.qid)
  
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    
  } else {
    
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.qid)
}

// .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
bool Response::has_terms() const {
  return this != internal_default_instance() && terms_ != NULL;
}
void Response::clear_terms() {
  if (GetArenaNoVirtual() == NULL && terms_ != NULL) delete terms_;
  terms_ = NULL;
}
const ::pb::suggests::dzen::Response_Terms& Response::terms() const {
  const ::pb::suggests::dzen::Response_Terms* p = terms_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.terms)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::Response_Terms*>(
      &::pb::suggests::dzen::_Response_Terms_default_instance_);
}
::pb::suggests::dzen::Response_Terms* Response::mutable_terms() {
  
  if (terms_ == NULL) {
    terms_ = new ::pb::suggests::dzen::Response_Terms;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.terms)
  return terms_;
}
::pb::suggests::dzen::Response_Terms* Response::release_terms() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.terms)
  
  ::pb::suggests::dzen::Response_Terms* temp = terms_;
  terms_ = NULL;
  return temp;
}
void Response::set_allocated_terms(::pb::suggests::dzen::Response_Terms* terms) {
  delete terms_;
  terms_ = terms;
  if (terms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.terms)
}

// repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
int Response::items_size() const {
  return items_.size();
}
void Response::clear_items() {
  items_.Clear();
}
const ::pb::suggests::dzen::ResponseItem& Response::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.items)
  return items_.Get(index);
}
::pb::suggests::dzen::ResponseItem* Response::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.items)
  return items_.Mutable(index);
}
::pb::suggests::dzen::ResponseItem* Response::add_items() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.Response.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >*
Response::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.Response.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >&
Response::items() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.Response.items)
  return items_;
}

// repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
int Response::navigs_size() const {
  return navigs_.size();
}
void Response::clear_navigs() {
  navigs_.Clear();
}
const ::pb::suggests::dzen::ResponseNavig& Response::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.navigs)
  return navigs_.Get(index);
}
::pb::suggests::dzen::ResponseNavig* Response::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.navigs)
  return navigs_.Mutable(index);
}
::pb::suggests::dzen::ResponseNavig* Response::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.Response.navigs)
  return navigs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >*
Response::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.Response.navigs)
  return &navigs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >&
Response::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.Response.navigs)
  return navigs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dzen
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)
