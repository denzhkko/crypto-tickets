// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_dzen.proto

#ifndef PROTOBUF_sugg_5fdzen_2eproto__INCLUDED
#define PROTOBUF_sugg_5fdzen_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
namespace suggests {
namespace dzen {
class IdxNavigData;
class IdxNavigDataDefaultTypeInternal;
extern IdxNavigDataDefaultTypeInternal _IdxNavigData_default_instance_;
class IdxQuery;
class IdxQueryDefaultTypeInternal;
extern IdxQueryDefaultTypeInternal _IdxQuery_default_instance_;
class IdxQuery_Navig;
class IdxQuery_NavigDefaultTypeInternal;
extern IdxQuery_NavigDefaultTypeInternal _IdxQuery_Navig_default_instance_;
class IdxQuery_Variant;
class IdxQuery_VariantDefaultTypeInternal;
extern IdxQuery_VariantDefaultTypeInternal _IdxQuery_Variant_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class ResponseItem;
class ResponseItemDefaultTypeInternal;
extern ResponseItemDefaultTypeInternal _ResponseItem_default_instance_;
class ResponseItem_Features;
class ResponseItem_FeaturesDefaultTypeInternal;
extern ResponseItem_FeaturesDefaultTypeInternal _ResponseItem_Features_default_instance_;
class ResponseItem_MatchedPair;
class ResponseItem_MatchedPairDefaultTypeInternal;
extern ResponseItem_MatchedPairDefaultTypeInternal _ResponseItem_MatchedPair_default_instance_;
class ResponseItem_Navig;
class ResponseItem_NavigDefaultTypeInternal;
extern ResponseItem_NavigDefaultTypeInternal _ResponseItem_Navig_default_instance_;
class ResponseItem_Navig_ItemNavigFeatures;
class ResponseItem_Navig_ItemNavigFeaturesDefaultTypeInternal;
extern ResponseItem_Navig_ItemNavigFeaturesDefaultTypeInternal _ResponseItem_Navig_ItemNavigFeatures_default_instance_;
class ResponseNavig;
class ResponseNavigDefaultTypeInternal;
extern ResponseNavigDefaultTypeInternal _ResponseNavig_default_instance_;
class Response_Terms;
class Response_TermsDefaultTypeInternal;
extern Response_TermsDefaultTypeInternal _Response_Terms_default_instance_;
class StorageNavig;
class StorageNavigDefaultTypeInternal;
extern StorageNavigDefaultTypeInternal _StorageNavig_default_instance_;
class StorageQueryFeatures;
class StorageQueryFeaturesDefaultTypeInternal;
extern StorageQueryFeaturesDefaultTypeInternal _StorageQueryFeatures_default_instance_;
class StorageQueryNavigFeatures;
class StorageQueryNavigFeaturesDefaultTypeInternal;
extern StorageQueryNavigFeaturesDefaultTypeInternal _StorageQueryNavigFeatures_default_instance_;
}  // namespace dzen
}  // namespace suggests
}  // namespace pb

namespace pb {
namespace suggests {
namespace dzen {

namespace protobuf_sugg_5fdzen_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sugg_5fdzen_2eproto

// ===================================================================

class IdxQuery_Variant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.IdxQuery.Variant) */ {
 public:
  IdxQuery_Variant();
  virtual ~IdxQuery_Variant();

  IdxQuery_Variant(const IdxQuery_Variant& from);

  inline IdxQuery_Variant& operator=(const IdxQuery_Variant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery_Variant(IdxQuery_Variant&& from) noexcept
    : IdxQuery_Variant() {
    *this = ::std::move(from);
  }

  inline IdxQuery_Variant& operator=(IdxQuery_Variant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery_Variant& default_instance();

  static inline const IdxQuery_Variant* internal_default_instance() {
    return reinterpret_cast<const IdxQuery_Variant*>(
               &_IdxQuery_Variant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IdxQuery_Variant* other);
  friend void swap(IdxQuery_Variant& a, IdxQuery_Variant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery_Variant* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery_Variant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery_Variant& from);
  void MergeFrom(const IdxQuery_Variant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery_Variant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 flags = 3 [(.gogo.json) = {
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.IdxQuery.Variant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 flags_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxQuery_Navig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.IdxQuery.Navig) */ {
 public:
  IdxQuery_Navig();
  virtual ~IdxQuery_Navig();

  IdxQuery_Navig(const IdxQuery_Navig& from);

  inline IdxQuery_Navig& operator=(const IdxQuery_Navig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery_Navig(IdxQuery_Navig&& from) noexcept
    : IdxQuery_Navig() {
    *this = ::std::move(from);
  }

  inline IdxQuery_Navig& operator=(IdxQuery_Navig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery_Navig& default_instance();

  static inline const IdxQuery_Navig* internal_default_instance() {
    return reinterpret_cast<const IdxQuery_Navig*>(
               &_IdxQuery_Navig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IdxQuery_Navig* other);
  friend void swap(IdxQuery_Navig& a, IdxQuery_Navig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery_Navig* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery_Navig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery_Navig& from);
  void MergeFrom(const IdxQuery_Navig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery_Navig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string click_id = 1 [(.gogo.json) = {
  void clear_click_id();
  static const int kClickIdFieldNumber = 1;
  const ::std::string& click_id() const;
  void set_click_id(const ::std::string& value);
  #if LANG_CXX11
  void set_click_id(::std::string&& value);
  #endif
  void set_click_id(const char* value);
  void set_click_id(const char* value, size_t size);
  ::std::string* mutable_click_id();
  ::std::string* release_click_id();
  void set_allocated_click_id(::std::string* click_id);

  // uint32 uniq = 4 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 4;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 5 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 5;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 6 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 6;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 7 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 7;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.IdxQuery.Navig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr click_id_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.IdxQuery) */ {
 public:
  IdxQuery();
  virtual ~IdxQuery();

  IdxQuery(const IdxQuery& from);

  inline IdxQuery& operator=(const IdxQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery(IdxQuery&& from) noexcept
    : IdxQuery() {
    *this = ::std::move(from);
  }

  inline IdxQuery& operator=(IdxQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery& default_instance();

  static inline const IdxQuery* internal_default_instance() {
    return reinterpret_cast<const IdxQuery*>(
               &_IdxQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IdxQuery* other);
  friend void swap(IdxQuery& a, IdxQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery& from);
  void MergeFrom(const IdxQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IdxQuery_Variant Variant;
  typedef IdxQuery_Navig Navig;

  // accessors -------------------------------------------------------

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  int glue_ids_size() const;
  void clear_glue_ids();
  static const int kGlueIdsFieldNumber = 6;
  ::google::protobuf::int32 glue_ids(int index) const;
  void set_glue_ids(int index, ::google::protobuf::int32 value);
  void add_glue_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      glue_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_glue_ids();

  // repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 7;
  const ::pb::suggests::dzen::IdxQuery_Variant& variants(int index) const;
  ::pb::suggests::dzen::IdxQuery_Variant* mutable_variants(int index);
  ::pb::suggests::dzen::IdxQuery_Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >&
      variants() const;

  // repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
  int navigs_size() const;
  void clear_navigs();
  static const int kNavigsFieldNumber = 8;
  const ::pb::suggests::dzen::IdxQuery_Navig& navigs(int index) const;
  ::pb::suggests::dzen::IdxQuery_Navig* mutable_navigs(int index);
  ::pb::suggests::dzen::IdxQuery_Navig* add_navigs();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >*
      mutable_navigs();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >&
      navigs() const;

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 4 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 5 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 5;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.IdxQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > glue_ids_;
  mutable int _glue_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant > variants_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig > navigs_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxNavigData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.IdxNavigData) */ {
 public:
  IdxNavigData();
  virtual ~IdxNavigData();

  IdxNavigData(const IdxNavigData& from);

  inline IdxNavigData& operator=(const IdxNavigData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxNavigData(IdxNavigData&& from) noexcept
    : IdxNavigData() {
    *this = ::std::move(from);
  }

  inline IdxNavigData& operator=(IdxNavigData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxNavigData& default_instance();

  static inline const IdxNavigData* internal_default_instance() {
    return reinterpret_cast<const IdxNavigData*>(
               &_IdxNavigData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IdxNavigData* other);
  friend void swap(IdxNavigData& a, IdxNavigData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxNavigData* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxNavigData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxNavigData& from);
  void MergeFrom(const IdxNavigData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxNavigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string click_id = 1 [(.gogo.json) = {
  void clear_click_id();
  static const int kClickIdFieldNumber = 1;
  const ::std::string& click_id() const;
  void set_click_id(const ::std::string& value);
  #if LANG_CXX11
  void set_click_id(::std::string&& value);
  #endif
  void set_click_id(const char* value);
  void set_click_id(const char* value, size_t size);
  ::std::string* mutable_click_id();
  ::std::string* release_click_id();
  void set_allocated_click_id(::std::string* click_id);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.IdxNavigData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr click_id_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageNavig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.StorageNavig) */ {
 public:
  StorageNavig();
  virtual ~StorageNavig();

  StorageNavig(const StorageNavig& from);

  inline StorageNavig& operator=(const StorageNavig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageNavig(StorageNavig&& from) noexcept
    : StorageNavig() {
    *this = ::std::move(from);
  }

  inline StorageNavig& operator=(StorageNavig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageNavig& default_instance();

  static inline const StorageNavig* internal_default_instance() {
    return reinterpret_cast<const StorageNavig*>(
               &_StorageNavig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(StorageNavig* other);
  friend void swap(StorageNavig& a, StorageNavig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageNavig* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageNavig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageNavig& from);
  void MergeFrom(const StorageNavig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageNavig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string publisher_id = 2 [(.gogo.json) = {
  void clear_publisher_id();
  static const int kPublisherIdFieldNumber = 2;
  const ::std::string& publisher_id() const;
  void set_publisher_id(const ::std::string& value);
  #if LANG_CXX11
  void set_publisher_id(::std::string&& value);
  #endif
  void set_publisher_id(const char* value);
  void set_publisher_id(const char* value, size_t size);
  ::std::string* mutable_publisher_id();
  ::std::string* release_publisher_id();
  void set_allocated_publisher_id(::std::string* publisher_id);

  // uint64 nid = 1;
  void clear_nid();
  static const int kNidFieldNumber = 1;
  ::google::protobuf::uint64 nid() const;
  void set_nid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.StorageNavig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr publisher_id_;
  ::google::protobuf::uint64 nid_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageQueryFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.StorageQueryFeatures) */ {
 public:
  StorageQueryFeatures();
  virtual ~StorageQueryFeatures();

  StorageQueryFeatures(const StorageQueryFeatures& from);

  inline StorageQueryFeatures& operator=(const StorageQueryFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageQueryFeatures(StorageQueryFeatures&& from) noexcept
    : StorageQueryFeatures() {
    *this = ::std::move(from);
  }

  inline StorageQueryFeatures& operator=(StorageQueryFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageQueryFeatures& default_instance();

  static inline const StorageQueryFeatures* internal_default_instance() {
    return reinterpret_cast<const StorageQueryFeatures*>(
               &_StorageQueryFeatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StorageQueryFeatures* other);
  friend void swap(StorageQueryFeatures& a, StorageQueryFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageQueryFeatures* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageQueryFeatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageQueryFeatures& from);
  void MergeFrom(const StorageQueryFeatures& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageQueryFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 4 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 5 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 5;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.StorageQueryFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageQueryNavigFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.StorageQueryNavigFeatures) */ {
 public:
  StorageQueryNavigFeatures();
  virtual ~StorageQueryNavigFeatures();

  StorageQueryNavigFeatures(const StorageQueryNavigFeatures& from);

  inline StorageQueryNavigFeatures& operator=(const StorageQueryNavigFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageQueryNavigFeatures(StorageQueryNavigFeatures&& from) noexcept
    : StorageQueryNavigFeatures() {
    *this = ::std::move(from);
  }

  inline StorageQueryNavigFeatures& operator=(StorageQueryNavigFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageQueryNavigFeatures& default_instance();

  static inline const StorageQueryNavigFeatures* internal_default_instance() {
    return reinterpret_cast<const StorageQueryNavigFeatures*>(
               &_StorageQueryNavigFeatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(StorageQueryNavigFeatures* other);
  friend void swap(StorageQueryNavigFeatures& a, StorageQueryNavigFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageQueryNavigFeatures* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageQueryNavigFeatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageQueryNavigFeatures& from);
  void MergeFrom(const StorageQueryNavigFeatures& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageQueryNavigFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint64 nid = 2;
  void clear_nid();
  static const int kNidFieldNumber = 2;
  ::google::protobuf::uint64 nid() const;
  void set_nid(::google::protobuf::uint64 value);

  // uint32 uniq = 3 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 3;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 4;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 5 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 5;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 6 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 6;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.StorageQueryNavigFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 nid_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem_Navig_ItemNavigFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures) */ {
 public:
  ResponseItem_Navig_ItemNavigFeatures();
  virtual ~ResponseItem_Navig_ItemNavigFeatures();

  ResponseItem_Navig_ItemNavigFeatures(const ResponseItem_Navig_ItemNavigFeatures& from);

  inline ResponseItem_Navig_ItemNavigFeatures& operator=(const ResponseItem_Navig_ItemNavigFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem_Navig_ItemNavigFeatures(ResponseItem_Navig_ItemNavigFeatures&& from) noexcept
    : ResponseItem_Navig_ItemNavigFeatures() {
    *this = ::std::move(from);
  }

  inline ResponseItem_Navig_ItemNavigFeatures& operator=(ResponseItem_Navig_ItemNavigFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem_Navig_ItemNavigFeatures& default_instance();

  static inline const ResponseItem_Navig_ItemNavigFeatures* internal_default_instance() {
    return reinterpret_cast<const ResponseItem_Navig_ItemNavigFeatures*>(
               &_ResponseItem_Navig_ItemNavigFeatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ResponseItem_Navig_ItemNavigFeatures* other);
  friend void swap(ResponseItem_Navig_ItemNavigFeatures& a, ResponseItem_Navig_ItemNavigFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem_Navig_ItemNavigFeatures* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem_Navig_ItemNavigFeatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem_Navig_ItemNavigFeatures& from);
  void MergeFrom(const ResponseItem_Navig_ItemNavigFeatures& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem_Navig_ItemNavigFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 count = 1 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem_Navig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseItem.Navig) */ {
 public:
  ResponseItem_Navig();
  virtual ~ResponseItem_Navig();

  ResponseItem_Navig(const ResponseItem_Navig& from);

  inline ResponseItem_Navig& operator=(const ResponseItem_Navig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem_Navig(ResponseItem_Navig&& from) noexcept
    : ResponseItem_Navig() {
    *this = ::std::move(from);
  }

  inline ResponseItem_Navig& operator=(ResponseItem_Navig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem_Navig& default_instance();

  static inline const ResponseItem_Navig* internal_default_instance() {
    return reinterpret_cast<const ResponseItem_Navig*>(
               &_ResponseItem_Navig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ResponseItem_Navig* other);
  friend void swap(ResponseItem_Navig& a, ResponseItem_Navig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem_Navig* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem_Navig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem_Navig& from);
  void MergeFrom(const ResponseItem_Navig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem_Navig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ResponseItem_Navig_ItemNavigFeatures ItemNavigFeatures;

  // accessors -------------------------------------------------------

  // string id = 1 [(.gogo.json) = {
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
  bool has_features() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 2;
  const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures& features() const;
  ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* mutable_features();
  ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* release_features();
  void set_allocated_features(::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* features);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseItem.Navig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* features_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem_Features : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseItem.Features) */ {
 public:
  ResponseItem_Features();
  virtual ~ResponseItem_Features();

  ResponseItem_Features(const ResponseItem_Features& from);

  inline ResponseItem_Features& operator=(const ResponseItem_Features& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem_Features(ResponseItem_Features&& from) noexcept
    : ResponseItem_Features() {
    *this = ::std::move(from);
  }

  inline ResponseItem_Features& operator=(ResponseItem_Features&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem_Features& default_instance();

  static inline const ResponseItem_Features* internal_default_instance() {
    return reinterpret_cast<const ResponseItem_Features*>(
               &_ResponseItem_Features_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ResponseItem_Features* other);
  friend void swap(ResponseItem_Features& a, ResponseItem_Features& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem_Features* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem_Features* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem_Features& from);
  void MergeFrom(const ResponseItem_Features& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem_Features* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 count = 1 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseItem.Features)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem_MatchedPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseItem.MatchedPair) */ {
 public:
  ResponseItem_MatchedPair();
  virtual ~ResponseItem_MatchedPair();

  ResponseItem_MatchedPair(const ResponseItem_MatchedPair& from);

  inline ResponseItem_MatchedPair& operator=(const ResponseItem_MatchedPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem_MatchedPair(ResponseItem_MatchedPair&& from) noexcept
    : ResponseItem_MatchedPair() {
    *this = ::std::move(from);
  }

  inline ResponseItem_MatchedPair& operator=(ResponseItem_MatchedPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem_MatchedPair& default_instance();

  static inline const ResponseItem_MatchedPair* internal_default_instance() {
    return reinterpret_cast<const ResponseItem_MatchedPair*>(
               &_ResponseItem_MatchedPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ResponseItem_MatchedPair* other);
  friend void swap(ResponseItem_MatchedPair& a, ResponseItem_MatchedPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem_MatchedPair* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem_MatchedPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem_MatchedPair& from);
  void MergeFrom(const ResponseItem_MatchedPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem_MatchedPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 begin_pos = 1 [(.gogo.json) = {
  void clear_begin_pos();
  static const int kBeginPosFieldNumber = 1;
  ::google::protobuf::uint32 begin_pos() const;
  void set_begin_pos(::google::protobuf::uint32 value);

  // uint32 end_pos = 2 [(.gogo.json) = {
  void clear_end_pos();
  static const int kEndPosFieldNumber = 2;
  ::google::protobuf::uint32 end_pos() const;
  void set_end_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseItem.MatchedPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 begin_pos_;
  ::google::protobuf::uint32 end_pos_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseItem) */ {
 public:
  ResponseItem();
  virtual ~ResponseItem();

  ResponseItem(const ResponseItem& from);

  inline ResponseItem& operator=(const ResponseItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem(ResponseItem&& from) noexcept
    : ResponseItem() {
    *this = ::std::move(from);
  }

  inline ResponseItem& operator=(ResponseItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem& default_instance();

  static inline const ResponseItem* internal_default_instance() {
    return reinterpret_cast<const ResponseItem*>(
               &_ResponseItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ResponseItem* other);
  friend void swap(ResponseItem& a, ResponseItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem& from);
  void MergeFrom(const ResponseItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ResponseItem_Navig Navig;
  typedef ResponseItem_Features Features;
  typedef ResponseItem_MatchedPair MatchedPair;

  // accessors -------------------------------------------------------

  // repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
  int navigs_size() const;
  void clear_navigs();
  static const int kNavigsFieldNumber = 4;
  const ::pb::suggests::dzen::ResponseItem_Navig& navigs(int index) const;
  ::pb::suggests::dzen::ResponseItem_Navig* mutable_navigs(int index);
  ::pb::suggests::dzen::ResponseItem_Navig* add_navigs();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >*
      mutable_navigs();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >&
      navigs() const;

  // repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
  int matched_ranges_size() const;
  void clear_matched_ranges();
  static const int kMatchedRangesFieldNumber = 5;
  const ::pb::suggests::dzen::ResponseItem_MatchedPair& matched_ranges(int index) const;
  ::pb::suggests::dzen::ResponseItem_MatchedPair* mutable_matched_ranges(int index);
  ::pb::suggests::dzen::ResponseItem_MatchedPair* add_matched_ranges();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >*
      mutable_matched_ranges();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >&
      matched_ranges() const;

  // string text = 1 [(.gogo.json) = {
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string text_marked = 2 [(.gogo.json) = {
  void clear_text_marked();
  static const int kTextMarkedFieldNumber = 2;
  const ::std::string& text_marked() const;
  void set_text_marked(const ::std::string& value);
  #if LANG_CXX11
  void set_text_marked(::std::string&& value);
  #endif
  void set_text_marked(const char* value);
  void set_text_marked(const char* value, size_t size);
  ::std::string* mutable_text_marked();
  ::std::string* release_text_marked();
  void set_allocated_text_marked(::std::string* text_marked);

  // .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
  bool has_features() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 3;
  const ::pb::suggests::dzen::ResponseItem_Features& features() const;
  ::pb::suggests::dzen::ResponseItem_Features* mutable_features();
  ::pb::suggests::dzen::ResponseItem_Features* release_features();
  void set_allocated_features(::pb::suggests::dzen::ResponseItem_Features* features);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig > navigs_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair > matched_ranges_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr text_marked_;
  ::pb::suggests::dzen::ResponseItem_Features* features_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseNavig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.ResponseNavig) */ {
 public:
  ResponseNavig();
  virtual ~ResponseNavig();

  ResponseNavig(const ResponseNavig& from);

  inline ResponseNavig& operator=(const ResponseNavig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseNavig(ResponseNavig&& from) noexcept
    : ResponseNavig() {
    *this = ::std::move(from);
  }

  inline ResponseNavig& operator=(ResponseNavig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseNavig& default_instance();

  static inline const ResponseNavig* internal_default_instance() {
    return reinterpret_cast<const ResponseNavig*>(
               &_ResponseNavig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ResponseNavig* other);
  friend void swap(ResponseNavig& a, ResponseNavig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseNavig* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseNavig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseNavig& from);
  void MergeFrom(const ResponseNavig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseNavig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1 [(.gogo.json) = {
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // double prob = 2 [(.gogo.json) = {
  void clear_prob();
  static const int kProbFieldNumber = 2;
  double prob() const;
  void set_prob(double value);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.ResponseNavig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double prob_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_Terms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.Response.Terms) */ {
 public:
  Response_Terms();
  virtual ~Response_Terms();

  Response_Terms(const Response_Terms& from);

  inline Response_Terms& operator=(const Response_Terms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_Terms(Response_Terms&& from) noexcept
    : Response_Terms() {
    *this = ::std::move(from);
  }

  inline Response_Terms& operator=(Response_Terms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Terms& default_instance();

  static inline const Response_Terms* internal_default_instance() {
    return reinterpret_cast<const Response_Terms*>(
               &_Response_Terms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Response_Terms* other);
  friend void swap(Response_Terms& a, Response_Terms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_Terms* New() const PROTOBUF_FINAL { return New(NULL); }

  Response_Terms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response_Terms& from);
  void MergeFrom(const Response_Terms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response_Terms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.Response.Terms)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.dzen.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Response_Terms Terms;

  // accessors -------------------------------------------------------

  // repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  const ::pb::suggests::dzen::ResponseItem& items(int index) const;
  ::pb::suggests::dzen::ResponseItem* mutable_items(int index);
  ::pb::suggests::dzen::ResponseItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >&
      items() const;

  // repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
  int navigs_size() const;
  void clear_navigs();
  static const int kNavigsFieldNumber = 4;
  const ::pb::suggests::dzen::ResponseNavig& navigs(int index) const;
  ::pb::suggests::dzen::ResponseNavig* mutable_navigs(int index);
  ::pb::suggests::dzen::ResponseNavig* add_navigs();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >*
      mutable_navigs();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >&
      navigs() const;

  // string qid = 1 [(.gogo.json) = {
  void clear_qid();
  static const int kQidFieldNumber = 1;
  const ::std::string& qid() const;
  void set_qid(const ::std::string& value);
  #if LANG_CXX11
  void set_qid(::std::string&& value);
  #endif
  void set_qid(const char* value);
  void set_qid(const char* value, size_t size);
  ::std::string* mutable_qid();
  ::std::string* release_qid();
  void set_allocated_qid(::std::string* qid);

  // .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
  bool has_terms() const;
  void clear_terms();
  static const int kTermsFieldNumber = 2;
  const ::pb::suggests::dzen::Response_Terms& terms() const;
  ::pb::suggests::dzen::Response_Terms* mutable_terms();
  ::pb::suggests::dzen::Response_Terms* release_terms();
  void set_allocated_terms(::pb::suggests::dzen::Response_Terms* terms);

  // @@protoc_insertion_point(class_scope:pb.suggests.dzen.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem > items_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig > navigs_;
  ::google::protobuf::internal::ArenaStringPtr qid_;
  ::pb::suggests::dzen::Response_Terms* terms_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fdzen_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IdxQuery_Variant

// string query = 1 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery_Variant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.query)
  return query_.GetNoArena();
}
inline void IdxQuery_Variant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.query)
}
#if LANG_CXX11
inline void IdxQuery_Variant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.Variant.query)
}
#endif
inline void IdxQuery_Variant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.Variant.query)
}
inline void IdxQuery_Variant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.Variant.query)
}
inline ::std::string* IdxQuery_Variant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.Variant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery_Variant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.Variant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery_Variant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.Variant.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Variant::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.uniq)
  return uniq_;
}
inline void IdxQuery_Variant::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.uniq)
}

// uint32 flags = 3 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Variant.flags)
  return flags_;
}
inline void IdxQuery_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Variant.flags)
}

// -------------------------------------------------------------------

// IdxQuery_Navig

// string click_id = 1 [(.gogo.json) = {
inline void IdxQuery_Navig::clear_click_id() {
  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery_Navig::click_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.click_id)
  return click_id_.GetNoArena();
}
inline void IdxQuery_Navig::set_click_id(const ::std::string& value) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
#if LANG_CXX11
inline void IdxQuery_Navig::set_click_id(::std::string&& value) {
  
  click_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
#endif
inline void IdxQuery_Navig::set_click_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
inline void IdxQuery_Navig::set_click_id(const char* value, size_t size) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.Navig.click_id)
}
inline ::std::string* IdxQuery_Navig::mutable_click_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.Navig.click_id)
  return click_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery_Navig::release_click_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.Navig.click_id)
  
  return click_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery_Navig::set_allocated_click_id(::std::string* click_id) {
  if (click_id != NULL) {
    
  } else {
    
  }
  click_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.Navig.click_id)
}

// uint32 uniq = 4 [(.gogo.json) = {
inline void IdxQuery_Navig::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Navig::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.uniq)
  return uniq_;
}
inline void IdxQuery_Navig::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.uniq)
}

// uint32 uniq_1d = 5 [(.gogo.json) = {
inline void IdxQuery_Navig::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Navig::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.uniq_1d)
  return uniq_1d_;
}
inline void IdxQuery_Navig::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.uniq_1d)
}

// uint32 count = 6 [(.gogo.json) = {
inline void IdxQuery_Navig::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Navig::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.count)
  return count_;
}
inline void IdxQuery_Navig::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.count)
}

// uint32 count_1d = 7 [(.gogo.json) = {
inline void IdxQuery_Navig::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Navig::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.Navig.count_1d)
  return count_1d_;
}
inline void IdxQuery_Navig::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.Navig.count_1d)
}

// -------------------------------------------------------------------

// IdxQuery

// string query = 1 [(.gogo.json) = {
inline void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.query)
  return query_.GetNoArena();
}
inline void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.query)
}
#if LANG_CXX11
inline void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxQuery.query)
}
#endif
inline void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxQuery.query)
}
inline void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxQuery.query)
}
inline ::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxQuery.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxQuery::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.uniq)
  return uniq_;
}
inline void IdxQuery::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void IdxQuery::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.uniq_1d)
  return uniq_1d_;
}
inline void IdxQuery::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
inline void IdxQuery::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.count)
  return count_;
}
inline void IdxQuery::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
inline void IdxQuery::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.count_1d)
  return count_1d_;
}
inline void IdxQuery::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.count_1d)
}

// repeated int32 glue_ids = 6 [(.gogo.json) = {
inline int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
inline void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
inline ::google::protobuf::int32 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
inline void IdxQuery::set_glue_ids(int index, ::google::protobuf::int32 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxQuery.glue_ids)
}
inline void IdxQuery::add_glue_ids(::google::protobuf::int32 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.glue_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.glue_ids)
  return glue_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.glue_ids)
  return &glue_ids_;
}

// repeated .pb.suggests.dzen.IdxQuery.Variant variants = 7 [(.gogo.json) = {
inline int IdxQuery::variants_size() const {
  return variants_.size();
}
inline void IdxQuery::clear_variants() {
  variants_.Clear();
}
inline const ::pb::suggests::dzen::IdxQuery_Variant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Get(index);
}
inline ::pb::suggests::dzen::IdxQuery_Variant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Mutable(index);
}
inline ::pb::suggests::dzen::IdxQuery_Variant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Variant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.dzen.IdxQuery.Navig navigs = 8 [(.gogo.json) = {
inline int IdxQuery::navigs_size() const {
  return navigs_.size();
}
inline void IdxQuery::clear_navigs() {
  navigs_.Clear();
}
inline const ::pb::suggests::dzen::IdxQuery_Navig& IdxQuery::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Get(index);
}
inline ::pb::suggests::dzen::IdxQuery_Navig* IdxQuery::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Mutable(index);
}
inline ::pb::suggests::dzen::IdxQuery_Navig* IdxQuery::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >*
IdxQuery::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.IdxQuery.navigs)
  return &navigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::IdxQuery_Navig >&
IdxQuery::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.IdxQuery.navigs)
  return navigs_;
}

// -------------------------------------------------------------------

// IdxNavigData

// string click_id = 1 [(.gogo.json) = {
inline void IdxNavigData::clear_click_id() {
  click_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavigData::click_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.IdxNavigData.click_id)
  return click_id_.GetNoArena();
}
inline void IdxNavigData::set_click_id(const ::std::string& value) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.IdxNavigData.click_id)
}
#if LANG_CXX11
inline void IdxNavigData::set_click_id(::std::string&& value) {
  
  click_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.IdxNavigData.click_id)
}
#endif
inline void IdxNavigData::set_click_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.IdxNavigData.click_id)
}
inline void IdxNavigData::set_click_id(const char* value, size_t size) {
  
  click_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.IdxNavigData.click_id)
}
inline ::std::string* IdxNavigData::mutable_click_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.IdxNavigData.click_id)
  return click_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavigData::release_click_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.IdxNavigData.click_id)
  
  return click_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavigData::set_allocated_click_id(::std::string* click_id) {
  if (click_id != NULL) {
    
  } else {
    
  }
  click_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.IdxNavigData.click_id)
}

// -------------------------------------------------------------------

// StorageNavig

// uint64 nid = 1;
inline void StorageNavig::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageNavig::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageNavig.nid)
  return nid_;
}
inline void StorageNavig::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageNavig.nid)
}

// string publisher_id = 2 [(.gogo.json) = {
inline void StorageNavig::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageNavig::publisher_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageNavig.publisher_id)
  return publisher_id_.GetNoArena();
}
inline void StorageNavig::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageNavig.publisher_id)
}
#if LANG_CXX11
inline void StorageNavig::set_publisher_id(::std::string&& value) {
  
  publisher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageNavig.publisher_id)
}
#endif
inline void StorageNavig::set_publisher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageNavig.publisher_id)
}
inline void StorageNavig::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageNavig.publisher_id)
}
inline ::std::string* StorageNavig::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageNavig.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageNavig::release_publisher_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageNavig.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageNavig::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageNavig.publisher_id)
}

// -------------------------------------------------------------------

// StorageQueryFeatures

// string query = 1;
inline void StorageQueryFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageQueryFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.query)
  return query_.GetNoArena();
}
inline void StorageQueryFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.query)
}
#if LANG_CXX11
inline void StorageQueryFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageQueryFeatures.query)
}
#endif
inline void StorageQueryFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageQueryFeatures.query)
}
inline void StorageQueryFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageQueryFeatures.query)
}
inline ::std::string* StorageQueryFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageQueryFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageQueryFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageQueryFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageQueryFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageQueryFeatures.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.uniq)
  return uniq_;
}
inline void StorageQueryFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.uniq_1d)
  return uniq_1d_;
}
inline void StorageQueryFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.count)
  return count_;
}
inline void StorageQueryFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryFeatures.count_1d)
  return count_1d_;
}
inline void StorageQueryFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryFeatures.count_1d)
}

// -------------------------------------------------------------------

// StorageQueryNavigFeatures

// string query = 1;
inline void StorageQueryNavigFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageQueryNavigFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  return query_.GetNoArena();
}
inline void StorageQueryNavigFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
#if LANG_CXX11
inline void StorageQueryNavigFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
#endif
inline void StorageQueryNavigFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
inline void StorageQueryNavigFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}
inline ::std::string* StorageQueryNavigFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageQueryNavigFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.StorageQueryNavigFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageQueryNavigFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.StorageQueryNavigFeatures.query)
}

// uint64 nid = 2;
inline void StorageQueryNavigFeatures::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageQueryNavigFeatures::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.nid)
  return nid_;
}
inline void StorageQueryNavigFeatures::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.nid)
}

// uint32 uniq = 3 [(.gogo.json) = {
inline void StorageQueryNavigFeatures::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryNavigFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.uniq)
  return uniq_;
}
inline void StorageQueryNavigFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.uniq)
}

// uint32 uniq_1d = 4 [(.gogo.json) = {
inline void StorageQueryNavigFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryNavigFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.uniq_1d)
  return uniq_1d_;
}
inline void StorageQueryNavigFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.uniq_1d)
}

// uint32 count = 5 [(.gogo.json) = {
inline void StorageQueryNavigFeatures::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryNavigFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.count)
  return count_;
}
inline void StorageQueryNavigFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.count)
}

// uint32 count_1d = 6 [(.gogo.json) = {
inline void StorageQueryNavigFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryNavigFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.StorageQueryNavigFeatures.count_1d)
  return count_1d_;
}
inline void StorageQueryNavigFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.StorageQueryNavigFeatures.count_1d)
}

// -------------------------------------------------------------------

// ResponseItem_Navig_ItemNavigFeatures

// uint32 count = 1 [(.gogo.json) = {
inline void ResponseItem_Navig_ItemNavigFeatures::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.count)
  return count_;
}
inline void ResponseItem_Navig_ItemNavigFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.count)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void ResponseItem_Navig_ItemNavigFeatures::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq)
  return uniq_;
}
inline void ResponseItem_Navig_ItemNavigFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void ResponseItem_Navig_ItemNavigFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Navig_ItemNavigFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq_1d)
  return uniq_1d_;
}
inline void ResponseItem_Navig_ItemNavigFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures.uniq_1d)
}

// -------------------------------------------------------------------

// ResponseItem_Navig

// string id = 1 [(.gogo.json) = {
inline void ResponseItem_Navig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem_Navig::id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.id)
  return id_.GetNoArena();
}
inline void ResponseItem_Navig::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Navig.id)
}
#if LANG_CXX11
inline void ResponseItem_Navig::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.Navig.id)
}
#endif
inline void ResponseItem_Navig::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.Navig.id)
}
inline void ResponseItem_Navig::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.Navig.id)
}
inline ::std::string* ResponseItem_Navig::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.Navig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem_Navig::release_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.Navig.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem_Navig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.Navig.id)
}

// .pb.suggests.dzen.ResponseItem.Navig.ItemNavigFeatures features = 2 [(.gogo.json) = {
inline bool ResponseItem_Navig::has_features() const {
  return this != internal_default_instance() && features_ != NULL;
}
inline void ResponseItem_Navig::clear_features() {
  if (GetArenaNoVirtual() == NULL && features_ != NULL) delete features_;
  features_ = NULL;
}
inline const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures& ResponseItem_Navig::features() const {
  const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* p = features_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Navig.features)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures*>(
      &::pb::suggests::dzen::_ResponseItem_Navig_ItemNavigFeatures_default_instance_);
}
inline ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* ResponseItem_Navig::mutable_features() {
  
  if (features_ == NULL) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.Navig.features)
  return features_;
}
inline ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* ResponseItem_Navig::release_features() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.Navig.features)
  
  ::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* temp = features_;
  features_ = NULL;
  return temp;
}
inline void ResponseItem_Navig::set_allocated_features(::pb::suggests::dzen::ResponseItem_Navig_ItemNavigFeatures* features) {
  delete features_;
  features_ = features;
  if (features) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.Navig.features)
}

// -------------------------------------------------------------------

// ResponseItem_Features

// uint32 count = 1 [(.gogo.json) = {
inline void ResponseItem_Features::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Features::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.count)
  return count_;
}
inline void ResponseItem_Features::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.count)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void ResponseItem_Features::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Features::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.uniq)
  return uniq_;
}
inline void ResponseItem_Features::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void ResponseItem_Features::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_Features::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.Features.uniq_1d)
  return uniq_1d_;
}
inline void ResponseItem_Features::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.Features.uniq_1d)
}

// -------------------------------------------------------------------

// ResponseItem_MatchedPair

// uint32 begin_pos = 1 [(.gogo.json) = {
inline void ResponseItem_MatchedPair::clear_begin_pos() {
  begin_pos_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_MatchedPair::begin_pos() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.MatchedPair.begin_pos)
  return begin_pos_;
}
inline void ResponseItem_MatchedPair::set_begin_pos(::google::protobuf::uint32 value) {
  
  begin_pos_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.MatchedPair.begin_pos)
}

// uint32 end_pos = 2 [(.gogo.json) = {
inline void ResponseItem_MatchedPair::clear_end_pos() {
  end_pos_ = 0u;
}
inline ::google::protobuf::uint32 ResponseItem_MatchedPair::end_pos() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.MatchedPair.end_pos)
  return end_pos_;
}
inline void ResponseItem_MatchedPair::set_end_pos(::google::protobuf::uint32 value) {
  
  end_pos_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.MatchedPair.end_pos)
}

// -------------------------------------------------------------------

// ResponseItem

// string text = 1 [(.gogo.json) = {
inline void ResponseItem::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::text() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.text)
  return text_.GetNoArena();
}
inline void ResponseItem::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.text)
}
#if LANG_CXX11
inline void ResponseItem::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.text)
}
#endif
inline void ResponseItem::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.text)
}
inline void ResponseItem::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.text)
}
inline ::std::string* ResponseItem::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_text() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.text)
}

// string text_marked = 2 [(.gogo.json) = {
inline void ResponseItem::clear_text_marked() {
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::text_marked() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.text_marked)
  return text_marked_.GetNoArena();
}
inline void ResponseItem::set_text_marked(const ::std::string& value) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseItem.text_marked)
}
#if LANG_CXX11
inline void ResponseItem::set_text_marked(::std::string&& value) {
  
  text_marked_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseItem.text_marked)
}
#endif
inline void ResponseItem::set_text_marked(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseItem.text_marked)
}
inline void ResponseItem::set_text_marked(const char* value, size_t size) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseItem.text_marked)
}
inline ::std::string* ResponseItem::mutable_text_marked() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.text_marked)
  return text_marked_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_text_marked() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.text_marked)
  
  return text_marked_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_text_marked(::std::string* text_marked) {
  if (text_marked != NULL) {
    
  } else {
    
  }
  text_marked_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_marked);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.text_marked)
}

// .pb.suggests.dzen.ResponseItem.Features features = 3 [(.gogo.json) = {
inline bool ResponseItem::has_features() const {
  return this != internal_default_instance() && features_ != NULL;
}
inline void ResponseItem::clear_features() {
  if (GetArenaNoVirtual() == NULL && features_ != NULL) delete features_;
  features_ = NULL;
}
inline const ::pb::suggests::dzen::ResponseItem_Features& ResponseItem::features() const {
  const ::pb::suggests::dzen::ResponseItem_Features* p = features_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.features)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::ResponseItem_Features*>(
      &::pb::suggests::dzen::_ResponseItem_Features_default_instance_);
}
inline ::pb::suggests::dzen::ResponseItem_Features* ResponseItem::mutable_features() {
  
  if (features_ == NULL) {
    features_ = new ::pb::suggests::dzen::ResponseItem_Features;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.features)
  return features_;
}
inline ::pb::suggests::dzen::ResponseItem_Features* ResponseItem::release_features() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseItem.features)
  
  ::pb::suggests::dzen::ResponseItem_Features* temp = features_;
  features_ = NULL;
  return temp;
}
inline void ResponseItem::set_allocated_features(::pb::suggests::dzen::ResponseItem_Features* features) {
  delete features_;
  features_ = features;
  if (features) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseItem.features)
}

// repeated .pb.suggests.dzen.ResponseItem.Navig navigs = 4 [(.gogo.json) = {
inline int ResponseItem::navigs_size() const {
  return navigs_.size();
}
inline void ResponseItem::clear_navigs() {
  navigs_.Clear();
}
inline const ::pb::suggests::dzen::ResponseItem_Navig& ResponseItem::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Get(index);
}
inline ::pb::suggests::dzen::ResponseItem_Navig* ResponseItem::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Mutable(index);
}
inline ::pb::suggests::dzen::ResponseItem_Navig* ResponseItem::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >*
ResponseItem::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.ResponseItem.navigs)
  return &navigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_Navig >&
ResponseItem::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.ResponseItem.navigs)
  return navigs_;
}

// repeated .pb.suggests.dzen.ResponseItem.MatchedPair matched_ranges = 5 [(.gogo.json) = {
inline int ResponseItem::matched_ranges_size() const {
  return matched_ranges_.size();
}
inline void ResponseItem::clear_matched_ranges() {
  matched_ranges_.Clear();
}
inline const ::pb::suggests::dzen::ResponseItem_MatchedPair& ResponseItem::matched_ranges(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Get(index);
}
inline ::pb::suggests::dzen::ResponseItem_MatchedPair* ResponseItem::mutable_matched_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Mutable(index);
}
inline ::pb::suggests::dzen::ResponseItem_MatchedPair* ResponseItem::add_matched_ranges() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >*
ResponseItem::mutable_matched_ranges() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.ResponseItem.matched_ranges)
  return &matched_ranges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem_MatchedPair >&
ResponseItem::matched_ranges() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.ResponseItem.matched_ranges)
  return matched_ranges_;
}

// -------------------------------------------------------------------

// ResponseNavig

// string id = 1 [(.gogo.json) = {
inline void ResponseNavig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseNavig::id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseNavig.id)
  return id_.GetNoArena();
}
inline void ResponseNavig::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseNavig.id)
}
#if LANG_CXX11
inline void ResponseNavig::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.ResponseNavig.id)
}
#endif
inline void ResponseNavig::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.ResponseNavig.id)
}
inline void ResponseNavig::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.ResponseNavig.id)
}
inline ::std::string* ResponseNavig::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.ResponseNavig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseNavig::release_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.ResponseNavig.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseNavig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.ResponseNavig.id)
}

// double prob = 2 [(.gogo.json) = {
inline void ResponseNavig::clear_prob() {
  prob_ = 0;
}
inline double ResponseNavig::prob() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.ResponseNavig.prob)
  return prob_;
}
inline void ResponseNavig::set_prob(double value) {
  
  prob_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.ResponseNavig.prob)
}

// -------------------------------------------------------------------

// Response_Terms

// string query = 1 [(.gogo.json) = {
inline void Response_Terms::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response_Terms::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.Terms.query)
  return query_.GetNoArena();
}
inline void Response_Terms::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.Response.Terms.query)
}
#if LANG_CXX11
inline void Response_Terms::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.Response.Terms.query)
}
#endif
inline void Response_Terms::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.Response.Terms.query)
}
inline void Response_Terms::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.Response.Terms.query)
}
inline ::std::string* Response_Terms::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.Terms.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Terms::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.Terms.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Terms::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.Terms.query)
}

// -------------------------------------------------------------------

// Response

// string qid = 1 [(.gogo.json) = {
inline void Response::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::qid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.qid)
  return qid_.GetNoArena();
}
inline void Response::set_qid(const ::std::string& value) {
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.dzen.Response.qid)
}
#if LANG_CXX11
inline void Response::set_qid(::std::string&& value) {
  
  qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.dzen.Response.qid)
}
#endif
inline void Response::set_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.dzen.Response.qid)
}
inline void Response::set_qid(const char* value, size_t size) {
  
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.dzen.Response.qid)
}
inline ::std::string* Response::mutable_qid() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_qid() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.qid)
  
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    
  } else {
    
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.qid)
}

// .pb.suggests.dzen.Response.Terms terms = 2 [(.gogo.json) = {
inline bool Response::has_terms() const {
  return this != internal_default_instance() && terms_ != NULL;
}
inline void Response::clear_terms() {
  if (GetArenaNoVirtual() == NULL && terms_ != NULL) delete terms_;
  terms_ = NULL;
}
inline const ::pb::suggests::dzen::Response_Terms& Response::terms() const {
  const ::pb::suggests::dzen::Response_Terms* p = terms_;
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.terms)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::dzen::Response_Terms*>(
      &::pb::suggests::dzen::_Response_Terms_default_instance_);
}
inline ::pb::suggests::dzen::Response_Terms* Response::mutable_terms() {
  
  if (terms_ == NULL) {
    terms_ = new ::pb::suggests::dzen::Response_Terms;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.terms)
  return terms_;
}
inline ::pb::suggests::dzen::Response_Terms* Response::release_terms() {
  // @@protoc_insertion_point(field_release:pb.suggests.dzen.Response.terms)
  
  ::pb::suggests::dzen::Response_Terms* temp = terms_;
  terms_ = NULL;
  return temp;
}
inline void Response::set_allocated_terms(::pb::suggests::dzen::Response_Terms* terms) {
  delete terms_;
  terms_ = terms;
  if (terms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.dzen.Response.terms)
}

// repeated .pb.suggests.dzen.ResponseItem items = 3 [(.gogo.json) = {
inline int Response::items_size() const {
  return items_.size();
}
inline void Response::clear_items() {
  items_.Clear();
}
inline const ::pb::suggests::dzen::ResponseItem& Response::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.items)
  return items_.Get(index);
}
inline ::pb::suggests::dzen::ResponseItem* Response::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.items)
  return items_.Mutable(index);
}
inline ::pb::suggests::dzen::ResponseItem* Response::add_items() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.Response.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >*
Response::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.Response.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseItem >&
Response::items() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.Response.items)
  return items_;
}

// repeated .pb.suggests.dzen.ResponseNavig navigs = 4 [(.gogo.json) = {
inline int Response::navigs_size() const {
  return navigs_.size();
}
inline void Response::clear_navigs() {
  navigs_.Clear();
}
inline const ::pb::suggests::dzen::ResponseNavig& Response::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.dzen.Response.navigs)
  return navigs_.Get(index);
}
inline ::pb::suggests::dzen::ResponseNavig* Response::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.dzen.Response.navigs)
  return navigs_.Mutable(index);
}
inline ::pb::suggests::dzen::ResponseNavig* Response::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.dzen.Response.navigs)
  return navigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >*
Response::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.dzen.Response.navigs)
  return &navigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::dzen::ResponseNavig >&
Response::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.dzen.Response.navigs)
  return navigs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dzen
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sugg_5fdzen_2eproto__INCLUDED
