// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_dzen_news.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sugg_dzen_news.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
namespace suggests {
class DzenNewsQuery_VariantDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DzenNewsQuery_Variant>
     _instance;
} _DzenNewsQuery_Variant_default_instance_;
class DzenNewsQuery_GroupDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DzenNewsQuery_Group>
     _instance;
} _DzenNewsQuery_Group_default_instance_;
class DzenNewsQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DzenNewsQuery>
     _instance;
} _DzenNewsQuery_default_instance_;

namespace protobuf_sugg_5fdzen_5fnews_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Variant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Variant, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Variant, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Variant, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Group, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery_Group, frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, freshness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, variants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DzenNewsQuery, groups_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(DzenNewsQuery_Variant)},
  { 8, -1, sizeof(DzenNewsQuery_Group)},
  { 15, -1, sizeof(DzenNewsQuery)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DzenNewsQuery_Variant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DzenNewsQuery_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DzenNewsQuery_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sugg_dzen_news.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gogo::protobuf_options_2eproto::InitDefaults();
  _DzenNewsQuery_Variant_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DzenNewsQuery_Variant_default_instance_);_DzenNewsQuery_Group_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DzenNewsQuery_Group_default_instance_);_DzenNewsQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DzenNewsQuery_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024sugg_dzen_news.proto\022\013pb.suggests\032\ropt"
      "ions.proto\"\230\003\n\rDzenNewsQuery\022\032\n\005query\030\001 "
      "\001(\tB\013\222\265\030\007\n\005query\022\035\n\tfrequency\030\002 \001(\rB\n\222\265\030"
      "\006\n\004freq\022\"\n\tfreshness\030\003 \001(\001B\017\222\265\030\013\n\tfreshn"
      "ess\022D\n\010variants\030\004 \003(\0132\".pb.suggests.Dzen"
      "NewsQuery.VariantB\016\222\265\030\n\n\010variants\022>\n\006gro"
      "ups\030\005 \003(\0132 .pb.suggests.DzenNewsQuery.Gr"
      "oupB\014\222\265\030\010\n\006groups\032^\n\007Variant\022\030\n\004text\030\001 \001"
      "(\tB\n\222\265\030\006\n\004text\022\035\n\tfrequency\030\002 \001(\rB\n\222\265\030\006\n"
      "\004freq\022\032\n\005flags\030\003 \001(\rB\013\222\265\030\007\n\005flags\032B\n\005Gro"
      "up\022\032\n\002id\030\001 \001(\tB\016\222\265\030\n\n\010group_id\022\035\n\tfreque"
      "ncy\030\002 \001(\rB\n\222\265\030\006\n\004freqb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sugg_dzen_news.proto", &protobuf_RegisterTypes);
  ::gogo::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sugg_5fdzen_5fnews_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DzenNewsQuery_Variant::kTextFieldNumber;
const int DzenNewsQuery_Variant::kFrequencyFieldNumber;
const int DzenNewsQuery_Variant::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DzenNewsQuery_Variant::DzenNewsQuery_Variant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.DzenNewsQuery.Variant)
}
DzenNewsQuery_Variant::DzenNewsQuery_Variant(const DzenNewsQuery_Variant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&frequency_, &from.frequency_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&frequency_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.DzenNewsQuery.Variant)
}

void DzenNewsQuery_Variant::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&frequency_)) + sizeof(flags_));
  _cached_size_ = 0;
}

DzenNewsQuery_Variant::~DzenNewsQuery_Variant() {
  // @@protoc_insertion_point(destructor:pb.suggests.DzenNewsQuery.Variant)
  SharedDtor();
}

void DzenNewsQuery_Variant::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DzenNewsQuery_Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DzenNewsQuery_Variant::descriptor() {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DzenNewsQuery_Variant& DzenNewsQuery_Variant::default_instance() {
  protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  return *internal_default_instance();
}

DzenNewsQuery_Variant* DzenNewsQuery_Variant::New(::google::protobuf::Arena* arena) const {
  DzenNewsQuery_Variant* n = new DzenNewsQuery_Variant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DzenNewsQuery_Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.DzenNewsQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&frequency_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool DzenNewsQuery_Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.DzenNewsQuery.Variant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.DzenNewsQuery.Variant.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frequency = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.DzenNewsQuery.Variant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.DzenNewsQuery.Variant)
  return false;
#undef DO_
}

void DzenNewsQuery_Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.DzenNewsQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.Variant.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frequency(), output);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.DzenNewsQuery.Variant)
}

::google::protobuf::uint8* DzenNewsQuery_Variant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.DzenNewsQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.Variant.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frequency(), target);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.DzenNewsQuery.Variant)
  return target;
}

size_t DzenNewsQuery_Variant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.DzenNewsQuery.Variant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DzenNewsQuery_Variant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.DzenNewsQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  const DzenNewsQuery_Variant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DzenNewsQuery_Variant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.DzenNewsQuery.Variant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.DzenNewsQuery.Variant)
    MergeFrom(*source);
  }
}

void DzenNewsQuery_Variant::MergeFrom(const DzenNewsQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.DzenNewsQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void DzenNewsQuery_Variant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.DzenNewsQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DzenNewsQuery_Variant::CopyFrom(const DzenNewsQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.DzenNewsQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DzenNewsQuery_Variant::IsInitialized() const {
  return true;
}

void DzenNewsQuery_Variant::Swap(DzenNewsQuery_Variant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DzenNewsQuery_Variant::InternalSwap(DzenNewsQuery_Variant* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(frequency_, other->frequency_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DzenNewsQuery_Variant::GetMetadata() const {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DzenNewsQuery_Variant

// string text = 1 [(.gogo.json) = {
void DzenNewsQuery_Variant::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DzenNewsQuery_Variant::text() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.Variant.text)
  return text_.GetNoArena();
}
void DzenNewsQuery_Variant::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.Variant.text)
}
#if LANG_CXX11
void DzenNewsQuery_Variant::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.DzenNewsQuery.Variant.text)
}
#endif
void DzenNewsQuery_Variant::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.DzenNewsQuery.Variant.text)
}
void DzenNewsQuery_Variant::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.DzenNewsQuery.Variant.text)
}
::std::string* DzenNewsQuery_Variant::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.DzenNewsQuery.Variant.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DzenNewsQuery_Variant::release_text() {
  // @@protoc_insertion_point(field_release:pb.suggests.DzenNewsQuery.Variant.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DzenNewsQuery_Variant::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.DzenNewsQuery.Variant.text)
}

// uint32 frequency = 2 [(.gogo.json) = {
void DzenNewsQuery_Variant::clear_frequency() {
  frequency_ = 0u;
}
::google::protobuf::uint32 DzenNewsQuery_Variant::frequency() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.Variant.frequency)
  return frequency_;
}
void DzenNewsQuery_Variant::set_frequency(::google::protobuf::uint32 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.Variant.frequency)
}

// uint32 flags = 3 [(.gogo.json) = {
void DzenNewsQuery_Variant::clear_flags() {
  flags_ = 0u;
}
::google::protobuf::uint32 DzenNewsQuery_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.Variant.flags)
  return flags_;
}
void DzenNewsQuery_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.Variant.flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DzenNewsQuery_Group::kIdFieldNumber;
const int DzenNewsQuery_Group::kFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DzenNewsQuery_Group::DzenNewsQuery_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.DzenNewsQuery.Group)
}
DzenNewsQuery_Group::DzenNewsQuery_Group(const DzenNewsQuery_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  frequency_ = from.frequency_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.DzenNewsQuery.Group)
}

void DzenNewsQuery_Group::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frequency_ = 0u;
  _cached_size_ = 0;
}

DzenNewsQuery_Group::~DzenNewsQuery_Group() {
  // @@protoc_insertion_point(destructor:pb.suggests.DzenNewsQuery.Group)
  SharedDtor();
}

void DzenNewsQuery_Group::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DzenNewsQuery_Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DzenNewsQuery_Group::descriptor() {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DzenNewsQuery_Group& DzenNewsQuery_Group::default_instance() {
  protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  return *internal_default_instance();
}

DzenNewsQuery_Group* DzenNewsQuery_Group::New(::google::protobuf::Arena* arena) const {
  DzenNewsQuery_Group* n = new DzenNewsQuery_Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DzenNewsQuery_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.DzenNewsQuery.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frequency_ = 0u;
  _internal_metadata_.Clear();
}

bool DzenNewsQuery_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.DzenNewsQuery.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.DzenNewsQuery.Group.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frequency = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.DzenNewsQuery.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.DzenNewsQuery.Group)
  return false;
#undef DO_
}

void DzenNewsQuery_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.DzenNewsQuery.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.Group.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frequency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.DzenNewsQuery.Group)
}

::google::protobuf::uint8* DzenNewsQuery_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.DzenNewsQuery.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.Group.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frequency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.DzenNewsQuery.Group)
  return target;
}

size_t DzenNewsQuery_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.DzenNewsQuery.Group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1 [(.gogo.json) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DzenNewsQuery_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.DzenNewsQuery.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const DzenNewsQuery_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DzenNewsQuery_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.DzenNewsQuery.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.DzenNewsQuery.Group)
    MergeFrom(*source);
  }
}

void DzenNewsQuery_Group::MergeFrom(const DzenNewsQuery_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.DzenNewsQuery.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
}

void DzenNewsQuery_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.DzenNewsQuery.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DzenNewsQuery_Group::CopyFrom(const DzenNewsQuery_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.DzenNewsQuery.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DzenNewsQuery_Group::IsInitialized() const {
  return true;
}

void DzenNewsQuery_Group::Swap(DzenNewsQuery_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DzenNewsQuery_Group::InternalSwap(DzenNewsQuery_Group* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(frequency_, other->frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DzenNewsQuery_Group::GetMetadata() const {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DzenNewsQuery_Group

// string id = 1 [(.gogo.json) = {
void DzenNewsQuery_Group::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DzenNewsQuery_Group::id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.Group.id)
  return id_.GetNoArena();
}
void DzenNewsQuery_Group::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.Group.id)
}
#if LANG_CXX11
void DzenNewsQuery_Group::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.DzenNewsQuery.Group.id)
}
#endif
void DzenNewsQuery_Group::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.DzenNewsQuery.Group.id)
}
void DzenNewsQuery_Group::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.DzenNewsQuery.Group.id)
}
::std::string* DzenNewsQuery_Group::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.DzenNewsQuery.Group.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DzenNewsQuery_Group::release_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.DzenNewsQuery.Group.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DzenNewsQuery_Group::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.DzenNewsQuery.Group.id)
}

// uint32 frequency = 2 [(.gogo.json) = {
void DzenNewsQuery_Group::clear_frequency() {
  frequency_ = 0u;
}
::google::protobuf::uint32 DzenNewsQuery_Group::frequency() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.Group.frequency)
  return frequency_;
}
void DzenNewsQuery_Group::set_frequency(::google::protobuf::uint32 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.Group.frequency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DzenNewsQuery::kQueryFieldNumber;
const int DzenNewsQuery::kFrequencyFieldNumber;
const int DzenNewsQuery::kFreshnessFieldNumber;
const int DzenNewsQuery::kVariantsFieldNumber;
const int DzenNewsQuery::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DzenNewsQuery::DzenNewsQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.DzenNewsQuery)
}
DzenNewsQuery::DzenNewsQuery(const DzenNewsQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      variants_(from.variants_),
      groups_(from.groups_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&freshness_, &from.freshness_,
    static_cast<size_t>(reinterpret_cast<char*>(&frequency_) -
    reinterpret_cast<char*>(&freshness_)) + sizeof(frequency_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.DzenNewsQuery)
}

void DzenNewsQuery::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&freshness_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&freshness_)) + sizeof(frequency_));
  _cached_size_ = 0;
}

DzenNewsQuery::~DzenNewsQuery() {
  // @@protoc_insertion_point(destructor:pb.suggests.DzenNewsQuery)
  SharedDtor();
}

void DzenNewsQuery::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DzenNewsQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DzenNewsQuery::descriptor() {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DzenNewsQuery& DzenNewsQuery::default_instance() {
  protobuf_sugg_5fdzen_5fnews_2eproto::InitDefaults();
  return *internal_default_instance();
}

DzenNewsQuery* DzenNewsQuery::New(::google::protobuf::Arena* arena) const {
  DzenNewsQuery* n = new DzenNewsQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DzenNewsQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.DzenNewsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variants_.Clear();
  groups_.Clear();
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&freshness_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&freshness_)) + sizeof(frequency_));
  _internal_metadata_.Clear();
}

bool DzenNewsQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.DzenNewsQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.DzenNewsQuery.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frequency = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double freshness = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &freshness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.DzenNewsQuery.Variant variants = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variants()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.DzenNewsQuery.Group groups = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.DzenNewsQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.DzenNewsQuery)
  return false;
#undef DO_
}

void DzenNewsQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.DzenNewsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frequency(), output);
  }

  // double freshness = 3 [(.gogo.json) = {
  if (this->freshness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->freshness(), output);
  }

  // repeated .pb.suggests.DzenNewsQuery.Variant variants = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->variants(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.DzenNewsQuery.Group groups = 5 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->groups(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.DzenNewsQuery)
}

::google::protobuf::uint8* DzenNewsQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.DzenNewsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.DzenNewsQuery.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frequency(), target);
  }

  // double freshness = 3 [(.gogo.json) = {
  if (this->freshness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->freshness(), target);
  }

  // repeated .pb.suggests.DzenNewsQuery.Variant variants = 4 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->variants(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.DzenNewsQuery.Group groups = 5 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->groups(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.DzenNewsQuery)
  return target;
}

size_t DzenNewsQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.DzenNewsQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.suggests.DzenNewsQuery.Variant variants = 4 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->variants_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variants(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.DzenNewsQuery.Group groups = 5 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(static_cast<int>(i)));
    }
  }

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // double freshness = 3 [(.gogo.json) = {
  if (this->freshness() != 0) {
    total_size += 1 + 8;
  }

  // uint32 frequency = 2 [(.gogo.json) = {
  if (this->frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DzenNewsQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.DzenNewsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const DzenNewsQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DzenNewsQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.DzenNewsQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.DzenNewsQuery)
    MergeFrom(*source);
  }
}

void DzenNewsQuery::MergeFrom(const DzenNewsQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.DzenNewsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variants_.MergeFrom(from.variants_);
  groups_.MergeFrom(from.groups_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.freshness() != 0) {
    set_freshness(from.freshness());
  }
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
}

void DzenNewsQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.DzenNewsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DzenNewsQuery::CopyFrom(const DzenNewsQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.DzenNewsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DzenNewsQuery::IsInitialized() const {
  return true;
}

void DzenNewsQuery::Swap(DzenNewsQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DzenNewsQuery::InternalSwap(DzenNewsQuery* other) {
  using std::swap;
  variants_.InternalSwap(&other->variants_);
  groups_.InternalSwap(&other->groups_);
  query_.Swap(&other->query_);
  swap(freshness_, other->freshness_);
  swap(frequency_, other->frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DzenNewsQuery::GetMetadata() const {
  protobuf_sugg_5fdzen_5fnews_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fdzen_5fnews_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DzenNewsQuery

// string query = 1 [(.gogo.json) = {
void DzenNewsQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DzenNewsQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.query)
  return query_.GetNoArena();
}
void DzenNewsQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.query)
}
#if LANG_CXX11
void DzenNewsQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.DzenNewsQuery.query)
}
#endif
void DzenNewsQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.DzenNewsQuery.query)
}
void DzenNewsQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.DzenNewsQuery.query)
}
::std::string* DzenNewsQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.DzenNewsQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DzenNewsQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.DzenNewsQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DzenNewsQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.DzenNewsQuery.query)
}

// uint32 frequency = 2 [(.gogo.json) = {
void DzenNewsQuery::clear_frequency() {
  frequency_ = 0u;
}
::google::protobuf::uint32 DzenNewsQuery::frequency() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.frequency)
  return frequency_;
}
void DzenNewsQuery::set_frequency(::google::protobuf::uint32 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.frequency)
}

// double freshness = 3 [(.gogo.json) = {
void DzenNewsQuery::clear_freshness() {
  freshness_ = 0;
}
double DzenNewsQuery::freshness() const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.freshness)
  return freshness_;
}
void DzenNewsQuery::set_freshness(double value) {
  
  freshness_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.DzenNewsQuery.freshness)
}

// repeated .pb.suggests.DzenNewsQuery.Variant variants = 4 [(.gogo.json) = {
int DzenNewsQuery::variants_size() const {
  return variants_.size();
}
void DzenNewsQuery::clear_variants() {
  variants_.Clear();
}
const ::pb::suggests::DzenNewsQuery_Variant& DzenNewsQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.variants)
  return variants_.Get(index);
}
::pb::suggests::DzenNewsQuery_Variant* DzenNewsQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.DzenNewsQuery.variants)
  return variants_.Mutable(index);
}
::pb::suggests::DzenNewsQuery_Variant* DzenNewsQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.DzenNewsQuery.variants)
  return variants_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::DzenNewsQuery_Variant >*
DzenNewsQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.DzenNewsQuery.variants)
  return &variants_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::DzenNewsQuery_Variant >&
DzenNewsQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.DzenNewsQuery.variants)
  return variants_;
}

// repeated .pb.suggests.DzenNewsQuery.Group groups = 5 [(.gogo.json) = {
int DzenNewsQuery::groups_size() const {
  return groups_.size();
}
void DzenNewsQuery::clear_groups() {
  groups_.Clear();
}
const ::pb::suggests::DzenNewsQuery_Group& DzenNewsQuery::groups(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.DzenNewsQuery.groups)
  return groups_.Get(index);
}
::pb::suggests::DzenNewsQuery_Group* DzenNewsQuery::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.DzenNewsQuery.groups)
  return groups_.Mutable(index);
}
::pb::suggests::DzenNewsQuery_Group* DzenNewsQuery::add_groups() {
  // @@protoc_insertion_point(field_add:pb.suggests.DzenNewsQuery.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::DzenNewsQuery_Group >*
DzenNewsQuery::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.DzenNewsQuery.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::DzenNewsQuery_Group >&
DzenNewsQuery::groups() const {
  // @@protoc_insertion_point(field_list:pb.suggests.DzenNewsQuery.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)
