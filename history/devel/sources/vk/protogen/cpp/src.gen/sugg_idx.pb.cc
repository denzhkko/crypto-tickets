// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_idx.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sugg_idx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
namespace suggests {
namespace index {
class IdxQuery_VariantDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery_Variant>
     _instance;
} _IdxQuery_Variant_default_instance_;
class IdxQuery_ActionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery_Action>
     _instance;
} _IdxQuery_Action_default_instance_;
class IdxQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery>
     _instance;
} _IdxQuery_default_instance_;
class IdxActionDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxActionData>
     _instance;
} _IdxActionData_default_instance_;
class StorageActionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageAction>
     _instance;
} _StorageAction_default_instance_;
class StorageQueryFeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageQueryFeatures>
     _instance;
} _StorageQueryFeatures_default_instance_;
class StorageQueryActionFeaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageQueryActionFeatures>
     _instance;
} _StorageQueryActionFeatures_default_instance_;

namespace protobuf_sugg_5fidx_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Variant, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery_Action, count_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, count_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, glue_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, variants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, actions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxActionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxActionData, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAction, nid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageAction, publisher_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryFeatures, count_1d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, nid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, uniq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, uniq_1d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageQueryActionFeatures, count_1d_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(IdxQuery_Variant)},
  { 8, -1, sizeof(IdxQuery_Action)},
  { 18, -1, sizeof(IdxQuery)},
  { 31, -1, sizeof(IdxActionData)},
  { 37, -1, sizeof(StorageAction)},
  { 44, -1, sizeof(StorageQueryFeatures)},
  { 54, -1, sizeof(StorageQueryActionFeatures)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_Variant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxActionData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageQueryFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageQueryActionFeatures_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sugg_idx.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gogo::protobuf_options_2eproto::InitDefaults();
  _IdxQuery_Variant_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_Variant_default_instance_);_IdxQuery_Action_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_Action_default_instance_);_IdxQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_default_instance_);_IdxActionData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxActionData_default_instance_);_StorageAction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageAction_default_instance_);_StorageQueryFeatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageQueryFeatures_default_instance_);_StorageQueryActionFeatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageQueryActionFeatures_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016sugg_idx.proto\022\021pb.suggests.index\032\ropt"
      "ions.proto\"\313\004\n\010IdxQuery\022\032\n\005query\030\001 \001(\tB\013"
      "\222\265\030\007\n\005query\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n"
      "\007uniq_1d\030\003 \001(\rB\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\004"
      " \001(\rB\013\222\265\030\007\n\005count\022 \n\010count_1d\030\005 \001(\rB\016\222\265\030"
      "\n\n\010count_1d\022 \n\010glue_ids\030\006 \003(\005B\016\222\265\030\n\n\010glu"
      "e_ids\022E\n\010variants\030\007 \003(\0132#.pb.suggests.in"
      "dex.IdxQuery.VariantB\016\222\265\030\n\n\010variants\022B\n\007"
      "actions\030\010 \003(\0132\".pb.suggests.index.IdxQue"
      "ry.ActionB\r\222\265\030\t\n\007actions\032[\n\007Variant\022\032\n\005q"
      "uery\030\001 \001(\tB\013\222\265\030\007\n\005query\022\030\n\004uniq\030\002 \001(\rB\n\222"
      "\265\030\006\n\004uniq\022\032\n\005flags\030\003 \001(\rB\013\222\265\030\007\n\005flags\032\240\001"
      "\n\006Action\022\036\n\007item_id\030\001 \001(\tB\r\222\265\030\t\n\007item_id"
      "\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n\007uniq_1d\030\003 "
      "\001(\rB\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\004 \001(\rB\013\222\265\030\007\n"
      "\005count\022 \n\010count_1d\030\005 \001(\rB\016\222\265\030\n\n\010count_1d"
      "\"/\n\rIdxActionData\022\036\n\007item_id\030\001 \001(\tB\r\222\265\030\t"
      "\n\007item_id\"F\n\rStorageAction\022\013\n\003nid\030\001 \001(\004\022"
      "(\n\014publisher_id\030\002 \001(\tB\022\222\265\030\016\n\014publisher_i"
      "d\"\235\001\n\024StorageQueryFeatures\022\r\n\005query\030\001 \001("
      "\t\022\030\n\004uniq\030\002 \001(\rB\n\222\265\030\006\n\004uniq\022\036\n\007uniq_1d\030\003"
      " \001(\rB\r\222\265\030\t\n\007uniq_1d\022\032\n\005count\030\004 \001(\rB\013\222\265\030\007"
      "\n\005count\022 \n\010count_1d\030\005 \001(\rB\016\222\265\030\n\n\010count_1"
      "d\"\260\001\n\032StorageQueryActionFeatures\022\r\n\005quer"
      "y\030\001 \001(\t\022\013\n\003nid\030\002 \001(\004\022\030\n\004uniq\030\003 \001(\rB\n\222\265\030\006"
      "\n\004uniq\022\036\n\007uniq_1d\030\004 \001(\rB\r\222\265\030\t\n\007uniq_1d\022\032"
      "\n\005count\030\005 \001(\rB\013\222\265\030\007\n\005count\022 \n\010count_1d\030\006"
      " \001(\rB\016\222\265\030\n\n\010count_1db\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sugg_idx.proto", &protobuf_RegisterTypes);
  ::gogo::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sugg_5fidx_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery_Variant::kQueryFieldNumber;
const int IdxQuery_Variant::kUniqFieldNumber;
const int IdxQuery_Variant::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery_Variant::IdxQuery_Variant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.IdxQuery.Variant)
}
IdxQuery_Variant::IdxQuery_Variant(const IdxQuery_Variant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.IdxQuery.Variant)
}

void IdxQuery_Variant::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  _cached_size_ = 0;
}

IdxQuery_Variant::~IdxQuery_Variant() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.IdxQuery.Variant)
  SharedDtor();
}

void IdxQuery_Variant::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery_Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery_Variant::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery_Variant& IdxQuery_Variant::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery_Variant* IdxQuery_Variant::New(::google::protobuf::Arena* arena) const {
  IdxQuery_Variant* n = new IdxQuery_Variant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery_Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool IdxQuery_Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.IdxQuery.Variant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.IdxQuery.Variant.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.IdxQuery.Variant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.IdxQuery.Variant)
  return false;
#undef DO_
}

void IdxQuery_Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.Variant.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.IdxQuery.Variant)
}

::google::protobuf::uint8* IdxQuery_Variant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.IdxQuery.Variant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.Variant.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.IdxQuery.Variant)
  return target;
}

size_t IdxQuery_Variant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.IdxQuery.Variant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 flags = 3 [(.gogo.json) = {
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery_Variant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.IdxQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery_Variant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery_Variant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.IdxQuery.Variant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.IdxQuery.Variant)
    MergeFrom(*source);
  }
}

void IdxQuery_Variant::MergeFrom(const IdxQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.IdxQuery.Variant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void IdxQuery_Variant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.IdxQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery_Variant::CopyFrom(const IdxQuery_Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.IdxQuery.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery_Variant::IsInitialized() const {
  return true;
}

void IdxQuery_Variant::Swap(IdxQuery_Variant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery_Variant::InternalSwap(IdxQuery_Variant* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery_Variant::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery_Variant

// string query = 1 [(.gogo.json) = {
void IdxQuery_Variant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery_Variant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.query)
  return query_.GetNoArena();
}
void IdxQuery_Variant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.query)
}
#if LANG_CXX11
void IdxQuery_Variant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.Variant.query)
}
#endif
void IdxQuery_Variant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.Variant.query)
}
void IdxQuery_Variant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.Variant.query)
}
::std::string* IdxQuery_Variant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.Variant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery_Variant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.Variant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery_Variant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.Variant.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void IdxQuery_Variant::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Variant::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.uniq)
  return uniq_;
}
void IdxQuery_Variant::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.uniq)
}

// uint32 flags = 3 [(.gogo.json) = {
void IdxQuery_Variant::clear_flags() {
  flags_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.flags)
  return flags_;
}
void IdxQuery_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery_Action::kItemIdFieldNumber;
const int IdxQuery_Action::kUniqFieldNumber;
const int IdxQuery_Action::kUniq1DFieldNumber;
const int IdxQuery_Action::kCountFieldNumber;
const int IdxQuery_Action::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery_Action::IdxQuery_Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.IdxQuery.Action)
}
IdxQuery_Action::IdxQuery_Action(const IdxQuery_Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.IdxQuery.Action)
}

void IdxQuery_Action::SharedCtor() {
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

IdxQuery_Action::~IdxQuery_Action() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.IdxQuery.Action)
  SharedDtor();
}

void IdxQuery_Action::SharedDtor() {
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery_Action::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery_Action& IdxQuery_Action::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery_Action* IdxQuery_Action::New(::google::protobuf::Arena* arena) const {
  IdxQuery_Action* n = new IdxQuery_Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery_Action::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.IdxQuery.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool IdxQuery_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.IdxQuery.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string item_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.IdxQuery.Action.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.IdxQuery.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.IdxQuery.Action)
  return false;
#undef DO_
}

void IdxQuery_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.IdxQuery.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.Action.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_id(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.IdxQuery.Action)
}

::google::protobuf::uint8* IdxQuery_Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.IdxQuery.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.Action.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_id(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.IdxQuery.Action)
  return target;
}

size_t IdxQuery_Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.IdxQuery.Action)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery_Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.IdxQuery.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery_Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery_Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.IdxQuery.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.IdxQuery.Action)
    MergeFrom(*source);
  }
}

void IdxQuery_Action::MergeFrom(const IdxQuery_Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.IdxQuery.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void IdxQuery_Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.IdxQuery.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery_Action::CopyFrom(const IdxQuery_Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.IdxQuery.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery_Action::IsInitialized() const {
  return true;
}

void IdxQuery_Action::Swap(IdxQuery_Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery_Action::InternalSwap(IdxQuery_Action* other) {
  using std::swap;
  item_id_.Swap(&other->item_id_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery_Action::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery_Action

// string item_id = 1 [(.gogo.json) = {
void IdxQuery_Action::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery_Action::item_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.item_id)
  return item_id_.GetNoArena();
}
void IdxQuery_Action::set_item_id(const ::std::string& value) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.item_id)
}
#if LANG_CXX11
void IdxQuery_Action::set_item_id(::std::string&& value) {
  
  item_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.Action.item_id)
}
#endif
void IdxQuery_Action::set_item_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.Action.item_id)
}
void IdxQuery_Action::set_item_id(const char* value, size_t size) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.Action.item_id)
}
::std::string* IdxQuery_Action::mutable_item_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.Action.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery_Action::release_item_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.Action.item_id)
  
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery_Action::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    
  } else {
    
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.Action.item_id)
}

// uint32 uniq = 2 [(.gogo.json) = {
void IdxQuery_Action::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Action::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.uniq)
  return uniq_;
}
void IdxQuery_Action::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void IdxQuery_Action::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Action::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.uniq_1d)
  return uniq_1d_;
}
void IdxQuery_Action::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
void IdxQuery_Action::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Action::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.count)
  return count_;
}
void IdxQuery_Action::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
void IdxQuery_Action::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery_Action::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.count_1d)
  return count_1d_;
}
void IdxQuery_Action::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery::kQueryFieldNumber;
const int IdxQuery::kUniqFieldNumber;
const int IdxQuery::kUniq1DFieldNumber;
const int IdxQuery::kCountFieldNumber;
const int IdxQuery::kCount1DFieldNumber;
const int IdxQuery::kGlueIdsFieldNumber;
const int IdxQuery::kVariantsFieldNumber;
const int IdxQuery::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery::IdxQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.IdxQuery)
}
IdxQuery::IdxQuery(const IdxQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      glue_ids_(from.glue_ids_),
      variants_(from.variants_),
      actions_(from.actions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.IdxQuery)
}

void IdxQuery::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

IdxQuery::~IdxQuery() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.IdxQuery)
  SharedDtor();
}

void IdxQuery::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery& IdxQuery::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery* IdxQuery::New(::google::protobuf::Arena* arena) const {
  IdxQuery* n = new IdxQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  glue_ids_.Clear();
  variants_.Clear();
  actions_.Clear();
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool IdxQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.IdxQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.IdxQuery.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 glue_ids = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_glue_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_glue_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variants()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.IdxQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.IdxQuery)
  return false;
#undef DO_
}

void IdxQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count_1d(), output);
  }

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _glue_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->glue_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->glue_ids(i), output);
  }

  // repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->variants(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->actions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.IdxQuery)
}

::google::protobuf::uint8* IdxQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxQuery.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count_1d(), target);
  }

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _glue_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->glue_ids_, target);
  }

  // repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->variants(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->actions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.IdxQuery)
  return target;
}

size_t IdxQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.IdxQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->glue_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _glue_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->variants_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variants(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actions(static_cast<int>(i)));
    }
  }

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.IdxQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.IdxQuery)
    MergeFrom(*source);
  }
}

void IdxQuery::MergeFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  glue_ids_.MergeFrom(from.glue_ids_);
  variants_.MergeFrom(from.variants_);
  actions_.MergeFrom(from.actions_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void IdxQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery::CopyFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery::IsInitialized() const {
  return true;
}

void IdxQuery::Swap(IdxQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery::InternalSwap(IdxQuery* other) {
  using std::swap;
  glue_ids_.InternalSwap(&other->glue_ids_);
  variants_.InternalSwap(&other->variants_);
  actions_.InternalSwap(&other->actions_);
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery

// string query = 1 [(.gogo.json) = {
void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.query)
  return query_.GetNoArena();
}
void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.query)
}
#if LANG_CXX11
void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.query)
}
#endif
void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.query)
}
void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.query)
}
::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void IdxQuery::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 IdxQuery::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.uniq)
  return uniq_;
}
void IdxQuery::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void IdxQuery::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.uniq_1d)
  return uniq_1d_;
}
void IdxQuery::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
void IdxQuery::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 IdxQuery::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.count)
  return count_;
}
void IdxQuery::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
void IdxQuery::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 IdxQuery::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.count_1d)
  return count_1d_;
}
void IdxQuery::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.count_1d)
}

// repeated int32 glue_ids = 6 [(.gogo.json) = {
int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
::google::protobuf::int32 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
void IdxQuery::set_glue_ids(int index, ::google::protobuf::int32 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.glue_ids)
}
void IdxQuery::add_glue_ids(::google::protobuf::int32 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.glue_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.glue_ids)
  return glue_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.glue_ids)
  return &glue_ids_;
}

// repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
int IdxQuery::variants_size() const {
  return variants_.size();
}
void IdxQuery::clear_variants() {
  variants_.Clear();
}
const ::pb::suggests::index::IdxQuery_Variant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.variants)
  return variants_.Get(index);
}
::pb::suggests::index::IdxQuery_Variant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.variants)
  return variants_.Mutable(index);
}
::pb::suggests::index::IdxQuery_Variant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.variants)
  return variants_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.variants)
  return &variants_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
int IdxQuery::actions_size() const {
  return actions_.size();
}
void IdxQuery::clear_actions() {
  actions_.Clear();
}
const ::pb::suggests::index::IdxQuery_Action& IdxQuery::actions(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.actions)
  return actions_.Get(index);
}
::pb::suggests::index::IdxQuery_Action* IdxQuery::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.actions)
  return actions_.Mutable(index);
}
::pb::suggests::index::IdxQuery_Action* IdxQuery::add_actions() {
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.actions)
  return actions_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >*
IdxQuery::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.actions)
  return &actions_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >&
IdxQuery::actions() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.actions)
  return actions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxActionData::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxActionData::IdxActionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.IdxActionData)
}
IdxActionData::IdxActionData(const IdxActionData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.IdxActionData)
}

void IdxActionData::SharedCtor() {
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IdxActionData::~IdxActionData() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.IdxActionData)
  SharedDtor();
}

void IdxActionData::SharedDtor() {
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxActionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxActionData::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxActionData& IdxActionData::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxActionData* IdxActionData::New(::google::protobuf::Arena* arena) const {
  IdxActionData* n = new IdxActionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxActionData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.IdxActionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IdxActionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.IdxActionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string item_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.IdxActionData.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.IdxActionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.IdxActionData)
  return false;
#undef DO_
}

void IdxActionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.IdxActionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxActionData.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.IdxActionData)
}

::google::protobuf::uint8* IdxActionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.IdxActionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.IdxActionData.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.IdxActionData)
  return target;
}

size_t IdxActionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.IdxActionData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string item_id = 1 [(.gogo.json) = {
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxActionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.IdxActionData)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxActionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxActionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.IdxActionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.IdxActionData)
    MergeFrom(*source);
  }
}

void IdxActionData::MergeFrom(const IdxActionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.IdxActionData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
}

void IdxActionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.IdxActionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxActionData::CopyFrom(const IdxActionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.IdxActionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxActionData::IsInitialized() const {
  return true;
}

void IdxActionData::Swap(IdxActionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxActionData::InternalSwap(IdxActionData* other) {
  using std::swap;
  item_id_.Swap(&other->item_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxActionData::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxActionData

// string item_id = 1 [(.gogo.json) = {
void IdxActionData::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxActionData::item_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxActionData.item_id)
  return item_id_.GetNoArena();
}
void IdxActionData::set_item_id(const ::std::string& value) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxActionData.item_id)
}
#if LANG_CXX11
void IdxActionData::set_item_id(::std::string&& value) {
  
  item_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxActionData.item_id)
}
#endif
void IdxActionData::set_item_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxActionData.item_id)
}
void IdxActionData::set_item_id(const char* value, size_t size) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxActionData.item_id)
}
::std::string* IdxActionData::mutable_item_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxActionData.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxActionData::release_item_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxActionData.item_id)
  
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxActionData::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    
  } else {
    
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxActionData.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageAction::kNidFieldNumber;
const int StorageAction::kPublisherIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageAction::StorageAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.StorageAction)
}
StorageAction::StorageAction(const StorageAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  publisher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publisher_id().size() > 0) {
    publisher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_id_);
  }
  nid_ = from.nid_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.StorageAction)
}

void StorageAction::SharedCtor() {
  publisher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

StorageAction::~StorageAction() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.StorageAction)
  SharedDtor();
}

void StorageAction::SharedDtor() {
  publisher_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageAction::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageAction& StorageAction::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageAction* StorageAction::New(::google::protobuf::Arena* arena) const {
  StorageAction* n = new StorageAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageAction::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.StorageAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool StorageAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.StorageAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 nid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string publisher_id = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publisher_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.StorageAction.publisher_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.StorageAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.StorageAction)
  return false;
#undef DO_
}

void StorageAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.StorageAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nid(), output);
  }

  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageAction.publisher_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->publisher_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.StorageAction)
}

::google::protobuf::uint8* StorageAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.StorageAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nid(), target);
  }

  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), static_cast<int>(this->publisher_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageAction.publisher_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->publisher_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.StorageAction)
  return target;
}

size_t StorageAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.StorageAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string publisher_id = 2 [(.gogo.json) = {
  if (this->publisher_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publisher_id());
  }

  // uint64 nid = 1;
  if (this->nid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.StorageAction)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.StorageAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.StorageAction)
    MergeFrom(*source);
  }
}

void StorageAction::MergeFrom(const StorageAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.StorageAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publisher_id().size() > 0) {

    publisher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_id_);
  }
  if (from.nid() != 0) {
    set_nid(from.nid());
  }
}

void StorageAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.StorageAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageAction::CopyFrom(const StorageAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.StorageAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageAction::IsInitialized() const {
  return true;
}

void StorageAction::Swap(StorageAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageAction::InternalSwap(StorageAction* other) {
  using std::swap;
  publisher_id_.Swap(&other->publisher_id_);
  swap(nid_, other->nid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageAction::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageAction

// uint64 nid = 1;
void StorageAction::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageAction::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageAction.nid)
  return nid_;
}
void StorageAction::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageAction.nid)
}

// string publisher_id = 2 [(.gogo.json) = {
void StorageAction::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageAction::publisher_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageAction.publisher_id)
  return publisher_id_.GetNoArena();
}
void StorageAction::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageAction.publisher_id)
}
#if LANG_CXX11
void StorageAction::set_publisher_id(::std::string&& value) {
  
  publisher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageAction.publisher_id)
}
#endif
void StorageAction::set_publisher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageAction.publisher_id)
}
void StorageAction::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageAction.publisher_id)
}
::std::string* StorageAction::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageAction.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageAction::release_publisher_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageAction.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageAction::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageAction.publisher_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageQueryFeatures::kQueryFieldNumber;
const int StorageQueryFeatures::kUniqFieldNumber;
const int StorageQueryFeatures::kUniq1DFieldNumber;
const int StorageQueryFeatures::kCountFieldNumber;
const int StorageQueryFeatures::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageQueryFeatures::StorageQueryFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.StorageQueryFeatures)
}
StorageQueryFeatures::StorageQueryFeatures(const StorageQueryFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&uniq_, &from.uniq_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.StorageQueryFeatures)
}

void StorageQueryFeatures::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

StorageQueryFeatures::~StorageQueryFeatures() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.StorageQueryFeatures)
  SharedDtor();
}

void StorageQueryFeatures::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageQueryFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageQueryFeatures::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageQueryFeatures& StorageQueryFeatures::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageQueryFeatures* StorageQueryFeatures::New(::google::protobuf::Arena* arena) const {
  StorageQueryFeatures* n = new StorageQueryFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageQueryFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&uniq_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool StorageQueryFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.StorageQueryFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.StorageQueryFeatures.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.StorageQueryFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.StorageQueryFeatures)
  return false;
#undef DO_
}

void StorageQueryFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageQueryFeatures.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uniq(), output);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq_1d(), output);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.StorageQueryFeatures)
}

::google::protobuf::uint8* StorageQueryFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.StorageQueryFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageQueryFeatures.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uniq(), target);
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq_1d(), target);
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.StorageQueryFeatures)
  return target;
}

size_t StorageQueryFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.StorageQueryFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint32 uniq = 2 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 4 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 5 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageQueryFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.StorageQueryFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageQueryFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageQueryFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.StorageQueryFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.StorageQueryFeatures)
    MergeFrom(*source);
  }
}

void StorageQueryFeatures::MergeFrom(const StorageQueryFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.StorageQueryFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void StorageQueryFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.StorageQueryFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageQueryFeatures::CopyFrom(const StorageQueryFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.StorageQueryFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageQueryFeatures::IsInitialized() const {
  return true;
}

void StorageQueryFeatures::Swap(StorageQueryFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageQueryFeatures::InternalSwap(StorageQueryFeatures* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageQueryFeatures::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageQueryFeatures

// string query = 1;
void StorageQueryFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageQueryFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.query)
  return query_.GetNoArena();
}
void StorageQueryFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.query)
}
#if LANG_CXX11
void StorageQueryFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageQueryFeatures.query)
}
#endif
void StorageQueryFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageQueryFeatures.query)
}
void StorageQueryFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageQueryFeatures.query)
}
::std::string* StorageQueryFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageQueryFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageQueryFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageQueryFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageQueryFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageQueryFeatures.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
void StorageQueryFeatures::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.uniq)
  return uniq_;
}
void StorageQueryFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
void StorageQueryFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.uniq_1d)
  return uniq_1d_;
}
void StorageQueryFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
void StorageQueryFeatures::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.count)
  return count_;
}
void StorageQueryFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
void StorageQueryFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.count_1d)
  return count_1d_;
}
void StorageQueryFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageQueryActionFeatures::kQueryFieldNumber;
const int StorageQueryActionFeatures::kNidFieldNumber;
const int StorageQueryActionFeatures::kUniqFieldNumber;
const int StorageQueryActionFeatures::kUniq1DFieldNumber;
const int StorageQueryActionFeatures::kCountFieldNumber;
const int StorageQueryActionFeatures::kCount1DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageQueryActionFeatures::StorageQueryActionFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5fidx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.index.StorageQueryActionFeatures)
}
StorageQueryActionFeatures::StorageQueryActionFeatures(const StorageQueryActionFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&nid_, &from.nid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_1d_) -
    reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.index.StorageQueryActionFeatures)
}

void StorageQueryActionFeatures::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  _cached_size_ = 0;
}

StorageQueryActionFeatures::~StorageQueryActionFeatures() {
  // @@protoc_insertion_point(destructor:pb.suggests.index.StorageQueryActionFeatures)
  SharedDtor();
}

void StorageQueryActionFeatures::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageQueryActionFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageQueryActionFeatures::descriptor() {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageQueryActionFeatures& StorageQueryActionFeatures::default_instance() {
  protobuf_sugg_5fidx_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageQueryActionFeatures* StorageQueryActionFeatures::New(::google::protobuf::Arena* arena) const {
  StorageQueryActionFeatures* n = new StorageQueryActionFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageQueryActionFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.index.StorageQueryActionFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_1d_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(count_1d_));
  _internal_metadata_.Clear();
}

bool StorageQueryActionFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.index.StorageQueryActionFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.index.StorageQueryActionFeatures.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_1d = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count_1d = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_1d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.index.StorageQueryActionFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.index.StorageQueryActionFeatures)
  return false;
#undef DO_
}

void StorageQueryActionFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.index.StorageQueryActionFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageQueryActionFeatures.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nid(), output);
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uniq(), output);
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uniq_1d(), output);
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->count_1d(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.index.StorageQueryActionFeatures)
}

::google::protobuf::uint8* StorageQueryActionFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.index.StorageQueryActionFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.index.StorageQueryActionFeatures.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nid(), target);
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uniq(), target);
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uniq_1d(), target);
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->count_1d(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.index.StorageQueryActionFeatures)
  return target;
}

size_t StorageQueryActionFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.index.StorageQueryActionFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint64 nid = 2;
  if (this->nid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nid());
  }

  // uint32 uniq = 3 [(.gogo.json) = {
  if (this->uniq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq());
  }

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  if (this->uniq_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_1d());
  }

  // uint32 count = 5 [(.gogo.json) = {
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 count_1d = 6 [(.gogo.json) = {
  if (this->count_1d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_1d());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageQueryActionFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.index.StorageQueryActionFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageQueryActionFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageQueryActionFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.index.StorageQueryActionFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.index.StorageQueryActionFeatures)
    MergeFrom(*source);
  }
}

void StorageQueryActionFeatures::MergeFrom(const StorageQueryActionFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.index.StorageQueryActionFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.nid() != 0) {
    set_nid(from.nid());
  }
  if (from.uniq() != 0) {
    set_uniq(from.uniq());
  }
  if (from.uniq_1d() != 0) {
    set_uniq_1d(from.uniq_1d());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.count_1d() != 0) {
    set_count_1d(from.count_1d());
  }
}

void StorageQueryActionFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.index.StorageQueryActionFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageQueryActionFeatures::CopyFrom(const StorageQueryActionFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.index.StorageQueryActionFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageQueryActionFeatures::IsInitialized() const {
  return true;
}

void StorageQueryActionFeatures::Swap(StorageQueryActionFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageQueryActionFeatures::InternalSwap(StorageQueryActionFeatures* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(nid_, other->nid_);
  swap(uniq_, other->uniq_);
  swap(uniq_1d_, other->uniq_1d_);
  swap(count_, other->count_);
  swap(count_1d_, other->count_1d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageQueryActionFeatures::GetMetadata() const {
  protobuf_sugg_5fidx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5fidx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageQueryActionFeatures

// string query = 1;
void StorageQueryActionFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageQueryActionFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.query)
  return query_.GetNoArena();
}
void StorageQueryActionFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.query)
}
#if LANG_CXX11
void StorageQueryActionFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageQueryActionFeatures.query)
}
#endif
void StorageQueryActionFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageQueryActionFeatures.query)
}
void StorageQueryActionFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageQueryActionFeatures.query)
}
::std::string* StorageQueryActionFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageQueryActionFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageQueryActionFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageQueryActionFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageQueryActionFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageQueryActionFeatures.query)
}

// uint64 nid = 2;
void StorageQueryActionFeatures::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageQueryActionFeatures::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.nid)
  return nid_;
}
void StorageQueryActionFeatures::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.nid)
}

// uint32 uniq = 3 [(.gogo.json) = {
void StorageQueryActionFeatures::clear_uniq() {
  uniq_ = 0u;
}
::google::protobuf::uint32 StorageQueryActionFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.uniq)
  return uniq_;
}
void StorageQueryActionFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.uniq)
}

// uint32 uniq_1d = 4 [(.gogo.json) = {
void StorageQueryActionFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryActionFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.uniq_1d)
  return uniq_1d_;
}
void StorageQueryActionFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.uniq_1d)
}

// uint32 count = 5 [(.gogo.json) = {
void StorageQueryActionFeatures::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 StorageQueryActionFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.count)
  return count_;
}
void StorageQueryActionFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.count)
}

// uint32 count_1d = 6 [(.gogo.json) = {
void StorageQueryActionFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
::google::protobuf::uint32 StorageQueryActionFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.count_1d)
  return count_1d_;
}
void StorageQueryActionFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.count_1d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace index
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)
