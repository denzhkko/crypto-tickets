// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_idx.proto

#ifndef PROTOBUF_sugg_5fidx_2eproto__INCLUDED
#define PROTOBUF_sugg_5fidx_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
namespace suggests {
namespace index {
class IdxActionData;
class IdxActionDataDefaultTypeInternal;
extern IdxActionDataDefaultTypeInternal _IdxActionData_default_instance_;
class IdxQuery;
class IdxQueryDefaultTypeInternal;
extern IdxQueryDefaultTypeInternal _IdxQuery_default_instance_;
class IdxQuery_Action;
class IdxQuery_ActionDefaultTypeInternal;
extern IdxQuery_ActionDefaultTypeInternal _IdxQuery_Action_default_instance_;
class IdxQuery_Variant;
class IdxQuery_VariantDefaultTypeInternal;
extern IdxQuery_VariantDefaultTypeInternal _IdxQuery_Variant_default_instance_;
class StorageAction;
class StorageActionDefaultTypeInternal;
extern StorageActionDefaultTypeInternal _StorageAction_default_instance_;
class StorageQueryActionFeatures;
class StorageQueryActionFeaturesDefaultTypeInternal;
extern StorageQueryActionFeaturesDefaultTypeInternal _StorageQueryActionFeatures_default_instance_;
class StorageQueryFeatures;
class StorageQueryFeaturesDefaultTypeInternal;
extern StorageQueryFeaturesDefaultTypeInternal _StorageQueryFeatures_default_instance_;
}  // namespace index
}  // namespace suggests
}  // namespace pb

namespace pb {
namespace suggests {
namespace index {

namespace protobuf_sugg_5fidx_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sugg_5fidx_2eproto

// ===================================================================

class IdxQuery_Variant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.IdxQuery.Variant) */ {
 public:
  IdxQuery_Variant();
  virtual ~IdxQuery_Variant();

  IdxQuery_Variant(const IdxQuery_Variant& from);

  inline IdxQuery_Variant& operator=(const IdxQuery_Variant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery_Variant(IdxQuery_Variant&& from) noexcept
    : IdxQuery_Variant() {
    *this = ::std::move(from);
  }

  inline IdxQuery_Variant& operator=(IdxQuery_Variant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery_Variant& default_instance();

  static inline const IdxQuery_Variant* internal_default_instance() {
    return reinterpret_cast<const IdxQuery_Variant*>(
               &_IdxQuery_Variant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IdxQuery_Variant* other);
  friend void swap(IdxQuery_Variant& a, IdxQuery_Variant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery_Variant* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery_Variant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery_Variant& from);
  void MergeFrom(const IdxQuery_Variant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery_Variant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 flags = 3 [(.gogo.json) = {
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.IdxQuery.Variant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 flags_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxQuery_Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.IdxQuery.Action) */ {
 public:
  IdxQuery_Action();
  virtual ~IdxQuery_Action();

  IdxQuery_Action(const IdxQuery_Action& from);

  inline IdxQuery_Action& operator=(const IdxQuery_Action& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery_Action(IdxQuery_Action&& from) noexcept
    : IdxQuery_Action() {
    *this = ::std::move(from);
  }

  inline IdxQuery_Action& operator=(IdxQuery_Action&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery_Action& default_instance();

  static inline const IdxQuery_Action* internal_default_instance() {
    return reinterpret_cast<const IdxQuery_Action*>(
               &_IdxQuery_Action_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IdxQuery_Action* other);
  friend void swap(IdxQuery_Action& a, IdxQuery_Action& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery_Action* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery_Action* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery_Action& from);
  void MergeFrom(const IdxQuery_Action& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery_Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string item_id = 1 [(.gogo.json) = {
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  const ::std::string& item_id() const;
  void set_item_id(const ::std::string& value);
  #if LANG_CXX11
  void set_item_id(::std::string&& value);
  #endif
  void set_item_id(const char* value);
  void set_item_id(const char* value, size_t size);
  ::std::string* mutable_item_id();
  ::std::string* release_item_id();
  void set_allocated_item_id(::std::string* item_id);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 4 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 5 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 5;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.IdxQuery.Action)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr item_id_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.IdxQuery) */ {
 public:
  IdxQuery();
  virtual ~IdxQuery();

  IdxQuery(const IdxQuery& from);

  inline IdxQuery& operator=(const IdxQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery(IdxQuery&& from) noexcept
    : IdxQuery() {
    *this = ::std::move(from);
  }

  inline IdxQuery& operator=(IdxQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery& default_instance();

  static inline const IdxQuery* internal_default_instance() {
    return reinterpret_cast<const IdxQuery*>(
               &_IdxQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IdxQuery* other);
  friend void swap(IdxQuery& a, IdxQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery& from);
  void MergeFrom(const IdxQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IdxQuery_Variant Variant;
  typedef IdxQuery_Action Action;

  // accessors -------------------------------------------------------

  // repeated int32 glue_ids = 6 [(.gogo.json) = {
  int glue_ids_size() const;
  void clear_glue_ids();
  static const int kGlueIdsFieldNumber = 6;
  ::google::protobuf::int32 glue_ids(int index) const;
  void set_glue_ids(int index, ::google::protobuf::int32 value);
  void add_glue_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      glue_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_glue_ids();

  // repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 7;
  const ::pb::suggests::index::IdxQuery_Variant& variants(int index) const;
  ::pb::suggests::index::IdxQuery_Variant* mutable_variants(int index);
  ::pb::suggests::index::IdxQuery_Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >&
      variants() const;

  // repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 8;
  const ::pb::suggests::index::IdxQuery_Action& actions(int index) const;
  ::pb::suggests::index::IdxQuery_Action* mutable_actions(int index);
  ::pb::suggests::index::IdxQuery_Action* add_actions();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >&
      actions() const;

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 4 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 5 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 5;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.IdxQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > glue_ids_;
  mutable int _glue_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant > variants_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action > actions_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxActionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.IdxActionData) */ {
 public:
  IdxActionData();
  virtual ~IdxActionData();

  IdxActionData(const IdxActionData& from);

  inline IdxActionData& operator=(const IdxActionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxActionData(IdxActionData&& from) noexcept
    : IdxActionData() {
    *this = ::std::move(from);
  }

  inline IdxActionData& operator=(IdxActionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxActionData& default_instance();

  static inline const IdxActionData* internal_default_instance() {
    return reinterpret_cast<const IdxActionData*>(
               &_IdxActionData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IdxActionData* other);
  friend void swap(IdxActionData& a, IdxActionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxActionData* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxActionData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxActionData& from);
  void MergeFrom(const IdxActionData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxActionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string item_id = 1 [(.gogo.json) = {
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  const ::std::string& item_id() const;
  void set_item_id(const ::std::string& value);
  #if LANG_CXX11
  void set_item_id(::std::string&& value);
  #endif
  void set_item_id(const char* value);
  void set_item_id(const char* value, size_t size);
  ::std::string* mutable_item_id();
  ::std::string* release_item_id();
  void set_allocated_item_id(::std::string* item_id);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.IdxActionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr item_id_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.StorageAction) */ {
 public:
  StorageAction();
  virtual ~StorageAction();

  StorageAction(const StorageAction& from);

  inline StorageAction& operator=(const StorageAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageAction(StorageAction&& from) noexcept
    : StorageAction() {
    *this = ::std::move(from);
  }

  inline StorageAction& operator=(StorageAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageAction& default_instance();

  static inline const StorageAction* internal_default_instance() {
    return reinterpret_cast<const StorageAction*>(
               &_StorageAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(StorageAction* other);
  friend void swap(StorageAction& a, StorageAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageAction* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageAction& from);
  void MergeFrom(const StorageAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string publisher_id = 2 [(.gogo.json) = {
  void clear_publisher_id();
  static const int kPublisherIdFieldNumber = 2;
  const ::std::string& publisher_id() const;
  void set_publisher_id(const ::std::string& value);
  #if LANG_CXX11
  void set_publisher_id(::std::string&& value);
  #endif
  void set_publisher_id(const char* value);
  void set_publisher_id(const char* value, size_t size);
  ::std::string* mutable_publisher_id();
  ::std::string* release_publisher_id();
  void set_allocated_publisher_id(::std::string* publisher_id);

  // uint64 nid = 1;
  void clear_nid();
  static const int kNidFieldNumber = 1;
  ::google::protobuf::uint64 nid() const;
  void set_nid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.StorageAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr publisher_id_;
  ::google::protobuf::uint64 nid_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageQueryFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.StorageQueryFeatures) */ {
 public:
  StorageQueryFeatures();
  virtual ~StorageQueryFeatures();

  StorageQueryFeatures(const StorageQueryFeatures& from);

  inline StorageQueryFeatures& operator=(const StorageQueryFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageQueryFeatures(StorageQueryFeatures&& from) noexcept
    : StorageQueryFeatures() {
    *this = ::std::move(from);
  }

  inline StorageQueryFeatures& operator=(StorageQueryFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageQueryFeatures& default_instance();

  static inline const StorageQueryFeatures* internal_default_instance() {
    return reinterpret_cast<const StorageQueryFeatures*>(
               &_StorageQueryFeatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StorageQueryFeatures* other);
  friend void swap(StorageQueryFeatures& a, StorageQueryFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageQueryFeatures* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageQueryFeatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageQueryFeatures& from);
  void MergeFrom(const StorageQueryFeatures& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageQueryFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 3 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 3;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 4 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 5 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 5;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.StorageQueryFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageQueryActionFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.index.StorageQueryActionFeatures) */ {
 public:
  StorageQueryActionFeatures();
  virtual ~StorageQueryActionFeatures();

  StorageQueryActionFeatures(const StorageQueryActionFeatures& from);

  inline StorageQueryActionFeatures& operator=(const StorageQueryActionFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageQueryActionFeatures(StorageQueryActionFeatures&& from) noexcept
    : StorageQueryActionFeatures() {
    *this = ::std::move(from);
  }

  inline StorageQueryActionFeatures& operator=(StorageQueryActionFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageQueryActionFeatures& default_instance();

  static inline const StorageQueryActionFeatures* internal_default_instance() {
    return reinterpret_cast<const StorageQueryActionFeatures*>(
               &_StorageQueryActionFeatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(StorageQueryActionFeatures* other);
  friend void swap(StorageQueryActionFeatures& a, StorageQueryActionFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageQueryActionFeatures* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageQueryActionFeatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageQueryActionFeatures& from);
  void MergeFrom(const StorageQueryActionFeatures& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageQueryActionFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint64 nid = 2;
  void clear_nid();
  static const int kNidFieldNumber = 2;
  ::google::protobuf::uint64 nid() const;
  void set_nid(::google::protobuf::uint64 value);

  // uint32 uniq = 3 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 3;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 uniq_1d = 4 [(.gogo.json) = {
  void clear_uniq_1d();
  static const int kUniq1DFieldNumber = 4;
  ::google::protobuf::uint32 uniq_1d() const;
  void set_uniq_1d(::google::protobuf::uint32 value);

  // uint32 count = 5 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 5;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 count_1d = 6 [(.gogo.json) = {
  void clear_count_1d();
  static const int kCount1DFieldNumber = 6;
  ::google::protobuf::uint32 count_1d() const;
  void set_count_1d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.index.StorageQueryActionFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 nid_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 uniq_1d_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 count_1d_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fidx_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IdxQuery_Variant

// string query = 1 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery_Variant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.query)
  return query_.GetNoArena();
}
inline void IdxQuery_Variant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.query)
}
#if LANG_CXX11
inline void IdxQuery_Variant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.Variant.query)
}
#endif
inline void IdxQuery_Variant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.Variant.query)
}
inline void IdxQuery_Variant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.Variant.query)
}
inline ::std::string* IdxQuery_Variant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.Variant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery_Variant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.Variant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery_Variant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.Variant.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Variant::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.uniq)
  return uniq_;
}
inline void IdxQuery_Variant::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.uniq)
}

// uint32 flags = 3 [(.gogo.json) = {
inline void IdxQuery_Variant::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Variant.flags)
  return flags_;
}
inline void IdxQuery_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Variant.flags)
}

// -------------------------------------------------------------------

// IdxQuery_Action

// string item_id = 1 [(.gogo.json) = {
inline void IdxQuery_Action::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery_Action::item_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.item_id)
  return item_id_.GetNoArena();
}
inline void IdxQuery_Action::set_item_id(const ::std::string& value) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.item_id)
}
#if LANG_CXX11
inline void IdxQuery_Action::set_item_id(::std::string&& value) {
  
  item_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.Action.item_id)
}
#endif
inline void IdxQuery_Action::set_item_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.Action.item_id)
}
inline void IdxQuery_Action::set_item_id(const char* value, size_t size) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.Action.item_id)
}
inline ::std::string* IdxQuery_Action::mutable_item_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.Action.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery_Action::release_item_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.Action.item_id)
  
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery_Action::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    
  } else {
    
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.Action.item_id)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxQuery_Action::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Action::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.uniq)
  return uniq_;
}
inline void IdxQuery_Action::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void IdxQuery_Action::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Action::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.uniq_1d)
  return uniq_1d_;
}
inline void IdxQuery_Action::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
inline void IdxQuery_Action::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Action::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.count)
  return count_;
}
inline void IdxQuery_Action::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
inline void IdxQuery_Action::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery_Action::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.Action.count_1d)
  return count_1d_;
}
inline void IdxQuery_Action::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.Action.count_1d)
}

// -------------------------------------------------------------------

// IdxQuery

// string query = 1 [(.gogo.json) = {
inline void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.query)
  return query_.GetNoArena();
}
inline void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.query)
}
#if LANG_CXX11
inline void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxQuery.query)
}
#endif
inline void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxQuery.query)
}
inline void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxQuery.query)
}
inline ::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxQuery.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxQuery::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.uniq)
  return uniq_;
}
inline void IdxQuery::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void IdxQuery::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.uniq_1d)
  return uniq_1d_;
}
inline void IdxQuery::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
inline void IdxQuery::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.count)
  return count_;
}
inline void IdxQuery::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
inline void IdxQuery::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.count_1d)
  return count_1d_;
}
inline void IdxQuery::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.count_1d)
}

// repeated int32 glue_ids = 6 [(.gogo.json) = {
inline int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
inline void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
inline ::google::protobuf::int32 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
inline void IdxQuery::set_glue_ids(int index, ::google::protobuf::int32 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxQuery.glue_ids)
}
inline void IdxQuery::add_glue_ids(::google::protobuf::int32 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.glue_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.glue_ids)
  return glue_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.glue_ids)
  return &glue_ids_;
}

// repeated .pb.suggests.index.IdxQuery.Variant variants = 7 [(.gogo.json) = {
inline int IdxQuery::variants_size() const {
  return variants_.size();
}
inline void IdxQuery::clear_variants() {
  variants_.Clear();
}
inline const ::pb::suggests::index::IdxQuery_Variant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.variants)
  return variants_.Get(index);
}
inline ::pb::suggests::index::IdxQuery_Variant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.variants)
  return variants_.Mutable(index);
}
inline ::pb::suggests::index::IdxQuery_Variant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Variant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.index.IdxQuery.Action actions = 8 [(.gogo.json) = {
inline int IdxQuery::actions_size() const {
  return actions_.size();
}
inline void IdxQuery::clear_actions() {
  actions_.Clear();
}
inline const ::pb::suggests::index::IdxQuery_Action& IdxQuery::actions(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxQuery.actions)
  return actions_.Get(index);
}
inline ::pb::suggests::index::IdxQuery_Action* IdxQuery::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxQuery.actions)
  return actions_.Mutable(index);
}
inline ::pb::suggests::index::IdxQuery_Action* IdxQuery::add_actions() {
  // @@protoc_insertion_point(field_add:pb.suggests.index.IdxQuery.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >*
IdxQuery::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.index.IdxQuery.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::index::IdxQuery_Action >&
IdxQuery::actions() const {
  // @@protoc_insertion_point(field_list:pb.suggests.index.IdxQuery.actions)
  return actions_;
}

// -------------------------------------------------------------------

// IdxActionData

// string item_id = 1 [(.gogo.json) = {
inline void IdxActionData::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxActionData::item_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.IdxActionData.item_id)
  return item_id_.GetNoArena();
}
inline void IdxActionData::set_item_id(const ::std::string& value) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.IdxActionData.item_id)
}
#if LANG_CXX11
inline void IdxActionData::set_item_id(::std::string&& value) {
  
  item_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.IdxActionData.item_id)
}
#endif
inline void IdxActionData::set_item_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.IdxActionData.item_id)
}
inline void IdxActionData::set_item_id(const char* value, size_t size) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.IdxActionData.item_id)
}
inline ::std::string* IdxActionData::mutable_item_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.IdxActionData.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxActionData::release_item_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.IdxActionData.item_id)
  
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxActionData::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    
  } else {
    
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.IdxActionData.item_id)
}

// -------------------------------------------------------------------

// StorageAction

// uint64 nid = 1;
inline void StorageAction::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageAction::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageAction.nid)
  return nid_;
}
inline void StorageAction::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageAction.nid)
}

// string publisher_id = 2 [(.gogo.json) = {
inline void StorageAction::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageAction::publisher_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageAction.publisher_id)
  return publisher_id_.GetNoArena();
}
inline void StorageAction::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageAction.publisher_id)
}
#if LANG_CXX11
inline void StorageAction::set_publisher_id(::std::string&& value) {
  
  publisher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageAction.publisher_id)
}
#endif
inline void StorageAction::set_publisher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageAction.publisher_id)
}
inline void StorageAction::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageAction.publisher_id)
}
inline ::std::string* StorageAction::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageAction.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageAction::release_publisher_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageAction.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageAction::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageAction.publisher_id)
}

// -------------------------------------------------------------------

// StorageQueryFeatures

// string query = 1;
inline void StorageQueryFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageQueryFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.query)
  return query_.GetNoArena();
}
inline void StorageQueryFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.query)
}
#if LANG_CXX11
inline void StorageQueryFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageQueryFeatures.query)
}
#endif
inline void StorageQueryFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageQueryFeatures.query)
}
inline void StorageQueryFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageQueryFeatures.query)
}
inline ::std::string* StorageQueryFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageQueryFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageQueryFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageQueryFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageQueryFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageQueryFeatures.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.uniq)
  return uniq_;
}
inline void StorageQueryFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.uniq)
}

// uint32 uniq_1d = 3 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.uniq_1d)
  return uniq_1d_;
}
inline void StorageQueryFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.uniq_1d)
}

// uint32 count = 4 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.count)
  return count_;
}
inline void StorageQueryFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.count)
}

// uint32 count_1d = 5 [(.gogo.json) = {
inline void StorageQueryFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryFeatures.count_1d)
  return count_1d_;
}
inline void StorageQueryFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryFeatures.count_1d)
}

// -------------------------------------------------------------------

// StorageQueryActionFeatures

// string query = 1;
inline void StorageQueryActionFeatures::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageQueryActionFeatures::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.query)
  return query_.GetNoArena();
}
inline void StorageQueryActionFeatures::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.query)
}
#if LANG_CXX11
inline void StorageQueryActionFeatures::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.index.StorageQueryActionFeatures.query)
}
#endif
inline void StorageQueryActionFeatures::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.index.StorageQueryActionFeatures.query)
}
inline void StorageQueryActionFeatures::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.index.StorageQueryActionFeatures.query)
}
inline ::std::string* StorageQueryActionFeatures::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.index.StorageQueryActionFeatures.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageQueryActionFeatures::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.index.StorageQueryActionFeatures.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageQueryActionFeatures::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.index.StorageQueryActionFeatures.query)
}

// uint64 nid = 2;
inline void StorageQueryActionFeatures::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageQueryActionFeatures::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.nid)
  return nid_;
}
inline void StorageQueryActionFeatures::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.nid)
}

// uint32 uniq = 3 [(.gogo.json) = {
inline void StorageQueryActionFeatures::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryActionFeatures::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.uniq)
  return uniq_;
}
inline void StorageQueryActionFeatures::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.uniq)
}

// uint32 uniq_1d = 4 [(.gogo.json) = {
inline void StorageQueryActionFeatures::clear_uniq_1d() {
  uniq_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryActionFeatures::uniq_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.uniq_1d)
  return uniq_1d_;
}
inline void StorageQueryActionFeatures::set_uniq_1d(::google::protobuf::uint32 value) {
  
  uniq_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.uniq_1d)
}

// uint32 count = 5 [(.gogo.json) = {
inline void StorageQueryActionFeatures::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryActionFeatures::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.count)
  return count_;
}
inline void StorageQueryActionFeatures::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.count)
}

// uint32 count_1d = 6 [(.gogo.json) = {
inline void StorageQueryActionFeatures::clear_count_1d() {
  count_1d_ = 0u;
}
inline ::google::protobuf::uint32 StorageQueryActionFeatures::count_1d() const {
  // @@protoc_insertion_point(field_get:pb.suggests.index.StorageQueryActionFeatures.count_1d)
  return count_1d_;
}
inline void StorageQueryActionFeatures::set_count_1d(::google::protobuf::uint32 value) {
  
  count_1d_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.index.StorageQueryActionFeatures.count_1d)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace index
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sugg_5fidx_2eproto__INCLUDED
