// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_rustore.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sugg_rustore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
namespace suggests {
namespace rustore {
class UInt64ByUsageTypeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UInt64ByUsageType>
     _instance;
} _UInt64ByUsageType_default_instance_;
class IdxNavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxNavig>
     _instance;
} _IdxNavig_default_instance_;
class IdxVariantDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxVariant>
     _instance;
} _IdxVariant_default_instance_;
class IdxQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxQuery>
     _instance;
} _IdxQuery_default_instance_;
class IdxNavigDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IdxNavigData>
     _instance;
} _IdxNavigData_default_instance_;
class StorageNavigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StorageNavig>
     _instance;
} _StorageNavig_default_instance_;
class ResponseItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseItem>
     _instance;
} _ResponseItem_default_instance_;
class ResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Response>
     _instance;
} _Response_default_instance_;

namespace protobuf_sugg_5frustore_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt64ByUsageType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt64ByUsageType, no_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt64ByUsageType, short_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt64ByUsageType, long_usage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavig, object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavig, days_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavig, uniq_by_usage_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxVariant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxVariant, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxVariant, uniq_total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, days_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, count_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, uniq_latest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, variants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, navigs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxQuery, glue_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdxNavigData, age_legal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, nid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageNavig, age_legal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, text_marked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, rich_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseItem, rich_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, history_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UInt64ByUsageType)},
  { 8, -1, sizeof(IdxNavig)},
  { 16, -1, sizeof(IdxVariant)},
  { 23, -1, sizeof(IdxQuery)},
  { 36, -1, sizeof(IdxNavigData)},
  { 46, -1, sizeof(StorageNavig)},
  { 57, -1, sizeof(ResponseItem)},
  { 66, -1, sizeof(Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UInt64ByUsageType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxNavig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxVariant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdxNavigData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageNavig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sugg_rustore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gogo::protobuf_options_2eproto::InitDefaults();
  _UInt64ByUsageType_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UInt64ByUsageType_default_instance_);_IdxNavig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxNavig_default_instance_);_IdxVariant_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxVariant_default_instance_);_IdxQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxQuery_default_instance_);_IdxNavigData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IdxNavigData_default_instance_);_StorageNavig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StorageNavig_default_instance_);_ResponseItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseItem_default_instance_);_Response_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Response_default_instance_);_IdxNavig_default_instance_._instance.get_mutable()->uniq_by_usage_type_ = const_cast< ::pb::suggests::rustore::UInt64ByUsageType*>(
      ::pb::suggests::rustore::UInt64ByUsageType::internal_default_instance());
  _ResponseItem_default_instance_._instance.get_mutable()->rich_data_ = const_cast< ::pb::suggests::rustore::StorageNavig*>(
      ::pb::suggests::rustore::StorageNavig::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022sugg_rustore.proto\022\023pb.suggests.rustor"
      "e\032\roptions.proto\"i\n\021UInt64ByUsageType\022\031\n"
      "\010no_usage\030\001 \001(\004B\007\222\265\030\003\n\0010\022\034\n\013short_usage\030"
      "\002 \001(\004B\007\222\265\030\003\n\0011\022\033\n\nlong_usage\030\003 \001(\004B\007\222\265\030\003"
      "\n\0012\"\262\001\n\010IdxNavig\022\"\n\tobject_id\030\001 \001(\tB\017\222\265\030"
      "\013\n\tobject_id\022$\n\ndays_total\030\002 \001(\rB\020\222\265\030\014\n\n"
      "days_total\022\\\n\022uniq_by_usage_type\030\003 \001(\0132&"
      ".pb.suggests.rustore.UInt64ByUsageTypeB\030"
      "\222\265\030\024\n\022uniq_by_usage_type\"N\n\nIdxVariant\022\032"
      "\n\005query\030\001 \001(\tB\013\222\265\030\007\n\005query\022$\n\nuniq_total"
      "\030\002 \001(\004B\020\222\265\030\014\n\nuniq_total\"\344\002\n\010IdxQuery\022\032\n"
      "\005query\030\001 \001(\tB\013\222\265\030\007\n\005query\022$\n\ndays_total\030"
      "\002 \001(\rB\020\222\265\030\014\n\ndays_total\022&\n\013count_total\030\003"
      " \001(\004B\021\222\265\030\r\n\013count_total\022$\n\nuniq_total\030\004 "
      "\001(\004B\020\222\265\030\014\n\nuniq_total\022&\n\013uniq_latest\030\005 \001"
      "(\004B\021\222\265\030\r\n\013uniq_latest\022A\n\010variants\030\006 \003(\0132"
      "\037.pb.suggests.rustore.IdxVariantB\016\222\265\030\n\n\010"
      "variants\022;\n\006navigs\030\007 \003(\0132\035.pb.suggests.r"
      "ustore.IdxNavigB\014\222\265\030\010\n\006navigs\022 \n\010glue_id"
      "s\030\010 \003(\004B\016\222\265\030\n\n\010glue_ids\"\262\001\n\014IdxNavigData"
      "\022\033\n\006app_id\030\001 \001(\tB\013\222\265\030\007\n\005appId\022\037\n\010app_nam"
      "e\030\002 \001(\tB\r\222\265\030\t\n\007appName\022\'\n\014package_name\030\003"
      " \001(\tB\021\222\265\030\r\n\013packageName\022\030\n\004icon\030\004 \001(\tB\n\222"
      "\265\030\006\n\004icon\022!\n\tage_legal\030\005 \001(\rB\016\222\265\030\n\n\010ageL"
      "egal\"\262\001\n\014StorageNavig\022\013\n\003nid\030\001 \001(\004\022\033\n\006ap"
      "p_id\030\002 \001(\004B\013\222\265\030\007\n\005appId\022\037\n\010app_name\030\003 \001("
      "\tB\r\222\265\030\t\n\007appName\022\'\n\014package_name\030\004 \001(\tB\021"
      "\222\265\030\r\n\013packageName\022\033\n\004icon\030\005 \001(\tB\r\222\265\030\t\n\007i"
      "conUrl\022\021\n\tage_legal\030\006 \001(\r\"\302\001\n\014ResponseIt"
      "em\022\030\n\004text\030\001 \001(\tB\n\222\265\030\006\n\004text\022%\n\013text_mar"
      "ked\030\002 \001(\tB\020\222\265\030\014\n\ntextMarked\022*\n\rrich_cate"
      "gory\030\003 \001(\tB\023\222\265\030\017\n\rrich_category\022E\n\trich_"
      "data\030\004 \001(\0132!.pb.suggests.rustore.Storage"
      "NavigB\017\222\265\030\013\n\trich_data\"\214\001\n\010Response\022=\n\005i"
      "tems\030\001 \003(\0132!.pb.suggests.rustore.Respons"
      "eItemB\013\222\265\030\007\n\005items\022A\n\007history\030\002 \003(\0132!.pb"
      ".suggests.rustore.ResponseItemB\r\222\265\030\t\n\007hi"
      "storyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sugg_rustore.proto", &protobuf_RegisterTypes);
  ::gogo::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sugg_5frustore_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt64ByUsageType::kNoUsageFieldNumber;
const int UInt64ByUsageType::kShortUsageFieldNumber;
const int UInt64ByUsageType::kLongUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt64ByUsageType::UInt64ByUsageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.UInt64ByUsageType)
}
UInt64ByUsageType::UInt64ByUsageType(const UInt64ByUsageType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&no_usage_, &from.no_usage_,
    static_cast<size_t>(reinterpret_cast<char*>(&long_usage_) -
    reinterpret_cast<char*>(&no_usage_)) + sizeof(long_usage_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.UInt64ByUsageType)
}

void UInt64ByUsageType::SharedCtor() {
  ::memset(&no_usage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&long_usage_) -
      reinterpret_cast<char*>(&no_usage_)) + sizeof(long_usage_));
  _cached_size_ = 0;
}

UInt64ByUsageType::~UInt64ByUsageType() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.UInt64ByUsageType)
  SharedDtor();
}

void UInt64ByUsageType::SharedDtor() {
}

void UInt64ByUsageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UInt64ByUsageType::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UInt64ByUsageType& UInt64ByUsageType::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

UInt64ByUsageType* UInt64ByUsageType::New(::google::protobuf::Arena* arena) const {
  UInt64ByUsageType* n = new UInt64ByUsageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UInt64ByUsageType::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.UInt64ByUsageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&no_usage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&long_usage_) -
      reinterpret_cast<char*>(&no_usage_)) + sizeof(long_usage_));
  _internal_metadata_.Clear();
}

bool UInt64ByUsageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.UInt64ByUsageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 no_usage = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &no_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 short_usage = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &short_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 long_usage = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &long_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.UInt64ByUsageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.UInt64ByUsageType)
  return false;
#undef DO_
}

void UInt64ByUsageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.UInt64ByUsageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 no_usage = 1 [(.gogo.json) = {
  if (this->no_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->no_usage(), output);
  }

  // uint64 short_usage = 2 [(.gogo.json) = {
  if (this->short_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->short_usage(), output);
  }

  // uint64 long_usage = 3 [(.gogo.json) = {
  if (this->long_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->long_usage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.UInt64ByUsageType)
}

::google::protobuf::uint8* UInt64ByUsageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.UInt64ByUsageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 no_usage = 1 [(.gogo.json) = {
  if (this->no_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->no_usage(), target);
  }

  // uint64 short_usage = 2 [(.gogo.json) = {
  if (this->short_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->short_usage(), target);
  }

  // uint64 long_usage = 3 [(.gogo.json) = {
  if (this->long_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->long_usage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.UInt64ByUsageType)
  return target;
}

size_t UInt64ByUsageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.UInt64ByUsageType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 no_usage = 1 [(.gogo.json) = {
  if (this->no_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->no_usage());
  }

  // uint64 short_usage = 2 [(.gogo.json) = {
  if (this->short_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->short_usage());
  }

  // uint64 long_usage = 3 [(.gogo.json) = {
  if (this->long_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->long_usage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UInt64ByUsageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.UInt64ByUsageType)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt64ByUsageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UInt64ByUsageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.UInt64ByUsageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.UInt64ByUsageType)
    MergeFrom(*source);
  }
}

void UInt64ByUsageType::MergeFrom(const UInt64ByUsageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.UInt64ByUsageType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.no_usage() != 0) {
    set_no_usage(from.no_usage());
  }
  if (from.short_usage() != 0) {
    set_short_usage(from.short_usage());
  }
  if (from.long_usage() != 0) {
    set_long_usage(from.long_usage());
  }
}

void UInt64ByUsageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.UInt64ByUsageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt64ByUsageType::CopyFrom(const UInt64ByUsageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.UInt64ByUsageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt64ByUsageType::IsInitialized() const {
  return true;
}

void UInt64ByUsageType::Swap(UInt64ByUsageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt64ByUsageType::InternalSwap(UInt64ByUsageType* other) {
  using std::swap;
  swap(no_usage_, other->no_usage_);
  swap(short_usage_, other->short_usage_);
  swap(long_usage_, other->long_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UInt64ByUsageType::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UInt64ByUsageType

// uint64 no_usage = 1 [(.gogo.json) = {
void UInt64ByUsageType::clear_no_usage() {
  no_usage_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UInt64ByUsageType::no_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.no_usage)
  return no_usage_;
}
void UInt64ByUsageType::set_no_usage(::google::protobuf::uint64 value) {
  
  no_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.no_usage)
}

// uint64 short_usage = 2 [(.gogo.json) = {
void UInt64ByUsageType::clear_short_usage() {
  short_usage_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UInt64ByUsageType::short_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.short_usage)
  return short_usage_;
}
void UInt64ByUsageType::set_short_usage(::google::protobuf::uint64 value) {
  
  short_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.short_usage)
}

// uint64 long_usage = 3 [(.gogo.json) = {
void UInt64ByUsageType::clear_long_usage() {
  long_usage_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UInt64ByUsageType::long_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.long_usage)
  return long_usage_;
}
void UInt64ByUsageType::set_long_usage(::google::protobuf::uint64 value) {
  
  long_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.long_usage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxNavig::kObjectIdFieldNumber;
const int IdxNavig::kDaysTotalFieldNumber;
const int IdxNavig::kUniqByUsageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxNavig::IdxNavig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.IdxNavig)
}
IdxNavig::IdxNavig(const IdxNavig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.has_uniq_by_usage_type()) {
    uniq_by_usage_type_ = new ::pb::suggests::rustore::UInt64ByUsageType(*from.uniq_by_usage_type_);
  } else {
    uniq_by_usage_type_ = NULL;
  }
  days_total_ = from.days_total_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.IdxNavig)
}

void IdxNavig::SharedCtor() {
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniq_by_usage_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_total_) -
      reinterpret_cast<char*>(&uniq_by_usage_type_)) + sizeof(days_total_));
  _cached_size_ = 0;
}

IdxNavig::~IdxNavig() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.IdxNavig)
  SharedDtor();
}

void IdxNavig::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete uniq_by_usage_type_;
}

void IdxNavig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxNavig::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxNavig& IdxNavig::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxNavig* IdxNavig::New(::google::protobuf::Arena* arena) const {
  IdxNavig* n = new IdxNavig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxNavig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.IdxNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && uniq_by_usage_type_ != NULL) {
    delete uniq_by_usage_type_;
  }
  uniq_by_usage_type_ = NULL;
  days_total_ = 0u;
  _internal_metadata_.Clear();
}

bool IdxNavig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.IdxNavig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxNavig.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 days_total = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uniq_by_usage_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.IdxNavig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.IdxNavig)
  return false;
#undef DO_
}

void IdxNavig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.IdxNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1 [(.gogo.json) = {
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavig.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->days_total(), output);
  }

  // .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
  if (this->has_uniq_by_usage_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->uniq_by_usage_type_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.IdxNavig)
}

::google::protobuf::uint8* IdxNavig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.IdxNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1 [(.gogo.json) = {
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavig.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->days_total(), target);
  }

  // .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
  if (this->has_uniq_by_usage_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->uniq_by_usage_type_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.IdxNavig)
  return target;
}

size_t IdxNavig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.IdxNavig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string object_id = 1 [(.gogo.json) = {
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  // .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
  if (this->has_uniq_by_usage_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->uniq_by_usage_type_);
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->days_total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxNavig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.IdxNavig)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxNavig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxNavig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.IdxNavig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.IdxNavig)
    MergeFrom(*source);
  }
}

void IdxNavig::MergeFrom(const IdxNavig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.IdxNavig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  if (from.has_uniq_by_usage_type()) {
    mutable_uniq_by_usage_type()->::pb::suggests::rustore::UInt64ByUsageType::MergeFrom(from.uniq_by_usage_type());
  }
  if (from.days_total() != 0) {
    set_days_total(from.days_total());
  }
}

void IdxNavig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.IdxNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxNavig::CopyFrom(const IdxNavig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.IdxNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxNavig::IsInitialized() const {
  return true;
}

void IdxNavig::Swap(IdxNavig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxNavig::InternalSwap(IdxNavig* other) {
  using std::swap;
  object_id_.Swap(&other->object_id_);
  swap(uniq_by_usage_type_, other->uniq_by_usage_type_);
  swap(days_total_, other->days_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxNavig::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxNavig

// string object_id = 1 [(.gogo.json) = {
void IdxNavig::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavig::object_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.object_id)
  return object_id_.GetNoArena();
}
void IdxNavig::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavig.object_id)
}
#if LANG_CXX11
void IdxNavig::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavig.object_id)
}
#endif
void IdxNavig::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavig.object_id)
}
void IdxNavig::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavig.object_id)
}
::std::string* IdxNavig::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavig.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavig::release_object_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavig.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavig::set_allocated_object_id(::std::string* object_id) {
  if (object_id != NULL) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavig.object_id)
}

// uint32 days_total = 2 [(.gogo.json) = {
void IdxNavig::clear_days_total() {
  days_total_ = 0u;
}
::google::protobuf::uint32 IdxNavig::days_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.days_total)
  return days_total_;
}
void IdxNavig::set_days_total(::google::protobuf::uint32 value) {
  
  days_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavig.days_total)
}

// .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
bool IdxNavig::has_uniq_by_usage_type() const {
  return this != internal_default_instance() && uniq_by_usage_type_ != NULL;
}
void IdxNavig::clear_uniq_by_usage_type() {
  if (GetArenaNoVirtual() == NULL && uniq_by_usage_type_ != NULL) delete uniq_by_usage_type_;
  uniq_by_usage_type_ = NULL;
}
const ::pb::suggests::rustore::UInt64ByUsageType& IdxNavig::uniq_by_usage_type() const {
  const ::pb::suggests::rustore::UInt64ByUsageType* p = uniq_by_usage_type_;
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::rustore::UInt64ByUsageType*>(
      &::pb::suggests::rustore::_UInt64ByUsageType_default_instance_);
}
::pb::suggests::rustore::UInt64ByUsageType* IdxNavig::mutable_uniq_by_usage_type() {
  
  if (uniq_by_usage_type_ == NULL) {
    uniq_by_usage_type_ = new ::pb::suggests::rustore::UInt64ByUsageType;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  return uniq_by_usage_type_;
}
::pb::suggests::rustore::UInt64ByUsageType* IdxNavig::release_uniq_by_usage_type() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  
  ::pb::suggests::rustore::UInt64ByUsageType* temp = uniq_by_usage_type_;
  uniq_by_usage_type_ = NULL;
  return temp;
}
void IdxNavig::set_allocated_uniq_by_usage_type(::pb::suggests::rustore::UInt64ByUsageType* uniq_by_usage_type) {
  delete uniq_by_usage_type_;
  uniq_by_usage_type_ = uniq_by_usage_type;
  if (uniq_by_usage_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxVariant::kQueryFieldNumber;
const int IdxVariant::kUniqTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxVariant::IdxVariant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.IdxVariant)
}
IdxVariant::IdxVariant(const IdxVariant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  uniq_total_ = from.uniq_total_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.IdxVariant)
}

void IdxVariant::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniq_total_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

IdxVariant::~IdxVariant() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.IdxVariant)
  SharedDtor();
}

void IdxVariant::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxVariant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxVariant::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxVariant& IdxVariant::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxVariant* IdxVariant::New(::google::protobuf::Arena* arena) const {
  IdxVariant* n = new IdxVariant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxVariant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.IdxVariant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniq_total_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool IdxVariant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.IdxVariant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxVariant.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uniq_total = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uniq_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.IdxVariant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.IdxVariant)
  return false;
#undef DO_
}

void IdxVariant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.IdxVariant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxVariant.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint64 uniq_total = 2 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uniq_total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.IdxVariant)
}

::google::protobuf::uint8* IdxVariant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.IdxVariant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxVariant.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint64 uniq_total = 2 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uniq_total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.IdxVariant)
  return target;
}

size_t IdxVariant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.IdxVariant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint64 uniq_total = 2 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uniq_total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxVariant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.IdxVariant)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxVariant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxVariant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.IdxVariant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.IdxVariant)
    MergeFrom(*source);
  }
}

void IdxVariant::MergeFrom(const IdxVariant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.IdxVariant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.uniq_total() != 0) {
    set_uniq_total(from.uniq_total());
  }
}

void IdxVariant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.IdxVariant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxVariant::CopyFrom(const IdxVariant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.IdxVariant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxVariant::IsInitialized() const {
  return true;
}

void IdxVariant::Swap(IdxVariant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxVariant::InternalSwap(IdxVariant* other) {
  using std::swap;
  query_.Swap(&other->query_);
  swap(uniq_total_, other->uniq_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxVariant::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxVariant

// string query = 1 [(.gogo.json) = {
void IdxVariant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxVariant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxVariant.query)
  return query_.GetNoArena();
}
void IdxVariant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxVariant.query)
}
#if LANG_CXX11
void IdxVariant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxVariant.query)
}
#endif
void IdxVariant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxVariant.query)
}
void IdxVariant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxVariant.query)
}
::std::string* IdxVariant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxVariant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxVariant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxVariant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxVariant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxVariant.query)
}

// uint64 uniq_total = 2 [(.gogo.json) = {
void IdxVariant::clear_uniq_total() {
  uniq_total_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 IdxVariant::uniq_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxVariant.uniq_total)
  return uniq_total_;
}
void IdxVariant::set_uniq_total(::google::protobuf::uint64 value) {
  
  uniq_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxVariant.uniq_total)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxQuery::kQueryFieldNumber;
const int IdxQuery::kDaysTotalFieldNumber;
const int IdxQuery::kCountTotalFieldNumber;
const int IdxQuery::kUniqTotalFieldNumber;
const int IdxQuery::kUniqLatestFieldNumber;
const int IdxQuery::kVariantsFieldNumber;
const int IdxQuery::kNavigsFieldNumber;
const int IdxQuery::kGlueIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxQuery::IdxQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.IdxQuery)
}
IdxQuery::IdxQuery(const IdxQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      variants_(from.variants_),
      navigs_(from.navigs_),
      glue_ids_(from.glue_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&count_total_, &from.count_total_,
    static_cast<size_t>(reinterpret_cast<char*>(&days_total_) -
    reinterpret_cast<char*>(&count_total_)) + sizeof(days_total_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.IdxQuery)
}

void IdxQuery::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_total_) -
      reinterpret_cast<char*>(&count_total_)) + sizeof(days_total_));
  _cached_size_ = 0;
}

IdxQuery::~IdxQuery() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.IdxQuery)
  SharedDtor();
}

void IdxQuery::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxQuery::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxQuery& IdxQuery::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxQuery* IdxQuery::New(::google::protobuf::Arena* arena) const {
  IdxQuery* n = new IdxQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variants_.Clear();
  navigs_.Clear();
  glue_ids_.Clear();
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_total_) -
      reinterpret_cast<char*>(&count_total_)) + sizeof(days_total_));
  _internal_metadata_.Clear();
}

bool IdxQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.IdxQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxQuery.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 days_total = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count_total = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uniq_total = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uniq_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uniq_latest = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uniq_latest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variants()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_navigs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 glue_ids = 8 [(.gogo.json) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_glue_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 66u, input, this->mutable_glue_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.IdxQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.IdxQuery)
  return false;
#undef DO_
}

void IdxQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxQuery.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->days_total(), output);
  }

  // uint64 count_total = 3 [(.gogo.json) = {
  if (this->count_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->count_total(), output);
  }

  // uint64 uniq_total = 4 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uniq_total(), output);
  }

  // uint64 uniq_latest = 5 [(.gogo.json) = {
  if (this->uniq_latest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->uniq_latest(), output);
  }

  // repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->variants(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->navigs(static_cast<int>(i)), output);
  }

  // repeated uint64 glue_ids = 8 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _glue_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->glue_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->glue_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.IdxQuery)
}

::google::protobuf::uint8* IdxQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.IdxQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxQuery.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->days_total(), target);
  }

  // uint64 count_total = 3 [(.gogo.json) = {
  if (this->count_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->count_total(), target);
  }

  // uint64 uniq_total = 4 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uniq_total(), target);
  }

  // uint64 uniq_latest = 5 [(.gogo.json) = {
  if (this->uniq_latest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->uniq_latest(), target);
  }

  // repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variants_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->variants(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->navigs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->navigs(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint64 glue_ids = 8 [(.gogo.json) = {
  if (this->glue_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _glue_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->glue_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.IdxQuery)
  return target;
}

size_t IdxQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.IdxQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->variants_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variants(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->navigs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigs(static_cast<int>(i)));
    }
  }

  // repeated uint64 glue_ids = 8 [(.gogo.json) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->glue_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _glue_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string query = 1 [(.gogo.json) = {
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // uint64 count_total = 3 [(.gogo.json) = {
  if (this->count_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count_total());
  }

  // uint64 uniq_total = 4 [(.gogo.json) = {
  if (this->uniq_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uniq_total());
  }

  // uint64 uniq_latest = 5 [(.gogo.json) = {
  if (this->uniq_latest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uniq_latest());
  }

  // uint32 days_total = 2 [(.gogo.json) = {
  if (this->days_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->days_total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.IdxQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.IdxQuery)
    MergeFrom(*source);
  }
}

void IdxQuery::MergeFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.IdxQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variants_.MergeFrom(from.variants_);
  navigs_.MergeFrom(from.navigs_);
  glue_ids_.MergeFrom(from.glue_ids_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.count_total() != 0) {
    set_count_total(from.count_total());
  }
  if (from.uniq_total() != 0) {
    set_uniq_total(from.uniq_total());
  }
  if (from.uniq_latest() != 0) {
    set_uniq_latest(from.uniq_latest());
  }
  if (from.days_total() != 0) {
    set_days_total(from.days_total());
  }
}

void IdxQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxQuery::CopyFrom(const IdxQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.IdxQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxQuery::IsInitialized() const {
  return true;
}

void IdxQuery::Swap(IdxQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxQuery::InternalSwap(IdxQuery* other) {
  using std::swap;
  variants_.InternalSwap(&other->variants_);
  navigs_.InternalSwap(&other->navigs_);
  glue_ids_.InternalSwap(&other->glue_ids_);
  query_.Swap(&other->query_);
  swap(count_total_, other->count_total_);
  swap(uniq_total_, other->uniq_total_);
  swap(uniq_latest_, other->uniq_latest_);
  swap(days_total_, other->days_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxQuery::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxQuery

// string query = 1 [(.gogo.json) = {
void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.query)
  return query_.GetNoArena();
}
void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.query)
}
#if LANG_CXX11
void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxQuery.query)
}
#endif
void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxQuery.query)
}
void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxQuery.query)
}
::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxQuery.query)
}

// uint32 days_total = 2 [(.gogo.json) = {
void IdxQuery::clear_days_total() {
  days_total_ = 0u;
}
::google::protobuf::uint32 IdxQuery::days_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.days_total)
  return days_total_;
}
void IdxQuery::set_days_total(::google::protobuf::uint32 value) {
  
  days_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.days_total)
}

// uint64 count_total = 3 [(.gogo.json) = {
void IdxQuery::clear_count_total() {
  count_total_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 IdxQuery::count_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.count_total)
  return count_total_;
}
void IdxQuery::set_count_total(::google::protobuf::uint64 value) {
  
  count_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.count_total)
}

// uint64 uniq_total = 4 [(.gogo.json) = {
void IdxQuery::clear_uniq_total() {
  uniq_total_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 IdxQuery::uniq_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.uniq_total)
  return uniq_total_;
}
void IdxQuery::set_uniq_total(::google::protobuf::uint64 value) {
  
  uniq_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.uniq_total)
}

// uint64 uniq_latest = 5 [(.gogo.json) = {
void IdxQuery::clear_uniq_latest() {
  uniq_latest_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 IdxQuery::uniq_latest() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.uniq_latest)
  return uniq_latest_;
}
void IdxQuery::set_uniq_latest(::google::protobuf::uint64 value) {
  
  uniq_latest_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.uniq_latest)
}

// repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
int IdxQuery::variants_size() const {
  return variants_.size();
}
void IdxQuery::clear_variants() {
  variants_.Clear();
}
const ::pb::suggests::rustore::IdxVariant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Get(index);
}
::pb::suggests::rustore::IdxVariant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Mutable(index);
}
::pb::suggests::rustore::IdxVariant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.variants)
  return &variants_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
int IdxQuery::navigs_size() const {
  return navigs_.size();
}
void IdxQuery::clear_navigs() {
  navigs_.Clear();
}
const ::pb::suggests::rustore::IdxNavig& IdxQuery::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Get(index);
}
::pb::suggests::rustore::IdxNavig* IdxQuery::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Mutable(index);
}
::pb::suggests::rustore::IdxNavig* IdxQuery::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >*
IdxQuery::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.navigs)
  return &navigs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >&
IdxQuery::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_;
}

// repeated uint64 glue_ids = 8 [(.gogo.json) = {
int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
::google::protobuf::uint64 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
void IdxQuery::set_glue_ids(int index, ::google::protobuf::uint64 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.glue_ids)
}
void IdxQuery::add_glue_ids(::google::protobuf::uint64 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.glue_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.glue_ids)
  return glue_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.glue_ids)
  return &glue_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxNavigData::kAppIdFieldNumber;
const int IdxNavigData::kAppNameFieldNumber;
const int IdxNavigData::kPackageNameFieldNumber;
const int IdxNavigData::kIconFieldNumber;
const int IdxNavigData::kAgeLegalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxNavigData::IdxNavigData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.IdxNavigData)
}
IdxNavigData::IdxNavigData(const IdxNavigData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_id().size() > 0) {
    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  age_legal_ = from.age_legal_;
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.IdxNavigData)
}

void IdxNavigData::SharedCtor() {
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_legal_ = 0u;
  _cached_size_ = 0;
}

IdxNavigData::~IdxNavigData() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.IdxNavigData)
  SharedDtor();
}

void IdxNavigData::SharedDtor() {
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdxNavigData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdxNavigData::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxNavigData& IdxNavigData::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdxNavigData* IdxNavigData::New(::google::protobuf::Arena* arena) const {
  IdxNavigData* n = new IdxNavigData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdxNavigData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_legal_ = 0u;
  _internal_metadata_.Clear();
}

bool IdxNavigData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.IdxNavigData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string app_id = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_id().data(), static_cast<int>(this->app_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxNavigData.app_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_name = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxNavigData.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_name = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxNavigData.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.IdxNavigData.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 age_legal = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_legal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.IdxNavigData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.IdxNavigData)
  return false;
#undef DO_
}

void IdxNavigData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1 [(.gogo.json) = {
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), static_cast<int>(this->app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_id(), output);
  }

  // string app_name = 2 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_name(), output);
  }

  // string package_name = 3 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->package_name(), output);
  }

  // string icon = 4 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  // uint32 age_legal = 5 [(.gogo.json) = {
  if (this->age_legal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->age_legal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.IdxNavigData)
}

::google::protobuf::uint8* IdxNavigData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.IdxNavigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1 [(.gogo.json) = {
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), static_cast<int>(this->app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_id(), target);
  }

  // string app_name = 2 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_name(), target);
  }

  // string package_name = 3 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->package_name(), target);
  }

  // string icon = 4 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.IdxNavigData.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  // uint32 age_legal = 5 [(.gogo.json) = {
  if (this->age_legal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->age_legal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.IdxNavigData)
  return target;
}

size_t IdxNavigData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.IdxNavigData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string app_id = 1 [(.gogo.json) = {
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_id());
  }

  // string app_name = 2 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // string package_name = 3 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // string icon = 4 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // uint32 age_legal = 5 [(.gogo.json) = {
  if (this->age_legal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->age_legal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdxNavigData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.IdxNavigData)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxNavigData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxNavigData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.IdxNavigData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.IdxNavigData)
    MergeFrom(*source);
  }
}

void IdxNavigData::MergeFrom(const IdxNavigData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.IdxNavigData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_id().size() > 0) {

    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.age_legal() != 0) {
    set_age_legal(from.age_legal());
  }
}

void IdxNavigData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.IdxNavigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxNavigData::CopyFrom(const IdxNavigData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.IdxNavigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxNavigData::IsInitialized() const {
  return true;
}

void IdxNavigData::Swap(IdxNavigData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxNavigData::InternalSwap(IdxNavigData* other) {
  using std::swap;
  app_id_.Swap(&other->app_id_);
  app_name_.Swap(&other->app_name_);
  package_name_.Swap(&other->package_name_);
  icon_.Swap(&other->icon_);
  swap(age_legal_, other->age_legal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdxNavigData::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdxNavigData

// string app_id = 1 [(.gogo.json) = {
void IdxNavigData::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavigData::app_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.app_id)
  return app_id_.GetNoArena();
}
void IdxNavigData::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.app_id)
}
#if LANG_CXX11
void IdxNavigData::set_app_id(::std::string&& value) {
  
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.app_id)
}
#endif
void IdxNavigData::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.app_id)
}
void IdxNavigData::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.app_id)
}
::std::string* IdxNavigData::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavigData::release_app_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavigData::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.app_id)
}

// string app_name = 2 [(.gogo.json) = {
void IdxNavigData::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavigData::app_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.app_name)
  return app_name_.GetNoArena();
}
void IdxNavigData::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.app_name)
}
#if LANG_CXX11
void IdxNavigData::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.app_name)
}
#endif
void IdxNavigData::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.app_name)
}
void IdxNavigData::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.app_name)
}
::std::string* IdxNavigData::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavigData::release_app_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavigData::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.app_name)
}

// string package_name = 3 [(.gogo.json) = {
void IdxNavigData::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavigData::package_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.package_name)
  return package_name_.GetNoArena();
}
void IdxNavigData::set_package_name(const ::std::string& value) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.package_name)
}
#if LANG_CXX11
void IdxNavigData::set_package_name(::std::string&& value) {
  
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.package_name)
}
#endif
void IdxNavigData::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.package_name)
}
void IdxNavigData::set_package_name(const char* value, size_t size) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.package_name)
}
::std::string* IdxNavigData::mutable_package_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavigData::release_package_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.package_name)
  
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavigData::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    
  } else {
    
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.package_name)
}

// string icon = 4 [(.gogo.json) = {
void IdxNavigData::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IdxNavigData::icon() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.icon)
  return icon_.GetNoArena();
}
void IdxNavigData::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.icon)
}
#if LANG_CXX11
void IdxNavigData::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.icon)
}
#endif
void IdxNavigData::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.icon)
}
void IdxNavigData::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.icon)
}
::std::string* IdxNavigData::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdxNavigData::release_icon() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdxNavigData::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.icon)
}

// uint32 age_legal = 5 [(.gogo.json) = {
void IdxNavigData::clear_age_legal() {
  age_legal_ = 0u;
}
::google::protobuf::uint32 IdxNavigData::age_legal() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.age_legal)
  return age_legal_;
}
void IdxNavigData::set_age_legal(::google::protobuf::uint32 value) {
  
  age_legal_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.age_legal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageNavig::kNidFieldNumber;
const int StorageNavig::kAppIdFieldNumber;
const int StorageNavig::kAppNameFieldNumber;
const int StorageNavig::kPackageNameFieldNumber;
const int StorageNavig::kIconFieldNumber;
const int StorageNavig::kAgeLegalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageNavig::StorageNavig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.StorageNavig)
}
StorageNavig::StorageNavig(const StorageNavig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  ::memcpy(&nid_, &from.nid_,
    static_cast<size_t>(reinterpret_cast<char*>(&age_legal_) -
    reinterpret_cast<char*>(&nid_)) + sizeof(age_legal_));
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.StorageNavig)
}

void StorageNavig::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&age_legal_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(age_legal_));
  _cached_size_ = 0;
}

StorageNavig::~StorageNavig() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.StorageNavig)
  SharedDtor();
}

void StorageNavig::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageNavig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageNavig::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageNavig& StorageNavig::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageNavig* StorageNavig::New(::google::protobuf::Arena* arena) const {
  StorageNavig* n = new StorageNavig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageNavig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&age_legal_) -
      reinterpret_cast<char*>(&nid_)) + sizeof(age_legal_));
  _internal_metadata_.Clear();
}

bool StorageNavig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.StorageNavig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 nid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 app_id = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_name = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.StorageNavig.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_name = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.StorageNavig.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon = 5 [(.gogo.json) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.StorageNavig.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 age_legal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_legal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.StorageNavig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.StorageNavig)
  return false;
#undef DO_
}

void StorageNavig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nid(), output);
  }

  // uint64 app_id = 2 [(.gogo.json) = {
  if (this->app_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->app_id(), output);
  }

  // string app_name = 3 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_name(), output);
  }

  // string package_name = 4 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->package_name(), output);
  }

  // string icon = 5 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->icon(), output);
  }

  // uint32 age_legal = 6;
  if (this->age_legal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->age_legal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.StorageNavig)
}

::google::protobuf::uint8* StorageNavig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.StorageNavig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 nid = 1;
  if (this->nid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nid(), target);
  }

  // uint64 app_id = 2 [(.gogo.json) = {
  if (this->app_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->app_id(), target);
  }

  // string app_name = 3 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_name(), target);
  }

  // string package_name = 4 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->package_name(), target);
  }

  // string icon = 5 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.StorageNavig.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon(), target);
  }

  // uint32 age_legal = 6;
  if (this->age_legal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->age_legal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.StorageNavig)
  return target;
}

size_t StorageNavig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.StorageNavig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string app_name = 3 [(.gogo.json) = {
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // string package_name = 4 [(.gogo.json) = {
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // string icon = 5 [(.gogo.json) = {
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // uint64 nid = 1;
  if (this->nid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nid());
  }

  // uint64 app_id = 2 [(.gogo.json) = {
  if (this->app_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->app_id());
  }

  // uint32 age_legal = 6;
  if (this->age_legal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->age_legal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageNavig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.StorageNavig)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageNavig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageNavig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.StorageNavig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.StorageNavig)
    MergeFrom(*source);
  }
}

void StorageNavig::MergeFrom(const StorageNavig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.StorageNavig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.nid() != 0) {
    set_nid(from.nid());
  }
  if (from.app_id() != 0) {
    set_app_id(from.app_id());
  }
  if (from.age_legal() != 0) {
    set_age_legal(from.age_legal());
  }
}

void StorageNavig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.StorageNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageNavig::CopyFrom(const StorageNavig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.StorageNavig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageNavig::IsInitialized() const {
  return true;
}

void StorageNavig::Swap(StorageNavig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageNavig::InternalSwap(StorageNavig* other) {
  using std::swap;
  app_name_.Swap(&other->app_name_);
  package_name_.Swap(&other->package_name_);
  icon_.Swap(&other->icon_);
  swap(nid_, other->nid_);
  swap(app_id_, other->app_id_);
  swap(age_legal_, other->age_legal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageNavig::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageNavig

// uint64 nid = 1;
void StorageNavig::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageNavig::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.nid)
  return nid_;
}
void StorageNavig::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.nid)
}

// uint64 app_id = 2 [(.gogo.json) = {
void StorageNavig::clear_app_id() {
  app_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 StorageNavig::app_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.app_id)
  return app_id_;
}
void StorageNavig::set_app_id(::google::protobuf::uint64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.app_id)
}

// string app_name = 3 [(.gogo.json) = {
void StorageNavig::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageNavig::app_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.app_name)
  return app_name_.GetNoArena();
}
void StorageNavig::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.app_name)
}
#if LANG_CXX11
void StorageNavig::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.app_name)
}
#endif
void StorageNavig::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.app_name)
}
void StorageNavig::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.app_name)
}
::std::string* StorageNavig::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageNavig::release_app_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageNavig::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.app_name)
}

// string package_name = 4 [(.gogo.json) = {
void StorageNavig::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageNavig::package_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.package_name)
  return package_name_.GetNoArena();
}
void StorageNavig::set_package_name(const ::std::string& value) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.package_name)
}
#if LANG_CXX11
void StorageNavig::set_package_name(::std::string&& value) {
  
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.package_name)
}
#endif
void StorageNavig::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.package_name)
}
void StorageNavig::set_package_name(const char* value, size_t size) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.package_name)
}
::std::string* StorageNavig::mutable_package_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageNavig::release_package_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.package_name)
  
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageNavig::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    
  } else {
    
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.package_name)
}

// string icon = 5 [(.gogo.json) = {
void StorageNavig::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageNavig::icon() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.icon)
  return icon_.GetNoArena();
}
void StorageNavig::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.icon)
}
#if LANG_CXX11
void StorageNavig::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.icon)
}
#endif
void StorageNavig::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.icon)
}
void StorageNavig::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.icon)
}
::std::string* StorageNavig::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageNavig::release_icon() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageNavig::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.icon)
}

// uint32 age_legal = 6;
void StorageNavig::clear_age_legal() {
  age_legal_ = 0u;
}
::google::protobuf::uint32 StorageNavig::age_legal() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.age_legal)
  return age_legal_;
}
void StorageNavig::set_age_legal(::google::protobuf::uint32 value) {
  
  age_legal_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.age_legal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseItem::kTextFieldNumber;
const int ResponseItem::kTextMarkedFieldNumber;
const int ResponseItem::kRichCategoryFieldNumber;
const int ResponseItem::kRichDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseItem::ResponseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.ResponseItem)
}
ResponseItem::ResponseItem(const ResponseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  text_marked_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text_marked().size() > 0) {
    text_marked_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_marked_);
  }
  rich_category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rich_category().size() > 0) {
    rich_category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_category_);
  }
  if (from.has_rich_data()) {
    rich_data_ = new ::pb::suggests::rustore::StorageNavig(*from.rich_data_);
  } else {
    rich_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.ResponseItem)
}

void ResponseItem::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rich_category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rich_data_ = NULL;
  _cached_size_ = 0;
}

ResponseItem::~ResponseItem() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.ResponseItem)
  SharedDtor();
}

void ResponseItem::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rich_category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rich_data_;
}

void ResponseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseItem::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseItem& ResponseItem::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseItem* ResponseItem::New(::google::protobuf::Arena* arena) const {
  ResponseItem* n = new ResponseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rich_category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rich_data_ != NULL) {
    delete rich_data_;
  }
  rich_data_ = NULL;
  _internal_metadata_.Clear();
}

bool ResponseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.ResponseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.ResponseItem.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text_marked = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text_marked()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text_marked().data(), static_cast<int>(this->text_marked().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.ResponseItem.text_marked"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rich_category = 3 [(.gogo.json) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rich_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rich_category().data(), static_cast<int>(this->rich_category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.suggests.rustore.ResponseItem.rich_category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rich_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.ResponseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.ResponseItem)
  return false;
#undef DO_
}

void ResponseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_marked().data(), static_cast<int>(this->text_marked().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.text_marked");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text_marked(), output);
  }

  // string rich_category = 3 [(.gogo.json) = {
  if (this->rich_category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rich_category().data(), static_cast<int>(this->rich_category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.rich_category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rich_category(), output);
  }

  // .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
  if (this->has_rich_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rich_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.ResponseItem)
}

::google::protobuf::uint8* ResponseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.ResponseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_marked().data(), static_cast<int>(this->text_marked().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.text_marked");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text_marked(), target);
  }

  // string rich_category = 3 [(.gogo.json) = {
  if (this->rich_category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rich_category().data(), static_cast<int>(this->rich_category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.suggests.rustore.ResponseItem.rich_category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rich_category(), target);
  }

  // .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
  if (this->has_rich_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->rich_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.ResponseItem)
  return target;
}

size_t ResponseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.ResponseItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1 [(.gogo.json) = {
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string text_marked = 2 [(.gogo.json) = {
  if (this->text_marked().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text_marked());
  }

  // string rich_category = 3 [(.gogo.json) = {
  if (this->rich_category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rich_category());
  }

  // .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
  if (this->has_rich_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rich_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.ResponseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.ResponseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.ResponseItem)
    MergeFrom(*source);
  }
}

void ResponseItem::MergeFrom(const ResponseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.ResponseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.text_marked().size() > 0) {

    text_marked_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_marked_);
  }
  if (from.rich_category().size() > 0) {

    rich_category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_category_);
  }
  if (from.has_rich_data()) {
    mutable_rich_data()->::pb::suggests::rustore::StorageNavig::MergeFrom(from.rich_data());
  }
}

void ResponseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.ResponseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseItem::CopyFrom(const ResponseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.ResponseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseItem::IsInitialized() const {
  return true;
}

void ResponseItem::Swap(ResponseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseItem::InternalSwap(ResponseItem* other) {
  using std::swap;
  text_.Swap(&other->text_);
  text_marked_.Swap(&other->text_marked_);
  rich_category_.Swap(&other->rich_category_);
  swap(rich_data_, other->rich_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseItem::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseItem

// string text = 1 [(.gogo.json) = {
void ResponseItem::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem::text() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.text)
  return text_.GetNoArena();
}
void ResponseItem::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.text)
}
#if LANG_CXX11
void ResponseItem::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.text)
}
#endif
void ResponseItem::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.text)
}
void ResponseItem::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.text)
}
::std::string* ResponseItem::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem::release_text() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.text)
}

// string text_marked = 2 [(.gogo.json) = {
void ResponseItem::clear_text_marked() {
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem::text_marked() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.text_marked)
  return text_marked_.GetNoArena();
}
void ResponseItem::set_text_marked(const ::std::string& value) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.text_marked)
}
#if LANG_CXX11
void ResponseItem::set_text_marked(::std::string&& value) {
  
  text_marked_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.text_marked)
}
#endif
void ResponseItem::set_text_marked(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.text_marked)
}
void ResponseItem::set_text_marked(const char* value, size_t size) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.text_marked)
}
::std::string* ResponseItem::mutable_text_marked() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.text_marked)
  return text_marked_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem::release_text_marked() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.text_marked)
  
  return text_marked_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem::set_allocated_text_marked(::std::string* text_marked) {
  if (text_marked != NULL) {
    
  } else {
    
  }
  text_marked_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_marked);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.text_marked)
}

// string rich_category = 3 [(.gogo.json) = {
void ResponseItem::clear_rich_category() {
  rich_category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseItem::rich_category() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.rich_category)
  return rich_category_.GetNoArena();
}
void ResponseItem::set_rich_category(const ::std::string& value) {
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.rich_category)
}
#if LANG_CXX11
void ResponseItem::set_rich_category(::std::string&& value) {
  
  rich_category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.rich_category)
}
#endif
void ResponseItem::set_rich_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.rich_category)
}
void ResponseItem::set_rich_category(const char* value, size_t size) {
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.rich_category)
}
::std::string* ResponseItem::mutable_rich_category() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.rich_category)
  return rich_category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseItem::release_rich_category() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.rich_category)
  
  return rich_category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseItem::set_allocated_rich_category(::std::string* rich_category) {
  if (rich_category != NULL) {
    
  } else {
    
  }
  rich_category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rich_category);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.rich_category)
}

// .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
bool ResponseItem::has_rich_data() const {
  return this != internal_default_instance() && rich_data_ != NULL;
}
void ResponseItem::clear_rich_data() {
  if (GetArenaNoVirtual() == NULL && rich_data_ != NULL) delete rich_data_;
  rich_data_ = NULL;
}
const ::pb::suggests::rustore::StorageNavig& ResponseItem::rich_data() const {
  const ::pb::suggests::rustore::StorageNavig* p = rich_data_;
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.rich_data)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::rustore::StorageNavig*>(
      &::pb::suggests::rustore::_StorageNavig_default_instance_);
}
::pb::suggests::rustore::StorageNavig* ResponseItem::mutable_rich_data() {
  
  if (rich_data_ == NULL) {
    rich_data_ = new ::pb::suggests::rustore::StorageNavig;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.rich_data)
  return rich_data_;
}
::pb::suggests::rustore::StorageNavig* ResponseItem::release_rich_data() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.rich_data)
  
  ::pb::suggests::rustore::StorageNavig* temp = rich_data_;
  rich_data_ = NULL;
  return temp;
}
void ResponseItem::set_allocated_rich_data(::pb::suggests::rustore::StorageNavig* rich_data) {
  delete rich_data_;
  rich_data_ = rich_data;
  if (rich_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.rich_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kItemsFieldNumber;
const int Response::kHistoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sugg_5frustore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.suggests.rustore.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      history_(from.history_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.suggests.rustore.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:pb.suggests.rustore.Response)
  SharedDtor();
}

void Response::SharedDtor() {
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  protobuf_sugg_5frustore_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.suggests.rustore.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  history_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.suggests.rustore.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.suggests.rustore.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.suggests.rustore.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.suggests.rustore.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  // repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->history(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.suggests.rustore.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.suggests.rustore.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->history(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.suggests.rustore.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.suggests.rustore.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
  {
    unsigned int count = static_cast<unsigned int>(this->history_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->history(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.suggests.rustore.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.suggests.rustore.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.suggests.rustore.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.suggests.rustore.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  history_.MergeFrom(from.history_);
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.suggests.rustore.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.suggests.rustore.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  history_.InternalSwap(&other->history_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_sugg_5frustore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sugg_5frustore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
int Response::items_size() const {
  return items_.size();
}
void Response::clear_items() {
  items_.Clear();
}
const ::pb::suggests::rustore::ResponseItem& Response::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.Response.items)
  return items_.Get(index);
}
::pb::suggests::rustore::ResponseItem* Response::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.Response.items)
  return items_.Mutable(index);
}
::pb::suggests::rustore::ResponseItem* Response::add_items() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.Response.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
Response::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.Response.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
Response::items() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.Response.items)
  return items_;
}

// repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
int Response::history_size() const {
  return history_.size();
}
void Response::clear_history() {
  history_.Clear();
}
const ::pb::suggests::rustore::ResponseItem& Response::history(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.Response.history)
  return history_.Get(index);
}
::pb::suggests::rustore::ResponseItem* Response::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.Response.history)
  return history_.Mutable(index);
}
::pb::suggests::rustore::ResponseItem* Response::add_history() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.Response.history)
  return history_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
Response::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.Response.history)
  return &history_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
Response::history() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.Response.history)
  return history_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rustore
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)
