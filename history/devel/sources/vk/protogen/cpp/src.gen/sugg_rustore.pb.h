// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_rustore.proto

#ifndef PROTOBUF_sugg_5frustore_2eproto__INCLUDED
#define PROTOBUF_sugg_5frustore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
namespace suggests {
namespace rustore {
class IdxNavig;
class IdxNavigDefaultTypeInternal;
extern IdxNavigDefaultTypeInternal _IdxNavig_default_instance_;
class IdxNavigData;
class IdxNavigDataDefaultTypeInternal;
extern IdxNavigDataDefaultTypeInternal _IdxNavigData_default_instance_;
class IdxQuery;
class IdxQueryDefaultTypeInternal;
extern IdxQueryDefaultTypeInternal _IdxQuery_default_instance_;
class IdxVariant;
class IdxVariantDefaultTypeInternal;
extern IdxVariantDefaultTypeInternal _IdxVariant_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class ResponseItem;
class ResponseItemDefaultTypeInternal;
extern ResponseItemDefaultTypeInternal _ResponseItem_default_instance_;
class StorageNavig;
class StorageNavigDefaultTypeInternal;
extern StorageNavigDefaultTypeInternal _StorageNavig_default_instance_;
class UInt64ByUsageType;
class UInt64ByUsageTypeDefaultTypeInternal;
extern UInt64ByUsageTypeDefaultTypeInternal _UInt64ByUsageType_default_instance_;
}  // namespace rustore
}  // namespace suggests
}  // namespace pb

namespace pb {
namespace suggests {
namespace rustore {

namespace protobuf_sugg_5frustore_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sugg_5frustore_2eproto

// ===================================================================

class UInt64ByUsageType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.UInt64ByUsageType) */ {
 public:
  UInt64ByUsageType();
  virtual ~UInt64ByUsageType();

  UInt64ByUsageType(const UInt64ByUsageType& from);

  inline UInt64ByUsageType& operator=(const UInt64ByUsageType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UInt64ByUsageType(UInt64ByUsageType&& from) noexcept
    : UInt64ByUsageType() {
    *this = ::std::move(from);
  }

  inline UInt64ByUsageType& operator=(UInt64ByUsageType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UInt64ByUsageType& default_instance();

  static inline const UInt64ByUsageType* internal_default_instance() {
    return reinterpret_cast<const UInt64ByUsageType*>(
               &_UInt64ByUsageType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UInt64ByUsageType* other);
  friend void swap(UInt64ByUsageType& a, UInt64ByUsageType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UInt64ByUsageType* New() const PROTOBUF_FINAL { return New(NULL); }

  UInt64ByUsageType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UInt64ByUsageType& from);
  void MergeFrom(const UInt64ByUsageType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UInt64ByUsageType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 no_usage = 1 [(.gogo.json) = {
  void clear_no_usage();
  static const int kNoUsageFieldNumber = 1;
  ::google::protobuf::uint64 no_usage() const;
  void set_no_usage(::google::protobuf::uint64 value);

  // uint64 short_usage = 2 [(.gogo.json) = {
  void clear_short_usage();
  static const int kShortUsageFieldNumber = 2;
  ::google::protobuf::uint64 short_usage() const;
  void set_short_usage(::google::protobuf::uint64 value);

  // uint64 long_usage = 3 [(.gogo.json) = {
  void clear_long_usage();
  static const int kLongUsageFieldNumber = 3;
  ::google::protobuf::uint64 long_usage() const;
  void set_long_usage(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.UInt64ByUsageType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 no_usage_;
  ::google::protobuf::uint64 short_usage_;
  ::google::protobuf::uint64 long_usage_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxNavig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.IdxNavig) */ {
 public:
  IdxNavig();
  virtual ~IdxNavig();

  IdxNavig(const IdxNavig& from);

  inline IdxNavig& operator=(const IdxNavig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxNavig(IdxNavig&& from) noexcept
    : IdxNavig() {
    *this = ::std::move(from);
  }

  inline IdxNavig& operator=(IdxNavig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxNavig& default_instance();

  static inline const IdxNavig* internal_default_instance() {
    return reinterpret_cast<const IdxNavig*>(
               &_IdxNavig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IdxNavig* other);
  friend void swap(IdxNavig& a, IdxNavig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxNavig* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxNavig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxNavig& from);
  void MergeFrom(const IdxNavig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxNavig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string object_id = 1 [(.gogo.json) = {
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  const ::std::string& object_id() const;
  void set_object_id(const ::std::string& value);
  #if LANG_CXX11
  void set_object_id(::std::string&& value);
  #endif
  void set_object_id(const char* value);
  void set_object_id(const char* value, size_t size);
  ::std::string* mutable_object_id();
  ::std::string* release_object_id();
  void set_allocated_object_id(::std::string* object_id);

  // .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
  bool has_uniq_by_usage_type() const;
  void clear_uniq_by_usage_type();
  static const int kUniqByUsageTypeFieldNumber = 3;
  const ::pb::suggests::rustore::UInt64ByUsageType& uniq_by_usage_type() const;
  ::pb::suggests::rustore::UInt64ByUsageType* mutable_uniq_by_usage_type();
  ::pb::suggests::rustore::UInt64ByUsageType* release_uniq_by_usage_type();
  void set_allocated_uniq_by_usage_type(::pb::suggests::rustore::UInt64ByUsageType* uniq_by_usage_type);

  // uint32 days_total = 2 [(.gogo.json) = {
  void clear_days_total();
  static const int kDaysTotalFieldNumber = 2;
  ::google::protobuf::uint32 days_total() const;
  void set_days_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.IdxNavig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_id_;
  ::pb::suggests::rustore::UInt64ByUsageType* uniq_by_usage_type_;
  ::google::protobuf::uint32 days_total_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxVariant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.IdxVariant) */ {
 public:
  IdxVariant();
  virtual ~IdxVariant();

  IdxVariant(const IdxVariant& from);

  inline IdxVariant& operator=(const IdxVariant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxVariant(IdxVariant&& from) noexcept
    : IdxVariant() {
    *this = ::std::move(from);
  }

  inline IdxVariant& operator=(IdxVariant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxVariant& default_instance();

  static inline const IdxVariant* internal_default_instance() {
    return reinterpret_cast<const IdxVariant*>(
               &_IdxVariant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IdxVariant* other);
  friend void swap(IdxVariant& a, IdxVariant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxVariant* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxVariant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxVariant& from);
  void MergeFrom(const IdxVariant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxVariant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint64 uniq_total = 2 [(.gogo.json) = {
  void clear_uniq_total();
  static const int kUniqTotalFieldNumber = 2;
  ::google::protobuf::uint64 uniq_total() const;
  void set_uniq_total(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.IdxVariant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 uniq_total_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.IdxQuery) */ {
 public:
  IdxQuery();
  virtual ~IdxQuery();

  IdxQuery(const IdxQuery& from);

  inline IdxQuery& operator=(const IdxQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxQuery(IdxQuery&& from) noexcept
    : IdxQuery() {
    *this = ::std::move(from);
  }

  inline IdxQuery& operator=(IdxQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxQuery& default_instance();

  static inline const IdxQuery* internal_default_instance() {
    return reinterpret_cast<const IdxQuery*>(
               &_IdxQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IdxQuery* other);
  friend void swap(IdxQuery& a, IdxQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxQuery& from);
  void MergeFrom(const IdxQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 6;
  const ::pb::suggests::rustore::IdxVariant& variants(int index) const;
  ::pb::suggests::rustore::IdxVariant* mutable_variants(int index);
  ::pb::suggests::rustore::IdxVariant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >&
      variants() const;

  // repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
  int navigs_size() const;
  void clear_navigs();
  static const int kNavigsFieldNumber = 7;
  const ::pb::suggests::rustore::IdxNavig& navigs(int index) const;
  ::pb::suggests::rustore::IdxNavig* mutable_navigs(int index);
  ::pb::suggests::rustore::IdxNavig* add_navigs();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >*
      mutable_navigs();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >&
      navigs() const;

  // repeated uint64 glue_ids = 8 [(.gogo.json) = {
  int glue_ids_size() const;
  void clear_glue_ids();
  static const int kGlueIdsFieldNumber = 8;
  ::google::protobuf::uint64 glue_ids(int index) const;
  void set_glue_ids(int index, ::google::protobuf::uint64 value);
  void add_glue_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      glue_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_glue_ids();

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint64 count_total = 3 [(.gogo.json) = {
  void clear_count_total();
  static const int kCountTotalFieldNumber = 3;
  ::google::protobuf::uint64 count_total() const;
  void set_count_total(::google::protobuf::uint64 value);

  // uint64 uniq_total = 4 [(.gogo.json) = {
  void clear_uniq_total();
  static const int kUniqTotalFieldNumber = 4;
  ::google::protobuf::uint64 uniq_total() const;
  void set_uniq_total(::google::protobuf::uint64 value);

  // uint64 uniq_latest = 5 [(.gogo.json) = {
  void clear_uniq_latest();
  static const int kUniqLatestFieldNumber = 5;
  ::google::protobuf::uint64 uniq_latest() const;
  void set_uniq_latest(::google::protobuf::uint64 value);

  // uint32 days_total = 2 [(.gogo.json) = {
  void clear_days_total();
  static const int kDaysTotalFieldNumber = 2;
  ::google::protobuf::uint32 days_total() const;
  void set_days_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.IdxQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant > variants_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig > navigs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > glue_ids_;
  mutable int _glue_ids_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 count_total_;
  ::google::protobuf::uint64 uniq_total_;
  ::google::protobuf::uint64 uniq_latest_;
  ::google::protobuf::uint32 days_total_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxNavigData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.IdxNavigData) */ {
 public:
  IdxNavigData();
  virtual ~IdxNavigData();

  IdxNavigData(const IdxNavigData& from);

  inline IdxNavigData& operator=(const IdxNavigData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxNavigData(IdxNavigData&& from) noexcept
    : IdxNavigData() {
    *this = ::std::move(from);
  }

  inline IdxNavigData& operator=(IdxNavigData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxNavigData& default_instance();

  static inline const IdxNavigData* internal_default_instance() {
    return reinterpret_cast<const IdxNavigData*>(
               &_IdxNavigData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IdxNavigData* other);
  friend void swap(IdxNavigData& a, IdxNavigData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxNavigData* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxNavigData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxNavigData& from);
  void MergeFrom(const IdxNavigData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxNavigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_id = 1 [(.gogo.json) = {
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // string app_name = 2 [(.gogo.json) = {
  void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string package_name = 3 [(.gogo.json) = {
  void clear_package_name();
  static const int kPackageNameFieldNumber = 3;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // string icon = 4 [(.gogo.json) = {
  void clear_icon();
  static const int kIconFieldNumber = 4;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // uint32 age_legal = 5 [(.gogo.json) = {
  void clear_age_legal();
  static const int kAgeLegalFieldNumber = 5;
  ::google::protobuf::uint32 age_legal() const;
  void set_age_legal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.IdxNavigData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::uint32 age_legal_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageNavig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.StorageNavig) */ {
 public:
  StorageNavig();
  virtual ~StorageNavig();

  StorageNavig(const StorageNavig& from);

  inline StorageNavig& operator=(const StorageNavig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageNavig(StorageNavig&& from) noexcept
    : StorageNavig() {
    *this = ::std::move(from);
  }

  inline StorageNavig& operator=(StorageNavig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageNavig& default_instance();

  static inline const StorageNavig* internal_default_instance() {
    return reinterpret_cast<const StorageNavig*>(
               &_StorageNavig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StorageNavig* other);
  friend void swap(StorageNavig& a, StorageNavig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageNavig* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageNavig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorageNavig& from);
  void MergeFrom(const StorageNavig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorageNavig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_name = 3 [(.gogo.json) = {
  void clear_app_name();
  static const int kAppNameFieldNumber = 3;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string package_name = 4 [(.gogo.json) = {
  void clear_package_name();
  static const int kPackageNameFieldNumber = 4;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // string icon = 5 [(.gogo.json) = {
  void clear_icon();
  static const int kIconFieldNumber = 5;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // uint64 nid = 1;
  void clear_nid();
  static const int kNidFieldNumber = 1;
  ::google::protobuf::uint64 nid() const;
  void set_nid(::google::protobuf::uint64 value);

  // uint64 app_id = 2 [(.gogo.json) = {
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::uint64 app_id() const;
  void set_app_id(::google::protobuf::uint64 value);

  // uint32 age_legal = 6;
  void clear_age_legal();
  static const int kAgeLegalFieldNumber = 6;
  ::google::protobuf::uint32 age_legal() const;
  void set_age_legal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.StorageNavig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::uint64 nid_;
  ::google::protobuf::uint64 app_id_;
  ::google::protobuf::uint32 age_legal_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.ResponseItem) */ {
 public:
  ResponseItem();
  virtual ~ResponseItem();

  ResponseItem(const ResponseItem& from);

  inline ResponseItem& operator=(const ResponseItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseItem(ResponseItem&& from) noexcept
    : ResponseItem() {
    *this = ::std::move(from);
  }

  inline ResponseItem& operator=(ResponseItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem& default_instance();

  static inline const ResponseItem* internal_default_instance() {
    return reinterpret_cast<const ResponseItem*>(
               &_ResponseItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ResponseItem* other);
  friend void swap(ResponseItem& a, ResponseItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseItem* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseItem& from);
  void MergeFrom(const ResponseItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1 [(.gogo.json) = {
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string text_marked = 2 [(.gogo.json) = {
  void clear_text_marked();
  static const int kTextMarkedFieldNumber = 2;
  const ::std::string& text_marked() const;
  void set_text_marked(const ::std::string& value);
  #if LANG_CXX11
  void set_text_marked(::std::string&& value);
  #endif
  void set_text_marked(const char* value);
  void set_text_marked(const char* value, size_t size);
  ::std::string* mutable_text_marked();
  ::std::string* release_text_marked();
  void set_allocated_text_marked(::std::string* text_marked);

  // string rich_category = 3 [(.gogo.json) = {
  void clear_rich_category();
  static const int kRichCategoryFieldNumber = 3;
  const ::std::string& rich_category() const;
  void set_rich_category(const ::std::string& value);
  #if LANG_CXX11
  void set_rich_category(::std::string&& value);
  #endif
  void set_rich_category(const char* value);
  void set_rich_category(const char* value, size_t size);
  ::std::string* mutable_rich_category();
  ::std::string* release_rich_category();
  void set_allocated_rich_category(::std::string* rich_category);

  // .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
  bool has_rich_data() const;
  void clear_rich_data();
  static const int kRichDataFieldNumber = 4;
  const ::pb::suggests::rustore::StorageNavig& rich_data() const;
  ::pb::suggests::rustore::StorageNavig* mutable_rich_data();
  ::pb::suggests::rustore::StorageNavig* release_rich_data();
  void set_allocated_rich_data(::pb::suggests::rustore::StorageNavig* rich_data);

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.ResponseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr text_marked_;
  ::google::protobuf::internal::ArenaStringPtr rich_category_;
  ::pb::suggests::rustore::StorageNavig* rich_data_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.rustore.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::pb::suggests::rustore::ResponseItem& items(int index) const;
  ::pb::suggests::rustore::ResponseItem* mutable_items(int index);
  ::pb::suggests::rustore::ResponseItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
      items() const;

  // repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 2;
  const ::pb::suggests::rustore::ResponseItem& history(int index) const;
  ::pb::suggests::rustore::ResponseItem* mutable_history(int index);
  ::pb::suggests::rustore::ResponseItem* add_history();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
      mutable_history();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
      history() const;

  // @@protoc_insertion_point(class_scope:pb.suggests.rustore.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem > items_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem > history_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5frustore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UInt64ByUsageType

// uint64 no_usage = 1 [(.gogo.json) = {
inline void UInt64ByUsageType::clear_no_usage() {
  no_usage_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UInt64ByUsageType::no_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.no_usage)
  return no_usage_;
}
inline void UInt64ByUsageType::set_no_usage(::google::protobuf::uint64 value) {
  
  no_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.no_usage)
}

// uint64 short_usage = 2 [(.gogo.json) = {
inline void UInt64ByUsageType::clear_short_usage() {
  short_usage_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UInt64ByUsageType::short_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.short_usage)
  return short_usage_;
}
inline void UInt64ByUsageType::set_short_usage(::google::protobuf::uint64 value) {
  
  short_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.short_usage)
}

// uint64 long_usage = 3 [(.gogo.json) = {
inline void UInt64ByUsageType::clear_long_usage() {
  long_usage_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UInt64ByUsageType::long_usage() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.UInt64ByUsageType.long_usage)
  return long_usage_;
}
inline void UInt64ByUsageType::set_long_usage(::google::protobuf::uint64 value) {
  
  long_usage_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.UInt64ByUsageType.long_usage)
}

// -------------------------------------------------------------------

// IdxNavig

// string object_id = 1 [(.gogo.json) = {
inline void IdxNavig::clear_object_id() {
  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavig::object_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.object_id)
  return object_id_.GetNoArena();
}
inline void IdxNavig::set_object_id(const ::std::string& value) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavig.object_id)
}
#if LANG_CXX11
inline void IdxNavig::set_object_id(::std::string&& value) {
  
  object_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavig.object_id)
}
#endif
inline void IdxNavig::set_object_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavig.object_id)
}
inline void IdxNavig::set_object_id(const char* value, size_t size) {
  
  object_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavig.object_id)
}
inline ::std::string* IdxNavig::mutable_object_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavig.object_id)
  return object_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavig::release_object_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavig.object_id)
  
  return object_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavig::set_allocated_object_id(::std::string* object_id) {
  if (object_id != NULL) {
    
  } else {
    
  }
  object_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavig.object_id)
}

// uint32 days_total = 2 [(.gogo.json) = {
inline void IdxNavig::clear_days_total() {
  days_total_ = 0u;
}
inline ::google::protobuf::uint32 IdxNavig::days_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.days_total)
  return days_total_;
}
inline void IdxNavig::set_days_total(::google::protobuf::uint32 value) {
  
  days_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavig.days_total)
}

// .pb.suggests.rustore.UInt64ByUsageType uniq_by_usage_type = 3 [(.gogo.json) = {
inline bool IdxNavig::has_uniq_by_usage_type() const {
  return this != internal_default_instance() && uniq_by_usage_type_ != NULL;
}
inline void IdxNavig::clear_uniq_by_usage_type() {
  if (GetArenaNoVirtual() == NULL && uniq_by_usage_type_ != NULL) delete uniq_by_usage_type_;
  uniq_by_usage_type_ = NULL;
}
inline const ::pb::suggests::rustore::UInt64ByUsageType& IdxNavig::uniq_by_usage_type() const {
  const ::pb::suggests::rustore::UInt64ByUsageType* p = uniq_by_usage_type_;
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::rustore::UInt64ByUsageType*>(
      &::pb::suggests::rustore::_UInt64ByUsageType_default_instance_);
}
inline ::pb::suggests::rustore::UInt64ByUsageType* IdxNavig::mutable_uniq_by_usage_type() {
  
  if (uniq_by_usage_type_ == NULL) {
    uniq_by_usage_type_ = new ::pb::suggests::rustore::UInt64ByUsageType;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  return uniq_by_usage_type_;
}
inline ::pb::suggests::rustore::UInt64ByUsageType* IdxNavig::release_uniq_by_usage_type() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
  
  ::pb::suggests::rustore::UInt64ByUsageType* temp = uniq_by_usage_type_;
  uniq_by_usage_type_ = NULL;
  return temp;
}
inline void IdxNavig::set_allocated_uniq_by_usage_type(::pb::suggests::rustore::UInt64ByUsageType* uniq_by_usage_type) {
  delete uniq_by_usage_type_;
  uniq_by_usage_type_ = uniq_by_usage_type;
  if (uniq_by_usage_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavig.uniq_by_usage_type)
}

// -------------------------------------------------------------------

// IdxVariant

// string query = 1 [(.gogo.json) = {
inline void IdxVariant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxVariant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxVariant.query)
  return query_.GetNoArena();
}
inline void IdxVariant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxVariant.query)
}
#if LANG_CXX11
inline void IdxVariant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxVariant.query)
}
#endif
inline void IdxVariant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxVariant.query)
}
inline void IdxVariant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxVariant.query)
}
inline ::std::string* IdxVariant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxVariant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxVariant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxVariant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxVariant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxVariant.query)
}

// uint64 uniq_total = 2 [(.gogo.json) = {
inline void IdxVariant::clear_uniq_total() {
  uniq_total_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxVariant::uniq_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxVariant.uniq_total)
  return uniq_total_;
}
inline void IdxVariant::set_uniq_total(::google::protobuf::uint64 value) {
  
  uniq_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxVariant.uniq_total)
}

// -------------------------------------------------------------------

// IdxQuery

// string query = 1 [(.gogo.json) = {
inline void IdxQuery::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxQuery::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.query)
  return query_.GetNoArena();
}
inline void IdxQuery::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.query)
}
#if LANG_CXX11
inline void IdxQuery::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxQuery.query)
}
#endif
inline void IdxQuery::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxQuery.query)
}
inline void IdxQuery::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxQuery.query)
}
inline ::std::string* IdxQuery::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxQuery::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxQuery.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxQuery::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxQuery.query)
}

// uint32 days_total = 2 [(.gogo.json) = {
inline void IdxQuery::clear_days_total() {
  days_total_ = 0u;
}
inline ::google::protobuf::uint32 IdxQuery::days_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.days_total)
  return days_total_;
}
inline void IdxQuery::set_days_total(::google::protobuf::uint32 value) {
  
  days_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.days_total)
}

// uint64 count_total = 3 [(.gogo.json) = {
inline void IdxQuery::clear_count_total() {
  count_total_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxQuery::count_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.count_total)
  return count_total_;
}
inline void IdxQuery::set_count_total(::google::protobuf::uint64 value) {
  
  count_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.count_total)
}

// uint64 uniq_total = 4 [(.gogo.json) = {
inline void IdxQuery::clear_uniq_total() {
  uniq_total_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxQuery::uniq_total() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.uniq_total)
  return uniq_total_;
}
inline void IdxQuery::set_uniq_total(::google::protobuf::uint64 value) {
  
  uniq_total_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.uniq_total)
}

// uint64 uniq_latest = 5 [(.gogo.json) = {
inline void IdxQuery::clear_uniq_latest() {
  uniq_latest_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxQuery::uniq_latest() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.uniq_latest)
  return uniq_latest_;
}
inline void IdxQuery::set_uniq_latest(::google::protobuf::uint64 value) {
  
  uniq_latest_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.uniq_latest)
}

// repeated .pb.suggests.rustore.IdxVariant variants = 6 [(.gogo.json) = {
inline int IdxQuery::variants_size() const {
  return variants_.size();
}
inline void IdxQuery::clear_variants() {
  variants_.Clear();
}
inline const ::pb::suggests::rustore::IdxVariant& IdxQuery::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Get(index);
}
inline ::pb::suggests::rustore::IdxVariant* IdxQuery::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Mutable(index);
}
inline ::pb::suggests::rustore::IdxVariant* IdxQuery::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >*
IdxQuery::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxVariant >&
IdxQuery::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.variants)
  return variants_;
}

// repeated .pb.suggests.rustore.IdxNavig navigs = 7 [(.gogo.json) = {
inline int IdxQuery::navigs_size() const {
  return navigs_.size();
}
inline void IdxQuery::clear_navigs() {
  navigs_.Clear();
}
inline const ::pb::suggests::rustore::IdxNavig& IdxQuery::navigs(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Get(index);
}
inline ::pb::suggests::rustore::IdxNavig* IdxQuery::mutable_navigs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Mutable(index);
}
inline ::pb::suggests::rustore::IdxNavig* IdxQuery::add_navigs() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >*
IdxQuery::mutable_navigs() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.navigs)
  return &navigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::IdxNavig >&
IdxQuery::navigs() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.navigs)
  return navigs_;
}

// repeated uint64 glue_ids = 8 [(.gogo.json) = {
inline int IdxQuery::glue_ids_size() const {
  return glue_ids_.size();
}
inline void IdxQuery::clear_glue_ids() {
  glue_ids_.Clear();
}
inline ::google::protobuf::uint64 IdxQuery::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxQuery.glue_ids)
  return glue_ids_.Get(index);
}
inline void IdxQuery::set_glue_ids(int index, ::google::protobuf::uint64 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxQuery.glue_ids)
}
inline void IdxQuery::add_glue_ids(::google::protobuf::uint64 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.IdxQuery.glue_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
IdxQuery::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.IdxQuery.glue_ids)
  return glue_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
IdxQuery::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.IdxQuery.glue_ids)
  return &glue_ids_;
}

// -------------------------------------------------------------------

// IdxNavigData

// string app_id = 1 [(.gogo.json) = {
inline void IdxNavigData::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavigData::app_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.app_id)
  return app_id_.GetNoArena();
}
inline void IdxNavigData::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.app_id)
}
#if LANG_CXX11
inline void IdxNavigData::set_app_id(::std::string&& value) {
  
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.app_id)
}
#endif
inline void IdxNavigData::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.app_id)
}
inline void IdxNavigData::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.app_id)
}
inline ::std::string* IdxNavigData::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavigData::release_app_id() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavigData::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.app_id)
}

// string app_name = 2 [(.gogo.json) = {
inline void IdxNavigData::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavigData::app_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.app_name)
  return app_name_.GetNoArena();
}
inline void IdxNavigData::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.app_name)
}
#if LANG_CXX11
inline void IdxNavigData::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.app_name)
}
#endif
inline void IdxNavigData::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.app_name)
}
inline void IdxNavigData::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.app_name)
}
inline ::std::string* IdxNavigData::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavigData::release_app_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavigData::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.app_name)
}

// string package_name = 3 [(.gogo.json) = {
inline void IdxNavigData::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavigData::package_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.package_name)
  return package_name_.GetNoArena();
}
inline void IdxNavigData::set_package_name(const ::std::string& value) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.package_name)
}
#if LANG_CXX11
inline void IdxNavigData::set_package_name(::std::string&& value) {
  
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.package_name)
}
#endif
inline void IdxNavigData::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.package_name)
}
inline void IdxNavigData::set_package_name(const char* value, size_t size) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.package_name)
}
inline ::std::string* IdxNavigData::mutable_package_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavigData::release_package_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.package_name)
  
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavigData::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    
  } else {
    
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.package_name)
}

// string icon = 4 [(.gogo.json) = {
inline void IdxNavigData::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNavigData::icon() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.icon)
  return icon_.GetNoArena();
}
inline void IdxNavigData::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.icon)
}
#if LANG_CXX11
inline void IdxNavigData::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.IdxNavigData.icon)
}
#endif
inline void IdxNavigData::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.IdxNavigData.icon)
}
inline void IdxNavigData::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.IdxNavigData.icon)
}
inline ::std::string* IdxNavigData::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.IdxNavigData.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNavigData::release_icon() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.IdxNavigData.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNavigData::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.IdxNavigData.icon)
}

// uint32 age_legal = 5 [(.gogo.json) = {
inline void IdxNavigData::clear_age_legal() {
  age_legal_ = 0u;
}
inline ::google::protobuf::uint32 IdxNavigData::age_legal() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.IdxNavigData.age_legal)
  return age_legal_;
}
inline void IdxNavigData::set_age_legal(::google::protobuf::uint32 value) {
  
  age_legal_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.IdxNavigData.age_legal)
}

// -------------------------------------------------------------------

// StorageNavig

// uint64 nid = 1;
inline void StorageNavig::clear_nid() {
  nid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageNavig::nid() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.nid)
  return nid_;
}
inline void StorageNavig::set_nid(::google::protobuf::uint64 value) {
  
  nid_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.nid)
}

// uint64 app_id = 2 [(.gogo.json) = {
inline void StorageNavig::clear_app_id() {
  app_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageNavig::app_id() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.app_id)
  return app_id_;
}
inline void StorageNavig::set_app_id(::google::protobuf::uint64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.app_id)
}

// string app_name = 3 [(.gogo.json) = {
inline void StorageNavig::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageNavig::app_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.app_name)
  return app_name_.GetNoArena();
}
inline void StorageNavig::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.app_name)
}
#if LANG_CXX11
inline void StorageNavig::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.app_name)
}
#endif
inline void StorageNavig::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.app_name)
}
inline void StorageNavig::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.app_name)
}
inline ::std::string* StorageNavig::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageNavig::release_app_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageNavig::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.app_name)
}

// string package_name = 4 [(.gogo.json) = {
inline void StorageNavig::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageNavig::package_name() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.package_name)
  return package_name_.GetNoArena();
}
inline void StorageNavig::set_package_name(const ::std::string& value) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.package_name)
}
#if LANG_CXX11
inline void StorageNavig::set_package_name(::std::string&& value) {
  
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.package_name)
}
#endif
inline void StorageNavig::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.package_name)
}
inline void StorageNavig::set_package_name(const char* value, size_t size) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.package_name)
}
inline ::std::string* StorageNavig::mutable_package_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageNavig::release_package_name() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.package_name)
  
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageNavig::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    
  } else {
    
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.package_name)
}

// string icon = 5 [(.gogo.json) = {
inline void StorageNavig::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageNavig::icon() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.icon)
  return icon_.GetNoArena();
}
inline void StorageNavig::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.icon)
}
#if LANG_CXX11
inline void StorageNavig::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.StorageNavig.icon)
}
#endif
inline void StorageNavig::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.StorageNavig.icon)
}
inline void StorageNavig::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.StorageNavig.icon)
}
inline ::std::string* StorageNavig::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.StorageNavig.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageNavig::release_icon() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.StorageNavig.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageNavig::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.StorageNavig.icon)
}

// uint32 age_legal = 6;
inline void StorageNavig::clear_age_legal() {
  age_legal_ = 0u;
}
inline ::google::protobuf::uint32 StorageNavig::age_legal() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.StorageNavig.age_legal)
  return age_legal_;
}
inline void StorageNavig::set_age_legal(::google::protobuf::uint32 value) {
  
  age_legal_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.StorageNavig.age_legal)
}

// -------------------------------------------------------------------

// ResponseItem

// string text = 1 [(.gogo.json) = {
inline void ResponseItem::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::text() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.text)
  return text_.GetNoArena();
}
inline void ResponseItem::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.text)
}
#if LANG_CXX11
inline void ResponseItem::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.text)
}
#endif
inline void ResponseItem::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.text)
}
inline void ResponseItem::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.text)
}
inline ::std::string* ResponseItem::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_text() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.text)
}

// string text_marked = 2 [(.gogo.json) = {
inline void ResponseItem::clear_text_marked() {
  text_marked_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::text_marked() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.text_marked)
  return text_marked_.GetNoArena();
}
inline void ResponseItem::set_text_marked(const ::std::string& value) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.text_marked)
}
#if LANG_CXX11
inline void ResponseItem::set_text_marked(::std::string&& value) {
  
  text_marked_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.text_marked)
}
#endif
inline void ResponseItem::set_text_marked(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.text_marked)
}
inline void ResponseItem::set_text_marked(const char* value, size_t size) {
  
  text_marked_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.text_marked)
}
inline ::std::string* ResponseItem::mutable_text_marked() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.text_marked)
  return text_marked_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_text_marked() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.text_marked)
  
  return text_marked_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_text_marked(::std::string* text_marked) {
  if (text_marked != NULL) {
    
  } else {
    
  }
  text_marked_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_marked);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.text_marked)
}

// string rich_category = 3 [(.gogo.json) = {
inline void ResponseItem::clear_rich_category() {
  rich_category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::rich_category() const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.rich_category)
  return rich_category_.GetNoArena();
}
inline void ResponseItem::set_rich_category(const ::std::string& value) {
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.rustore.ResponseItem.rich_category)
}
#if LANG_CXX11
inline void ResponseItem::set_rich_category(::std::string&& value) {
  
  rich_category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.rustore.ResponseItem.rich_category)
}
#endif
inline void ResponseItem::set_rich_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.rustore.ResponseItem.rich_category)
}
inline void ResponseItem::set_rich_category(const char* value, size_t size) {
  
  rich_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.rustore.ResponseItem.rich_category)
}
inline ::std::string* ResponseItem::mutable_rich_category() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.rich_category)
  return rich_category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_rich_category() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.rich_category)
  
  return rich_category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_rich_category(::std::string* rich_category) {
  if (rich_category != NULL) {
    
  } else {
    
  }
  rich_category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rich_category);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.rich_category)
}

// .pb.suggests.rustore.StorageNavig rich_data = 4 [(.gogo.json) = {
inline bool ResponseItem::has_rich_data() const {
  return this != internal_default_instance() && rich_data_ != NULL;
}
inline void ResponseItem::clear_rich_data() {
  if (GetArenaNoVirtual() == NULL && rich_data_ != NULL) delete rich_data_;
  rich_data_ = NULL;
}
inline const ::pb::suggests::rustore::StorageNavig& ResponseItem::rich_data() const {
  const ::pb::suggests::rustore::StorageNavig* p = rich_data_;
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.ResponseItem.rich_data)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::suggests::rustore::StorageNavig*>(
      &::pb::suggests::rustore::_StorageNavig_default_instance_);
}
inline ::pb::suggests::rustore::StorageNavig* ResponseItem::mutable_rich_data() {
  
  if (rich_data_ == NULL) {
    rich_data_ = new ::pb::suggests::rustore::StorageNavig;
  }
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.ResponseItem.rich_data)
  return rich_data_;
}
inline ::pb::suggests::rustore::StorageNavig* ResponseItem::release_rich_data() {
  // @@protoc_insertion_point(field_release:pb.suggests.rustore.ResponseItem.rich_data)
  
  ::pb::suggests::rustore::StorageNavig* temp = rich_data_;
  rich_data_ = NULL;
  return temp;
}
inline void ResponseItem::set_allocated_rich_data(::pb::suggests::rustore::StorageNavig* rich_data) {
  delete rich_data_;
  rich_data_ = rich_data;
  if (rich_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.rustore.ResponseItem.rich_data)
}

// -------------------------------------------------------------------

// Response

// repeated .pb.suggests.rustore.ResponseItem items = 1 [(.gogo.json) = {
inline int Response::items_size() const {
  return items_.size();
}
inline void Response::clear_items() {
  items_.Clear();
}
inline const ::pb::suggests::rustore::ResponseItem& Response::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.Response.items)
  return items_.Get(index);
}
inline ::pb::suggests::rustore::ResponseItem* Response::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.Response.items)
  return items_.Mutable(index);
}
inline ::pb::suggests::rustore::ResponseItem* Response::add_items() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.Response.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
Response::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.Response.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
Response::items() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.Response.items)
  return items_;
}

// repeated .pb.suggests.rustore.ResponseItem history = 2 [(.gogo.json) = {
inline int Response::history_size() const {
  return history_.size();
}
inline void Response::clear_history() {
  history_.Clear();
}
inline const ::pb::suggests::rustore::ResponseItem& Response::history(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.rustore.Response.history)
  return history_.Get(index);
}
inline ::pb::suggests::rustore::ResponseItem* Response::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.rustore.Response.history)
  return history_.Mutable(index);
}
inline ::pb::suggests::rustore::ResponseItem* Response::add_history() {
  // @@protoc_insertion_point(field_add:pb.suggests.rustore.Response.history)
  return history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >*
Response::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.rustore.Response.history)
  return &history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::rustore::ResponseItem >&
Response::history() const {
  // @@protoc_insertion_point(field_list:pb.suggests.rustore.Response.history)
  return history_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace rustore
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sugg_5frustore_2eproto__INCLUDED
