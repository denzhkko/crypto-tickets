// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sugg_vk_video.proto

#ifndef PROTOBUF_sugg_5fvk_5fvideo_2eproto__INCLUDED
#define PROTOBUF_sugg_5fvk_5fvideo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
namespace suggests {
namespace vk_video {
class IdxMainData;
class IdxMainDataDefaultTypeInternal;
extern IdxMainDataDefaultTypeInternal _IdxMainData_default_instance_;
class IdxMainData_Variant;
class IdxMainData_VariantDefaultTypeInternal;
extern IdxMainData_VariantDefaultTypeInternal _IdxMainData_Variant_default_instance_;
class IdxMainNgramData;
class IdxMainNgramDataDefaultTypeInternal;
extern IdxMainNgramDataDefaultTypeInternal _IdxMainNgramData_default_instance_;
class IdxNgramStats;
class IdxNgramStatsDefaultTypeInternal;
extern IdxNgramStatsDefaultTypeInternal _IdxNgramStats_default_instance_;
}  // namespace vk_video
}  // namespace suggests
}  // namespace pb

namespace pb {
namespace suggests {
namespace vk_video {

namespace protobuf_sugg_5fvk_5fvideo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sugg_5fvk_5fvideo_2eproto

// ===================================================================

class IdxMainData_Variant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.vk_video.IdxMainData.Variant) */ {
 public:
  IdxMainData_Variant();
  virtual ~IdxMainData_Variant();

  IdxMainData_Variant(const IdxMainData_Variant& from);

  inline IdxMainData_Variant& operator=(const IdxMainData_Variant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxMainData_Variant(IdxMainData_Variant&& from) noexcept
    : IdxMainData_Variant() {
    *this = ::std::move(from);
  }

  inline IdxMainData_Variant& operator=(IdxMainData_Variant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxMainData_Variant& default_instance();

  static inline const IdxMainData_Variant* internal_default_instance() {
    return reinterpret_cast<const IdxMainData_Variant*>(
               &_IdxMainData_Variant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IdxMainData_Variant* other);
  friend void swap(IdxMainData_Variant& a, IdxMainData_Variant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxMainData_Variant* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxMainData_Variant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxMainData_Variant& from);
  void MergeFrom(const IdxMainData_Variant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxMainData_Variant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint32 uniq = 2 [(.gogo.json) = {
  void clear_uniq();
  static const int kUniqFieldNumber = 2;
  ::google::protobuf::uint32 uniq() const;
  void set_uniq(::google::protobuf::uint32 value);

  // uint32 flags = 3 [(.gogo.json) = {
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // uint32 uniq_safe = 4 [(.gogo.json) = {
  void clear_uniq_safe();
  static const int kUniqSafeFieldNumber = 4;
  ::google::protobuf::uint32 uniq_safe() const;
  void set_uniq_safe(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.vk_video.IdxMainData.Variant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint32 uniq_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 uniq_safe_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fvk_5fvideo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxMainData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.vk_video.IdxMainData) */ {
 public:
  IdxMainData();
  virtual ~IdxMainData();

  IdxMainData(const IdxMainData& from);

  inline IdxMainData& operator=(const IdxMainData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxMainData(IdxMainData&& from) noexcept
    : IdxMainData() {
    *this = ::std::move(from);
  }

  inline IdxMainData& operator=(IdxMainData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxMainData& default_instance();

  static inline const IdxMainData* internal_default_instance() {
    return reinterpret_cast<const IdxMainData*>(
               &_IdxMainData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IdxMainData* other);
  friend void swap(IdxMainData& a, IdxMainData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxMainData* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxMainData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxMainData& from);
  void MergeFrom(const IdxMainData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxMainData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IdxMainData_Variant Variant;

  // accessors -------------------------------------------------------

  // repeated .pb.suggests.vk_video.IdxMainData.Variant variants = 5 [(.gogo.json) = {
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 5;
  const ::pb::suggests::vk_video::IdxMainData_Variant& variants(int index) const;
  ::pb::suggests::vk_video::IdxMainData_Variant* mutable_variants(int index);
  ::pb::suggests::vk_video::IdxMainData_Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::vk_video::IdxMainData_Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::pb::suggests::vk_video::IdxMainData_Variant >&
      variants() const;

  // repeated int64 glue_ids = 7 [(.gogo.json) = {
  int glue_ids_size() const;
  void clear_glue_ids();
  static const int kGlueIdsFieldNumber = 7;
  ::google::protobuf::int64 glue_ids(int index) const;
  void set_glue_ids(int index, ::google::protobuf::int64 value);
  void add_glue_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      glue_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_glue_ids();

  // string query = 1 [(.gogo.json) = {
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // uint64 frequency = 6 [(.gogo.json) = {
  void clear_frequency();
  static const int kFrequencyFieldNumber = 6;
  ::google::protobuf::uint64 frequency() const;
  void set_frequency(::google::protobuf::uint64 value);

  // double freshness = 8 [(.gogo.json) = {
  void clear_freshness();
  static const int kFreshnessFieldNumber = 8;
  double freshness() const;
  void set_freshness(double value);

  // @@protoc_insertion_point(class_scope:pb.suggests.vk_video.IdxMainData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::suggests::vk_video::IdxMainData_Variant > variants_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > glue_ids_;
  mutable int _glue_ids_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 frequency_;
  double freshness_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fvk_5fvideo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxMainNgramData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.vk_video.IdxMainNgramData) */ {
 public:
  IdxMainNgramData();
  virtual ~IdxMainNgramData();

  IdxMainNgramData(const IdxMainNgramData& from);

  inline IdxMainNgramData& operator=(const IdxMainNgramData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxMainNgramData(IdxMainNgramData&& from) noexcept
    : IdxMainNgramData() {
    *this = ::std::move(from);
  }

  inline IdxMainNgramData& operator=(IdxMainNgramData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxMainNgramData& default_instance();

  static inline const IdxMainNgramData* internal_default_instance() {
    return reinterpret_cast<const IdxMainNgramData*>(
               &_IdxMainNgramData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IdxMainNgramData* other);
  friend void swap(IdxMainNgramData& a, IdxMainNgramData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxMainNgramData* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxMainNgramData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxMainNgramData& from);
  void MergeFrom(const IdxMainNgramData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxMainNgramData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ngram = 1 [(.gogo.json) = {
  void clear_ngram();
  static const int kNgramFieldNumber = 1;
  const ::std::string& ngram() const;
  void set_ngram(const ::std::string& value);
  #if LANG_CXX11
  void set_ngram(::std::string&& value);
  #endif
  void set_ngram(const char* value);
  void set_ngram(const char* value, size_t size);
  ::std::string* mutable_ngram();
  ::std::string* release_ngram();
  void set_allocated_ngram(::std::string* ngram);

  // uint64 count = 2 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // uint64 count_at_end = 3 [(.gogo.json) = {
  void clear_count_at_end();
  static const int kCountAtEndFieldNumber = 3;
  ::google::protobuf::uint64 count_at_end() const;
  void set_count_at_end(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.vk_video.IdxMainNgramData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ngram_;
  ::google::protobuf::uint64 count_;
  ::google::protobuf::uint64 count_at_end_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fvk_5fvideo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxNgramStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.suggests.vk_video.IdxNgramStats) */ {
 public:
  IdxNgramStats();
  virtual ~IdxNgramStats();

  IdxNgramStats(const IdxNgramStats& from);

  inline IdxNgramStats& operator=(const IdxNgramStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxNgramStats(IdxNgramStats&& from) noexcept
    : IdxNgramStats() {
    *this = ::std::move(from);
  }

  inline IdxNgramStats& operator=(IdxNgramStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxNgramStats& default_instance();

  static inline const IdxNgramStats* internal_default_instance() {
    return reinterpret_cast<const IdxNgramStats*>(
               &_IdxNgramStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IdxNgramStats* other);
  friend void swap(IdxNgramStats& a, IdxNgramStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxNgramStats* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxNgramStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxNgramStats& from);
  void MergeFrom(const IdxNgramStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxNgramStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ngram = 1 [(.gogo.json) = {
  void clear_ngram();
  static const int kNgramFieldNumber = 1;
  const ::std::string& ngram() const;
  void set_ngram(const ::std::string& value);
  #if LANG_CXX11
  void set_ngram(::std::string&& value);
  #endif
  void set_ngram(const char* value);
  void set_ngram(const char* value, size_t size);
  ::std::string* mutable_ngram();
  ::std::string* release_ngram();
  void set_allocated_ngram(::std::string* ngram);

  // uint64 count = 2 [(.gogo.json) = {
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // uint64 count_allowed = 3 [(.gogo.json) = {
  void clear_count_allowed();
  static const int kCountAllowedFieldNumber = 3;
  ::google::protobuf::uint64 count_allowed() const;
  void set_count_allowed(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.suggests.vk_video.IdxNgramStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ngram_;
  ::google::protobuf::uint64 count_;
  ::google::protobuf::uint64 count_allowed_;
  mutable int _cached_size_;
  friend struct protobuf_sugg_5fvk_5fvideo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IdxMainData_Variant

// string query = 1 [(.gogo.json) = {
inline void IdxMainData_Variant::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxMainData_Variant::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.Variant.query)
  return query_.GetNoArena();
}
inline void IdxMainData_Variant::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.Variant.query)
}
#if LANG_CXX11
inline void IdxMainData_Variant::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.vk_video.IdxMainData.Variant.query)
}
#endif
inline void IdxMainData_Variant::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.vk_video.IdxMainData.Variant.query)
}
inline void IdxMainData_Variant::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.vk_video.IdxMainData.Variant.query)
}
inline ::std::string* IdxMainData_Variant::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.vk_video.IdxMainData.Variant.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxMainData_Variant::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.vk_video.IdxMainData.Variant.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxMainData_Variant::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.vk_video.IdxMainData.Variant.query)
}

// uint32 uniq = 2 [(.gogo.json) = {
inline void IdxMainData_Variant::clear_uniq() {
  uniq_ = 0u;
}
inline ::google::protobuf::uint32 IdxMainData_Variant::uniq() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.Variant.uniq)
  return uniq_;
}
inline void IdxMainData_Variant::set_uniq(::google::protobuf::uint32 value) {
  
  uniq_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.Variant.uniq)
}

// uint32 flags = 3 [(.gogo.json) = {
inline void IdxMainData_Variant::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 IdxMainData_Variant::flags() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.Variant.flags)
  return flags_;
}
inline void IdxMainData_Variant::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.Variant.flags)
}

// uint32 uniq_safe = 4 [(.gogo.json) = {
inline void IdxMainData_Variant::clear_uniq_safe() {
  uniq_safe_ = 0u;
}
inline ::google::protobuf::uint32 IdxMainData_Variant::uniq_safe() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.Variant.uniq_safe)
  return uniq_safe_;
}
inline void IdxMainData_Variant::set_uniq_safe(::google::protobuf::uint32 value) {
  
  uniq_safe_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.Variant.uniq_safe)
}

// -------------------------------------------------------------------

// IdxMainData

// string query = 1 [(.gogo.json) = {
inline void IdxMainData::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxMainData::query() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.query)
  return query_.GetNoArena();
}
inline void IdxMainData::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.query)
}
#if LANG_CXX11
inline void IdxMainData::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.vk_video.IdxMainData.query)
}
#endif
inline void IdxMainData::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.vk_video.IdxMainData.query)
}
inline void IdxMainData::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.vk_video.IdxMainData.query)
}
inline ::std::string* IdxMainData::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.vk_video.IdxMainData.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxMainData::release_query() {
  // @@protoc_insertion_point(field_release:pb.suggests.vk_video.IdxMainData.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxMainData::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.vk_video.IdxMainData.query)
}

// uint64 frequency = 6 [(.gogo.json) = {
inline void IdxMainData::clear_frequency() {
  frequency_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxMainData::frequency() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.frequency)
  return frequency_;
}
inline void IdxMainData::set_frequency(::google::protobuf::uint64 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.frequency)
}

// double freshness = 8 [(.gogo.json) = {
inline void IdxMainData::clear_freshness() {
  freshness_ = 0;
}
inline double IdxMainData::freshness() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.freshness)
  return freshness_;
}
inline void IdxMainData::set_freshness(double value) {
  
  freshness_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.freshness)
}

// repeated .pb.suggests.vk_video.IdxMainData.Variant variants = 5 [(.gogo.json) = {
inline int IdxMainData::variants_size() const {
  return variants_.size();
}
inline void IdxMainData::clear_variants() {
  variants_.Clear();
}
inline const ::pb::suggests::vk_video::IdxMainData_Variant& IdxMainData::variants(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.variants)
  return variants_.Get(index);
}
inline ::pb::suggests::vk_video::IdxMainData_Variant* IdxMainData::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:pb.suggests.vk_video.IdxMainData.variants)
  return variants_.Mutable(index);
}
inline ::pb::suggests::vk_video::IdxMainData_Variant* IdxMainData::add_variants() {
  // @@protoc_insertion_point(field_add:pb.suggests.vk_video.IdxMainData.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::suggests::vk_video::IdxMainData_Variant >*
IdxMainData::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.vk_video.IdxMainData.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::suggests::vk_video::IdxMainData_Variant >&
IdxMainData::variants() const {
  // @@protoc_insertion_point(field_list:pb.suggests.vk_video.IdxMainData.variants)
  return variants_;
}

// repeated int64 glue_ids = 7 [(.gogo.json) = {
inline int IdxMainData::glue_ids_size() const {
  return glue_ids_.size();
}
inline void IdxMainData::clear_glue_ids() {
  glue_ids_.Clear();
}
inline ::google::protobuf::int64 IdxMainData::glue_ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainData.glue_ids)
  return glue_ids_.Get(index);
}
inline void IdxMainData::set_glue_ids(int index, ::google::protobuf::int64 value) {
  glue_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainData.glue_ids)
}
inline void IdxMainData::add_glue_ids(::google::protobuf::int64 value) {
  glue_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.suggests.vk_video.IdxMainData.glue_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
IdxMainData::glue_ids() const {
  // @@protoc_insertion_point(field_list:pb.suggests.vk_video.IdxMainData.glue_ids)
  return glue_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
IdxMainData::mutable_glue_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.suggests.vk_video.IdxMainData.glue_ids)
  return &glue_ids_;
}

// -------------------------------------------------------------------

// IdxMainNgramData

// string ngram = 1 [(.gogo.json) = {
inline void IdxMainNgramData::clear_ngram() {
  ngram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxMainNgramData::ngram() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainNgramData.ngram)
  return ngram_.GetNoArena();
}
inline void IdxMainNgramData::set_ngram(const ::std::string& value) {
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainNgramData.ngram)
}
#if LANG_CXX11
inline void IdxMainNgramData::set_ngram(::std::string&& value) {
  
  ngram_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.vk_video.IdxMainNgramData.ngram)
}
#endif
inline void IdxMainNgramData::set_ngram(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.vk_video.IdxMainNgramData.ngram)
}
inline void IdxMainNgramData::set_ngram(const char* value, size_t size) {
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.vk_video.IdxMainNgramData.ngram)
}
inline ::std::string* IdxMainNgramData::mutable_ngram() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.vk_video.IdxMainNgramData.ngram)
  return ngram_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxMainNgramData::release_ngram() {
  // @@protoc_insertion_point(field_release:pb.suggests.vk_video.IdxMainNgramData.ngram)
  
  return ngram_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxMainNgramData::set_allocated_ngram(::std::string* ngram) {
  if (ngram != NULL) {
    
  } else {
    
  }
  ngram_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ngram);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.vk_video.IdxMainNgramData.ngram)
}

// uint64 count = 2 [(.gogo.json) = {
inline void IdxMainNgramData::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxMainNgramData::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainNgramData.count)
  return count_;
}
inline void IdxMainNgramData::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainNgramData.count)
}

// uint64 count_at_end = 3 [(.gogo.json) = {
inline void IdxMainNgramData::clear_count_at_end() {
  count_at_end_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxMainNgramData::count_at_end() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxMainNgramData.count_at_end)
  return count_at_end_;
}
inline void IdxMainNgramData::set_count_at_end(::google::protobuf::uint64 value) {
  
  count_at_end_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxMainNgramData.count_at_end)
}

// -------------------------------------------------------------------

// IdxNgramStats

// string ngram = 1 [(.gogo.json) = {
inline void IdxNgramStats::clear_ngram() {
  ngram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IdxNgramStats::ngram() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxNgramStats.ngram)
  return ngram_.GetNoArena();
}
inline void IdxNgramStats::set_ngram(const ::std::string& value) {
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxNgramStats.ngram)
}
#if LANG_CXX11
inline void IdxNgramStats::set_ngram(::std::string&& value) {
  
  ngram_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.suggests.vk_video.IdxNgramStats.ngram)
}
#endif
inline void IdxNgramStats::set_ngram(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.suggests.vk_video.IdxNgramStats.ngram)
}
inline void IdxNgramStats::set_ngram(const char* value, size_t size) {
  
  ngram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.suggests.vk_video.IdxNgramStats.ngram)
}
inline ::std::string* IdxNgramStats::mutable_ngram() {
  
  // @@protoc_insertion_point(field_mutable:pb.suggests.vk_video.IdxNgramStats.ngram)
  return ngram_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdxNgramStats::release_ngram() {
  // @@protoc_insertion_point(field_release:pb.suggests.vk_video.IdxNgramStats.ngram)
  
  return ngram_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdxNgramStats::set_allocated_ngram(::std::string* ngram) {
  if (ngram != NULL) {
    
  } else {
    
  }
  ngram_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ngram);
  // @@protoc_insertion_point(field_set_allocated:pb.suggests.vk_video.IdxNgramStats.ngram)
}

// uint64 count = 2 [(.gogo.json) = {
inline void IdxNgramStats::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxNgramStats::count() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxNgramStats.count)
  return count_;
}
inline void IdxNgramStats::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxNgramStats.count)
}

// uint64 count_allowed = 3 [(.gogo.json) = {
inline void IdxNgramStats::clear_count_allowed() {
  count_allowed_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IdxNgramStats::count_allowed() const {
  // @@protoc_insertion_point(field_get:pb.suggests.vk_video.IdxNgramStats.count_allowed)
  return count_allowed_;
}
inline void IdxNgramStats::set_count_allowed(::google::protobuf::uint64 value) {
  
  count_allowed_ = value;
  // @@protoc_insertion_point(field_set:pb.suggests.vk_video.IdxNgramStats.count_allowed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace vk_video
}  // namespace suggests
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sugg_5fvk_5fvideo_2eproto__INCLUDED
