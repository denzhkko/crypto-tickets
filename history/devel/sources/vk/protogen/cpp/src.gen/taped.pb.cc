// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taped.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "taped.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TapeDocument_TagDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TapeDocument_Tag>
     _instance;
} _TapeDocument_Tag_default_instance_;
class TapeDocumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TapeDocument>
     _instance;
} _TapeDocument_default_instance_;
class TagRecommendationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TagRecommendation>
     _instance;
} _TagRecommendation_default_instance_;
class TagRecommendationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TagRecommendations>
     _instance;
} _TagRecommendations_default_instance_;
class UserRecommendationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserRecommendation>
     _instance;
} _UserRecommendation_default_instance_;

namespace protobuf_taped_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument_Tag, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument_Tag, freq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument_Tag, pos_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, anchor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, text1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, text2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, keywords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, page_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, h_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, dest_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, img_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, img_preview_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, img_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, img_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, anchor_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TapeDocument, tags_),
  10,
  11,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  12,
  13,
  14,
  9,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendation, tag_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendation, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendation, name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagRecommendations, recos_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, anchor_reco_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, connected_reco_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRecommendation, connected_weighted_reco_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(TapeDocument_Tag)},
  { 11, 32, sizeof(TapeDocument)},
  { 48, 56, sizeof(TagRecommendation)},
  { 59, 65, sizeof(TagRecommendations)},
  { 66, 75, sizeof(UserRecommendation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TapeDocument_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TapeDocument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TagRecommendation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TagRecommendations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserRecommendation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "taped.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TapeDocument_Tag_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TapeDocument_Tag_default_instance_);_TapeDocument_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TapeDocument_default_instance_);_TagRecommendation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TagRecommendation_default_instance_);_TagRecommendations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TagRecommendations_default_instance_);_UserRecommendation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserRecommendation_default_instance_);_UserRecommendation_default_instance_._instance.get_mutable()->anchor_reco_ = const_cast< ::TagRecommendations*>(
      ::TagRecommendations::internal_default_instance());
  _UserRecommendation_default_instance_._instance.get_mutable()->connected_reco_ = const_cast< ::TagRecommendations*>(
      ::TagRecommendations::internal_default_instance());
  _UserRecommendation_default_instance_._instance.get_mutable()->connected_weighted_reco_ = const_cast< ::TagRecommendations*>(
      ::TagRecommendations::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013taped.proto\"\256\003\n\014TapeDocument\022\n\n\002id\030\001 \001"
      "(\004\022 \n\004type\030\002 \001(\0162\022.TapeDocument.Type\022\016\n\006"
      "anchor\030\003 \001(\t\022\r\n\005text1\030\004 \001(\t\022\r\n\005text2\030\005 \001"
      "(\t\022\020\n\010keywords\030\006 \001(\t\022\022\n\npage_title\030\007 \001(\t"
      "\022\016\n\006h_text\030\010 \001(\t\022\020\n\010dest_url\030\t \001(\t\022\017\n\007im"
      "g_url\030\n \001(\t\022\027\n\017img_preview_url\030\013 \001(\t\022\021\n\t"
      "img_width\030\014 \001(\005\022\022\n\nimg_height\030\r \001(\005\022\014\n\004r"
      "ank\030\016 \001(\002\022\022\n\nanchor_tag\030\017 \001(\t\022\037\n\004tags\030\020 "
      "\003(\0132\021.TapeDocument.Tag\032.\n\003Tag\022\014\n\004text\030\001 "
      "\001(\t\022\014\n\004freq\030\002 \001(\005\022\013\n\003pos\030\003 \001(\005\"6\n\004Type\022\007"
      "\n\003IMG\020\000\022\007\n\003WEB\020\001\022\010\n\004NEWS\020\002\022\007\n\003CAT\020\003\022\t\n\005M"
      "YATA\020\004\"A\n\021TagRecommendation\022\020\n\010tag_hash\030"
      "\001 \001(\004\022\014\n\004rank\030\002 \001(\002\022\014\n\004name\030\003 \001(\t\"7\n\022Tag"
      "Recommendations\022!\n\005recos\030\001 \003(\0132\022.TagReco"
      "mmendation\"\262\001\n\022UserRecommendation\022\017\n\007use"
      "r_id\030\001 \001(\t\022(\n\013anchor_reco\030\002 \001(\0132\023.TagRec"
      "ommendations\022+\n\016connected_reco\030\003 \001(\0132\023.T"
      "agRecommendations\0224\n\027connected_weighted_"
      "reco\030\004 \001(\0132\023.TagRecommendations"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 751);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "taped.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_taped_2eproto

const ::google::protobuf::EnumDescriptor* TapeDocument_Type_descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_enum_descriptors[0];
}
bool TapeDocument_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TapeDocument_Type TapeDocument::IMG;
const TapeDocument_Type TapeDocument::WEB;
const TapeDocument_Type TapeDocument::NEWS;
const TapeDocument_Type TapeDocument::CAT;
const TapeDocument_Type TapeDocument::MYATA;
const TapeDocument_Type TapeDocument::Type_MIN;
const TapeDocument_Type TapeDocument::Type_MAX;
const int TapeDocument::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TapeDocument_Tag::kTextFieldNumber;
const int TapeDocument_Tag::kFreqFieldNumber;
const int TapeDocument_Tag::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TapeDocument_Tag::TapeDocument_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taped_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TapeDocument.Tag)
}
TapeDocument_Tag::TapeDocument_Tag(const TapeDocument_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&freq_, &from.freq_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&freq_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:TapeDocument.Tag)
}

void TapeDocument_Tag::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&freq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&freq_)) + sizeof(pos_));
}

TapeDocument_Tag::~TapeDocument_Tag() {
  // @@protoc_insertion_point(destructor:TapeDocument.Tag)
  SharedDtor();
}

void TapeDocument_Tag::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TapeDocument_Tag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TapeDocument_Tag::descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TapeDocument_Tag& TapeDocument_Tag::default_instance() {
  protobuf_taped_2eproto::InitDefaults();
  return *internal_default_instance();
}

TapeDocument_Tag* TapeDocument_Tag::New(::google::protobuf::Arena* arena) const {
  TapeDocument_Tag* n = new TapeDocument_Tag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TapeDocument_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:TapeDocument.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&freq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pos_) -
        reinterpret_cast<char*>(&freq_)) + sizeof(pos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TapeDocument_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TapeDocument.Tag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.Tag.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 freq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_freq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &freq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TapeDocument.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TapeDocument.Tag)
  return false;
#undef DO_
}

void TapeDocument_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TapeDocument.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.Tag.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional int32 freq = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->freq(), output);
  }

  // optional int32 pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TapeDocument.Tag)
}

::google::protobuf::uint8* TapeDocument_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TapeDocument.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.Tag.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional int32 freq = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->freq(), target);
  }

  // optional int32 pos = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TapeDocument.Tag)
  return target;
}

size_t TapeDocument_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TapeDocument.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 freq = 2;
    if (has_freq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->freq());
    }

    // optional int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TapeDocument_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TapeDocument.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const TapeDocument_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TapeDocument_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TapeDocument.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TapeDocument.Tag)
    MergeFrom(*source);
  }
}

void TapeDocument_Tag::MergeFrom(const TapeDocument_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TapeDocument.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      freq_ = from.freq_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TapeDocument_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TapeDocument.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TapeDocument_Tag::CopyFrom(const TapeDocument_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TapeDocument.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TapeDocument_Tag::IsInitialized() const {
  return true;
}

void TapeDocument_Tag::Swap(TapeDocument_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TapeDocument_Tag::InternalSwap(TapeDocument_Tag* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(freq_, other->freq_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TapeDocument_Tag::GetMetadata() const {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TapeDocument_Tag

// optional string text = 1;
bool TapeDocument_Tag::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TapeDocument_Tag::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void TapeDocument_Tag::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void TapeDocument_Tag::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& TapeDocument_Tag::text() const {
  // @@protoc_insertion_point(field_get:TapeDocument.Tag.text)
  return text_.GetNoArena();
}
void TapeDocument_Tag::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.Tag.text)
}
#if LANG_CXX11
void TapeDocument_Tag::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.Tag.text)
}
#endif
void TapeDocument_Tag::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.Tag.text)
}
void TapeDocument_Tag::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.Tag.text)
}
::std::string* TapeDocument_Tag::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:TapeDocument.Tag.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument_Tag::release_text() {
  // @@protoc_insertion_point(field_release:TapeDocument.Tag.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument_Tag::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.Tag.text)
}

// optional int32 freq = 2;
bool TapeDocument_Tag::has_freq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TapeDocument_Tag::set_has_freq() {
  _has_bits_[0] |= 0x00000002u;
}
void TapeDocument_Tag::clear_has_freq() {
  _has_bits_[0] &= ~0x00000002u;
}
void TapeDocument_Tag::clear_freq() {
  freq_ = 0;
  clear_has_freq();
}
::google::protobuf::int32 TapeDocument_Tag::freq() const {
  // @@protoc_insertion_point(field_get:TapeDocument.Tag.freq)
  return freq_;
}
void TapeDocument_Tag::set_freq(::google::protobuf::int32 value) {
  set_has_freq();
  freq_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.Tag.freq)
}

// optional int32 pos = 3;
bool TapeDocument_Tag::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TapeDocument_Tag::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void TapeDocument_Tag::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void TapeDocument_Tag::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
::google::protobuf::int32 TapeDocument_Tag::pos() const {
  // @@protoc_insertion_point(field_get:TapeDocument.Tag.pos)
  return pos_;
}
void TapeDocument_Tag::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.Tag.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TapeDocument::kIdFieldNumber;
const int TapeDocument::kTypeFieldNumber;
const int TapeDocument::kAnchorFieldNumber;
const int TapeDocument::kText1FieldNumber;
const int TapeDocument::kText2FieldNumber;
const int TapeDocument::kKeywordsFieldNumber;
const int TapeDocument::kPageTitleFieldNumber;
const int TapeDocument::kHTextFieldNumber;
const int TapeDocument::kDestUrlFieldNumber;
const int TapeDocument::kImgUrlFieldNumber;
const int TapeDocument::kImgPreviewUrlFieldNumber;
const int TapeDocument::kImgWidthFieldNumber;
const int TapeDocument::kImgHeightFieldNumber;
const int TapeDocument::kRankFieldNumber;
const int TapeDocument::kAnchorTagFieldNumber;
const int TapeDocument::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TapeDocument::TapeDocument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taped_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TapeDocument)
}
TapeDocument::TapeDocument(const TapeDocument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  anchor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_anchor()) {
    anchor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_);
  }
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text1()) {
    text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
  }
  text2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text2()) {
    text2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text2_);
  }
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keywords()) {
    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
  page_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_page_title()) {
    page_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_title_);
  }
  h_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_h_text()) {
    h_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.h_text_);
  }
  dest_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dest_url()) {
    dest_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_url_);
  }
  img_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_img_url()) {
    img_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_url_);
  }
  img_preview_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_img_preview_url()) {
    img_preview_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_preview_url_);
  }
  anchor_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_anchor_tag()) {
    anchor_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_tag_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:TapeDocument)
}

void TapeDocument::SharedCtor() {
  _cached_size_ = 0;
  anchor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_preview_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rank_));
}

TapeDocument::~TapeDocument() {
  // @@protoc_insertion_point(destructor:TapeDocument)
  SharedDtor();
}

void TapeDocument::SharedDtor() {
  anchor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dest_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_preview_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TapeDocument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TapeDocument::descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TapeDocument& TapeDocument::default_instance() {
  protobuf_taped_2eproto::InitDefaults();
  return *internal_default_instance();
}

TapeDocument* TapeDocument::New(::google::protobuf::Arena* arena) const {
  TapeDocument* n = new TapeDocument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TapeDocument::Clear() {
// @@protoc_insertion_point(message_clear_start:TapeDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!anchor_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*anchor_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!text1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!text2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text2_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!keywords_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*keywords_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!page_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*page_title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!h_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*h_text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!dest_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*dest_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!img_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*img_url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!img_preview_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*img_preview_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!anchor_tag_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*anchor_tag_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 31744u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rank_) -
        reinterpret_cast<char*>(&id_)) + sizeof(rank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TapeDocument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TapeDocument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TapeDocument.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TapeDocument_Type_IsValid(value)) {
            set_type(static_cast< ::TapeDocument_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string anchor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anchor().data(), static_cast<int>(this->anchor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.anchor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text1().data(), static_cast<int>(this->text1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.text1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text2().data(), static_cast<int>(this->text2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.text2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string keywords = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keywords()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keywords().data(), static_cast<int>(this->keywords().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.keywords");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string page_title = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->page_title().data(), static_cast<int>(this->page_title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.page_title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string h_text = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_h_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->h_text().data(), static_cast<int>(this->h_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.h_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dest_url = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dest_url().data(), static_cast<int>(this->dest_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.dest_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string img_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_img_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->img_url().data(), static_cast<int>(this->img_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.img_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string img_preview_url = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_img_preview_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->img_preview_url().data(), static_cast<int>(this->img_preview_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.img_preview_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 img_width = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_img_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &img_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 img_height = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_img_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &img_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rank = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string anchor_tag = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anchor_tag().data(), static_cast<int>(this->anchor_tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TapeDocument.anchor_tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TapeDocument.Tag tags = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TapeDocument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TapeDocument)
  return false;
#undef DO_
}

void TapeDocument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TapeDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional .TapeDocument.Type type = 2;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string anchor = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor().data(), static_cast<int>(this->anchor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.anchor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->anchor(), output);
  }

  // optional string text1 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text1().data(), static_cast<int>(this->text1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.text1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text1(), output);
  }

  // optional string text2 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text2().data(), static_cast<int>(this->text2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.text2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text2(), output);
  }

  // optional string keywords = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.keywords");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->keywords(), output);
  }

  // optional string page_title = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->page_title().data(), static_cast<int>(this->page_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.page_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->page_title(), output);
  }

  // optional string h_text = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->h_text().data(), static_cast<int>(this->h_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.h_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->h_text(), output);
  }

  // optional string dest_url = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dest_url().data(), static_cast<int>(this->dest_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.dest_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->dest_url(), output);
  }

  // optional string img_url = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_url().data(), static_cast<int>(this->img_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.img_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->img_url(), output);
  }

  // optional string img_preview_url = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_preview_url().data(), static_cast<int>(this->img_preview_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.img_preview_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->img_preview_url(), output);
  }

  // optional int32 img_width = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->img_width(), output);
  }

  // optional int32 img_height = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->img_height(), output);
  }

  // optional float rank = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->rank(), output);
  }

  // optional string anchor_tag = 15;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor_tag().data(), static_cast<int>(this->anchor_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.anchor_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->anchor_tag(), output);
  }

  // repeated .TapeDocument.Tag tags = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->tags(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TapeDocument)
}

::google::protobuf::uint8* TapeDocument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TapeDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional .TapeDocument.Type type = 2;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string anchor = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor().data(), static_cast<int>(this->anchor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.anchor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->anchor(), target);
  }

  // optional string text1 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text1().data(), static_cast<int>(this->text1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.text1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text1(), target);
  }

  // optional string text2 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text2().data(), static_cast<int>(this->text2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.text2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text2(), target);
  }

  // optional string keywords = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.keywords");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->keywords(), target);
  }

  // optional string page_title = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->page_title().data(), static_cast<int>(this->page_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.page_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->page_title(), target);
  }

  // optional string h_text = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->h_text().data(), static_cast<int>(this->h_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.h_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->h_text(), target);
  }

  // optional string dest_url = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dest_url().data(), static_cast<int>(this->dest_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.dest_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->dest_url(), target);
  }

  // optional string img_url = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_url().data(), static_cast<int>(this->img_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.img_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->img_url(), target);
  }

  // optional string img_preview_url = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->img_preview_url().data(), static_cast<int>(this->img_preview_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.img_preview_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->img_preview_url(), target);
  }

  // optional int32 img_width = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->img_width(), target);
  }

  // optional int32 img_height = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->img_height(), target);
  }

  // optional float rank = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->rank(), target);
  }

  // optional string anchor_tag = 15;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor_tag().data(), static_cast<int>(this->anchor_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TapeDocument.anchor_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->anchor_tag(), target);
  }

  // repeated .TapeDocument.Tag tags = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->tags(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TapeDocument)
  return target;
}

size_t TapeDocument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TapeDocument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TapeDocument.Tag tags = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string anchor = 3;
    if (has_anchor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->anchor());
    }

    // optional string text1 = 4;
    if (has_text1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text1());
    }

    // optional string text2 = 5;
    if (has_text2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text2());
    }

    // optional string keywords = 6;
    if (has_keywords()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keywords());
    }

    // optional string page_title = 7;
    if (has_page_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->page_title());
    }

    // optional string h_text = 8;
    if (has_h_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->h_text());
    }

    // optional string dest_url = 9;
    if (has_dest_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dest_url());
    }

    // optional string img_url = 10;
    if (has_img_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->img_url());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional string img_preview_url = 11;
    if (has_img_preview_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->img_preview_url());
    }

    // optional string anchor_tag = 15;
    if (has_anchor_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->anchor_tag());
    }

    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional .TapeDocument.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 img_width = 12;
    if (has_img_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->img_width());
    }

    // optional int32 img_height = 13;
    if (has_img_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->img_height());
    }

    // optional float rank = 14;
    if (has_rank()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TapeDocument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TapeDocument)
  GOOGLE_DCHECK_NE(&from, this);
  const TapeDocument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TapeDocument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TapeDocument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TapeDocument)
    MergeFrom(*source);
  }
}

void TapeDocument::MergeFrom(const TapeDocument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TapeDocument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_anchor();
      anchor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text1();
      text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_text2();
      text2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text2_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_keywords();
      keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_page_title();
      page_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_title_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_h_text();
      h_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.h_text_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_dest_url();
      dest_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_url_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_img_url();
      img_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_url_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_img_preview_url();
      img_preview_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_preview_url_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_anchor_tag();
      anchor_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_tag_);
    }
    if (cached_has_bits & 0x00000400u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000800u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00001000u) {
      img_width_ = from.img_width_;
    }
    if (cached_has_bits & 0x00002000u) {
      img_height_ = from.img_height_;
    }
    if (cached_has_bits & 0x00004000u) {
      rank_ = from.rank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TapeDocument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TapeDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TapeDocument::CopyFrom(const TapeDocument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TapeDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TapeDocument::IsInitialized() const {
  return true;
}

void TapeDocument::Swap(TapeDocument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TapeDocument::InternalSwap(TapeDocument* other) {
  using std::swap;
  tags_.InternalSwap(&other->tags_);
  anchor_.Swap(&other->anchor_);
  text1_.Swap(&other->text1_);
  text2_.Swap(&other->text2_);
  keywords_.Swap(&other->keywords_);
  page_title_.Swap(&other->page_title_);
  h_text_.Swap(&other->h_text_);
  dest_url_.Swap(&other->dest_url_);
  img_url_.Swap(&other->img_url_);
  img_preview_url_.Swap(&other->img_preview_url_);
  anchor_tag_.Swap(&other->anchor_tag_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(img_width_, other->img_width_);
  swap(img_height_, other->img_height_);
  swap(rank_, other->rank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TapeDocument::GetMetadata() const {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TapeDocument

// optional uint64 id = 1;
bool TapeDocument::has_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TapeDocument::set_has_id() {
  _has_bits_[0] |= 0x00000400u;
}
void TapeDocument::clear_has_id() {
  _has_bits_[0] &= ~0x00000400u;
}
void TapeDocument::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 TapeDocument::id() const {
  // @@protoc_insertion_point(field_get:TapeDocument.id)
  return id_;
}
void TapeDocument::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.id)
}

// optional .TapeDocument.Type type = 2;
bool TapeDocument::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TapeDocument::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
void TapeDocument::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void TapeDocument::clear_type() {
  type_ = 0;
  clear_has_type();
}
::TapeDocument_Type TapeDocument::type() const {
  // @@protoc_insertion_point(field_get:TapeDocument.type)
  return static_cast< ::TapeDocument_Type >(type_);
}
void TapeDocument::set_type(::TapeDocument_Type value) {
  assert(::TapeDocument_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.type)
}

// optional string anchor = 3;
bool TapeDocument::has_anchor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TapeDocument::set_has_anchor() {
  _has_bits_[0] |= 0x00000001u;
}
void TapeDocument::clear_has_anchor() {
  _has_bits_[0] &= ~0x00000001u;
}
void TapeDocument::clear_anchor() {
  anchor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anchor();
}
const ::std::string& TapeDocument::anchor() const {
  // @@protoc_insertion_point(field_get:TapeDocument.anchor)
  return anchor_.GetNoArena();
}
void TapeDocument::set_anchor(const ::std::string& value) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.anchor)
}
#if LANG_CXX11
void TapeDocument::set_anchor(::std::string&& value) {
  set_has_anchor();
  anchor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.anchor)
}
#endif
void TapeDocument::set_anchor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.anchor)
}
void TapeDocument::set_anchor(const char* value, size_t size) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.anchor)
}
::std::string* TapeDocument::mutable_anchor() {
  set_has_anchor();
  // @@protoc_insertion_point(field_mutable:TapeDocument.anchor)
  return anchor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_anchor() {
  // @@protoc_insertion_point(field_release:TapeDocument.anchor)
  clear_has_anchor();
  return anchor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_anchor(::std::string* anchor) {
  if (anchor != NULL) {
    set_has_anchor();
  } else {
    clear_has_anchor();
  }
  anchor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anchor);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.anchor)
}

// optional string text1 = 4;
bool TapeDocument::has_text1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TapeDocument::set_has_text1() {
  _has_bits_[0] |= 0x00000002u;
}
void TapeDocument::clear_has_text1() {
  _has_bits_[0] &= ~0x00000002u;
}
void TapeDocument::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text1();
}
const ::std::string& TapeDocument::text1() const {
  // @@protoc_insertion_point(field_get:TapeDocument.text1)
  return text1_.GetNoArena();
}
void TapeDocument::set_text1(const ::std::string& value) {
  set_has_text1();
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.text1)
}
#if LANG_CXX11
void TapeDocument::set_text1(::std::string&& value) {
  set_has_text1();
  text1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.text1)
}
#endif
void TapeDocument::set_text1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text1();
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.text1)
}
void TapeDocument::set_text1(const char* value, size_t size) {
  set_has_text1();
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.text1)
}
::std::string* TapeDocument::mutable_text1() {
  set_has_text1();
  // @@protoc_insertion_point(field_mutable:TapeDocument.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_text1() {
  // @@protoc_insertion_point(field_release:TapeDocument.text1)
  clear_has_text1();
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    set_has_text1();
  } else {
    clear_has_text1();
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.text1)
}

// optional string text2 = 5;
bool TapeDocument::has_text2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TapeDocument::set_has_text2() {
  _has_bits_[0] |= 0x00000004u;
}
void TapeDocument::clear_has_text2() {
  _has_bits_[0] &= ~0x00000004u;
}
void TapeDocument::clear_text2() {
  text2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text2();
}
const ::std::string& TapeDocument::text2() const {
  // @@protoc_insertion_point(field_get:TapeDocument.text2)
  return text2_.GetNoArena();
}
void TapeDocument::set_text2(const ::std::string& value) {
  set_has_text2();
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.text2)
}
#if LANG_CXX11
void TapeDocument::set_text2(::std::string&& value) {
  set_has_text2();
  text2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.text2)
}
#endif
void TapeDocument::set_text2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text2();
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.text2)
}
void TapeDocument::set_text2(const char* value, size_t size) {
  set_has_text2();
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.text2)
}
::std::string* TapeDocument::mutable_text2() {
  set_has_text2();
  // @@protoc_insertion_point(field_mutable:TapeDocument.text2)
  return text2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_text2() {
  // @@protoc_insertion_point(field_release:TapeDocument.text2)
  clear_has_text2();
  return text2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_text2(::std::string* text2) {
  if (text2 != NULL) {
    set_has_text2();
  } else {
    clear_has_text2();
  }
  text2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text2);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.text2)
}

// optional string keywords = 6;
bool TapeDocument::has_keywords() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TapeDocument::set_has_keywords() {
  _has_bits_[0] |= 0x00000008u;
}
void TapeDocument::clear_has_keywords() {
  _has_bits_[0] &= ~0x00000008u;
}
void TapeDocument::clear_keywords() {
  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keywords();
}
const ::std::string& TapeDocument::keywords() const {
  // @@protoc_insertion_point(field_get:TapeDocument.keywords)
  return keywords_.GetNoArena();
}
void TapeDocument::set_keywords(const ::std::string& value) {
  set_has_keywords();
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.keywords)
}
#if LANG_CXX11
void TapeDocument::set_keywords(::std::string&& value) {
  set_has_keywords();
  keywords_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.keywords)
}
#endif
void TapeDocument::set_keywords(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keywords();
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.keywords)
}
void TapeDocument::set_keywords(const char* value, size_t size) {
  set_has_keywords();
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.keywords)
}
::std::string* TapeDocument::mutable_keywords() {
  set_has_keywords();
  // @@protoc_insertion_point(field_mutable:TapeDocument.keywords)
  return keywords_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_keywords() {
  // @@protoc_insertion_point(field_release:TapeDocument.keywords)
  clear_has_keywords();
  return keywords_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_keywords(::std::string* keywords) {
  if (keywords != NULL) {
    set_has_keywords();
  } else {
    clear_has_keywords();
  }
  keywords_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keywords);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.keywords)
}

// optional string page_title = 7;
bool TapeDocument::has_page_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TapeDocument::set_has_page_title() {
  _has_bits_[0] |= 0x00000010u;
}
void TapeDocument::clear_has_page_title() {
  _has_bits_[0] &= ~0x00000010u;
}
void TapeDocument::clear_page_title() {
  page_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_page_title();
}
const ::std::string& TapeDocument::page_title() const {
  // @@protoc_insertion_point(field_get:TapeDocument.page_title)
  return page_title_.GetNoArena();
}
void TapeDocument::set_page_title(const ::std::string& value) {
  set_has_page_title();
  page_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.page_title)
}
#if LANG_CXX11
void TapeDocument::set_page_title(::std::string&& value) {
  set_has_page_title();
  page_title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.page_title)
}
#endif
void TapeDocument::set_page_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_page_title();
  page_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.page_title)
}
void TapeDocument::set_page_title(const char* value, size_t size) {
  set_has_page_title();
  page_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.page_title)
}
::std::string* TapeDocument::mutable_page_title() {
  set_has_page_title();
  // @@protoc_insertion_point(field_mutable:TapeDocument.page_title)
  return page_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_page_title() {
  // @@protoc_insertion_point(field_release:TapeDocument.page_title)
  clear_has_page_title();
  return page_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_page_title(::std::string* page_title) {
  if (page_title != NULL) {
    set_has_page_title();
  } else {
    clear_has_page_title();
  }
  page_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_title);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.page_title)
}

// optional string h_text = 8;
bool TapeDocument::has_h_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TapeDocument::set_has_h_text() {
  _has_bits_[0] |= 0x00000020u;
}
void TapeDocument::clear_has_h_text() {
  _has_bits_[0] &= ~0x00000020u;
}
void TapeDocument::clear_h_text() {
  h_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_h_text();
}
const ::std::string& TapeDocument::h_text() const {
  // @@protoc_insertion_point(field_get:TapeDocument.h_text)
  return h_text_.GetNoArena();
}
void TapeDocument::set_h_text(const ::std::string& value) {
  set_has_h_text();
  h_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.h_text)
}
#if LANG_CXX11
void TapeDocument::set_h_text(::std::string&& value) {
  set_has_h_text();
  h_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.h_text)
}
#endif
void TapeDocument::set_h_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_h_text();
  h_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.h_text)
}
void TapeDocument::set_h_text(const char* value, size_t size) {
  set_has_h_text();
  h_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.h_text)
}
::std::string* TapeDocument::mutable_h_text() {
  set_has_h_text();
  // @@protoc_insertion_point(field_mutable:TapeDocument.h_text)
  return h_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_h_text() {
  // @@protoc_insertion_point(field_release:TapeDocument.h_text)
  clear_has_h_text();
  return h_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_h_text(::std::string* h_text) {
  if (h_text != NULL) {
    set_has_h_text();
  } else {
    clear_has_h_text();
  }
  h_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), h_text);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.h_text)
}

// optional string dest_url = 9;
bool TapeDocument::has_dest_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TapeDocument::set_has_dest_url() {
  _has_bits_[0] |= 0x00000040u;
}
void TapeDocument::clear_has_dest_url() {
  _has_bits_[0] &= ~0x00000040u;
}
void TapeDocument::clear_dest_url() {
  dest_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dest_url();
}
const ::std::string& TapeDocument::dest_url() const {
  // @@protoc_insertion_point(field_get:TapeDocument.dest_url)
  return dest_url_.GetNoArena();
}
void TapeDocument::set_dest_url(const ::std::string& value) {
  set_has_dest_url();
  dest_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.dest_url)
}
#if LANG_CXX11
void TapeDocument::set_dest_url(::std::string&& value) {
  set_has_dest_url();
  dest_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.dest_url)
}
#endif
void TapeDocument::set_dest_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dest_url();
  dest_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.dest_url)
}
void TapeDocument::set_dest_url(const char* value, size_t size) {
  set_has_dest_url();
  dest_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.dest_url)
}
::std::string* TapeDocument::mutable_dest_url() {
  set_has_dest_url();
  // @@protoc_insertion_point(field_mutable:TapeDocument.dest_url)
  return dest_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_dest_url() {
  // @@protoc_insertion_point(field_release:TapeDocument.dest_url)
  clear_has_dest_url();
  return dest_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_dest_url(::std::string* dest_url) {
  if (dest_url != NULL) {
    set_has_dest_url();
  } else {
    clear_has_dest_url();
  }
  dest_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_url);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.dest_url)
}

// optional string img_url = 10;
bool TapeDocument::has_img_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TapeDocument::set_has_img_url() {
  _has_bits_[0] |= 0x00000080u;
}
void TapeDocument::clear_has_img_url() {
  _has_bits_[0] &= ~0x00000080u;
}
void TapeDocument::clear_img_url() {
  img_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img_url();
}
const ::std::string& TapeDocument::img_url() const {
  // @@protoc_insertion_point(field_get:TapeDocument.img_url)
  return img_url_.GetNoArena();
}
void TapeDocument::set_img_url(const ::std::string& value) {
  set_has_img_url();
  img_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.img_url)
}
#if LANG_CXX11
void TapeDocument::set_img_url(::std::string&& value) {
  set_has_img_url();
  img_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.img_url)
}
#endif
void TapeDocument::set_img_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img_url();
  img_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.img_url)
}
void TapeDocument::set_img_url(const char* value, size_t size) {
  set_has_img_url();
  img_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.img_url)
}
::std::string* TapeDocument::mutable_img_url() {
  set_has_img_url();
  // @@protoc_insertion_point(field_mutable:TapeDocument.img_url)
  return img_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_img_url() {
  // @@protoc_insertion_point(field_release:TapeDocument.img_url)
  clear_has_img_url();
  return img_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_img_url(::std::string* img_url) {
  if (img_url != NULL) {
    set_has_img_url();
  } else {
    clear_has_img_url();
  }
  img_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_url);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.img_url)
}

// optional string img_preview_url = 11;
bool TapeDocument::has_img_preview_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TapeDocument::set_has_img_preview_url() {
  _has_bits_[0] |= 0x00000100u;
}
void TapeDocument::clear_has_img_preview_url() {
  _has_bits_[0] &= ~0x00000100u;
}
void TapeDocument::clear_img_preview_url() {
  img_preview_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img_preview_url();
}
const ::std::string& TapeDocument::img_preview_url() const {
  // @@protoc_insertion_point(field_get:TapeDocument.img_preview_url)
  return img_preview_url_.GetNoArena();
}
void TapeDocument::set_img_preview_url(const ::std::string& value) {
  set_has_img_preview_url();
  img_preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.img_preview_url)
}
#if LANG_CXX11
void TapeDocument::set_img_preview_url(::std::string&& value) {
  set_has_img_preview_url();
  img_preview_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.img_preview_url)
}
#endif
void TapeDocument::set_img_preview_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img_preview_url();
  img_preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.img_preview_url)
}
void TapeDocument::set_img_preview_url(const char* value, size_t size) {
  set_has_img_preview_url();
  img_preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.img_preview_url)
}
::std::string* TapeDocument::mutable_img_preview_url() {
  set_has_img_preview_url();
  // @@protoc_insertion_point(field_mutable:TapeDocument.img_preview_url)
  return img_preview_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_img_preview_url() {
  // @@protoc_insertion_point(field_release:TapeDocument.img_preview_url)
  clear_has_img_preview_url();
  return img_preview_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_img_preview_url(::std::string* img_preview_url) {
  if (img_preview_url != NULL) {
    set_has_img_preview_url();
  } else {
    clear_has_img_preview_url();
  }
  img_preview_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img_preview_url);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.img_preview_url)
}

// optional int32 img_width = 12;
bool TapeDocument::has_img_width() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TapeDocument::set_has_img_width() {
  _has_bits_[0] |= 0x00001000u;
}
void TapeDocument::clear_has_img_width() {
  _has_bits_[0] &= ~0x00001000u;
}
void TapeDocument::clear_img_width() {
  img_width_ = 0;
  clear_has_img_width();
}
::google::protobuf::int32 TapeDocument::img_width() const {
  // @@protoc_insertion_point(field_get:TapeDocument.img_width)
  return img_width_;
}
void TapeDocument::set_img_width(::google::protobuf::int32 value) {
  set_has_img_width();
  img_width_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.img_width)
}

// optional int32 img_height = 13;
bool TapeDocument::has_img_height() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void TapeDocument::set_has_img_height() {
  _has_bits_[0] |= 0x00002000u;
}
void TapeDocument::clear_has_img_height() {
  _has_bits_[0] &= ~0x00002000u;
}
void TapeDocument::clear_img_height() {
  img_height_ = 0;
  clear_has_img_height();
}
::google::protobuf::int32 TapeDocument::img_height() const {
  // @@protoc_insertion_point(field_get:TapeDocument.img_height)
  return img_height_;
}
void TapeDocument::set_img_height(::google::protobuf::int32 value) {
  set_has_img_height();
  img_height_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.img_height)
}

// optional float rank = 14;
bool TapeDocument::has_rank() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void TapeDocument::set_has_rank() {
  _has_bits_[0] |= 0x00004000u;
}
void TapeDocument::clear_has_rank() {
  _has_bits_[0] &= ~0x00004000u;
}
void TapeDocument::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
float TapeDocument::rank() const {
  // @@protoc_insertion_point(field_get:TapeDocument.rank)
  return rank_;
}
void TapeDocument::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TapeDocument.rank)
}

// optional string anchor_tag = 15;
bool TapeDocument::has_anchor_tag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TapeDocument::set_has_anchor_tag() {
  _has_bits_[0] |= 0x00000200u;
}
void TapeDocument::clear_has_anchor_tag() {
  _has_bits_[0] &= ~0x00000200u;
}
void TapeDocument::clear_anchor_tag() {
  anchor_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anchor_tag();
}
const ::std::string& TapeDocument::anchor_tag() const {
  // @@protoc_insertion_point(field_get:TapeDocument.anchor_tag)
  return anchor_tag_.GetNoArena();
}
void TapeDocument::set_anchor_tag(const ::std::string& value) {
  set_has_anchor_tag();
  anchor_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TapeDocument.anchor_tag)
}
#if LANG_CXX11
void TapeDocument::set_anchor_tag(::std::string&& value) {
  set_has_anchor_tag();
  anchor_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TapeDocument.anchor_tag)
}
#endif
void TapeDocument::set_anchor_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anchor_tag();
  anchor_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TapeDocument.anchor_tag)
}
void TapeDocument::set_anchor_tag(const char* value, size_t size) {
  set_has_anchor_tag();
  anchor_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TapeDocument.anchor_tag)
}
::std::string* TapeDocument::mutable_anchor_tag() {
  set_has_anchor_tag();
  // @@protoc_insertion_point(field_mutable:TapeDocument.anchor_tag)
  return anchor_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TapeDocument::release_anchor_tag() {
  // @@protoc_insertion_point(field_release:TapeDocument.anchor_tag)
  clear_has_anchor_tag();
  return anchor_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TapeDocument::set_allocated_anchor_tag(::std::string* anchor_tag) {
  if (anchor_tag != NULL) {
    set_has_anchor_tag();
  } else {
    clear_has_anchor_tag();
  }
  anchor_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anchor_tag);
  // @@protoc_insertion_point(field_set_allocated:TapeDocument.anchor_tag)
}

// repeated .TapeDocument.Tag tags = 16;
int TapeDocument::tags_size() const {
  return tags_.size();
}
void TapeDocument::clear_tags() {
  tags_.Clear();
}
const ::TapeDocument_Tag& TapeDocument::tags(int index) const {
  // @@protoc_insertion_point(field_get:TapeDocument.tags)
  return tags_.Get(index);
}
::TapeDocument_Tag* TapeDocument::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:TapeDocument.tags)
  return tags_.Mutable(index);
}
::TapeDocument_Tag* TapeDocument::add_tags() {
  // @@protoc_insertion_point(field_add:TapeDocument.tags)
  return tags_.Add();
}
::google::protobuf::RepeatedPtrField< ::TapeDocument_Tag >*
TapeDocument::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:TapeDocument.tags)
  return &tags_;
}
const ::google::protobuf::RepeatedPtrField< ::TapeDocument_Tag >&
TapeDocument::tags() const {
  // @@protoc_insertion_point(field_list:TapeDocument.tags)
  return tags_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TagRecommendation::kTagHashFieldNumber;
const int TagRecommendation::kRankFieldNumber;
const int TagRecommendation::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TagRecommendation::TagRecommendation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taped_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TagRecommendation)
}
TagRecommendation::TagRecommendation(const TagRecommendation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&tag_hash_, &from.tag_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&tag_hash_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:TagRecommendation)
}

void TagRecommendation::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tag_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&tag_hash_)) + sizeof(rank_));
}

TagRecommendation::~TagRecommendation() {
  // @@protoc_insertion_point(destructor:TagRecommendation)
  SharedDtor();
}

void TagRecommendation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TagRecommendation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TagRecommendation::descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TagRecommendation& TagRecommendation::default_instance() {
  protobuf_taped_2eproto::InitDefaults();
  return *internal_default_instance();
}

TagRecommendation* TagRecommendation::New(::google::protobuf::Arena* arena) const {
  TagRecommendation* n = new TagRecommendation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TagRecommendation::Clear() {
// @@protoc_insertion_point(message_clear_start:TagRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&tag_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rank_) -
        reinterpret_cast<char*>(&tag_hash_)) + sizeof(rank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TagRecommendation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TagRecommendation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tag_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tag_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tag_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TagRecommendation.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TagRecommendation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TagRecommendation)
  return false;
#undef DO_
}

void TagRecommendation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TagRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tag_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tag_hash(), output);
  }

  // optional float rank = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rank(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TagRecommendation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TagRecommendation)
}

::google::protobuf::uint8* TagRecommendation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TagRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tag_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tag_hash(), target);
  }

  // optional float rank = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rank(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TagRecommendation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TagRecommendation)
  return target;
}

size_t TagRecommendation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TagRecommendation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 tag_hash = 1;
    if (has_tag_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tag_hash());
    }

    // optional float rank = 2;
    if (has_rank()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TagRecommendation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TagRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  const TagRecommendation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TagRecommendation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TagRecommendation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TagRecommendation)
    MergeFrom(*source);
  }
}

void TagRecommendation::MergeFrom(const TagRecommendation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TagRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      tag_hash_ = from.tag_hash_;
    }
    if (cached_has_bits & 0x00000004u) {
      rank_ = from.rank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TagRecommendation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TagRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagRecommendation::CopyFrom(const TagRecommendation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TagRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagRecommendation::IsInitialized() const {
  return true;
}

void TagRecommendation::Swap(TagRecommendation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TagRecommendation::InternalSwap(TagRecommendation* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(tag_hash_, other->tag_hash_);
  swap(rank_, other->rank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TagRecommendation::GetMetadata() const {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TagRecommendation

// optional uint64 tag_hash = 1;
bool TagRecommendation::has_tag_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TagRecommendation::set_has_tag_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void TagRecommendation::clear_has_tag_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void TagRecommendation::clear_tag_hash() {
  tag_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_tag_hash();
}
::google::protobuf::uint64 TagRecommendation::tag_hash() const {
  // @@protoc_insertion_point(field_get:TagRecommendation.tag_hash)
  return tag_hash_;
}
void TagRecommendation::set_tag_hash(::google::protobuf::uint64 value) {
  set_has_tag_hash();
  tag_hash_ = value;
  // @@protoc_insertion_point(field_set:TagRecommendation.tag_hash)
}

// optional float rank = 2;
bool TagRecommendation::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TagRecommendation::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
void TagRecommendation::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
void TagRecommendation::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
float TagRecommendation::rank() const {
  // @@protoc_insertion_point(field_get:TagRecommendation.rank)
  return rank_;
}
void TagRecommendation::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TagRecommendation.rank)
}

// optional string name = 3;
bool TagRecommendation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TagRecommendation::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TagRecommendation::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TagRecommendation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TagRecommendation::name() const {
  // @@protoc_insertion_point(field_get:TagRecommendation.name)
  return name_.GetNoArena();
}
void TagRecommendation::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TagRecommendation.name)
}
#if LANG_CXX11
void TagRecommendation::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TagRecommendation.name)
}
#endif
void TagRecommendation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TagRecommendation.name)
}
void TagRecommendation::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TagRecommendation.name)
}
::std::string* TagRecommendation::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:TagRecommendation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TagRecommendation::release_name() {
  // @@protoc_insertion_point(field_release:TagRecommendation.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TagRecommendation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TagRecommendation.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TagRecommendations::kRecosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TagRecommendations::TagRecommendations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taped_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TagRecommendations)
}
TagRecommendations::TagRecommendations(const TagRecommendations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      recos_(from.recos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TagRecommendations)
}

void TagRecommendations::SharedCtor() {
  _cached_size_ = 0;
}

TagRecommendations::~TagRecommendations() {
  // @@protoc_insertion_point(destructor:TagRecommendations)
  SharedDtor();
}

void TagRecommendations::SharedDtor() {
}

void TagRecommendations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TagRecommendations::descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TagRecommendations& TagRecommendations::default_instance() {
  protobuf_taped_2eproto::InitDefaults();
  return *internal_default_instance();
}

TagRecommendations* TagRecommendations::New(::google::protobuf::Arena* arena) const {
  TagRecommendations* n = new TagRecommendations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TagRecommendations::Clear() {
// @@protoc_insertion_point(message_clear_start:TagRecommendations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TagRecommendations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TagRecommendations)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TagRecommendation recos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TagRecommendations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TagRecommendations)
  return false;
#undef DO_
}

void TagRecommendations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TagRecommendations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TagRecommendation recos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recos(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TagRecommendations)
}

::google::protobuf::uint8* TagRecommendations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TagRecommendations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TagRecommendation recos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->recos(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TagRecommendations)
  return target;
}

size_t TagRecommendations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TagRecommendations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TagRecommendation recos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->recos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TagRecommendations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TagRecommendations)
  GOOGLE_DCHECK_NE(&from, this);
  const TagRecommendations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TagRecommendations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TagRecommendations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TagRecommendations)
    MergeFrom(*source);
  }
}

void TagRecommendations::MergeFrom(const TagRecommendations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TagRecommendations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recos_.MergeFrom(from.recos_);
}

void TagRecommendations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TagRecommendations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagRecommendations::CopyFrom(const TagRecommendations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TagRecommendations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagRecommendations::IsInitialized() const {
  return true;
}

void TagRecommendations::Swap(TagRecommendations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TagRecommendations::InternalSwap(TagRecommendations* other) {
  using std::swap;
  recos_.InternalSwap(&other->recos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TagRecommendations::GetMetadata() const {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TagRecommendations

// repeated .TagRecommendation recos = 1;
int TagRecommendations::recos_size() const {
  return recos_.size();
}
void TagRecommendations::clear_recos() {
  recos_.Clear();
}
const ::TagRecommendation& TagRecommendations::recos(int index) const {
  // @@protoc_insertion_point(field_get:TagRecommendations.recos)
  return recos_.Get(index);
}
::TagRecommendation* TagRecommendations::mutable_recos(int index) {
  // @@protoc_insertion_point(field_mutable:TagRecommendations.recos)
  return recos_.Mutable(index);
}
::TagRecommendation* TagRecommendations::add_recos() {
  // @@protoc_insertion_point(field_add:TagRecommendations.recos)
  return recos_.Add();
}
::google::protobuf::RepeatedPtrField< ::TagRecommendation >*
TagRecommendations::mutable_recos() {
  // @@protoc_insertion_point(field_mutable_list:TagRecommendations.recos)
  return &recos_;
}
const ::google::protobuf::RepeatedPtrField< ::TagRecommendation >&
TagRecommendations::recos() const {
  // @@protoc_insertion_point(field_list:TagRecommendations.recos)
  return recos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRecommendation::kUserIdFieldNumber;
const int UserRecommendation::kAnchorRecoFieldNumber;
const int UserRecommendation::kConnectedRecoFieldNumber;
const int UserRecommendation::kConnectedWeightedRecoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRecommendation::UserRecommendation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_taped_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserRecommendation)
}
UserRecommendation::UserRecommendation(const UserRecommendation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_anchor_reco()) {
    anchor_reco_ = new ::TagRecommendations(*from.anchor_reco_);
  } else {
    anchor_reco_ = NULL;
  }
  if (from.has_connected_reco()) {
    connected_reco_ = new ::TagRecommendations(*from.connected_reco_);
  } else {
    connected_reco_ = NULL;
  }
  if (from.has_connected_weighted_reco()) {
    connected_weighted_reco_ = new ::TagRecommendations(*from.connected_weighted_reco_);
  } else {
    connected_weighted_reco_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:UserRecommendation)
}

void UserRecommendation::SharedCtor() {
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&anchor_reco_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_weighted_reco_) -
      reinterpret_cast<char*>(&anchor_reco_)) + sizeof(connected_weighted_reco_));
}

UserRecommendation::~UserRecommendation() {
  // @@protoc_insertion_point(destructor:UserRecommendation)
  SharedDtor();
}

void UserRecommendation::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete anchor_reco_;
  if (this != internal_default_instance()) delete connected_reco_;
  if (this != internal_default_instance()) delete connected_weighted_reco_;
}

void UserRecommendation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRecommendation::descriptor() {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRecommendation& UserRecommendation::default_instance() {
  protobuf_taped_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserRecommendation* UserRecommendation::New(::google::protobuf::Arena* arena) const {
  UserRecommendation* n = new UserRecommendation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRecommendation::Clear() {
// @@protoc_insertion_point(message_clear_start:UserRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!user_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(anchor_reco_ != NULL);
      anchor_reco_->::TagRecommendations::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(connected_reco_ != NULL);
      connected_reco_->::TagRecommendations::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(connected_weighted_reco_ != NULL);
      connected_weighted_reco_->::TagRecommendations::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRecommendation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserRecommendation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserRecommendation.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TagRecommendations anchor_reco = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anchor_reco()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TagRecommendations connected_reco = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_connected_reco()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TagRecommendations connected_weighted_reco = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_connected_weighted_reco()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserRecommendation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserRecommendation)
  return false;
#undef DO_
}

void UserRecommendation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRecommendation.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional .TagRecommendations anchor_reco = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->anchor_reco_, output);
  }

  // optional .TagRecommendations connected_reco = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->connected_reco_, output);
  }

  // optional .TagRecommendations connected_weighted_reco = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->connected_weighted_reco_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserRecommendation)
}

::google::protobuf::uint8* UserRecommendation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserRecommendation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRecommendation.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional .TagRecommendations anchor_reco = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->anchor_reco_, deterministic, target);
  }

  // optional .TagRecommendations connected_reco = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->connected_reco_, deterministic, target);
  }

  // optional .TagRecommendations connected_weighted_reco = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->connected_weighted_reco_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserRecommendation)
  return target;
}

size_t UserRecommendation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserRecommendation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional .TagRecommendations anchor_reco = 2;
    if (has_anchor_reco()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->anchor_reco_);
    }

    // optional .TagRecommendations connected_reco = 3;
    if (has_connected_reco()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->connected_reco_);
    }

    // optional .TagRecommendations connected_weighted_reco = 4;
    if (has_connected_weighted_reco()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->connected_weighted_reco_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRecommendation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRecommendation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRecommendation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserRecommendation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserRecommendation)
    MergeFrom(*source);
  }
}

void UserRecommendation::MergeFrom(const UserRecommendation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserRecommendation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_anchor_reco()->::TagRecommendations::MergeFrom(from.anchor_reco());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_connected_reco()->::TagRecommendations::MergeFrom(from.connected_reco());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_connected_weighted_reco()->::TagRecommendations::MergeFrom(from.connected_weighted_reco());
    }
  }
}

void UserRecommendation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRecommendation::CopyFrom(const UserRecommendation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserRecommendation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRecommendation::IsInitialized() const {
  return true;
}

void UserRecommendation::Swap(UserRecommendation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRecommendation::InternalSwap(UserRecommendation* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_);
  swap(anchor_reco_, other->anchor_reco_);
  swap(connected_reco_, other->connected_reco_);
  swap(connected_weighted_reco_, other->connected_weighted_reco_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRecommendation::GetMetadata() const {
  protobuf_taped_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_taped_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRecommendation

// optional string user_id = 1;
bool UserRecommendation::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserRecommendation::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UserRecommendation::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserRecommendation::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
const ::std::string& UserRecommendation::user_id() const {
  // @@protoc_insertion_point(field_get:UserRecommendation.user_id)
  return user_id_.GetNoArena();
}
void UserRecommendation::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserRecommendation.user_id)
}
#if LANG_CXX11
void UserRecommendation::set_user_id(::std::string&& value) {
  set_has_user_id();
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserRecommendation.user_id)
}
#endif
void UserRecommendation::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserRecommendation.user_id)
}
void UserRecommendation::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserRecommendation.user_id)
}
::std::string* UserRecommendation::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:UserRecommendation.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRecommendation::release_user_id() {
  // @@protoc_insertion_point(field_release:UserRecommendation.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRecommendation::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:UserRecommendation.user_id)
}

// optional .TagRecommendations anchor_reco = 2;
bool UserRecommendation::has_anchor_reco() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserRecommendation::set_has_anchor_reco() {
  _has_bits_[0] |= 0x00000002u;
}
void UserRecommendation::clear_has_anchor_reco() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserRecommendation::clear_anchor_reco() {
  if (anchor_reco_ != NULL) anchor_reco_->::TagRecommendations::Clear();
  clear_has_anchor_reco();
}
const ::TagRecommendations& UserRecommendation::anchor_reco() const {
  const ::TagRecommendations* p = anchor_reco_;
  // @@protoc_insertion_point(field_get:UserRecommendation.anchor_reco)
  return p != NULL ? *p : *reinterpret_cast<const ::TagRecommendations*>(
      &::_TagRecommendations_default_instance_);
}
::TagRecommendations* UserRecommendation::mutable_anchor_reco() {
  set_has_anchor_reco();
  if (anchor_reco_ == NULL) {
    anchor_reco_ = new ::TagRecommendations;
  }
  // @@protoc_insertion_point(field_mutable:UserRecommendation.anchor_reco)
  return anchor_reco_;
}
::TagRecommendations* UserRecommendation::release_anchor_reco() {
  // @@protoc_insertion_point(field_release:UserRecommendation.anchor_reco)
  clear_has_anchor_reco();
  ::TagRecommendations* temp = anchor_reco_;
  anchor_reco_ = NULL;
  return temp;
}
void UserRecommendation::set_allocated_anchor_reco(::TagRecommendations* anchor_reco) {
  delete anchor_reco_;
  anchor_reco_ = anchor_reco;
  if (anchor_reco) {
    set_has_anchor_reco();
  } else {
    clear_has_anchor_reco();
  }
  // @@protoc_insertion_point(field_set_allocated:UserRecommendation.anchor_reco)
}

// optional .TagRecommendations connected_reco = 3;
bool UserRecommendation::has_connected_reco() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserRecommendation::set_has_connected_reco() {
  _has_bits_[0] |= 0x00000004u;
}
void UserRecommendation::clear_has_connected_reco() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserRecommendation::clear_connected_reco() {
  if (connected_reco_ != NULL) connected_reco_->::TagRecommendations::Clear();
  clear_has_connected_reco();
}
const ::TagRecommendations& UserRecommendation::connected_reco() const {
  const ::TagRecommendations* p = connected_reco_;
  // @@protoc_insertion_point(field_get:UserRecommendation.connected_reco)
  return p != NULL ? *p : *reinterpret_cast<const ::TagRecommendations*>(
      &::_TagRecommendations_default_instance_);
}
::TagRecommendations* UserRecommendation::mutable_connected_reco() {
  set_has_connected_reco();
  if (connected_reco_ == NULL) {
    connected_reco_ = new ::TagRecommendations;
  }
  // @@protoc_insertion_point(field_mutable:UserRecommendation.connected_reco)
  return connected_reco_;
}
::TagRecommendations* UserRecommendation::release_connected_reco() {
  // @@protoc_insertion_point(field_release:UserRecommendation.connected_reco)
  clear_has_connected_reco();
  ::TagRecommendations* temp = connected_reco_;
  connected_reco_ = NULL;
  return temp;
}
void UserRecommendation::set_allocated_connected_reco(::TagRecommendations* connected_reco) {
  delete connected_reco_;
  connected_reco_ = connected_reco;
  if (connected_reco) {
    set_has_connected_reco();
  } else {
    clear_has_connected_reco();
  }
  // @@protoc_insertion_point(field_set_allocated:UserRecommendation.connected_reco)
}

// optional .TagRecommendations connected_weighted_reco = 4;
bool UserRecommendation::has_connected_weighted_reco() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UserRecommendation::set_has_connected_weighted_reco() {
  _has_bits_[0] |= 0x00000008u;
}
void UserRecommendation::clear_has_connected_weighted_reco() {
  _has_bits_[0] &= ~0x00000008u;
}
void UserRecommendation::clear_connected_weighted_reco() {
  if (connected_weighted_reco_ != NULL) connected_weighted_reco_->::TagRecommendations::Clear();
  clear_has_connected_weighted_reco();
}
const ::TagRecommendations& UserRecommendation::connected_weighted_reco() const {
  const ::TagRecommendations* p = connected_weighted_reco_;
  // @@protoc_insertion_point(field_get:UserRecommendation.connected_weighted_reco)
  return p != NULL ? *p : *reinterpret_cast<const ::TagRecommendations*>(
      &::_TagRecommendations_default_instance_);
}
::TagRecommendations* UserRecommendation::mutable_connected_weighted_reco() {
  set_has_connected_weighted_reco();
  if (connected_weighted_reco_ == NULL) {
    connected_weighted_reco_ = new ::TagRecommendations;
  }
  // @@protoc_insertion_point(field_mutable:UserRecommendation.connected_weighted_reco)
  return connected_weighted_reco_;
}
::TagRecommendations* UserRecommendation::release_connected_weighted_reco() {
  // @@protoc_insertion_point(field_release:UserRecommendation.connected_weighted_reco)
  clear_has_connected_weighted_reco();
  ::TagRecommendations* temp = connected_weighted_reco_;
  connected_weighted_reco_ = NULL;
  return temp;
}
void UserRecommendation::set_allocated_connected_weighted_reco(::TagRecommendations* connected_weighted_reco) {
  delete connected_weighted_reco_;
  connected_weighted_reco_ = connected_weighted_reco;
  if (connected_weighted_reco) {
    set_has_connected_weighted_reco();
  } else {
    clear_has_connected_weighted_reco();
  }
  // @@protoc_insertion_point(field_set_allocated:UserRecommendation.connected_weighted_reco)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
