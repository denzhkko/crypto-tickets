// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_action_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user_action_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class UserActionEventProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserActionEventProto>
     _instance;
} _UserActionEventProto_default_instance_;

namespace protobuf_user_5faction_5fevent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActionEventProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActionEventProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActionEventProto, name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserActionEventProto, time_sec_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(UserActionEventProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserActionEventProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "user_action_event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserActionEventProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserActionEventProto_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027user_action_event.proto\022\007metrics\";\n\024Us"
      "erActionEventProto\022\021\n\tname_hash\030\001 \001(\006\022\020\n"
      "\010time_sec\030\002 \001(\003B8\n\037org.chromium.componen"
      "ts.metricsB\025UserActionEventProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user_action_event.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_user_5faction_5fevent_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActionEventProto::kNameHashFieldNumber;
const int UserActionEventProto::kTimeSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActionEventProto::UserActionEventProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_5faction_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.UserActionEventProto)
}
UserActionEventProto::UserActionEventProto(const UserActionEventProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_hash_, &from.name_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_sec_) -
    reinterpret_cast<char*>(&name_hash_)) + sizeof(time_sec_));
  // @@protoc_insertion_point(copy_constructor:metrics.UserActionEventProto)
}

void UserActionEventProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_sec_) -
      reinterpret_cast<char*>(&name_hash_)) + sizeof(time_sec_));
}

UserActionEventProto::~UserActionEventProto() {
  // @@protoc_insertion_point(destructor:metrics.UserActionEventProto)
  SharedDtor();
}

void UserActionEventProto::SharedDtor() {
}

void UserActionEventProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserActionEventProto::descriptor() {
  protobuf_user_5faction_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_5faction_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserActionEventProto& UserActionEventProto::default_instance() {
  protobuf_user_5faction_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserActionEventProto* UserActionEventProto::New(::google::protobuf::Arena* arena) const {
  UserActionEventProto* n = new UserActionEventProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserActionEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.UserActionEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&name_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_sec_) -
        reinterpret_cast<char*>(&name_hash_)) + sizeof(time_sec_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserActionEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.UserActionEventProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_name_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_sec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.UserActionEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.UserActionEventProto)
  return false;
#undef DO_
}

void UserActionEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.UserActionEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->name_hash(), output);
  }

  // optional int64 time_sec = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time_sec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.UserActionEventProto)
}

::google::protobuf::uint8* UserActionEventProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.UserActionEventProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 name_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->name_hash(), target);
  }

  // optional int64 time_sec = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time_sec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.UserActionEventProto)
  return target;
}

size_t UserActionEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.UserActionEventProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 name_hash = 1;
    if (has_name_hash()) {
      total_size += 1 + 8;
    }

    // optional int64 time_sec = 2;
    if (has_time_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_sec());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserActionEventProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.UserActionEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  const UserActionEventProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserActionEventProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.UserActionEventProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.UserActionEventProto)
    MergeFrom(*source);
  }
}

void UserActionEventProto::MergeFrom(const UserActionEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.UserActionEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_hash_ = from.name_hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_sec_ = from.time_sec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserActionEventProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.UserActionEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserActionEventProto::CopyFrom(const UserActionEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.UserActionEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserActionEventProto::IsInitialized() const {
  return true;
}

void UserActionEventProto::Swap(UserActionEventProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserActionEventProto::InternalSwap(UserActionEventProto* other) {
  using std::swap;
  swap(name_hash_, other->name_hash_);
  swap(time_sec_, other->time_sec_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserActionEventProto::GetMetadata() const {
  protobuf_user_5faction_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_5faction_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserActionEventProto

// optional fixed64 name_hash = 1;
bool UserActionEventProto::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserActionEventProto::set_has_name_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void UserActionEventProto::clear_has_name_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserActionEventProto::clear_name_hash() {
  name_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_name_hash();
}
::google::protobuf::uint64 UserActionEventProto::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.name_hash)
  return name_hash_;
}
void UserActionEventProto::set_name_hash(::google::protobuf::uint64 value) {
  set_has_name_hash();
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.name_hash)
}

// optional int64 time_sec = 2;
bool UserActionEventProto::has_time_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserActionEventProto::set_has_time_sec() {
  _has_bits_[0] |= 0x00000002u;
}
void UserActionEventProto::clear_has_time_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserActionEventProto::clear_time_sec() {
  time_sec_ = GOOGLE_LONGLONG(0);
  clear_has_time_sec();
}
::google::protobuf::int64 UserActionEventProto::time_sec() const {
  // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.time_sec)
  return time_sec_;
}
void UserActionEventProto::set_time_sec(::google::protobuf::int64 value) {
  set_has_time_sec();
  time_sec_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.time_sec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
