// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_demographics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user_demographics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace metrics {
class UserDemographicsProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserDemographicsProto>
     _instance;
} _UserDemographicsProto_default_instance_;

namespace protobuf_user_5fdemographics_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDemographicsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDemographicsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDemographicsProto, birth_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDemographicsProto, gender_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(UserDemographicsProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserDemographicsProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "user_demographics.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserDemographicsProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserDemographicsProto_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027user_demographics.proto\022\007metrics\"\300\001\n\025U"
      "serDemographicsProto\022\022\n\nbirth_year\030\001 \001(\005"
      "\0225\n\006gender\030\002 \001(\0162%.metrics.UserDemograph"
      "icsProto.Gender\"\\\n\006Gender\022\022\n\016GENDER_UNKN"
      "OWN\020\000\022\017\n\013GENDER_MALE\020\001\022\021\n\rGENDER_FEMALE\020"
      "\002\022\032\n\026GENDER_CUSTOM_OR_OTHER\020\003B9\n\037org.chr"
      "omium.components.metricsB\026UserDemographi"
      "csProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user_demographics.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_user_5fdemographics_2eproto

const ::google::protobuf::EnumDescriptor* UserDemographicsProto_Gender_descriptor() {
  protobuf_user_5fdemographics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_5fdemographics_2eproto::file_level_enum_descriptors[0];
}
bool UserDemographicsProto_Gender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserDemographicsProto_Gender UserDemographicsProto::GENDER_UNKNOWN;
const UserDemographicsProto_Gender UserDemographicsProto::GENDER_MALE;
const UserDemographicsProto_Gender UserDemographicsProto::GENDER_FEMALE;
const UserDemographicsProto_Gender UserDemographicsProto::GENDER_CUSTOM_OR_OTHER;
const UserDemographicsProto_Gender UserDemographicsProto::Gender_MIN;
const UserDemographicsProto_Gender UserDemographicsProto::Gender_MAX;
const int UserDemographicsProto::Gender_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDemographicsProto::kBirthYearFieldNumber;
const int UserDemographicsProto::kGenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDemographicsProto::UserDemographicsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_5fdemographics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:metrics.UserDemographicsProto)
}
UserDemographicsProto::UserDemographicsProto(const UserDemographicsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&birth_year_, &from.birth_year_,
    static_cast<size_t>(reinterpret_cast<char*>(&gender_) -
    reinterpret_cast<char*>(&birth_year_)) + sizeof(gender_));
  // @@protoc_insertion_point(copy_constructor:metrics.UserDemographicsProto)
}

void UserDemographicsProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&birth_year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) -
      reinterpret_cast<char*>(&birth_year_)) + sizeof(gender_));
}

UserDemographicsProto::~UserDemographicsProto() {
  // @@protoc_insertion_point(destructor:metrics.UserDemographicsProto)
  SharedDtor();
}

void UserDemographicsProto::SharedDtor() {
}

void UserDemographicsProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserDemographicsProto::descriptor() {
  protobuf_user_5fdemographics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_5fdemographics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDemographicsProto& UserDemographicsProto::default_instance() {
  protobuf_user_5fdemographics_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserDemographicsProto* UserDemographicsProto::New(::google::protobuf::Arena* arena) const {
  UserDemographicsProto* n = new UserDemographicsProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserDemographicsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:metrics.UserDemographicsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&birth_year_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gender_) -
        reinterpret_cast<char*>(&birth_year_)) + sizeof(gender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserDemographicsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metrics.UserDemographicsProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 birth_year = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_birth_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &birth_year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metrics.UserDemographicsProto.Gender gender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::metrics::UserDemographicsProto_Gender_IsValid(value)) {
            set_gender(static_cast< ::metrics::UserDemographicsProto_Gender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metrics.UserDemographicsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metrics.UserDemographicsProto)
  return false;
#undef DO_
}

void UserDemographicsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metrics.UserDemographicsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 birth_year = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->birth_year(), output);
  }

  // optional .metrics.UserDemographicsProto.Gender gender = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gender(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metrics.UserDemographicsProto)
}

::google::protobuf::uint8* UserDemographicsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metrics.UserDemographicsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 birth_year = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->birth_year(), target);
  }

  // optional .metrics.UserDemographicsProto.Gender gender = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gender(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metrics.UserDemographicsProto)
  return target;
}

size_t UserDemographicsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metrics.UserDemographicsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 birth_year = 1;
    if (has_birth_year()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->birth_year());
    }

    // optional .metrics.UserDemographicsProto.Gender gender = 2;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserDemographicsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metrics.UserDemographicsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDemographicsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDemographicsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metrics.UserDemographicsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metrics.UserDemographicsProto)
    MergeFrom(*source);
  }
}

void UserDemographicsProto::MergeFrom(const UserDemographicsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metrics.UserDemographicsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      birth_year_ = from.birth_year_;
    }
    if (cached_has_bits & 0x00000002u) {
      gender_ = from.gender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserDemographicsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metrics.UserDemographicsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDemographicsProto::CopyFrom(const UserDemographicsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metrics.UserDemographicsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDemographicsProto::IsInitialized() const {
  return true;
}

void UserDemographicsProto::Swap(UserDemographicsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserDemographicsProto::InternalSwap(UserDemographicsProto* other) {
  using std::swap;
  swap(birth_year_, other->birth_year_);
  swap(gender_, other->gender_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserDemographicsProto::GetMetadata() const {
  protobuf_user_5fdemographics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_5fdemographics_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserDemographicsProto

// optional int32 birth_year = 1;
bool UserDemographicsProto::has_birth_year() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserDemographicsProto::set_has_birth_year() {
  _has_bits_[0] |= 0x00000001u;
}
void UserDemographicsProto::clear_has_birth_year() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserDemographicsProto::clear_birth_year() {
  birth_year_ = 0;
  clear_has_birth_year();
}
::google::protobuf::int32 UserDemographicsProto::birth_year() const {
  // @@protoc_insertion_point(field_get:metrics.UserDemographicsProto.birth_year)
  return birth_year_;
}
void UserDemographicsProto::set_birth_year(::google::protobuf::int32 value) {
  set_has_birth_year();
  birth_year_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserDemographicsProto.birth_year)
}

// optional .metrics.UserDemographicsProto.Gender gender = 2;
bool UserDemographicsProto::has_gender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserDemographicsProto::set_has_gender() {
  _has_bits_[0] |= 0x00000002u;
}
void UserDemographicsProto::clear_has_gender() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserDemographicsProto::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
::metrics::UserDemographicsProto_Gender UserDemographicsProto::gender() const {
  // @@protoc_insertion_point(field_get:metrics.UserDemographicsProto.gender)
  return static_cast< ::metrics::UserDemographicsProto_Gender >(gender_);
}
void UserDemographicsProto::set_gender(::metrics::UserDemographicsProto_Gender value) {
  assert(::metrics::UserDemographicsProto_Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserDemographicsProto.gender)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)
