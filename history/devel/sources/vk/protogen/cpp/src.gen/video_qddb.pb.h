// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: video_qddb.proto

#ifndef PROTOBUF_video_5fqddb_2eproto__INCLUDED
#define PROTOBUF_video_5fqddb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gogo {
namespace video_qddb {
class DocRanks;
class DocRanksDefaultTypeInternal;
extern DocRanksDefaultTypeInternal _DocRanks_default_instance_;
class GeoRanks;
class GeoRanksDefaultTypeInternal;
extern GeoRanksDefaultTypeInternal _GeoRanks_default_instance_;
class QueryRecord;
class QueryRecordDefaultTypeInternal;
extern QueryRecordDefaultTypeInternal _QueryRecord_default_instance_;
class SourceRanks;
class SourceRanksDefaultTypeInternal;
extern SourceRanksDefaultTypeInternal _SourceRanks_default_instance_;
}  // namespace video_qddb
}  // namespace gogo

namespace gogo {
namespace video_qddb {

namespace protobuf_video_5fqddb_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_video_5fqddb_2eproto

enum SourceRanks_Version {
  SourceRanks_Version_Current = 1
};
bool SourceRanks_Version_IsValid(int value);
const SourceRanks_Version SourceRanks_Version_Version_MIN = SourceRanks_Version_Current;
const SourceRanks_Version SourceRanks_Version_Version_MAX = SourceRanks_Version_Current;
const int SourceRanks_Version_Version_ARRAYSIZE = SourceRanks_Version_Version_MAX + 1;

const ::google::protobuf::EnumDescriptor* SourceRanks_Version_descriptor();
inline const ::std::string& SourceRanks_Version_Name(SourceRanks_Version value) {
  return ::google::protobuf::internal::NameOfEnum(
    SourceRanks_Version_descriptor(), value);
}
inline bool SourceRanks_Version_Parse(
    const ::std::string& name, SourceRanks_Version* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SourceRanks_Version>(
    SourceRanks_Version_descriptor(), name, value);
}
enum DocRanks_Version {
  DocRanks_Version_Current = 2
};
bool DocRanks_Version_IsValid(int value);
const DocRanks_Version DocRanks_Version_Version_MIN = DocRanks_Version_Current;
const DocRanks_Version DocRanks_Version_Version_MAX = DocRanks_Version_Current;
const int DocRanks_Version_Version_ARRAYSIZE = DocRanks_Version_Version_MAX + 1;

const ::google::protobuf::EnumDescriptor* DocRanks_Version_descriptor();
inline const ::std::string& DocRanks_Version_Name(DocRanks_Version value) {
  return ::google::protobuf::internal::NameOfEnum(
    DocRanks_Version_descriptor(), value);
}
inline bool DocRanks_Version_Parse(
    const ::std::string& name, DocRanks_Version* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DocRanks_Version>(
    DocRanks_Version_descriptor(), name, value);
}
// ===================================================================

class SourceRanks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.video_qddb.SourceRanks) */ {
 public:
  SourceRanks();
  virtual ~SourceRanks();

  SourceRanks(const SourceRanks& from);

  inline SourceRanks& operator=(const SourceRanks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SourceRanks(SourceRanks&& from) noexcept
    : SourceRanks() {
    *this = ::std::move(from);
  }

  inline SourceRanks& operator=(SourceRanks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SourceRanks& default_instance();

  static inline const SourceRanks* internal_default_instance() {
    return reinterpret_cast<const SourceRanks*>(
               &_SourceRanks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SourceRanks* other);
  friend void swap(SourceRanks& a, SourceRanks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SourceRanks* New() const PROTOBUF_FINAL { return New(NULL); }

  SourceRanks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SourceRanks& from);
  void MergeFrom(const SourceRanks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SourceRanks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SourceRanks_Version Version;
  static const Version Current =
    SourceRanks_Version_Current;
  static inline bool Version_IsValid(int value) {
    return SourceRanks_Version_IsValid(value);
  }
  static const Version Version_MIN =
    SourceRanks_Version_Version_MIN;
  static const Version Version_MAX =
    SourceRanks_Version_Version_MAX;
  static const int Version_ARRAYSIZE =
    SourceRanks_Version_Version_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Version_descriptor() {
    return SourceRanks_Version_descriptor();
  }
  static inline const ::std::string& Version_Name(Version value) {
    return SourceRanks_Version_Name(value);
  }
  static inline bool Version_Parse(const ::std::string& name,
      Version* value) {
    return SourceRanks_Version_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 viewsAll = 1;
  bool has_viewsall() const;
  void clear_viewsall();
  static const int kViewsAllFieldNumber = 1;
  ::google::protobuf::uint32 viewsall() const;
  void set_viewsall(::google::protobuf::uint32 value);

  // optional uint32 viewsShort = 2;
  bool has_viewsshort() const;
  void clear_viewsshort();
  static const int kViewsShortFieldNumber = 2;
  ::google::protobuf::uint32 viewsshort() const;
  void set_viewsshort(::google::protobuf::uint32 value);

  // optional uint32 viewsUltraShort = 3;
  bool has_viewsultrashort() const;
  void clear_viewsultrashort();
  static const int kViewsUltraShortFieldNumber = 3;
  ::google::protobuf::uint32 viewsultrashort() const;
  void set_viewsultrashort(::google::protobuf::uint32 value);

  // optional float interest = 4;
  bool has_interest() const;
  void clear_interest();
  static const int kInterestFieldNumber = 4;
  float interest() const;
  void set_interest(float value);

  // optional float ctrInterest = 5;
  bool has_ctrinterest() const;
  void clear_ctrinterest();
  static const int kCtrInterestFieldNumber = 5;
  float ctrinterest() const;
  void set_ctrinterest(float value);

  // optional uint32 ctrInterestOrd = 6;
  bool has_ctrinterestord() const;
  void clear_ctrinterestord();
  static const int kCtrInterestOrdFieldNumber = 6;
  ::google::protobuf::uint32 ctrinterestord() const;
  void set_ctrinterestord(::google::protobuf::uint32 value);

  // optional uint32 viewsAllFixedTimes = 7;
  bool has_viewsallfixedtimes() const;
  void clear_viewsallfixedtimes();
  static const int kViewsAllFixedTimesFieldNumber = 7;
  ::google::protobuf::uint32 viewsallfixedtimes() const;
  void set_viewsallfixedtimes(::google::protobuf::uint32 value);

  // optional uint32 views10sViewed = 8;
  bool has_views10sviewed() const;
  void clear_views10sviewed();
  static const int kViews10SViewedFieldNumber = 8;
  ::google::protobuf::uint32 views10sviewed() const;
  void set_views10sviewed(::google::protobuf::uint32 value);

  // optional uint32 views60sViewed = 9;
  bool has_views60sviewed() const;
  void clear_views60sviewed();
  static const int kViews60SViewedFieldNumber = 9;
  ::google::protobuf::uint32 views60sviewed() const;
  void set_views60sviewed(::google::protobuf::uint32 value);

  // optional float interestFixedTimes = 10;
  bool has_interestfixedtimes() const;
  void clear_interestfixedtimes();
  static const int kInterestFixedTimesFieldNumber = 10;
  float interestfixedtimes() const;
  void set_interestfixedtimes(float value);

  // optional float ctrInterestFixedTimes = 11;
  bool has_ctrinterestfixedtimes() const;
  void clear_ctrinterestfixedtimes();
  static const int kCtrInterestFixedTimesFieldNumber = 11;
  float ctrinterestfixedtimes() const;
  void set_ctrinterestfixedtimes(float value);

  // optional float ctr10 = 12;
  bool has_ctr10() const;
  void clear_ctr10();
  static const int kCtr10FieldNumber = 12;
  float ctr10() const;
  void set_ctr10(float value);

  // optional float ctr60 = 13;
  bool has_ctr60() const;
  void clear_ctr60();
  static const int kCtr60FieldNumber = 13;
  float ctr60() const;
  void set_ctr60(float value);

  // optional float durationLess60sViewedPercent = 14;
  bool has_durationless60sviewedpercent() const;
  void clear_durationless60sviewedpercent();
  static const int kDurationLess60SViewedPercentFieldNumber = 14;
  float durationless60sviewedpercent() const;
  void set_durationless60sviewedpercent(float value);

  // optional uint32 imps = 15;
  bool has_imps() const;
  void clear_imps();
  static const int kImpsFieldNumber = 15;
  ::google::protobuf::uint32 imps() const;
  void set_imps(::google::protobuf::uint32 value);

  // optional uint32 clicks = 16;
  bool has_clicks() const;
  void clear_clicks();
  static const int kClicksFieldNumber = 16;
  ::google::protobuf::uint32 clicks() const;
  void set_clicks(::google::protobuf::uint32 value);

  // optional float ctr = 17;
  bool has_ctr() const;
  void clear_ctr();
  static const int kCtrFieldNumber = 17;
  float ctr() const;
  void set_ctr(float value);

  // optional uint32 ctrOrd = 18;
  bool has_ctrord() const;
  void clear_ctrord();
  static const int kCtrOrdFieldNumber = 18;
  ::google::protobuf::uint32 ctrord() const;
  void set_ctrord(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gogo.video_qddb.SourceRanks)
 private:
  void set_has_viewsall();
  void clear_has_viewsall();
  void set_has_viewsshort();
  void clear_has_viewsshort();
  void set_has_viewsultrashort();
  void clear_has_viewsultrashort();
  void set_has_interest();
  void clear_has_interest();
  void set_has_ctrinterest();
  void clear_has_ctrinterest();
  void set_has_ctrinterestord();
  void clear_has_ctrinterestord();
  void set_has_viewsallfixedtimes();
  void clear_has_viewsallfixedtimes();
  void set_has_views10sviewed();
  void clear_has_views10sviewed();
  void set_has_views60sviewed();
  void clear_has_views60sviewed();
  void set_has_interestfixedtimes();
  void clear_has_interestfixedtimes();
  void set_has_ctrinterestfixedtimes();
  void clear_has_ctrinterestfixedtimes();
  void set_has_ctr10();
  void clear_has_ctr10();
  void set_has_ctr60();
  void clear_has_ctr60();
  void set_has_durationless60sviewedpercent();
  void clear_has_durationless60sviewedpercent();
  void set_has_imps();
  void clear_has_imps();
  void set_has_clicks();
  void clear_has_clicks();
  void set_has_ctr();
  void clear_has_ctr();
  void set_has_ctrord();
  void clear_has_ctrord();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 viewsall_;
  ::google::protobuf::uint32 viewsshort_;
  ::google::protobuf::uint32 viewsultrashort_;
  float interest_;
  float ctrinterest_;
  ::google::protobuf::uint32 ctrinterestord_;
  ::google::protobuf::uint32 viewsallfixedtimes_;
  ::google::protobuf::uint32 views10sviewed_;
  ::google::protobuf::uint32 views60sviewed_;
  float interestfixedtimes_;
  float ctrinterestfixedtimes_;
  float ctr10_;
  float ctr60_;
  float durationless60sviewedpercent_;
  ::google::protobuf::uint32 imps_;
  ::google::protobuf::uint32 clicks_;
  float ctr_;
  ::google::protobuf::uint32 ctrord_;
  friend struct protobuf_video_5fqddb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocRanks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.video_qddb.DocRanks) */ {
 public:
  DocRanks();
  virtual ~DocRanks();

  DocRanks(const DocRanks& from);

  inline DocRanks& operator=(const DocRanks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocRanks(DocRanks&& from) noexcept
    : DocRanks() {
    *this = ::std::move(from);
  }

  inline DocRanks& operator=(DocRanks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocRanks& default_instance();

  static inline const DocRanks* internal_default_instance() {
    return reinterpret_cast<const DocRanks*>(
               &_DocRanks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DocRanks* other);
  friend void swap(DocRanks& a, DocRanks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocRanks* New() const PROTOBUF_FINAL { return New(NULL); }

  DocRanks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocRanks& from);
  void MergeFrom(const DocRanks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocRanks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DocRanks_Version Version;
  static const Version Current =
    DocRanks_Version_Current;
  static inline bool Version_IsValid(int value) {
    return DocRanks_Version_IsValid(value);
  }
  static const Version Version_MIN =
    DocRanks_Version_Version_MIN;
  static const Version Version_MAX =
    DocRanks_Version_Version_MAX;
  static const int Version_ARRAYSIZE =
    DocRanks_Version_Version_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Version_descriptor() {
    return DocRanks_Version_descriptor();
  }
  static inline const ::std::string& Version_Name(Version value) {
    return DocRanks_Version_Name(value);
  }
  static inline bool Version_Parse(const ::std::string& name,
      Version* value) {
    return DocRanks_Version_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .gogo.video_qddb.SourceRanks dzen_vdo_srch = 2;
  bool has_dzen_vdo_srch() const;
  void clear_dzen_vdo_srch();
  static const int kDzenVdoSrchFieldNumber = 2;
  const ::gogo::video_qddb::SourceRanks& dzen_vdo_srch() const;
  ::gogo::video_qddb::SourceRanks* mutable_dzen_vdo_srch();
  ::gogo::video_qddb::SourceRanks* release_dzen_vdo_srch();
  void set_allocated_dzen_vdo_srch(::gogo::video_qddb::SourceRanks* dzen_vdo_srch);

  // optional .gogo.video_qddb.SourceRanks vk_iph = 3;
  bool has_vk_iph() const;
  void clear_vk_iph();
  static const int kVkIphFieldNumber = 3;
  const ::gogo::video_qddb::SourceRanks& vk_iph() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_iph();
  ::gogo::video_qddb::SourceRanks* release_vk_iph();
  void set_allocated_vk_iph(::gogo::video_qddb::SourceRanks* vk_iph);

  // optional .gogo.video_qddb.SourceRanks vk_droid = 4;
  bool has_vk_droid() const;
  void clear_vk_droid();
  static const int kVkDroidFieldNumber = 4;
  const ::gogo::video_qddb::SourceRanks& vk_droid() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_droid();
  ::gogo::video_qddb::SourceRanks* release_vk_droid();
  void set_allocated_vk_droid(::gogo::video_qddb::SourceRanks* vk_droid);

  // optional .gogo.video_qddb.SourceRanks vk_web = 5;
  bool has_vk_web() const;
  void clear_vk_web();
  static const int kVkWebFieldNumber = 5;
  const ::gogo::video_qddb::SourceRanks& vk_web() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_web();
  ::gogo::video_qddb::SourceRanks* release_vk_web();
  void set_allocated_vk_web(::gogo::video_qddb::SourceRanks* vk_web);

  // optional .gogo.video_qddb.SourceRanks vk_mvk = 6;
  bool has_vk_mvk() const;
  void clear_vk_mvk();
  static const int kVkMvkFieldNumber = 6;
  const ::gogo::video_qddb::SourceRanks& vk_mvk() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_mvk();
  ::gogo::video_qddb::SourceRanks* release_vk_mvk();
  void set_allocated_vk_mvk(::gogo::video_qddb::SourceRanks* vk_mvk);

  // optional .gogo.video_qddb.SourceRanks vk_all = 7;
  bool has_vk_all() const;
  void clear_vk_all();
  static const int kVkAllFieldNumber = 7;
  const ::gogo::video_qddb::SourceRanks& vk_all() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_all();
  ::gogo::video_qddb::SourceRanks* release_vk_all();
  void set_allocated_vk_all(::gogo::video_qddb::SourceRanks* vk_all);

  // optional .gogo.video_qddb.SourceRanks vk_rest = 8;
  bool has_vk_rest() const;
  void clear_vk_rest();
  static const int kVkRestFieldNumber = 8;
  const ::gogo::video_qddb::SourceRanks& vk_rest() const;
  ::gogo::video_qddb::SourceRanks* mutable_vk_rest();
  ::gogo::video_qddb::SourceRanks* release_vk_rest();
  void set_allocated_vk_rest(::gogo::video_qddb::SourceRanks* vk_rest);

  // optional .gogo.video_qddb.SourceRanks dzen_mlt_srch = 9;
  bool has_dzen_mlt_srch() const;
  void clear_dzen_mlt_srch();
  static const int kDzenMltSrchFieldNumber = 9;
  const ::gogo::video_qddb::SourceRanks& dzen_mlt_srch() const;
  ::gogo::video_qddb::SourceRanks* mutable_dzen_mlt_srch();
  ::gogo::video_qddb::SourceRanks* release_dzen_mlt_srch();
  void set_allocated_dzen_mlt_srch(::gogo::video_qddb::SourceRanks* dzen_mlt_srch);

  // required uint32 doc_id = 1;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 1;
  ::google::protobuf::uint32 doc_id() const;
  void set_doc_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gogo.video_qddb.DocRanks)
 private:
  void set_has_doc_id();
  void clear_has_doc_id();
  void set_has_dzen_vdo_srch();
  void clear_has_dzen_vdo_srch();
  void set_has_vk_iph();
  void clear_has_vk_iph();
  void set_has_vk_droid();
  void clear_has_vk_droid();
  void set_has_vk_web();
  void clear_has_vk_web();
  void set_has_vk_mvk();
  void clear_has_vk_mvk();
  void set_has_vk_all();
  void clear_has_vk_all();
  void set_has_vk_rest();
  void clear_has_vk_rest();
  void set_has_dzen_mlt_srch();
  void clear_has_dzen_mlt_srch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::gogo::video_qddb::SourceRanks* dzen_vdo_srch_;
  ::gogo::video_qddb::SourceRanks* vk_iph_;
  ::gogo::video_qddb::SourceRanks* vk_droid_;
  ::gogo::video_qddb::SourceRanks* vk_web_;
  ::gogo::video_qddb::SourceRanks* vk_mvk_;
  ::gogo::video_qddb::SourceRanks* vk_all_;
  ::gogo::video_qddb::SourceRanks* vk_rest_;
  ::gogo::video_qddb::SourceRanks* dzen_mlt_srch_;
  ::google::protobuf::uint32 doc_id_;
  friend struct protobuf_video_5fqddb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeoRanks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.video_qddb.GeoRanks) */ {
 public:
  GeoRanks();
  virtual ~GeoRanks();

  GeoRanks(const GeoRanks& from);

  inline GeoRanks& operator=(const GeoRanks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeoRanks(GeoRanks&& from) noexcept
    : GeoRanks() {
    *this = ::std::move(from);
  }

  inline GeoRanks& operator=(GeoRanks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeoRanks& default_instance();

  static inline const GeoRanks* internal_default_instance() {
    return reinterpret_cast<const GeoRanks*>(
               &_GeoRanks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GeoRanks* other);
  friend void swap(GeoRanks& a, GeoRanks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeoRanks* New() const PROTOBUF_FINAL { return New(NULL); }

  GeoRanks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeoRanks& from);
  void MergeFrom(const GeoRanks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeoRanks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gogo.video_qddb.DocRanks doc_ranks = 2;
  int doc_ranks_size() const;
  void clear_doc_ranks();
  static const int kDocRanksFieldNumber = 2;
  const ::gogo::video_qddb::DocRanks& doc_ranks(int index) const;
  ::gogo::video_qddb::DocRanks* mutable_doc_ranks(int index);
  ::gogo::video_qddb::DocRanks* add_doc_ranks();
  ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::DocRanks >*
      mutable_doc_ranks();
  const ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::DocRanks >&
      doc_ranks() const;

  // required uint32 geo_id = 1;
  bool has_geo_id() const;
  void clear_geo_id();
  static const int kGeoIdFieldNumber = 1;
  ::google::protobuf::uint32 geo_id() const;
  void set_geo_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gogo.video_qddb.GeoRanks)
 private:
  void set_has_geo_id();
  void clear_has_geo_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::DocRanks > doc_ranks_;
  ::google::protobuf::uint32 geo_id_;
  friend struct protobuf_video_5fqddb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.video_qddb.QueryRecord) */ {
 public:
  QueryRecord();
  virtual ~QueryRecord();

  QueryRecord(const QueryRecord& from);

  inline QueryRecord& operator=(const QueryRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryRecord(QueryRecord&& from) noexcept
    : QueryRecord() {
    *this = ::std::move(from);
  }

  inline QueryRecord& operator=(QueryRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRecord& default_instance();

  static inline const QueryRecord* internal_default_instance() {
    return reinterpret_cast<const QueryRecord*>(
               &_QueryRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(QueryRecord* other);
  friend void swap(QueryRecord& a, QueryRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRecord& from);
  void MergeFrom(const QueryRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gogo.video_qddb.GeoRanks geo_ranks = 1;
  int geo_ranks_size() const;
  void clear_geo_ranks();
  static const int kGeoRanksFieldNumber = 1;
  const ::gogo::video_qddb::GeoRanks& geo_ranks(int index) const;
  ::gogo::video_qddb::GeoRanks* mutable_geo_ranks(int index);
  ::gogo::video_qddb::GeoRanks* add_geo_ranks();
  ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::GeoRanks >*
      mutable_geo_ranks();
  const ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::GeoRanks >&
      geo_ranks() const;

  // @@protoc_insertion_point(class_scope:gogo.video_qddb.QueryRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::GeoRanks > geo_ranks_;
  friend struct protobuf_video_5fqddb_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SourceRanks

// optional uint32 viewsAll = 1;
inline bool SourceRanks::has_viewsall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SourceRanks::set_has_viewsall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SourceRanks::clear_has_viewsall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SourceRanks::clear_viewsall() {
  viewsall_ = 0u;
  clear_has_viewsall();
}
inline ::google::protobuf::uint32 SourceRanks::viewsall() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.viewsAll)
  return viewsall_;
}
inline void SourceRanks::set_viewsall(::google::protobuf::uint32 value) {
  set_has_viewsall();
  viewsall_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.viewsAll)
}

// optional uint32 viewsShort = 2;
inline bool SourceRanks::has_viewsshort() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SourceRanks::set_has_viewsshort() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SourceRanks::clear_has_viewsshort() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SourceRanks::clear_viewsshort() {
  viewsshort_ = 0u;
  clear_has_viewsshort();
}
inline ::google::protobuf::uint32 SourceRanks::viewsshort() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.viewsShort)
  return viewsshort_;
}
inline void SourceRanks::set_viewsshort(::google::protobuf::uint32 value) {
  set_has_viewsshort();
  viewsshort_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.viewsShort)
}

// optional uint32 viewsUltraShort = 3;
inline bool SourceRanks::has_viewsultrashort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SourceRanks::set_has_viewsultrashort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SourceRanks::clear_has_viewsultrashort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SourceRanks::clear_viewsultrashort() {
  viewsultrashort_ = 0u;
  clear_has_viewsultrashort();
}
inline ::google::protobuf::uint32 SourceRanks::viewsultrashort() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.viewsUltraShort)
  return viewsultrashort_;
}
inline void SourceRanks::set_viewsultrashort(::google::protobuf::uint32 value) {
  set_has_viewsultrashort();
  viewsultrashort_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.viewsUltraShort)
}

// optional float interest = 4;
inline bool SourceRanks::has_interest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SourceRanks::set_has_interest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SourceRanks::clear_has_interest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SourceRanks::clear_interest() {
  interest_ = 0;
  clear_has_interest();
}
inline float SourceRanks::interest() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.interest)
  return interest_;
}
inline void SourceRanks::set_interest(float value) {
  set_has_interest();
  interest_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.interest)
}

// optional float ctrInterest = 5;
inline bool SourceRanks::has_ctrinterest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SourceRanks::set_has_ctrinterest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SourceRanks::clear_has_ctrinterest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SourceRanks::clear_ctrinterest() {
  ctrinterest_ = 0;
  clear_has_ctrinterest();
}
inline float SourceRanks::ctrinterest() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctrInterest)
  return ctrinterest_;
}
inline void SourceRanks::set_ctrinterest(float value) {
  set_has_ctrinterest();
  ctrinterest_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctrInterest)
}

// optional uint32 ctrInterestOrd = 6;
inline bool SourceRanks::has_ctrinterestord() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SourceRanks::set_has_ctrinterestord() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SourceRanks::clear_has_ctrinterestord() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SourceRanks::clear_ctrinterestord() {
  ctrinterestord_ = 0u;
  clear_has_ctrinterestord();
}
inline ::google::protobuf::uint32 SourceRanks::ctrinterestord() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctrInterestOrd)
  return ctrinterestord_;
}
inline void SourceRanks::set_ctrinterestord(::google::protobuf::uint32 value) {
  set_has_ctrinterestord();
  ctrinterestord_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctrInterestOrd)
}

// optional uint32 viewsAllFixedTimes = 7;
inline bool SourceRanks::has_viewsallfixedtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SourceRanks::set_has_viewsallfixedtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SourceRanks::clear_has_viewsallfixedtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SourceRanks::clear_viewsallfixedtimes() {
  viewsallfixedtimes_ = 0u;
  clear_has_viewsallfixedtimes();
}
inline ::google::protobuf::uint32 SourceRanks::viewsallfixedtimes() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.viewsAllFixedTimes)
  return viewsallfixedtimes_;
}
inline void SourceRanks::set_viewsallfixedtimes(::google::protobuf::uint32 value) {
  set_has_viewsallfixedtimes();
  viewsallfixedtimes_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.viewsAllFixedTimes)
}

// optional uint32 views10sViewed = 8;
inline bool SourceRanks::has_views10sviewed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SourceRanks::set_has_views10sviewed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SourceRanks::clear_has_views10sviewed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SourceRanks::clear_views10sviewed() {
  views10sviewed_ = 0u;
  clear_has_views10sviewed();
}
inline ::google::protobuf::uint32 SourceRanks::views10sviewed() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.views10sViewed)
  return views10sviewed_;
}
inline void SourceRanks::set_views10sviewed(::google::protobuf::uint32 value) {
  set_has_views10sviewed();
  views10sviewed_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.views10sViewed)
}

// optional uint32 views60sViewed = 9;
inline bool SourceRanks::has_views60sviewed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SourceRanks::set_has_views60sviewed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SourceRanks::clear_has_views60sviewed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SourceRanks::clear_views60sviewed() {
  views60sviewed_ = 0u;
  clear_has_views60sviewed();
}
inline ::google::protobuf::uint32 SourceRanks::views60sviewed() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.views60sViewed)
  return views60sviewed_;
}
inline void SourceRanks::set_views60sviewed(::google::protobuf::uint32 value) {
  set_has_views60sviewed();
  views60sviewed_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.views60sViewed)
}

// optional float interestFixedTimes = 10;
inline bool SourceRanks::has_interestfixedtimes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SourceRanks::set_has_interestfixedtimes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SourceRanks::clear_has_interestfixedtimes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SourceRanks::clear_interestfixedtimes() {
  interestfixedtimes_ = 0;
  clear_has_interestfixedtimes();
}
inline float SourceRanks::interestfixedtimes() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.interestFixedTimes)
  return interestfixedtimes_;
}
inline void SourceRanks::set_interestfixedtimes(float value) {
  set_has_interestfixedtimes();
  interestfixedtimes_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.interestFixedTimes)
}

// optional float ctrInterestFixedTimes = 11;
inline bool SourceRanks::has_ctrinterestfixedtimes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SourceRanks::set_has_ctrinterestfixedtimes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SourceRanks::clear_has_ctrinterestfixedtimes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SourceRanks::clear_ctrinterestfixedtimes() {
  ctrinterestfixedtimes_ = 0;
  clear_has_ctrinterestfixedtimes();
}
inline float SourceRanks::ctrinterestfixedtimes() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctrInterestFixedTimes)
  return ctrinterestfixedtimes_;
}
inline void SourceRanks::set_ctrinterestfixedtimes(float value) {
  set_has_ctrinterestfixedtimes();
  ctrinterestfixedtimes_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctrInterestFixedTimes)
}

// optional float ctr10 = 12;
inline bool SourceRanks::has_ctr10() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SourceRanks::set_has_ctr10() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SourceRanks::clear_has_ctr10() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SourceRanks::clear_ctr10() {
  ctr10_ = 0;
  clear_has_ctr10();
}
inline float SourceRanks::ctr10() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctr10)
  return ctr10_;
}
inline void SourceRanks::set_ctr10(float value) {
  set_has_ctr10();
  ctr10_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctr10)
}

// optional float ctr60 = 13;
inline bool SourceRanks::has_ctr60() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SourceRanks::set_has_ctr60() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SourceRanks::clear_has_ctr60() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SourceRanks::clear_ctr60() {
  ctr60_ = 0;
  clear_has_ctr60();
}
inline float SourceRanks::ctr60() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctr60)
  return ctr60_;
}
inline void SourceRanks::set_ctr60(float value) {
  set_has_ctr60();
  ctr60_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctr60)
}

// optional float durationLess60sViewedPercent = 14;
inline bool SourceRanks::has_durationless60sviewedpercent() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SourceRanks::set_has_durationless60sviewedpercent() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SourceRanks::clear_has_durationless60sviewedpercent() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SourceRanks::clear_durationless60sviewedpercent() {
  durationless60sviewedpercent_ = 0;
  clear_has_durationless60sviewedpercent();
}
inline float SourceRanks::durationless60sviewedpercent() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.durationLess60sViewedPercent)
  return durationless60sviewedpercent_;
}
inline void SourceRanks::set_durationless60sviewedpercent(float value) {
  set_has_durationless60sviewedpercent();
  durationless60sviewedpercent_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.durationLess60sViewedPercent)
}

// optional uint32 imps = 15;
inline bool SourceRanks::has_imps() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SourceRanks::set_has_imps() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SourceRanks::clear_has_imps() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SourceRanks::clear_imps() {
  imps_ = 0u;
  clear_has_imps();
}
inline ::google::protobuf::uint32 SourceRanks::imps() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.imps)
  return imps_;
}
inline void SourceRanks::set_imps(::google::protobuf::uint32 value) {
  set_has_imps();
  imps_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.imps)
}

// optional uint32 clicks = 16;
inline bool SourceRanks::has_clicks() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SourceRanks::set_has_clicks() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SourceRanks::clear_has_clicks() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SourceRanks::clear_clicks() {
  clicks_ = 0u;
  clear_has_clicks();
}
inline ::google::protobuf::uint32 SourceRanks::clicks() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.clicks)
  return clicks_;
}
inline void SourceRanks::set_clicks(::google::protobuf::uint32 value) {
  set_has_clicks();
  clicks_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.clicks)
}

// optional float ctr = 17;
inline bool SourceRanks::has_ctr() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SourceRanks::set_has_ctr() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SourceRanks::clear_has_ctr() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SourceRanks::clear_ctr() {
  ctr_ = 0;
  clear_has_ctr();
}
inline float SourceRanks::ctr() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctr)
  return ctr_;
}
inline void SourceRanks::set_ctr(float value) {
  set_has_ctr();
  ctr_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctr)
}

// optional uint32 ctrOrd = 18;
inline bool SourceRanks::has_ctrord() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SourceRanks::set_has_ctrord() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SourceRanks::clear_has_ctrord() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SourceRanks::clear_ctrord() {
  ctrord_ = 0u;
  clear_has_ctrord();
}
inline ::google::protobuf::uint32 SourceRanks::ctrord() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.SourceRanks.ctrOrd)
  return ctrord_;
}
inline void SourceRanks::set_ctrord(::google::protobuf::uint32 value) {
  set_has_ctrord();
  ctrord_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.SourceRanks.ctrOrd)
}

// -------------------------------------------------------------------

// DocRanks

// required uint32 doc_id = 1;
inline bool DocRanks::has_doc_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DocRanks::set_has_doc_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DocRanks::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DocRanks::clear_doc_id() {
  doc_id_ = 0u;
  clear_has_doc_id();
}
inline ::google::protobuf::uint32 DocRanks::doc_id() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.doc_id)
  return doc_id_;
}
inline void DocRanks::set_doc_id(::google::protobuf::uint32 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.DocRanks.doc_id)
}

// optional .gogo.video_qddb.SourceRanks dzen_vdo_srch = 2;
inline bool DocRanks::has_dzen_vdo_srch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocRanks::set_has_dzen_vdo_srch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocRanks::clear_has_dzen_vdo_srch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocRanks::clear_dzen_vdo_srch() {
  if (dzen_vdo_srch_ != NULL) dzen_vdo_srch_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_dzen_vdo_srch();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::dzen_vdo_srch() const {
  const ::gogo::video_qddb::SourceRanks* p = dzen_vdo_srch_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.dzen_vdo_srch)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_dzen_vdo_srch() {
  set_has_dzen_vdo_srch();
  if (dzen_vdo_srch_ == NULL) {
    dzen_vdo_srch_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.dzen_vdo_srch)
  return dzen_vdo_srch_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_dzen_vdo_srch() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.dzen_vdo_srch)
  clear_has_dzen_vdo_srch();
  ::gogo::video_qddb::SourceRanks* temp = dzen_vdo_srch_;
  dzen_vdo_srch_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_dzen_vdo_srch(::gogo::video_qddb::SourceRanks* dzen_vdo_srch) {
  delete dzen_vdo_srch_;
  dzen_vdo_srch_ = dzen_vdo_srch;
  if (dzen_vdo_srch) {
    set_has_dzen_vdo_srch();
  } else {
    clear_has_dzen_vdo_srch();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.dzen_vdo_srch)
}

// optional .gogo.video_qddb.SourceRanks vk_iph = 3;
inline bool DocRanks::has_vk_iph() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocRanks::set_has_vk_iph() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocRanks::clear_has_vk_iph() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocRanks::clear_vk_iph() {
  if (vk_iph_ != NULL) vk_iph_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_iph();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_iph() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_iph_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_iph)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_iph() {
  set_has_vk_iph();
  if (vk_iph_ == NULL) {
    vk_iph_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_iph)
  return vk_iph_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_iph() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_iph)
  clear_has_vk_iph();
  ::gogo::video_qddb::SourceRanks* temp = vk_iph_;
  vk_iph_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_iph(::gogo::video_qddb::SourceRanks* vk_iph) {
  delete vk_iph_;
  vk_iph_ = vk_iph;
  if (vk_iph) {
    set_has_vk_iph();
  } else {
    clear_has_vk_iph();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_iph)
}

// optional .gogo.video_qddb.SourceRanks vk_droid = 4;
inline bool DocRanks::has_vk_droid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DocRanks::set_has_vk_droid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DocRanks::clear_has_vk_droid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DocRanks::clear_vk_droid() {
  if (vk_droid_ != NULL) vk_droid_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_droid();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_droid() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_droid_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_droid)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_droid() {
  set_has_vk_droid();
  if (vk_droid_ == NULL) {
    vk_droid_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_droid)
  return vk_droid_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_droid() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_droid)
  clear_has_vk_droid();
  ::gogo::video_qddb::SourceRanks* temp = vk_droid_;
  vk_droid_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_droid(::gogo::video_qddb::SourceRanks* vk_droid) {
  delete vk_droid_;
  vk_droid_ = vk_droid;
  if (vk_droid) {
    set_has_vk_droid();
  } else {
    clear_has_vk_droid();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_droid)
}

// optional .gogo.video_qddb.SourceRanks vk_web = 5;
inline bool DocRanks::has_vk_web() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DocRanks::set_has_vk_web() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DocRanks::clear_has_vk_web() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DocRanks::clear_vk_web() {
  if (vk_web_ != NULL) vk_web_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_web();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_web() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_web_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_web)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_web() {
  set_has_vk_web();
  if (vk_web_ == NULL) {
    vk_web_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_web)
  return vk_web_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_web() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_web)
  clear_has_vk_web();
  ::gogo::video_qddb::SourceRanks* temp = vk_web_;
  vk_web_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_web(::gogo::video_qddb::SourceRanks* vk_web) {
  delete vk_web_;
  vk_web_ = vk_web;
  if (vk_web) {
    set_has_vk_web();
  } else {
    clear_has_vk_web();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_web)
}

// optional .gogo.video_qddb.SourceRanks vk_mvk = 6;
inline bool DocRanks::has_vk_mvk() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DocRanks::set_has_vk_mvk() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DocRanks::clear_has_vk_mvk() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DocRanks::clear_vk_mvk() {
  if (vk_mvk_ != NULL) vk_mvk_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_mvk();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_mvk() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_mvk_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_mvk)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_mvk() {
  set_has_vk_mvk();
  if (vk_mvk_ == NULL) {
    vk_mvk_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_mvk)
  return vk_mvk_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_mvk() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_mvk)
  clear_has_vk_mvk();
  ::gogo::video_qddb::SourceRanks* temp = vk_mvk_;
  vk_mvk_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_mvk(::gogo::video_qddb::SourceRanks* vk_mvk) {
  delete vk_mvk_;
  vk_mvk_ = vk_mvk;
  if (vk_mvk) {
    set_has_vk_mvk();
  } else {
    clear_has_vk_mvk();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_mvk)
}

// optional .gogo.video_qddb.SourceRanks vk_all = 7;
inline bool DocRanks::has_vk_all() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DocRanks::set_has_vk_all() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DocRanks::clear_has_vk_all() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DocRanks::clear_vk_all() {
  if (vk_all_ != NULL) vk_all_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_all();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_all() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_all_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_all)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_all() {
  set_has_vk_all();
  if (vk_all_ == NULL) {
    vk_all_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_all)
  return vk_all_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_all() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_all)
  clear_has_vk_all();
  ::gogo::video_qddb::SourceRanks* temp = vk_all_;
  vk_all_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_all(::gogo::video_qddb::SourceRanks* vk_all) {
  delete vk_all_;
  vk_all_ = vk_all;
  if (vk_all) {
    set_has_vk_all();
  } else {
    clear_has_vk_all();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_all)
}

// optional .gogo.video_qddb.SourceRanks vk_rest = 8;
inline bool DocRanks::has_vk_rest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DocRanks::set_has_vk_rest() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DocRanks::clear_has_vk_rest() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DocRanks::clear_vk_rest() {
  if (vk_rest_ != NULL) vk_rest_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_vk_rest();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::vk_rest() const {
  const ::gogo::video_qddb::SourceRanks* p = vk_rest_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.vk_rest)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_vk_rest() {
  set_has_vk_rest();
  if (vk_rest_ == NULL) {
    vk_rest_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.vk_rest)
  return vk_rest_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_vk_rest() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.vk_rest)
  clear_has_vk_rest();
  ::gogo::video_qddb::SourceRanks* temp = vk_rest_;
  vk_rest_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_vk_rest(::gogo::video_qddb::SourceRanks* vk_rest) {
  delete vk_rest_;
  vk_rest_ = vk_rest;
  if (vk_rest) {
    set_has_vk_rest();
  } else {
    clear_has_vk_rest();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.vk_rest)
}

// optional .gogo.video_qddb.SourceRanks dzen_mlt_srch = 9;
inline bool DocRanks::has_dzen_mlt_srch() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DocRanks::set_has_dzen_mlt_srch() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DocRanks::clear_has_dzen_mlt_srch() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DocRanks::clear_dzen_mlt_srch() {
  if (dzen_mlt_srch_ != NULL) dzen_mlt_srch_->::gogo::video_qddb::SourceRanks::Clear();
  clear_has_dzen_mlt_srch();
}
inline const ::gogo::video_qddb::SourceRanks& DocRanks::dzen_mlt_srch() const {
  const ::gogo::video_qddb::SourceRanks* p = dzen_mlt_srch_;
  // @@protoc_insertion_point(field_get:gogo.video_qddb.DocRanks.dzen_mlt_srch)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::video_qddb::SourceRanks*>(
      &::gogo::video_qddb::_SourceRanks_default_instance_);
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::mutable_dzen_mlt_srch() {
  set_has_dzen_mlt_srch();
  if (dzen_mlt_srch_ == NULL) {
    dzen_mlt_srch_ = new ::gogo::video_qddb::SourceRanks;
  }
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.DocRanks.dzen_mlt_srch)
  return dzen_mlt_srch_;
}
inline ::gogo::video_qddb::SourceRanks* DocRanks::release_dzen_mlt_srch() {
  // @@protoc_insertion_point(field_release:gogo.video_qddb.DocRanks.dzen_mlt_srch)
  clear_has_dzen_mlt_srch();
  ::gogo::video_qddb::SourceRanks* temp = dzen_mlt_srch_;
  dzen_mlt_srch_ = NULL;
  return temp;
}
inline void DocRanks::set_allocated_dzen_mlt_srch(::gogo::video_qddb::SourceRanks* dzen_mlt_srch) {
  delete dzen_mlt_srch_;
  dzen_mlt_srch_ = dzen_mlt_srch;
  if (dzen_mlt_srch) {
    set_has_dzen_mlt_srch();
  } else {
    clear_has_dzen_mlt_srch();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.video_qddb.DocRanks.dzen_mlt_srch)
}

// -------------------------------------------------------------------

// GeoRanks

// required uint32 geo_id = 1;
inline bool GeoRanks::has_geo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeoRanks::set_has_geo_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeoRanks::clear_has_geo_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeoRanks::clear_geo_id() {
  geo_id_ = 0u;
  clear_has_geo_id();
}
inline ::google::protobuf::uint32 GeoRanks::geo_id() const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.GeoRanks.geo_id)
  return geo_id_;
}
inline void GeoRanks::set_geo_id(::google::protobuf::uint32 value) {
  set_has_geo_id();
  geo_id_ = value;
  // @@protoc_insertion_point(field_set:gogo.video_qddb.GeoRanks.geo_id)
}

// repeated .gogo.video_qddb.DocRanks doc_ranks = 2;
inline int GeoRanks::doc_ranks_size() const {
  return doc_ranks_.size();
}
inline void GeoRanks::clear_doc_ranks() {
  doc_ranks_.Clear();
}
inline const ::gogo::video_qddb::DocRanks& GeoRanks::doc_ranks(int index) const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.GeoRanks.doc_ranks)
  return doc_ranks_.Get(index);
}
inline ::gogo::video_qddb::DocRanks* GeoRanks::mutable_doc_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.GeoRanks.doc_ranks)
  return doc_ranks_.Mutable(index);
}
inline ::gogo::video_qddb::DocRanks* GeoRanks::add_doc_ranks() {
  // @@protoc_insertion_point(field_add:gogo.video_qddb.GeoRanks.doc_ranks)
  return doc_ranks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::DocRanks >*
GeoRanks::mutable_doc_ranks() {
  // @@protoc_insertion_point(field_mutable_list:gogo.video_qddb.GeoRanks.doc_ranks)
  return &doc_ranks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::DocRanks >&
GeoRanks::doc_ranks() const {
  // @@protoc_insertion_point(field_list:gogo.video_qddb.GeoRanks.doc_ranks)
  return doc_ranks_;
}

// -------------------------------------------------------------------

// QueryRecord

// repeated .gogo.video_qddb.GeoRanks geo_ranks = 1;
inline int QueryRecord::geo_ranks_size() const {
  return geo_ranks_.size();
}
inline void QueryRecord::clear_geo_ranks() {
  geo_ranks_.Clear();
}
inline const ::gogo::video_qddb::GeoRanks& QueryRecord::geo_ranks(int index) const {
  // @@protoc_insertion_point(field_get:gogo.video_qddb.QueryRecord.geo_ranks)
  return geo_ranks_.Get(index);
}
inline ::gogo::video_qddb::GeoRanks* QueryRecord::mutable_geo_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.video_qddb.QueryRecord.geo_ranks)
  return geo_ranks_.Mutable(index);
}
inline ::gogo::video_qddb::GeoRanks* QueryRecord::add_geo_ranks() {
  // @@protoc_insertion_point(field_add:gogo.video_qddb.QueryRecord.geo_ranks)
  return geo_ranks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::GeoRanks >*
QueryRecord::mutable_geo_ranks() {
  // @@protoc_insertion_point(field_mutable_list:gogo.video_qddb.QueryRecord.geo_ranks)
  return &geo_ranks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gogo::video_qddb::GeoRanks >&
QueryRecord::geo_ranks() const {
  // @@protoc_insertion_point(field_list:gogo.video_qddb.QueryRecord.geo_ranks)
  return geo_ranks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace video_qddb
}  // namespace gogo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gogo::video_qddb::SourceRanks_Version> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gogo::video_qddb::SourceRanks_Version>() {
  return ::gogo::video_qddb::SourceRanks_Version_descriptor();
}
template <> struct is_proto_enum< ::gogo::video_qddb::DocRanks_Version> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gogo::video_qddb::DocRanks_Version>() {
  return ::gogo::video_qddb::DocRanks_Version_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_video_5fqddb_2eproto__INCLUDED
