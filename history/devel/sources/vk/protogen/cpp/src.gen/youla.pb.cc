// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youla.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ImagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Images>
     _instance;
} _Images_default_instance_;
class YoulaMixedIdEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YoulaMixedIdEntry>
     _instance;
} _YoulaMixedIdEntry_default_instance_;
class YoulaMixedIdRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YoulaMixedIdRecord>
     _instance;
} _YoulaMixedIdRecord_default_instance_;
class LiruMappingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LiruMapping>
     _instance;
} _LiruMapping_default_instance_;
class UserNotificationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserNotification>
     _instance;
} _UserNotification_default_instance_;
class UserNotificationInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserNotificationInfo>
     _instance;
} _UserNotificationInfo_default_instance_;
class YProductPartialEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YProductPartialEvent>
     _instance;
} _YProductPartialEvent_default_instance_;
class InterleavingEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InterleavingEvent>
     _instance;
} _InterleavingEvent_default_instance_;
class ContactsAnalysisEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ContactsAnalysisEvent>
     _instance;
} _ContactsAnalysisEvent_default_instance_;
class ViewsAnalysisEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ViewsAnalysisEvent>
     _instance;
} _ViewsAnalysisEvent_default_instance_;

namespace protobuf_youla_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Images, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Images, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Images, images_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, vid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, gaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, idfa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdEntry, user_id_),
  0,
  1,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaMixedIdRecord, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiruMapping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiruMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiruMapping, liru_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiruMapping, youla_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotification, tm_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotificationInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotificationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserNotificationInfo, notifications_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, subcategory_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, city_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, name_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, desc_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, properties_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, images_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, payment_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, delivery_available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, date_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, date_archived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, date_deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, date_blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, date_sold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, sold_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, views_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, is_sold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, is_archived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, archive_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, is_blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, is_deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YProductPartialEvent, raw_json_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  9,
  10,
  7,
  11,
  12,
  13,
  20,
  21,
  14,
  15,
  16,
  17,
  18,
  19,
  26,
  22,
  23,
  27,
  24,
  25,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, showed_from_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterleavingEvent, distance_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, engine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, city_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, subcategory_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, event_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactsAnalysisEvent, search_type_),
  6,
  0,
  1,
  7,
  2,
  8,
  3,
  4,
  9,
  12,
  10,
  11,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, search_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, city_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, category_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, subcategory_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ViewsAnalysisEvent, event_ts_),
  5,
  0,
  1,
  6,
  2,
  3,
  4,
  7,
  8,
  9,
  10,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(Images)},
  { 7, 18, sizeof(YoulaMixedIdEntry)},
  { 24, 30, sizeof(YoulaMixedIdRecord)},
  { 31, 38, sizeof(LiruMapping)},
  { 40, 46, sizeof(UserNotification)},
  { 47, 53, sizeof(UserNotificationInfo)},
  { 54, 87, sizeof(YProductPartialEvent)},
  { 115, 126, sizeof(InterleavingEvent)},
  { 132, 150, sizeof(ContactsAnalysisEvent)},
  { 163, 179, sizeof(ViewsAnalysisEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Images_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YoulaMixedIdEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YoulaMixedIdRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LiruMapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserNotificationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YProductPartialEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InterleavingEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ContactsAnalysisEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ViewsAnalysisEvent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youla.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Images_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Images_default_instance_);_YoulaMixedIdEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YoulaMixedIdEntry_default_instance_);_YoulaMixedIdRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YoulaMixedIdRecord_default_instance_);_LiruMapping_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LiruMapping_default_instance_);_UserNotification_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserNotification_default_instance_);_UserNotificationInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserNotificationInfo_default_instance_);_YProductPartialEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YProductPartialEvent_default_instance_);_InterleavingEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InterleavingEvent_default_instance_);_ContactsAnalysisEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ContactsAnalysisEvent_default_instance_);_ViewsAnalysisEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ViewsAnalysisEvent_default_instance_);_LiruMapping_default_instance_._instance.get_mutable()->youla_id_ = const_cast< ::YoulaMixedIdRecord*>(
      ::YoulaMixedIdRecord::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013youla.proto\"\030\n\006Images\022\016\n\006images\030\001 \003(\t\""
      "f\n\021YoulaMixedIdEntry\022\013\n\003vid\030\001 \001(\t\022\014\n\004gai"
      "d\030\002 \001(\t\022\014\n\004idfa\030\003 \001(\t\022\n\n\002ts\030\004 \001(\003\022\013\n\003uid"
      "\030\005 \001(\t\022\017\n\007user_id\030\006 \001(\t\"9\n\022YoulaMixedIdR"
      "ecord\022#\n\007entries\030\001 \003(\0132\022.YoulaMixedIdEnt"
      "ry\"E\n\013LiruMapping\022\017\n\007liru_id\030\001 \001(\t\022%\n\010yo"
      "ula_id\030\002 \001(\0132\023.YoulaMixedIdRecord\"\036\n\020Use"
      "rNotification\022\n\n\002tm\030\001 \001(\004\"@\n\024UserNotific"
      "ationInfo\022(\n\rnotifications\030\002 \003(\0132\021.UserN"
      "otification\"\323\004\n\024YProductPartialEvent\022\022\n\n"
      "product_id\030\001 \001(\t\022\020\n\010owner_id\030\002 \001(\t\022\023\n\013ca"
      "tegory_id\030\003 \001(\t\022\026\n\016subcategory_id\030\004 \001(\t\022"
      "\017\n\007city_id\030\005 \001(\t\022\021\n\tregion_id\030\006 \001(\t\022\014\n\004n"
      "ame\030\007 \001(\t\022\023\n\013name_length\030\010 \001(\003\022\023\n\013desc_l"
      "ength\030\t \001(\003\022\022\n\nproperties\030\n \001(\t\022\026\n\016prope"
      "rties_num\030\013 \001(\003\022\r\n\005price\030\014 \001(\003\022\022\n\nimages"
      "_num\030\r \001(\003\022\031\n\021payment_available\030\016 \001(\010\022\032\n"
      "\022delivery_available\030\017 \001(\010\022\024\n\014date_create"
      "d\030\020 \001(\003\022\025\n\rdate_archived\030\021 \001(\003\022\024\n\014date_d"
      "eleted\030\022 \001(\003\022\024\n\014date_blocked\030\023 \001(\003\022\021\n\tda"
      "te_sold\030\024 \001(\003\022\021\n\tsold_mode\030\025 \001(\003\022\021\n\tview"
      "s_num\030\026 \001(\003\022\017\n\007is_sold\030\027 \001(\010\022\023\n\013is_archi"
      "ved\030\030 \001(\010\022\024\n\014archive_mode\030\031 \001(\003\022\022\n\nis_bl"
      "ocked\030\032 \001(\010\022\022\n\nis_deleted\030\033 \001(\010\022\020\n\010raw_j"
      "son\030\034 \001(\t\"\230\001\n\021InterleavingEvent\022*\n\nevent"
      "_type\030\001 \001(\0162\026.InterleavingEventType\022\022\n\np"
      "roduct_id\030\002 \001(\t\022\r\n\005split\030\003 \001(\005\022\025\n\rshowed"
      "_from_a\030\004 \001(\010\022\013\n\003pos\030\005 \001(\005\022\020\n\010distance\030\006"
      " \001(\005\"\227\002\n\025ContactsAnalysisEvent\022!\n\006source"
      "\030\001 \001(\0162\021.KafkaEventSource\022\017\n\007user_id\030\002 \001"
      "(\t\022\022\n\nproduct_id\030\003 \001(\t\022\r\n\005split\030\004 \001(\005\022\016\n"
      "\006engine\030\005 \001(\t\022\020\n\010distance\030\006 \001(\005\022\021\n\tregio"
      "n_id\030\007 \001(\t\022\017\n\007city_id\030\010 \001(\t\022\023\n\013category_"
      "id\030\t \001(\005\022\026\n\016subcategory_id\030\n \001(\005\022\r\n\005pric"
      "e\030\013 \001(\003\022\020\n\010event_ts\030\014 \001(\003\022\023\n\013search_type"
      "\030\r \001(\t\"\362\001\n\022ViewsAnalysisEvent\022!\n\006source\030"
      "\001 \001(\0162\021.KafkaEventSource\022\017\n\007user_id\030\002 \001("
      "\t\022\022\n\nproduct_id\030\003 \001(\t\022\r\n\005split\030\004 \001(\005\022\023\n\013"
      "search_type\030\005 \001(\t\022\021\n\tregion_id\030\006 \001(\t\022\017\n\007"
      "city_id\030\007 \001(\t\022\023\n\013category_id\030\010 \001(\005\022\026\n\016su"
      "bcategory_id\030\t \001(\005\022\r\n\005price\030\n \001(\003\022\020\n\010eve"
      "nt_ts\030\013 \001(\003*;\n\025InterleavingEventType\022\n\n\006"
      "SEARCH\020\000\022\t\n\005CLICK\020\001\022\013\n\007CONTACT\020\002*g\n\020Kafk"
      "aEventSource\022\016\n\nY_SEARCHES\020\000\022\027\n\023Y_USER_U"
      "SER_COUNTER\020\001\022\032\n\026Y_USER_PRODUCT_COUNTER\020"
      "\002\022\016\n\nY_PRODUCTS\020\003B&\n\030ru.mail.go.webbase."
      "youlaB\nYoulaProto"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1857);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youla.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_youla_2eproto

const ::google::protobuf::EnumDescriptor* InterleavingEventType_descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_enum_descriptors[0];
}
bool InterleavingEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* KafkaEventSource_descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_enum_descriptors[1];
}
bool KafkaEventSource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Images::kImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Images::Images()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Images)
}
Images::Images(const Images& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      images_(from.images_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Images)
}

void Images::SharedCtor() {
  _cached_size_ = 0;
}

Images::~Images() {
  // @@protoc_insertion_point(destructor:Images)
  SharedDtor();
}

void Images::SharedDtor() {
}

void Images::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Images::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Images& Images::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

Images* Images::New(::google::protobuf::Arena* arena) const {
  Images* n = new Images;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Images::Clear() {
// @@protoc_insertion_point(message_clear_start:Images)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Images::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Images)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string images = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_images()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->images(this->images_size() - 1).data(),
            static_cast<int>(this->images(this->images_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Images.images");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Images)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Images)
  return false;
#undef DO_
}

void Images::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Images)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string images = 1;
  for (int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->images(i).data(), static_cast<int>(this->images(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Images.images");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->images(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Images)
}

::google::protobuf::uint8* Images::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Images)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string images = 1;
  for (int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->images(i).data(), static_cast<int>(this->images(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Images.images");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->images(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Images)
  return target;
}

size_t Images::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Images)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string images = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->images_size());
  for (int i = 0, n = this->images_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->images(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Images::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Images)
  GOOGLE_DCHECK_NE(&from, this);
  const Images* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Images>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Images)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Images)
    MergeFrom(*source);
  }
}

void Images::MergeFrom(const Images& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Images)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
}

void Images::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Images)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Images::CopyFrom(const Images& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Images)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Images::IsInitialized() const {
  return true;
}

void Images::Swap(Images* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Images::InternalSwap(Images* other) {
  using std::swap;
  images_.InternalSwap(&other->images_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Images::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Images

// repeated string images = 1;
int Images::images_size() const {
  return images_.size();
}
void Images::clear_images() {
  images_.Clear();
}
const ::std::string& Images::images(int index) const {
  // @@protoc_insertion_point(field_get:Images.images)
  return images_.Get(index);
}
::std::string* Images::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:Images.images)
  return images_.Mutable(index);
}
void Images::set_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Images.images)
  images_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Images::set_images(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Images.images)
  images_.Mutable(index)->assign(std::move(value));
}
#endif
void Images::set_images(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Images.images)
}
void Images::set_images(int index, const char* value, size_t size) {
  images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Images.images)
}
::std::string* Images::add_images() {
  // @@protoc_insertion_point(field_add_mutable:Images.images)
  return images_.Add();
}
void Images::add_images(const ::std::string& value) {
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Images.images)
}
#if LANG_CXX11
void Images::add_images(::std::string&& value) {
  images_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Images.images)
}
#endif
void Images::add_images(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Images.images)
}
void Images::add_images(const char* value, size_t size) {
  images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Images.images)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Images::images() const {
  // @@protoc_insertion_point(field_list:Images.images)
  return images_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Images::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:Images.images)
  return &images_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YoulaMixedIdEntry::kVidFieldNumber;
const int YoulaMixedIdEntry::kGaidFieldNumber;
const int YoulaMixedIdEntry::kIdfaFieldNumber;
const int YoulaMixedIdEntry::kTsFieldNumber;
const int YoulaMixedIdEntry::kUidFieldNumber;
const int YoulaMixedIdEntry::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YoulaMixedIdEntry::YoulaMixedIdEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:YoulaMixedIdEntry)
}
YoulaMixedIdEntry::YoulaMixedIdEntry(const YoulaMixedIdEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vid()) {
    vid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vid_);
  }
  gaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gaid()) {
    gaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaid_);
  }
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_idfa()) {
    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:YoulaMixedIdEntry)
}

void YoulaMixedIdEntry::SharedCtor() {
  _cached_size_ = 0;
  vid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_ = GOOGLE_LONGLONG(0);
}

YoulaMixedIdEntry::~YoulaMixedIdEntry() {
  // @@protoc_insertion_point(destructor:YoulaMixedIdEntry)
  SharedDtor();
}

void YoulaMixedIdEntry::SharedDtor() {
  vid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YoulaMixedIdEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YoulaMixedIdEntry::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YoulaMixedIdEntry& YoulaMixedIdEntry::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

YoulaMixedIdEntry* YoulaMixedIdEntry::New(::google::protobuf::Arena* arena) const {
  YoulaMixedIdEntry* n = new YoulaMixedIdEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YoulaMixedIdEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:YoulaMixedIdEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!vid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!idfa_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*idfa_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!uid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!user_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_id_.UnsafeRawStringPointer())->clear();
    }
  }
  ts_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YoulaMixedIdEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YoulaMixedIdEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vid().data(), static_cast<int>(this->vid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YoulaMixedIdEntry.vid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gaid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gaid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gaid().data(), static_cast<int>(this->gaid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YoulaMixedIdEntry.gaid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string idfa = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idfa()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idfa().data(), static_cast<int>(this->idfa().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YoulaMixedIdEntry.idfa");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 ts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YoulaMixedIdEntry.uid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YoulaMixedIdEntry.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YoulaMixedIdEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YoulaMixedIdEntry)
  return false;
#undef DO_
}

void YoulaMixedIdEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YoulaMixedIdEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid().data(), static_cast<int>(this->vid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.vid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vid(), output);
  }

  // optional string gaid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gaid().data(), static_cast<int>(this->gaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.gaid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gaid(), output);
  }

  // optional string idfa = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->idfa(), output);
  }

  // optional int64 ts = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->ts(), output);
  }

  // optional string uid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->uid(), output);
  }

  // optional string user_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YoulaMixedIdEntry)
}

::google::protobuf::uint8* YoulaMixedIdEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:YoulaMixedIdEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid().data(), static_cast<int>(this->vid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.vid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vid(), target);
  }

  // optional string gaid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gaid().data(), static_cast<int>(this->gaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.gaid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gaid(), target);
  }

  // optional string idfa = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->idfa(), target);
  }

  // optional int64 ts = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->ts(), target);
  }

  // optional string uid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->uid(), target);
  }

  // optional string user_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YoulaMixedIdEntry.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YoulaMixedIdEntry)
  return target;
}

size_t YoulaMixedIdEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YoulaMixedIdEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string vid = 1;
    if (has_vid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vid());
    }

    // optional string gaid = 2;
    if (has_gaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gaid());
    }

    // optional string idfa = 3;
    if (has_idfa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idfa());
    }

    // optional string uid = 5;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional string user_id = 6;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional int64 ts = 4;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YoulaMixedIdEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YoulaMixedIdEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const YoulaMixedIdEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YoulaMixedIdEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YoulaMixedIdEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YoulaMixedIdEntry)
    MergeFrom(*source);
  }
}

void YoulaMixedIdEntry::MergeFrom(const YoulaMixedIdEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YoulaMixedIdEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vid();
      vid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gaid();
      gaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_idfa();
      idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      ts_ = from.ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YoulaMixedIdEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YoulaMixedIdEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YoulaMixedIdEntry::CopyFrom(const YoulaMixedIdEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YoulaMixedIdEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoulaMixedIdEntry::IsInitialized() const {
  return true;
}

void YoulaMixedIdEntry::Swap(YoulaMixedIdEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YoulaMixedIdEntry::InternalSwap(YoulaMixedIdEntry* other) {
  using std::swap;
  vid_.Swap(&other->vid_);
  gaid_.Swap(&other->gaid_);
  idfa_.Swap(&other->idfa_);
  uid_.Swap(&other->uid_);
  user_id_.Swap(&other->user_id_);
  swap(ts_, other->ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YoulaMixedIdEntry::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YoulaMixedIdEntry

// optional string vid = 1;
bool YoulaMixedIdEntry::has_vid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YoulaMixedIdEntry::set_has_vid() {
  _has_bits_[0] |= 0x00000001u;
}
void YoulaMixedIdEntry::clear_has_vid() {
  _has_bits_[0] &= ~0x00000001u;
}
void YoulaMixedIdEntry::clear_vid() {
  vid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vid();
}
const ::std::string& YoulaMixedIdEntry::vid() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.vid)
  return vid_.GetNoArena();
}
void YoulaMixedIdEntry::set_vid(const ::std::string& value) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.vid)
}
#if LANG_CXX11
void YoulaMixedIdEntry::set_vid(::std::string&& value) {
  set_has_vid();
  vid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YoulaMixedIdEntry.vid)
}
#endif
void YoulaMixedIdEntry::set_vid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YoulaMixedIdEntry.vid)
}
void YoulaMixedIdEntry::set_vid(const char* value, size_t size) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YoulaMixedIdEntry.vid)
}
::std::string* YoulaMixedIdEntry::mutable_vid() {
  set_has_vid();
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdEntry.vid)
  return vid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaMixedIdEntry::release_vid() {
  // @@protoc_insertion_point(field_release:YoulaMixedIdEntry.vid)
  clear_has_vid();
  return vid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaMixedIdEntry::set_allocated_vid(::std::string* vid) {
  if (vid != NULL) {
    set_has_vid();
  } else {
    clear_has_vid();
  }
  vid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vid);
  // @@protoc_insertion_point(field_set_allocated:YoulaMixedIdEntry.vid)
}

// optional string gaid = 2;
bool YoulaMixedIdEntry::has_gaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YoulaMixedIdEntry::set_has_gaid() {
  _has_bits_[0] |= 0x00000002u;
}
void YoulaMixedIdEntry::clear_has_gaid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YoulaMixedIdEntry::clear_gaid() {
  gaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gaid();
}
const ::std::string& YoulaMixedIdEntry::gaid() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.gaid)
  return gaid_.GetNoArena();
}
void YoulaMixedIdEntry::set_gaid(const ::std::string& value) {
  set_has_gaid();
  gaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.gaid)
}
#if LANG_CXX11
void YoulaMixedIdEntry::set_gaid(::std::string&& value) {
  set_has_gaid();
  gaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YoulaMixedIdEntry.gaid)
}
#endif
void YoulaMixedIdEntry::set_gaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gaid();
  gaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YoulaMixedIdEntry.gaid)
}
void YoulaMixedIdEntry::set_gaid(const char* value, size_t size) {
  set_has_gaid();
  gaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YoulaMixedIdEntry.gaid)
}
::std::string* YoulaMixedIdEntry::mutable_gaid() {
  set_has_gaid();
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdEntry.gaid)
  return gaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaMixedIdEntry::release_gaid() {
  // @@protoc_insertion_point(field_release:YoulaMixedIdEntry.gaid)
  clear_has_gaid();
  return gaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaMixedIdEntry::set_allocated_gaid(::std::string* gaid) {
  if (gaid != NULL) {
    set_has_gaid();
  } else {
    clear_has_gaid();
  }
  gaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gaid);
  // @@protoc_insertion_point(field_set_allocated:YoulaMixedIdEntry.gaid)
}

// optional string idfa = 3;
bool YoulaMixedIdEntry::has_idfa() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YoulaMixedIdEntry::set_has_idfa() {
  _has_bits_[0] |= 0x00000004u;
}
void YoulaMixedIdEntry::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000004u;
}
void YoulaMixedIdEntry::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
const ::std::string& YoulaMixedIdEntry::idfa() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.idfa)
  return idfa_.GetNoArena();
}
void YoulaMixedIdEntry::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.idfa)
}
#if LANG_CXX11
void YoulaMixedIdEntry::set_idfa(::std::string&& value) {
  set_has_idfa();
  idfa_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YoulaMixedIdEntry.idfa)
}
#endif
void YoulaMixedIdEntry::set_idfa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YoulaMixedIdEntry.idfa)
}
void YoulaMixedIdEntry::set_idfa(const char* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YoulaMixedIdEntry.idfa)
}
::std::string* YoulaMixedIdEntry::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdEntry.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaMixedIdEntry::release_idfa() {
  // @@protoc_insertion_point(field_release:YoulaMixedIdEntry.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaMixedIdEntry::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:YoulaMixedIdEntry.idfa)
}

// optional int64 ts = 4;
bool YoulaMixedIdEntry::has_ts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void YoulaMixedIdEntry::set_has_ts() {
  _has_bits_[0] |= 0x00000020u;
}
void YoulaMixedIdEntry::clear_has_ts() {
  _has_bits_[0] &= ~0x00000020u;
}
void YoulaMixedIdEntry::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
::google::protobuf::int64 YoulaMixedIdEntry::ts() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.ts)
  return ts_;
}
void YoulaMixedIdEntry::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.ts)
}

// optional string uid = 5;
bool YoulaMixedIdEntry::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YoulaMixedIdEntry::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void YoulaMixedIdEntry::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void YoulaMixedIdEntry::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
const ::std::string& YoulaMixedIdEntry::uid() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.uid)
  return uid_.GetNoArena();
}
void YoulaMixedIdEntry::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.uid)
}
#if LANG_CXX11
void YoulaMixedIdEntry::set_uid(::std::string&& value) {
  set_has_uid();
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YoulaMixedIdEntry.uid)
}
#endif
void YoulaMixedIdEntry::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YoulaMixedIdEntry.uid)
}
void YoulaMixedIdEntry::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YoulaMixedIdEntry.uid)
}
::std::string* YoulaMixedIdEntry::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdEntry.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaMixedIdEntry::release_uid() {
  // @@protoc_insertion_point(field_release:YoulaMixedIdEntry.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaMixedIdEntry::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:YoulaMixedIdEntry.uid)
}

// optional string user_id = 6;
bool YoulaMixedIdEntry::has_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void YoulaMixedIdEntry::set_has_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
void YoulaMixedIdEntry::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void YoulaMixedIdEntry::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
const ::std::string& YoulaMixedIdEntry::user_id() const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdEntry.user_id)
  return user_id_.GetNoArena();
}
void YoulaMixedIdEntry::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YoulaMixedIdEntry.user_id)
}
#if LANG_CXX11
void YoulaMixedIdEntry::set_user_id(::std::string&& value) {
  set_has_user_id();
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YoulaMixedIdEntry.user_id)
}
#endif
void YoulaMixedIdEntry::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YoulaMixedIdEntry.user_id)
}
void YoulaMixedIdEntry::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YoulaMixedIdEntry.user_id)
}
::std::string* YoulaMixedIdEntry::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdEntry.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaMixedIdEntry::release_user_id() {
  // @@protoc_insertion_point(field_release:YoulaMixedIdEntry.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaMixedIdEntry::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YoulaMixedIdEntry.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YoulaMixedIdRecord::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YoulaMixedIdRecord::YoulaMixedIdRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:YoulaMixedIdRecord)
}
YoulaMixedIdRecord::YoulaMixedIdRecord(const YoulaMixedIdRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:YoulaMixedIdRecord)
}

void YoulaMixedIdRecord::SharedCtor() {
  _cached_size_ = 0;
}

YoulaMixedIdRecord::~YoulaMixedIdRecord() {
  // @@protoc_insertion_point(destructor:YoulaMixedIdRecord)
  SharedDtor();
}

void YoulaMixedIdRecord::SharedDtor() {
}

void YoulaMixedIdRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YoulaMixedIdRecord::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YoulaMixedIdRecord& YoulaMixedIdRecord::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

YoulaMixedIdRecord* YoulaMixedIdRecord::New(::google::protobuf::Arena* arena) const {
  YoulaMixedIdRecord* n = new YoulaMixedIdRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YoulaMixedIdRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:YoulaMixedIdRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YoulaMixedIdRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YoulaMixedIdRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .YoulaMixedIdEntry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YoulaMixedIdRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YoulaMixedIdRecord)
  return false;
#undef DO_
}

void YoulaMixedIdRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YoulaMixedIdRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .YoulaMixedIdEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YoulaMixedIdRecord)
}

::google::protobuf::uint8* YoulaMixedIdRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:YoulaMixedIdRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .YoulaMixedIdEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YoulaMixedIdRecord)
  return target;
}

size_t YoulaMixedIdRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YoulaMixedIdRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .YoulaMixedIdEntry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YoulaMixedIdRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YoulaMixedIdRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const YoulaMixedIdRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YoulaMixedIdRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YoulaMixedIdRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YoulaMixedIdRecord)
    MergeFrom(*source);
  }
}

void YoulaMixedIdRecord::MergeFrom(const YoulaMixedIdRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YoulaMixedIdRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void YoulaMixedIdRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YoulaMixedIdRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YoulaMixedIdRecord::CopyFrom(const YoulaMixedIdRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YoulaMixedIdRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoulaMixedIdRecord::IsInitialized() const {
  return true;
}

void YoulaMixedIdRecord::Swap(YoulaMixedIdRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YoulaMixedIdRecord::InternalSwap(YoulaMixedIdRecord* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YoulaMixedIdRecord::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YoulaMixedIdRecord

// repeated .YoulaMixedIdEntry entries = 1;
int YoulaMixedIdRecord::entries_size() const {
  return entries_.size();
}
void YoulaMixedIdRecord::clear_entries() {
  entries_.Clear();
}
const ::YoulaMixedIdEntry& YoulaMixedIdRecord::entries(int index) const {
  // @@protoc_insertion_point(field_get:YoulaMixedIdRecord.entries)
  return entries_.Get(index);
}
::YoulaMixedIdEntry* YoulaMixedIdRecord::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:YoulaMixedIdRecord.entries)
  return entries_.Mutable(index);
}
::YoulaMixedIdEntry* YoulaMixedIdRecord::add_entries() {
  // @@protoc_insertion_point(field_add:YoulaMixedIdRecord.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::YoulaMixedIdEntry >*
YoulaMixedIdRecord::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:YoulaMixedIdRecord.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::YoulaMixedIdEntry >&
YoulaMixedIdRecord::entries() const {
  // @@protoc_insertion_point(field_list:YoulaMixedIdRecord.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiruMapping::kLiruIdFieldNumber;
const int LiruMapping::kYoulaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiruMapping::LiruMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LiruMapping)
}
LiruMapping::LiruMapping(const LiruMapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  liru_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_liru_id()) {
    liru_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liru_id_);
  }
  if (from.has_youla_id()) {
    youla_id_ = new ::YoulaMixedIdRecord(*from.youla_id_);
  } else {
    youla_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LiruMapping)
}

void LiruMapping::SharedCtor() {
  _cached_size_ = 0;
  liru_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youla_id_ = NULL;
}

LiruMapping::~LiruMapping() {
  // @@protoc_insertion_point(destructor:LiruMapping)
  SharedDtor();
}

void LiruMapping::SharedDtor() {
  liru_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete youla_id_;
}

void LiruMapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiruMapping::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiruMapping& LiruMapping::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

LiruMapping* LiruMapping::New(::google::protobuf::Arena* arena) const {
  LiruMapping* n = new LiruMapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiruMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:LiruMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!liru_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*liru_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(youla_id_ != NULL);
      youla_id_->::YoulaMixedIdRecord::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LiruMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LiruMapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string liru_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liru_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->liru_id().data(), static_cast<int>(this->liru_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LiruMapping.liru_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .YoulaMixedIdRecord youla_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_youla_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LiruMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LiruMapping)
  return false;
#undef DO_
}

void LiruMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LiruMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string liru_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->liru_id().data(), static_cast<int>(this->liru_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LiruMapping.liru_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->liru_id(), output);
  }

  // optional .YoulaMixedIdRecord youla_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->youla_id_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LiruMapping)
}

::google::protobuf::uint8* LiruMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LiruMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string liru_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->liru_id().data(), static_cast<int>(this->liru_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LiruMapping.liru_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->liru_id(), target);
  }

  // optional .YoulaMixedIdRecord youla_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->youla_id_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LiruMapping)
  return target;
}

size_t LiruMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LiruMapping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string liru_id = 1;
    if (has_liru_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->liru_id());
    }

    // optional .YoulaMixedIdRecord youla_id = 2;
    if (has_youla_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->youla_id_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiruMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LiruMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const LiruMapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiruMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LiruMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LiruMapping)
    MergeFrom(*source);
  }
}

void LiruMapping::MergeFrom(const LiruMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LiruMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_liru_id();
      liru_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liru_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_youla_id()->::YoulaMixedIdRecord::MergeFrom(from.youla_id());
    }
  }
}

void LiruMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LiruMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiruMapping::CopyFrom(const LiruMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LiruMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiruMapping::IsInitialized() const {
  return true;
}

void LiruMapping::Swap(LiruMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiruMapping::InternalSwap(LiruMapping* other) {
  using std::swap;
  liru_id_.Swap(&other->liru_id_);
  swap(youla_id_, other->youla_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiruMapping::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiruMapping

// optional string liru_id = 1;
bool LiruMapping::has_liru_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LiruMapping::set_has_liru_id() {
  _has_bits_[0] |= 0x00000001u;
}
void LiruMapping::clear_has_liru_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void LiruMapping::clear_liru_id() {
  liru_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_liru_id();
}
const ::std::string& LiruMapping::liru_id() const {
  // @@protoc_insertion_point(field_get:LiruMapping.liru_id)
  return liru_id_.GetNoArena();
}
void LiruMapping::set_liru_id(const ::std::string& value) {
  set_has_liru_id();
  liru_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LiruMapping.liru_id)
}
#if LANG_CXX11
void LiruMapping::set_liru_id(::std::string&& value) {
  set_has_liru_id();
  liru_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LiruMapping.liru_id)
}
#endif
void LiruMapping::set_liru_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_liru_id();
  liru_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LiruMapping.liru_id)
}
void LiruMapping::set_liru_id(const char* value, size_t size) {
  set_has_liru_id();
  liru_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LiruMapping.liru_id)
}
::std::string* LiruMapping::mutable_liru_id() {
  set_has_liru_id();
  // @@protoc_insertion_point(field_mutable:LiruMapping.liru_id)
  return liru_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LiruMapping::release_liru_id() {
  // @@protoc_insertion_point(field_release:LiruMapping.liru_id)
  clear_has_liru_id();
  return liru_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LiruMapping::set_allocated_liru_id(::std::string* liru_id) {
  if (liru_id != NULL) {
    set_has_liru_id();
  } else {
    clear_has_liru_id();
  }
  liru_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liru_id);
  // @@protoc_insertion_point(field_set_allocated:LiruMapping.liru_id)
}

// optional .YoulaMixedIdRecord youla_id = 2;
bool LiruMapping::has_youla_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LiruMapping::set_has_youla_id() {
  _has_bits_[0] |= 0x00000002u;
}
void LiruMapping::clear_has_youla_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void LiruMapping::clear_youla_id() {
  if (youla_id_ != NULL) youla_id_->::YoulaMixedIdRecord::Clear();
  clear_has_youla_id();
}
const ::YoulaMixedIdRecord& LiruMapping::youla_id() const {
  const ::YoulaMixedIdRecord* p = youla_id_;
  // @@protoc_insertion_point(field_get:LiruMapping.youla_id)
  return p != NULL ? *p : *reinterpret_cast<const ::YoulaMixedIdRecord*>(
      &::_YoulaMixedIdRecord_default_instance_);
}
::YoulaMixedIdRecord* LiruMapping::mutable_youla_id() {
  set_has_youla_id();
  if (youla_id_ == NULL) {
    youla_id_ = new ::YoulaMixedIdRecord;
  }
  // @@protoc_insertion_point(field_mutable:LiruMapping.youla_id)
  return youla_id_;
}
::YoulaMixedIdRecord* LiruMapping::release_youla_id() {
  // @@protoc_insertion_point(field_release:LiruMapping.youla_id)
  clear_has_youla_id();
  ::YoulaMixedIdRecord* temp = youla_id_;
  youla_id_ = NULL;
  return temp;
}
void LiruMapping::set_allocated_youla_id(::YoulaMixedIdRecord* youla_id) {
  delete youla_id_;
  youla_id_ = youla_id;
  if (youla_id) {
    set_has_youla_id();
  } else {
    clear_has_youla_id();
  }
  // @@protoc_insertion_point(field_set_allocated:LiruMapping.youla_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserNotification::kTmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserNotification::UserNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserNotification)
}
UserNotification::UserNotification(const UserNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tm_ = from.tm_;
  // @@protoc_insertion_point(copy_constructor:UserNotification)
}

void UserNotification::SharedCtor() {
  _cached_size_ = 0;
  tm_ = GOOGLE_ULONGLONG(0);
}

UserNotification::~UserNotification() {
  // @@protoc_insertion_point(destructor:UserNotification)
  SharedDtor();
}

void UserNotification::SharedDtor() {
}

void UserNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserNotification::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserNotification& UserNotification::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserNotification* UserNotification::New(::google::protobuf::Arena* arena) const {
  UserNotification* n = new UserNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:UserNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tm_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserNotification)
  return false;
#undef DO_
}

void UserNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tm = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tm(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserNotification)
}

::google::protobuf::uint8* UserNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tm = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tm(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserNotification)
  return target;
}

size_t UserNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 tm = 1;
  if (has_tm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const UserNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserNotification)
    MergeFrom(*source);
  }
}

void UserNotification::MergeFrom(const UserNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tm()) {
    set_tm(from.tm());
  }
}

void UserNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserNotification::CopyFrom(const UserNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserNotification::IsInitialized() const {
  return true;
}

void UserNotification::Swap(UserNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserNotification::InternalSwap(UserNotification* other) {
  using std::swap;
  swap(tm_, other->tm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserNotification::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserNotification

// optional uint64 tm = 1;
bool UserNotification::has_tm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserNotification::set_has_tm() {
  _has_bits_[0] |= 0x00000001u;
}
void UserNotification::clear_has_tm() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserNotification::clear_tm() {
  tm_ = GOOGLE_ULONGLONG(0);
  clear_has_tm();
}
::google::protobuf::uint64 UserNotification::tm() const {
  // @@protoc_insertion_point(field_get:UserNotification.tm)
  return tm_;
}
void UserNotification::set_tm(::google::protobuf::uint64 value) {
  set_has_tm();
  tm_ = value;
  // @@protoc_insertion_point(field_set:UserNotification.tm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserNotificationInfo::kNotificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserNotificationInfo::UserNotificationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserNotificationInfo)
}
UserNotificationInfo::UserNotificationInfo(const UserNotificationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UserNotificationInfo)
}

void UserNotificationInfo::SharedCtor() {
  _cached_size_ = 0;
}

UserNotificationInfo::~UserNotificationInfo() {
  // @@protoc_insertion_point(destructor:UserNotificationInfo)
  SharedDtor();
}

void UserNotificationInfo::SharedDtor() {
}

void UserNotificationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserNotificationInfo::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserNotificationInfo& UserNotificationInfo::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserNotificationInfo* UserNotificationInfo::New(::google::protobuf::Arena* arena) const {
  UserNotificationInfo* n = new UserNotificationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserNotificationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserNotificationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserNotificationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserNotificationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserNotification notifications = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserNotificationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserNotificationInfo)
  return false;
#undef DO_
}

void UserNotificationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserNotificationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserNotification notifications = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->notifications(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserNotificationInfo)
}

::google::protobuf::uint8* UserNotificationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserNotificationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserNotification notifications = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->notifications(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserNotificationInfo)
  return target;
}

size_t UserNotificationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserNotificationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UserNotification notifications = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->notifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notifications(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserNotificationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserNotificationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserNotificationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserNotificationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserNotificationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserNotificationInfo)
    MergeFrom(*source);
  }
}

void UserNotificationInfo::MergeFrom(const UserNotificationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserNotificationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void UserNotificationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserNotificationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserNotificationInfo::CopyFrom(const UserNotificationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserNotificationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserNotificationInfo::IsInitialized() const {
  return true;
}

void UserNotificationInfo::Swap(UserNotificationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserNotificationInfo::InternalSwap(UserNotificationInfo* other) {
  using std::swap;
  notifications_.InternalSwap(&other->notifications_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserNotificationInfo::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserNotificationInfo

// repeated .UserNotification notifications = 2;
int UserNotificationInfo::notifications_size() const {
  return notifications_.size();
}
void UserNotificationInfo::clear_notifications() {
  notifications_.Clear();
}
const ::UserNotification& UserNotificationInfo::notifications(int index) const {
  // @@protoc_insertion_point(field_get:UserNotificationInfo.notifications)
  return notifications_.Get(index);
}
::UserNotification* UserNotificationInfo::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:UserNotificationInfo.notifications)
  return notifications_.Mutable(index);
}
::UserNotification* UserNotificationInfo::add_notifications() {
  // @@protoc_insertion_point(field_add:UserNotificationInfo.notifications)
  return notifications_.Add();
}
::google::protobuf::RepeatedPtrField< ::UserNotification >*
UserNotificationInfo::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:UserNotificationInfo.notifications)
  return &notifications_;
}
const ::google::protobuf::RepeatedPtrField< ::UserNotification >&
UserNotificationInfo::notifications() const {
  // @@protoc_insertion_point(field_list:UserNotificationInfo.notifications)
  return notifications_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YProductPartialEvent::kProductIdFieldNumber;
const int YProductPartialEvent::kOwnerIdFieldNumber;
const int YProductPartialEvent::kCategoryIdFieldNumber;
const int YProductPartialEvent::kSubcategoryIdFieldNumber;
const int YProductPartialEvent::kCityIdFieldNumber;
const int YProductPartialEvent::kRegionIdFieldNumber;
const int YProductPartialEvent::kNameFieldNumber;
const int YProductPartialEvent::kNameLengthFieldNumber;
const int YProductPartialEvent::kDescLengthFieldNumber;
const int YProductPartialEvent::kPropertiesFieldNumber;
const int YProductPartialEvent::kPropertiesNumFieldNumber;
const int YProductPartialEvent::kPriceFieldNumber;
const int YProductPartialEvent::kImagesNumFieldNumber;
const int YProductPartialEvent::kPaymentAvailableFieldNumber;
const int YProductPartialEvent::kDeliveryAvailableFieldNumber;
const int YProductPartialEvent::kDateCreatedFieldNumber;
const int YProductPartialEvent::kDateArchivedFieldNumber;
const int YProductPartialEvent::kDateDeletedFieldNumber;
const int YProductPartialEvent::kDateBlockedFieldNumber;
const int YProductPartialEvent::kDateSoldFieldNumber;
const int YProductPartialEvent::kSoldModeFieldNumber;
const int YProductPartialEvent::kViewsNumFieldNumber;
const int YProductPartialEvent::kIsSoldFieldNumber;
const int YProductPartialEvent::kIsArchivedFieldNumber;
const int YProductPartialEvent::kArchiveModeFieldNumber;
const int YProductPartialEvent::kIsBlockedFieldNumber;
const int YProductPartialEvent::kIsDeletedFieldNumber;
const int YProductPartialEvent::kRawJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YProductPartialEvent::YProductPartialEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:YProductPartialEvent)
}
YProductPartialEvent::YProductPartialEvent(const YProductPartialEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  owner_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_owner_id()) {
    owner_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_id_);
  }
  category_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category_id()) {
    category_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_id_);
  }
  subcategory_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subcategory_id()) {
    subcategory_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_id_);
  }
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city_id()) {
    city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
  }
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region_id()) {
    region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  properties_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_properties()) {
    properties_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.properties_);
  }
  raw_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raw_json()) {
    raw_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_json_);
  }
  ::memcpy(&name_length_, &from.name_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&archive_mode_) -
    reinterpret_cast<char*>(&name_length_)) + sizeof(archive_mode_));
  // @@protoc_insertion_point(copy_constructor:YProductPartialEvent)
}

void YProductPartialEvent::SharedCtor() {
  _cached_size_ = 0;
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcategory_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  properties_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&name_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&archive_mode_) -
      reinterpret_cast<char*>(&name_length_)) + sizeof(archive_mode_));
}

YProductPartialEvent::~YProductPartialEvent() {
  // @@protoc_insertion_point(destructor:YProductPartialEvent)
  SharedDtor();
}

void YProductPartialEvent::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcategory_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  properties_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YProductPartialEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YProductPartialEvent::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YProductPartialEvent& YProductPartialEvent::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

YProductPartialEvent* YProductPartialEvent::New(::google::protobuf::Arena* arena) const {
  YProductPartialEvent* n = new YProductPartialEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YProductPartialEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:YProductPartialEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!owner_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*owner_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!category_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*category_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!subcategory_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*subcategory_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!city_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!region_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*region_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!properties_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*properties_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(!raw_json_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*raw_json_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 65024u) {
    ::memset(&name_length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&date_archived_) -
        reinterpret_cast<char*>(&name_length_)) + sizeof(date_archived_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&date_deleted_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_archived_) -
        reinterpret_cast<char*>(&date_deleted_)) + sizeof(is_archived_));
  }
  if (cached_has_bits & 251658240u) {
    ::memset(&is_blocked_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&archive_mode_) -
        reinterpret_cast<char*>(&is_blocked_)) + sizeof(archive_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YProductPartialEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YProductPartialEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.product_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string owner_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->owner_id().data(), static_cast<int>(this->owner_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.owner_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category_id().data(), static_cast<int>(this->category_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.category_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string subcategory_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subcategory_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subcategory_id().data(), static_cast<int>(this->subcategory_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.subcategory_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city_id().data(), static_cast<int>(this->city_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.city_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_id().data(), static_cast<int>(this->region_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.region_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 name_length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_name_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &name_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 desc_length = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_desc_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &desc_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string properties = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_properties()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->properties().data(), static_cast<int>(this->properties().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.properties");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 properties_num = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_properties_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &properties_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 price = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 images_num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_images_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &images_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool payment_available = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_payment_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &payment_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delivery_available = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_delivery_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delivery_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_created = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_date_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_archived = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_date_archived();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_archived_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_deleted = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_date_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_blocked = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_date_blocked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 date_sold = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_date_sold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_sold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 sold_mode = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_sold_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sold_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 views_num = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_views_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &views_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_sold = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_is_sold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_sold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_archived = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_is_archived();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_archived_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 archive_mode = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_archive_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &archive_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_blocked = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_is_blocked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_deleted = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_is_deleted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string raw_json = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_json()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raw_json().data(), static_cast<int>(this->raw_json().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YProductPartialEvent.raw_json");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YProductPartialEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YProductPartialEvent)
  return false;
#undef DO_
}

void YProductPartialEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YProductPartialEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string product_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  // optional string owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner_id().data(), static_cast<int>(this->owner_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.owner_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->owner_id(), output);
  }

  // optional string category_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_id().data(), static_cast<int>(this->category_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.category_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category_id(), output);
  }

  // optional string subcategory_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory_id().data(), static_cast<int>(this->subcategory_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.subcategory_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->subcategory_id(), output);
  }

  // optional string city_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.city_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->city_id(), output);
  }

  // optional string region_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.region_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->region_id(), output);
  }

  // optional string name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // optional int64 name_length = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->name_length(), output);
  }

  // optional int64 desc_length = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->desc_length(), output);
  }

  // optional string properties = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->properties().data(), static_cast<int>(this->properties().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.properties");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->properties(), output);
  }

  // optional int64 properties_num = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->properties_num(), output);
  }

  // optional int64 price = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->price(), output);
  }

  // optional int64 images_num = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->images_num(), output);
  }

  // optional bool payment_available = 14;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->payment_available(), output);
  }

  // optional bool delivery_available = 15;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->delivery_available(), output);
  }

  // optional int64 date_created = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->date_created(), output);
  }

  // optional int64 date_archived = 17;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->date_archived(), output);
  }

  // optional int64 date_deleted = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->date_deleted(), output);
  }

  // optional int64 date_blocked = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->date_blocked(), output);
  }

  // optional int64 date_sold = 20;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->date_sold(), output);
  }

  // optional int64 sold_mode = 21;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->sold_mode(), output);
  }

  // optional int64 views_num = 22;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->views_num(), output);
  }

  // optional bool is_sold = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->is_sold(), output);
  }

  // optional bool is_archived = 24;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->is_archived(), output);
  }

  // optional int64 archive_mode = 25;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->archive_mode(), output);
  }

  // optional bool is_blocked = 26;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->is_blocked(), output);
  }

  // optional bool is_deleted = 27;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->is_deleted(), output);
  }

  // optional string raw_json = 28;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_json().data(), static_cast<int>(this->raw_json().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.raw_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->raw_json(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YProductPartialEvent)
}

::google::protobuf::uint8* YProductPartialEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:YProductPartialEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string product_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  // optional string owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner_id().data(), static_cast<int>(this->owner_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.owner_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->owner_id(), target);
  }

  // optional string category_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_id().data(), static_cast<int>(this->category_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.category_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category_id(), target);
  }

  // optional string subcategory_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory_id().data(), static_cast<int>(this->subcategory_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.subcategory_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->subcategory_id(), target);
  }

  // optional string city_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.city_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->city_id(), target);
  }

  // optional string region_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.region_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->region_id(), target);
  }

  // optional string name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // optional int64 name_length = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->name_length(), target);
  }

  // optional int64 desc_length = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->desc_length(), target);
  }

  // optional string properties = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->properties().data(), static_cast<int>(this->properties().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.properties");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->properties(), target);
  }

  // optional int64 properties_num = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->properties_num(), target);
  }

  // optional int64 price = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->price(), target);
  }

  // optional int64 images_num = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->images_num(), target);
  }

  // optional bool payment_available = 14;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->payment_available(), target);
  }

  // optional bool delivery_available = 15;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->delivery_available(), target);
  }

  // optional int64 date_created = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->date_created(), target);
  }

  // optional int64 date_archived = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->date_archived(), target);
  }

  // optional int64 date_deleted = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->date_deleted(), target);
  }

  // optional int64 date_blocked = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->date_blocked(), target);
  }

  // optional int64 date_sold = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->date_sold(), target);
  }

  // optional int64 sold_mode = 21;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->sold_mode(), target);
  }

  // optional int64 views_num = 22;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->views_num(), target);
  }

  // optional bool is_sold = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->is_sold(), target);
  }

  // optional bool is_archived = 24;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->is_archived(), target);
  }

  // optional int64 archive_mode = 25;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->archive_mode(), target);
  }

  // optional bool is_blocked = 26;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->is_blocked(), target);
  }

  // optional bool is_deleted = 27;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->is_deleted(), target);
  }

  // optional string raw_json = 28;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_json().data(), static_cast<int>(this->raw_json().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YProductPartialEvent.raw_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->raw_json(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YProductPartialEvent)
  return target;
}

size_t YProductPartialEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YProductPartialEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string product_id = 1;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional string owner_id = 2;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->owner_id());
    }

    // optional string category_id = 3;
    if (has_category_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category_id());
    }

    // optional string subcategory_id = 4;
    if (has_subcategory_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subcategory_id());
    }

    // optional string city_id = 5;
    if (has_city_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city_id());
    }

    // optional string region_id = 6;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region_id());
    }

    // optional string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string properties = 10;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->properties());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string raw_json = 28;
    if (has_raw_json()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->raw_json());
    }

    // optional int64 name_length = 8;
    if (has_name_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->name_length());
    }

    // optional int64 desc_length = 9;
    if (has_desc_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->desc_length());
    }

    // optional int64 properties_num = 11;
    if (has_properties_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->properties_num());
    }

    // optional int64 price = 12;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->price());
    }

    // optional int64 images_num = 13;
    if (has_images_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->images_num());
    }

    // optional int64 date_created = 16;
    if (has_date_created()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_created());
    }

    // optional int64 date_archived = 17;
    if (has_date_archived()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_archived());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int64 date_deleted = 18;
    if (has_date_deleted()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_deleted());
    }

    // optional int64 date_blocked = 19;
    if (has_date_blocked()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_blocked());
    }

    // optional int64 date_sold = 20;
    if (has_date_sold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_sold());
    }

    // optional int64 sold_mode = 21;
    if (has_sold_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sold_mode());
    }

    // optional bool payment_available = 14;
    if (has_payment_available()) {
      total_size += 1 + 1;
    }

    // optional bool delivery_available = 15;
    if (has_delivery_available()) {
      total_size += 1 + 1;
    }

    // optional bool is_sold = 23;
    if (has_is_sold()) {
      total_size += 2 + 1;
    }

    // optional bool is_archived = 24;
    if (has_is_archived()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[24 / 32] & 251658240u) {
    // optional bool is_blocked = 26;
    if (has_is_blocked()) {
      total_size += 2 + 1;
    }

    // optional bool is_deleted = 27;
    if (has_is_deleted()) {
      total_size += 2 + 1;
    }

    // optional int64 views_num = 22;
    if (has_views_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->views_num());
    }

    // optional int64 archive_mode = 25;
    if (has_archive_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->archive_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YProductPartialEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YProductPartialEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const YProductPartialEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YProductPartialEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YProductPartialEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YProductPartialEvent)
    MergeFrom(*source);
  }
}

void YProductPartialEvent::MergeFrom(const YProductPartialEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YProductPartialEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_owner_id();
      owner_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_category_id();
      category_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_subcategory_id();
      subcategory_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_city_id();
      city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_region_id();
      region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_properties();
      properties_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.properties_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_raw_json();
      raw_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_json_);
    }
    if (cached_has_bits & 0x00000200u) {
      name_length_ = from.name_length_;
    }
    if (cached_has_bits & 0x00000400u) {
      desc_length_ = from.desc_length_;
    }
    if (cached_has_bits & 0x00000800u) {
      properties_num_ = from.properties_num_;
    }
    if (cached_has_bits & 0x00001000u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00002000u) {
      images_num_ = from.images_num_;
    }
    if (cached_has_bits & 0x00004000u) {
      date_created_ = from.date_created_;
    }
    if (cached_has_bits & 0x00008000u) {
      date_archived_ = from.date_archived_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      date_deleted_ = from.date_deleted_;
    }
    if (cached_has_bits & 0x00020000u) {
      date_blocked_ = from.date_blocked_;
    }
    if (cached_has_bits & 0x00040000u) {
      date_sold_ = from.date_sold_;
    }
    if (cached_has_bits & 0x00080000u) {
      sold_mode_ = from.sold_mode_;
    }
    if (cached_has_bits & 0x00100000u) {
      payment_available_ = from.payment_available_;
    }
    if (cached_has_bits & 0x00200000u) {
      delivery_available_ = from.delivery_available_;
    }
    if (cached_has_bits & 0x00400000u) {
      is_sold_ = from.is_sold_;
    }
    if (cached_has_bits & 0x00800000u) {
      is_archived_ = from.is_archived_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      is_blocked_ = from.is_blocked_;
    }
    if (cached_has_bits & 0x02000000u) {
      is_deleted_ = from.is_deleted_;
    }
    if (cached_has_bits & 0x04000000u) {
      views_num_ = from.views_num_;
    }
    if (cached_has_bits & 0x08000000u) {
      archive_mode_ = from.archive_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YProductPartialEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YProductPartialEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YProductPartialEvent::CopyFrom(const YProductPartialEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YProductPartialEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YProductPartialEvent::IsInitialized() const {
  return true;
}

void YProductPartialEvent::Swap(YProductPartialEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YProductPartialEvent::InternalSwap(YProductPartialEvent* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  owner_id_.Swap(&other->owner_id_);
  category_id_.Swap(&other->category_id_);
  subcategory_id_.Swap(&other->subcategory_id_);
  city_id_.Swap(&other->city_id_);
  region_id_.Swap(&other->region_id_);
  name_.Swap(&other->name_);
  properties_.Swap(&other->properties_);
  raw_json_.Swap(&other->raw_json_);
  swap(name_length_, other->name_length_);
  swap(desc_length_, other->desc_length_);
  swap(properties_num_, other->properties_num_);
  swap(price_, other->price_);
  swap(images_num_, other->images_num_);
  swap(date_created_, other->date_created_);
  swap(date_archived_, other->date_archived_);
  swap(date_deleted_, other->date_deleted_);
  swap(date_blocked_, other->date_blocked_);
  swap(date_sold_, other->date_sold_);
  swap(sold_mode_, other->sold_mode_);
  swap(payment_available_, other->payment_available_);
  swap(delivery_available_, other->delivery_available_);
  swap(is_sold_, other->is_sold_);
  swap(is_archived_, other->is_archived_);
  swap(is_blocked_, other->is_blocked_);
  swap(is_deleted_, other->is_deleted_);
  swap(views_num_, other->views_num_);
  swap(archive_mode_, other->archive_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YProductPartialEvent::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YProductPartialEvent

// optional string product_id = 1;
bool YProductPartialEvent::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YProductPartialEvent::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
void YProductPartialEvent::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void YProductPartialEvent::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& YProductPartialEvent::product_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.product_id)
  return product_id_.GetNoArena();
}
void YProductPartialEvent::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.product_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.product_id)
}
#endif
void YProductPartialEvent::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.product_id)
}
void YProductPartialEvent::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.product_id)
}
::std::string* YProductPartialEvent::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_product_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.product_id)
}

// optional string owner_id = 2;
bool YProductPartialEvent::has_owner_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YProductPartialEvent::set_has_owner_id() {
  _has_bits_[0] |= 0x00000002u;
}
void YProductPartialEvent::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void YProductPartialEvent::clear_owner_id() {
  owner_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_owner_id();
}
const ::std::string& YProductPartialEvent::owner_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.owner_id)
  return owner_id_.GetNoArena();
}
void YProductPartialEvent::set_owner_id(const ::std::string& value) {
  set_has_owner_id();
  owner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.owner_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_owner_id(::std::string&& value) {
  set_has_owner_id();
  owner_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.owner_id)
}
#endif
void YProductPartialEvent::set_owner_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_owner_id();
  owner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.owner_id)
}
void YProductPartialEvent::set_owner_id(const char* value, size_t size) {
  set_has_owner_id();
  owner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.owner_id)
}
::std::string* YProductPartialEvent::mutable_owner_id() {
  set_has_owner_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.owner_id)
  return owner_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_owner_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.owner_id)
  clear_has_owner_id();
  return owner_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_owner_id(::std::string* owner_id) {
  if (owner_id != NULL) {
    set_has_owner_id();
  } else {
    clear_has_owner_id();
  }
  owner_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.owner_id)
}

// optional string category_id = 3;
bool YProductPartialEvent::has_category_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YProductPartialEvent::set_has_category_id() {
  _has_bits_[0] |= 0x00000004u;
}
void YProductPartialEvent::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void YProductPartialEvent::clear_category_id() {
  category_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category_id();
}
const ::std::string& YProductPartialEvent::category_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.category_id)
  return category_id_.GetNoArena();
}
void YProductPartialEvent::set_category_id(const ::std::string& value) {
  set_has_category_id();
  category_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.category_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_category_id(::std::string&& value) {
  set_has_category_id();
  category_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.category_id)
}
#endif
void YProductPartialEvent::set_category_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category_id();
  category_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.category_id)
}
void YProductPartialEvent::set_category_id(const char* value, size_t size) {
  set_has_category_id();
  category_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.category_id)
}
::std::string* YProductPartialEvent::mutable_category_id() {
  set_has_category_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.category_id)
  return category_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_category_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.category_id)
  clear_has_category_id();
  return category_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_category_id(::std::string* category_id) {
  if (category_id != NULL) {
    set_has_category_id();
  } else {
    clear_has_category_id();
  }
  category_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.category_id)
}

// optional string subcategory_id = 4;
bool YProductPartialEvent::has_subcategory_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YProductPartialEvent::set_has_subcategory_id() {
  _has_bits_[0] |= 0x00000008u;
}
void YProductPartialEvent::clear_has_subcategory_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void YProductPartialEvent::clear_subcategory_id() {
  subcategory_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcategory_id();
}
const ::std::string& YProductPartialEvent::subcategory_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.subcategory_id)
  return subcategory_id_.GetNoArena();
}
void YProductPartialEvent::set_subcategory_id(const ::std::string& value) {
  set_has_subcategory_id();
  subcategory_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.subcategory_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_subcategory_id(::std::string&& value) {
  set_has_subcategory_id();
  subcategory_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.subcategory_id)
}
#endif
void YProductPartialEvent::set_subcategory_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subcategory_id();
  subcategory_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.subcategory_id)
}
void YProductPartialEvent::set_subcategory_id(const char* value, size_t size) {
  set_has_subcategory_id();
  subcategory_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.subcategory_id)
}
::std::string* YProductPartialEvent::mutable_subcategory_id() {
  set_has_subcategory_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.subcategory_id)
  return subcategory_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_subcategory_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.subcategory_id)
  clear_has_subcategory_id();
  return subcategory_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_subcategory_id(::std::string* subcategory_id) {
  if (subcategory_id != NULL) {
    set_has_subcategory_id();
  } else {
    clear_has_subcategory_id();
  }
  subcategory_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcategory_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.subcategory_id)
}

// optional string city_id = 5;
bool YProductPartialEvent::has_city_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void YProductPartialEvent::set_has_city_id() {
  _has_bits_[0] |= 0x00000010u;
}
void YProductPartialEvent::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void YProductPartialEvent::clear_city_id() {
  city_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city_id();
}
const ::std::string& YProductPartialEvent::city_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.city_id)
  return city_id_.GetNoArena();
}
void YProductPartialEvent::set_city_id(const ::std::string& value) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.city_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_city_id(::std::string&& value) {
  set_has_city_id();
  city_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.city_id)
}
#endif
void YProductPartialEvent::set_city_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.city_id)
}
void YProductPartialEvent::set_city_id(const char* value, size_t size) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.city_id)
}
::std::string* YProductPartialEvent::mutable_city_id() {
  set_has_city_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.city_id)
  return city_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_city_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.city_id)
  clear_has_city_id();
  return city_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_city_id(::std::string* city_id) {
  if (city_id != NULL) {
    set_has_city_id();
  } else {
    clear_has_city_id();
  }
  city_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.city_id)
}

// optional string region_id = 6;
bool YProductPartialEvent::has_region_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void YProductPartialEvent::set_has_region_id() {
  _has_bits_[0] |= 0x00000020u;
}
void YProductPartialEvent::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void YProductPartialEvent::clear_region_id() {
  region_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_id();
}
const ::std::string& YProductPartialEvent::region_id() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.region_id)
  return region_id_.GetNoArena();
}
void YProductPartialEvent::set_region_id(const ::std::string& value) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.region_id)
}
#if LANG_CXX11
void YProductPartialEvent::set_region_id(::std::string&& value) {
  set_has_region_id();
  region_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.region_id)
}
#endif
void YProductPartialEvent::set_region_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.region_id)
}
void YProductPartialEvent::set_region_id(const char* value, size_t size) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.region_id)
}
::std::string* YProductPartialEvent::mutable_region_id() {
  set_has_region_id();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.region_id)
  return region_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_region_id() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.region_id)
  clear_has_region_id();
  return region_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_region_id(::std::string* region_id) {
  if (region_id != NULL) {
    set_has_region_id();
  } else {
    clear_has_region_id();
  }
  region_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_id);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.region_id)
}

// optional string name = 7;
bool YProductPartialEvent::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void YProductPartialEvent::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
void YProductPartialEvent::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void YProductPartialEvent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& YProductPartialEvent::name() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.name)
  return name_.GetNoArena();
}
void YProductPartialEvent::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.name)
}
#if LANG_CXX11
void YProductPartialEvent::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.name)
}
#endif
void YProductPartialEvent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.name)
}
void YProductPartialEvent::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.name)
}
::std::string* YProductPartialEvent::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_name() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.name)
}

// optional int64 name_length = 8;
bool YProductPartialEvent::has_name_length() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void YProductPartialEvent::set_has_name_length() {
  _has_bits_[0] |= 0x00000200u;
}
void YProductPartialEvent::clear_has_name_length() {
  _has_bits_[0] &= ~0x00000200u;
}
void YProductPartialEvent::clear_name_length() {
  name_length_ = GOOGLE_LONGLONG(0);
  clear_has_name_length();
}
::google::protobuf::int64 YProductPartialEvent::name_length() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.name_length)
  return name_length_;
}
void YProductPartialEvent::set_name_length(::google::protobuf::int64 value) {
  set_has_name_length();
  name_length_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.name_length)
}

// optional int64 desc_length = 9;
bool YProductPartialEvent::has_desc_length() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void YProductPartialEvent::set_has_desc_length() {
  _has_bits_[0] |= 0x00000400u;
}
void YProductPartialEvent::clear_has_desc_length() {
  _has_bits_[0] &= ~0x00000400u;
}
void YProductPartialEvent::clear_desc_length() {
  desc_length_ = GOOGLE_LONGLONG(0);
  clear_has_desc_length();
}
::google::protobuf::int64 YProductPartialEvent::desc_length() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.desc_length)
  return desc_length_;
}
void YProductPartialEvent::set_desc_length(::google::protobuf::int64 value) {
  set_has_desc_length();
  desc_length_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.desc_length)
}

// optional string properties = 10;
bool YProductPartialEvent::has_properties() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void YProductPartialEvent::set_has_properties() {
  _has_bits_[0] |= 0x00000080u;
}
void YProductPartialEvent::clear_has_properties() {
  _has_bits_[0] &= ~0x00000080u;
}
void YProductPartialEvent::clear_properties() {
  properties_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_properties();
}
const ::std::string& YProductPartialEvent::properties() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.properties)
  return properties_.GetNoArena();
}
void YProductPartialEvent::set_properties(const ::std::string& value) {
  set_has_properties();
  properties_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.properties)
}
#if LANG_CXX11
void YProductPartialEvent::set_properties(::std::string&& value) {
  set_has_properties();
  properties_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.properties)
}
#endif
void YProductPartialEvent::set_properties(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_properties();
  properties_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.properties)
}
void YProductPartialEvent::set_properties(const char* value, size_t size) {
  set_has_properties();
  properties_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.properties)
}
::std::string* YProductPartialEvent::mutable_properties() {
  set_has_properties();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.properties)
  return properties_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_properties() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.properties)
  clear_has_properties();
  return properties_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_properties(::std::string* properties) {
  if (properties != NULL) {
    set_has_properties();
  } else {
    clear_has_properties();
  }
  properties_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), properties);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.properties)
}

// optional int64 properties_num = 11;
bool YProductPartialEvent::has_properties_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void YProductPartialEvent::set_has_properties_num() {
  _has_bits_[0] |= 0x00000800u;
}
void YProductPartialEvent::clear_has_properties_num() {
  _has_bits_[0] &= ~0x00000800u;
}
void YProductPartialEvent::clear_properties_num() {
  properties_num_ = GOOGLE_LONGLONG(0);
  clear_has_properties_num();
}
::google::protobuf::int64 YProductPartialEvent::properties_num() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.properties_num)
  return properties_num_;
}
void YProductPartialEvent::set_properties_num(::google::protobuf::int64 value) {
  set_has_properties_num();
  properties_num_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.properties_num)
}

// optional int64 price = 12;
bool YProductPartialEvent::has_price() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void YProductPartialEvent::set_has_price() {
  _has_bits_[0] |= 0x00001000u;
}
void YProductPartialEvent::clear_has_price() {
  _has_bits_[0] &= ~0x00001000u;
}
void YProductPartialEvent::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
  clear_has_price();
}
::google::protobuf::int64 YProductPartialEvent::price() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.price)
  return price_;
}
void YProductPartialEvent::set_price(::google::protobuf::int64 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.price)
}

// optional int64 images_num = 13;
bool YProductPartialEvent::has_images_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void YProductPartialEvent::set_has_images_num() {
  _has_bits_[0] |= 0x00002000u;
}
void YProductPartialEvent::clear_has_images_num() {
  _has_bits_[0] &= ~0x00002000u;
}
void YProductPartialEvent::clear_images_num() {
  images_num_ = GOOGLE_LONGLONG(0);
  clear_has_images_num();
}
::google::protobuf::int64 YProductPartialEvent::images_num() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.images_num)
  return images_num_;
}
void YProductPartialEvent::set_images_num(::google::protobuf::int64 value) {
  set_has_images_num();
  images_num_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.images_num)
}

// optional bool payment_available = 14;
bool YProductPartialEvent::has_payment_available() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void YProductPartialEvent::set_has_payment_available() {
  _has_bits_[0] |= 0x00100000u;
}
void YProductPartialEvent::clear_has_payment_available() {
  _has_bits_[0] &= ~0x00100000u;
}
void YProductPartialEvent::clear_payment_available() {
  payment_available_ = false;
  clear_has_payment_available();
}
bool YProductPartialEvent::payment_available() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.payment_available)
  return payment_available_;
}
void YProductPartialEvent::set_payment_available(bool value) {
  set_has_payment_available();
  payment_available_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.payment_available)
}

// optional bool delivery_available = 15;
bool YProductPartialEvent::has_delivery_available() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void YProductPartialEvent::set_has_delivery_available() {
  _has_bits_[0] |= 0x00200000u;
}
void YProductPartialEvent::clear_has_delivery_available() {
  _has_bits_[0] &= ~0x00200000u;
}
void YProductPartialEvent::clear_delivery_available() {
  delivery_available_ = false;
  clear_has_delivery_available();
}
bool YProductPartialEvent::delivery_available() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.delivery_available)
  return delivery_available_;
}
void YProductPartialEvent::set_delivery_available(bool value) {
  set_has_delivery_available();
  delivery_available_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.delivery_available)
}

// optional int64 date_created = 16;
bool YProductPartialEvent::has_date_created() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void YProductPartialEvent::set_has_date_created() {
  _has_bits_[0] |= 0x00004000u;
}
void YProductPartialEvent::clear_has_date_created() {
  _has_bits_[0] &= ~0x00004000u;
}
void YProductPartialEvent::clear_date_created() {
  date_created_ = GOOGLE_LONGLONG(0);
  clear_has_date_created();
}
::google::protobuf::int64 YProductPartialEvent::date_created() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.date_created)
  return date_created_;
}
void YProductPartialEvent::set_date_created(::google::protobuf::int64 value) {
  set_has_date_created();
  date_created_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.date_created)
}

// optional int64 date_archived = 17;
bool YProductPartialEvent::has_date_archived() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void YProductPartialEvent::set_has_date_archived() {
  _has_bits_[0] |= 0x00008000u;
}
void YProductPartialEvent::clear_has_date_archived() {
  _has_bits_[0] &= ~0x00008000u;
}
void YProductPartialEvent::clear_date_archived() {
  date_archived_ = GOOGLE_LONGLONG(0);
  clear_has_date_archived();
}
::google::protobuf::int64 YProductPartialEvent::date_archived() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.date_archived)
  return date_archived_;
}
void YProductPartialEvent::set_date_archived(::google::protobuf::int64 value) {
  set_has_date_archived();
  date_archived_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.date_archived)
}

// optional int64 date_deleted = 18;
bool YProductPartialEvent::has_date_deleted() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void YProductPartialEvent::set_has_date_deleted() {
  _has_bits_[0] |= 0x00010000u;
}
void YProductPartialEvent::clear_has_date_deleted() {
  _has_bits_[0] &= ~0x00010000u;
}
void YProductPartialEvent::clear_date_deleted() {
  date_deleted_ = GOOGLE_LONGLONG(0);
  clear_has_date_deleted();
}
::google::protobuf::int64 YProductPartialEvent::date_deleted() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.date_deleted)
  return date_deleted_;
}
void YProductPartialEvent::set_date_deleted(::google::protobuf::int64 value) {
  set_has_date_deleted();
  date_deleted_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.date_deleted)
}

// optional int64 date_blocked = 19;
bool YProductPartialEvent::has_date_blocked() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void YProductPartialEvent::set_has_date_blocked() {
  _has_bits_[0] |= 0x00020000u;
}
void YProductPartialEvent::clear_has_date_blocked() {
  _has_bits_[0] &= ~0x00020000u;
}
void YProductPartialEvent::clear_date_blocked() {
  date_blocked_ = GOOGLE_LONGLONG(0);
  clear_has_date_blocked();
}
::google::protobuf::int64 YProductPartialEvent::date_blocked() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.date_blocked)
  return date_blocked_;
}
void YProductPartialEvent::set_date_blocked(::google::protobuf::int64 value) {
  set_has_date_blocked();
  date_blocked_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.date_blocked)
}

// optional int64 date_sold = 20;
bool YProductPartialEvent::has_date_sold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void YProductPartialEvent::set_has_date_sold() {
  _has_bits_[0] |= 0x00040000u;
}
void YProductPartialEvent::clear_has_date_sold() {
  _has_bits_[0] &= ~0x00040000u;
}
void YProductPartialEvent::clear_date_sold() {
  date_sold_ = GOOGLE_LONGLONG(0);
  clear_has_date_sold();
}
::google::protobuf::int64 YProductPartialEvent::date_sold() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.date_sold)
  return date_sold_;
}
void YProductPartialEvent::set_date_sold(::google::protobuf::int64 value) {
  set_has_date_sold();
  date_sold_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.date_sold)
}

// optional int64 sold_mode = 21;
bool YProductPartialEvent::has_sold_mode() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void YProductPartialEvent::set_has_sold_mode() {
  _has_bits_[0] |= 0x00080000u;
}
void YProductPartialEvent::clear_has_sold_mode() {
  _has_bits_[0] &= ~0x00080000u;
}
void YProductPartialEvent::clear_sold_mode() {
  sold_mode_ = GOOGLE_LONGLONG(0);
  clear_has_sold_mode();
}
::google::protobuf::int64 YProductPartialEvent::sold_mode() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.sold_mode)
  return sold_mode_;
}
void YProductPartialEvent::set_sold_mode(::google::protobuf::int64 value) {
  set_has_sold_mode();
  sold_mode_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.sold_mode)
}

// optional int64 views_num = 22;
bool YProductPartialEvent::has_views_num() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void YProductPartialEvent::set_has_views_num() {
  _has_bits_[0] |= 0x04000000u;
}
void YProductPartialEvent::clear_has_views_num() {
  _has_bits_[0] &= ~0x04000000u;
}
void YProductPartialEvent::clear_views_num() {
  views_num_ = GOOGLE_LONGLONG(0);
  clear_has_views_num();
}
::google::protobuf::int64 YProductPartialEvent::views_num() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.views_num)
  return views_num_;
}
void YProductPartialEvent::set_views_num(::google::protobuf::int64 value) {
  set_has_views_num();
  views_num_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.views_num)
}

// optional bool is_sold = 23;
bool YProductPartialEvent::has_is_sold() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void YProductPartialEvent::set_has_is_sold() {
  _has_bits_[0] |= 0x00400000u;
}
void YProductPartialEvent::clear_has_is_sold() {
  _has_bits_[0] &= ~0x00400000u;
}
void YProductPartialEvent::clear_is_sold() {
  is_sold_ = false;
  clear_has_is_sold();
}
bool YProductPartialEvent::is_sold() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.is_sold)
  return is_sold_;
}
void YProductPartialEvent::set_is_sold(bool value) {
  set_has_is_sold();
  is_sold_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.is_sold)
}

// optional bool is_archived = 24;
bool YProductPartialEvent::has_is_archived() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void YProductPartialEvent::set_has_is_archived() {
  _has_bits_[0] |= 0x00800000u;
}
void YProductPartialEvent::clear_has_is_archived() {
  _has_bits_[0] &= ~0x00800000u;
}
void YProductPartialEvent::clear_is_archived() {
  is_archived_ = false;
  clear_has_is_archived();
}
bool YProductPartialEvent::is_archived() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.is_archived)
  return is_archived_;
}
void YProductPartialEvent::set_is_archived(bool value) {
  set_has_is_archived();
  is_archived_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.is_archived)
}

// optional int64 archive_mode = 25;
bool YProductPartialEvent::has_archive_mode() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void YProductPartialEvent::set_has_archive_mode() {
  _has_bits_[0] |= 0x08000000u;
}
void YProductPartialEvent::clear_has_archive_mode() {
  _has_bits_[0] &= ~0x08000000u;
}
void YProductPartialEvent::clear_archive_mode() {
  archive_mode_ = GOOGLE_LONGLONG(0);
  clear_has_archive_mode();
}
::google::protobuf::int64 YProductPartialEvent::archive_mode() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.archive_mode)
  return archive_mode_;
}
void YProductPartialEvent::set_archive_mode(::google::protobuf::int64 value) {
  set_has_archive_mode();
  archive_mode_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.archive_mode)
}

// optional bool is_blocked = 26;
bool YProductPartialEvent::has_is_blocked() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void YProductPartialEvent::set_has_is_blocked() {
  _has_bits_[0] |= 0x01000000u;
}
void YProductPartialEvent::clear_has_is_blocked() {
  _has_bits_[0] &= ~0x01000000u;
}
void YProductPartialEvent::clear_is_blocked() {
  is_blocked_ = false;
  clear_has_is_blocked();
}
bool YProductPartialEvent::is_blocked() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.is_blocked)
  return is_blocked_;
}
void YProductPartialEvent::set_is_blocked(bool value) {
  set_has_is_blocked();
  is_blocked_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.is_blocked)
}

// optional bool is_deleted = 27;
bool YProductPartialEvent::has_is_deleted() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void YProductPartialEvent::set_has_is_deleted() {
  _has_bits_[0] |= 0x02000000u;
}
void YProductPartialEvent::clear_has_is_deleted() {
  _has_bits_[0] &= ~0x02000000u;
}
void YProductPartialEvent::clear_is_deleted() {
  is_deleted_ = false;
  clear_has_is_deleted();
}
bool YProductPartialEvent::is_deleted() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.is_deleted)
  return is_deleted_;
}
void YProductPartialEvent::set_is_deleted(bool value) {
  set_has_is_deleted();
  is_deleted_ = value;
  // @@protoc_insertion_point(field_set:YProductPartialEvent.is_deleted)
}

// optional string raw_json = 28;
bool YProductPartialEvent::has_raw_json() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void YProductPartialEvent::set_has_raw_json() {
  _has_bits_[0] |= 0x00000100u;
}
void YProductPartialEvent::clear_has_raw_json() {
  _has_bits_[0] &= ~0x00000100u;
}
void YProductPartialEvent::clear_raw_json() {
  raw_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_json();
}
const ::std::string& YProductPartialEvent::raw_json() const {
  // @@protoc_insertion_point(field_get:YProductPartialEvent.raw_json)
  return raw_json_.GetNoArena();
}
void YProductPartialEvent::set_raw_json(const ::std::string& value) {
  set_has_raw_json();
  raw_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YProductPartialEvent.raw_json)
}
#if LANG_CXX11
void YProductPartialEvent::set_raw_json(::std::string&& value) {
  set_has_raw_json();
  raw_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YProductPartialEvent.raw_json)
}
#endif
void YProductPartialEvent::set_raw_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_raw_json();
  raw_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YProductPartialEvent.raw_json)
}
void YProductPartialEvent::set_raw_json(const char* value, size_t size) {
  set_has_raw_json();
  raw_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YProductPartialEvent.raw_json)
}
::std::string* YProductPartialEvent::mutable_raw_json() {
  set_has_raw_json();
  // @@protoc_insertion_point(field_mutable:YProductPartialEvent.raw_json)
  return raw_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YProductPartialEvent::release_raw_json() {
  // @@protoc_insertion_point(field_release:YProductPartialEvent.raw_json)
  clear_has_raw_json();
  return raw_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YProductPartialEvent::set_allocated_raw_json(::std::string* raw_json) {
  if (raw_json != NULL) {
    set_has_raw_json();
  } else {
    clear_has_raw_json();
  }
  raw_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_json);
  // @@protoc_insertion_point(field_set_allocated:YProductPartialEvent.raw_json)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterleavingEvent::kEventTypeFieldNumber;
const int InterleavingEvent::kProductIdFieldNumber;
const int InterleavingEvent::kSplitFieldNumber;
const int InterleavingEvent::kShowedFromAFieldNumber;
const int InterleavingEvent::kPosFieldNumber;
const int InterleavingEvent::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterleavingEvent::InterleavingEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterleavingEvent)
}
InterleavingEvent::InterleavingEvent(const InterleavingEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:InterleavingEvent)
}

void InterleavingEvent::SharedCtor() {
  _cached_size_ = 0;
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(distance_));
}

InterleavingEvent::~InterleavingEvent() {
  // @@protoc_insertion_point(destructor:InterleavingEvent)
  SharedDtor();
}

void InterleavingEvent::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InterleavingEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterleavingEvent::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterleavingEvent& InterleavingEvent::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

InterleavingEvent* InterleavingEvent::New(::google::protobuf::Arena* arena) const {
  InterleavingEvent* n = new InterleavingEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterleavingEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:InterleavingEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_product_id()) {
    GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*product_id_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 62u) {
    ::memset(&event_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&event_type_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InterleavingEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterleavingEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .InterleavingEventType event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::InterleavingEventType_IsValid(value)) {
            set_event_type(static_cast< ::InterleavingEventType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InterleavingEvent.product_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 split = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_split();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &split_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool showed_from_a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_showed_from_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showed_from_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 distance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterleavingEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterleavingEvent)
  return false;
#undef DO_
}

void InterleavingEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterleavingEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .InterleavingEventType event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event_type(), output);
  }

  // optional string product_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterleavingEvent.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product_id(), output);
  }

  // optional int32 split = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->split(), output);
  }

  // optional bool showed_from_a = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->showed_from_a(), output);
  }

  // optional int32 pos = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos(), output);
  }

  // optional int32 distance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterleavingEvent)
}

::google::protobuf::uint8* InterleavingEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InterleavingEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .InterleavingEventType event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event_type(), target);
  }

  // optional string product_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterleavingEvent.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_id(), target);
  }

  // optional int32 split = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->split(), target);
  }

  // optional bool showed_from_a = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->showed_from_a(), target);
  }

  // optional int32 pos = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos(), target);
  }

  // optional int32 distance = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterleavingEvent)
  return target;
}

size_t InterleavingEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InterleavingEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string product_id = 2;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional .InterleavingEventType event_type = 1;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
    }

    // optional int32 split = 3;
    if (has_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->split());
    }

    // optional bool showed_from_a = 4;
    if (has_showed_from_a()) {
      total_size += 1 + 1;
    }

    // optional int32 pos = 5;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 distance = 6;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->distance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterleavingEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InterleavingEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const InterleavingEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterleavingEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InterleavingEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InterleavingEvent)
    MergeFrom(*source);
  }
}

void InterleavingEvent::MergeFrom(const InterleavingEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InterleavingEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      split_ = from.split_;
    }
    if (cached_has_bits & 0x00000008u) {
      showed_from_a_ = from.showed_from_a_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000020u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InterleavingEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InterleavingEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterleavingEvent::CopyFrom(const InterleavingEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InterleavingEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterleavingEvent::IsInitialized() const {
  return true;
}

void InterleavingEvent::Swap(InterleavingEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterleavingEvent::InternalSwap(InterleavingEvent* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  swap(event_type_, other->event_type_);
  swap(split_, other->split_);
  swap(showed_from_a_, other->showed_from_a_);
  swap(pos_, other->pos_);
  swap(distance_, other->distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterleavingEvent::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterleavingEvent

// optional .InterleavingEventType event_type = 1;
bool InterleavingEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InterleavingEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
void InterleavingEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void InterleavingEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
::InterleavingEventType InterleavingEvent::event_type() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.event_type)
  return static_cast< ::InterleavingEventType >(event_type_);
}
void InterleavingEvent::set_event_type(::InterleavingEventType value) {
  assert(::InterleavingEventType_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:InterleavingEvent.event_type)
}

// optional string product_id = 2;
bool InterleavingEvent::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InterleavingEvent::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
void InterleavingEvent::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void InterleavingEvent::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& InterleavingEvent::product_id() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.product_id)
  return product_id_.GetNoArena();
}
void InterleavingEvent::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InterleavingEvent.product_id)
}
#if LANG_CXX11
void InterleavingEvent::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InterleavingEvent.product_id)
}
#endif
void InterleavingEvent::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InterleavingEvent.product_id)
}
void InterleavingEvent::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InterleavingEvent.product_id)
}
::std::string* InterleavingEvent::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:InterleavingEvent.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InterleavingEvent::release_product_id() {
  // @@protoc_insertion_point(field_release:InterleavingEvent.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InterleavingEvent::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:InterleavingEvent.product_id)
}

// optional int32 split = 3;
bool InterleavingEvent::has_split() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InterleavingEvent::set_has_split() {
  _has_bits_[0] |= 0x00000004u;
}
void InterleavingEvent::clear_has_split() {
  _has_bits_[0] &= ~0x00000004u;
}
void InterleavingEvent::clear_split() {
  split_ = 0;
  clear_has_split();
}
::google::protobuf::int32 InterleavingEvent::split() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.split)
  return split_;
}
void InterleavingEvent::set_split(::google::protobuf::int32 value) {
  set_has_split();
  split_ = value;
  // @@protoc_insertion_point(field_set:InterleavingEvent.split)
}

// optional bool showed_from_a = 4;
bool InterleavingEvent::has_showed_from_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InterleavingEvent::set_has_showed_from_a() {
  _has_bits_[0] |= 0x00000008u;
}
void InterleavingEvent::clear_has_showed_from_a() {
  _has_bits_[0] &= ~0x00000008u;
}
void InterleavingEvent::clear_showed_from_a() {
  showed_from_a_ = false;
  clear_has_showed_from_a();
}
bool InterleavingEvent::showed_from_a() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.showed_from_a)
  return showed_from_a_;
}
void InterleavingEvent::set_showed_from_a(bool value) {
  set_has_showed_from_a();
  showed_from_a_ = value;
  // @@protoc_insertion_point(field_set:InterleavingEvent.showed_from_a)
}

// optional int32 pos = 5;
bool InterleavingEvent::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InterleavingEvent::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
void InterleavingEvent::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
void InterleavingEvent::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
::google::protobuf::int32 InterleavingEvent::pos() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.pos)
  return pos_;
}
void InterleavingEvent::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:InterleavingEvent.pos)
}

// optional int32 distance = 6;
bool InterleavingEvent::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void InterleavingEvent::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
void InterleavingEvent::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
void InterleavingEvent::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
::google::protobuf::int32 InterleavingEvent::distance() const {
  // @@protoc_insertion_point(field_get:InterleavingEvent.distance)
  return distance_;
}
void InterleavingEvent::set_distance(::google::protobuf::int32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:InterleavingEvent.distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactsAnalysisEvent::kSourceFieldNumber;
const int ContactsAnalysisEvent::kUserIdFieldNumber;
const int ContactsAnalysisEvent::kProductIdFieldNumber;
const int ContactsAnalysisEvent::kSplitFieldNumber;
const int ContactsAnalysisEvent::kEngineFieldNumber;
const int ContactsAnalysisEvent::kDistanceFieldNumber;
const int ContactsAnalysisEvent::kRegionIdFieldNumber;
const int ContactsAnalysisEvent::kCityIdFieldNumber;
const int ContactsAnalysisEvent::kCategoryIdFieldNumber;
const int ContactsAnalysisEvent::kSubcategoryIdFieldNumber;
const int ContactsAnalysisEvent::kPriceFieldNumber;
const int ContactsAnalysisEvent::kEventTsFieldNumber;
const int ContactsAnalysisEvent::kSearchTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactsAnalysisEvent::ContactsAnalysisEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContactsAnalysisEvent)
}
ContactsAnalysisEvent::ContactsAnalysisEvent(const ContactsAnalysisEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  engine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_engine()) {
    engine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.engine_);
  }
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region_id()) {
    region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
  }
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city_id()) {
    city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
  }
  search_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_type()) {
    search_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_type_);
  }
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&subcategory_id_) -
    reinterpret_cast<char*>(&source_)) + sizeof(subcategory_id_));
  // @@protoc_insertion_point(copy_constructor:ContactsAnalysisEvent)
}

void ContactsAnalysisEvent::SharedCtor() {
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subcategory_id_) -
      reinterpret_cast<char*>(&source_)) + sizeof(subcategory_id_));
}

ContactsAnalysisEvent::~ContactsAnalysisEvent() {
  // @@protoc_insertion_point(destructor:ContactsAnalysisEvent)
  SharedDtor();
}

void ContactsAnalysisEvent::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  engine_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContactsAnalysisEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactsAnalysisEvent::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactsAnalysisEvent& ContactsAnalysisEvent::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

ContactsAnalysisEvent* ContactsAnalysisEvent::New(::google::protobuf::Arena* arena) const {
  ContactsAnalysisEvent* n = new ContactsAnalysisEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactsAnalysisEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ContactsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!user_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!engine_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*engine_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!region_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*region_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!city_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!search_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*search_type_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&split_) -
        reinterpret_cast<char*>(&source_)) + sizeof(split_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&distance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&subcategory_id_) -
        reinterpret_cast<char*>(&distance_)) + sizeof(subcategory_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ContactsAnalysisEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContactsAnalysisEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .KafkaEventSource source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::KafkaEventSource_IsValid(value)) {
            set_source(static_cast< ::KafkaEventSource >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.product_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 split = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_split();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &split_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string engine = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_engine()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->engine().data(), static_cast<int>(this->engine().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.engine");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 distance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_id().data(), static_cast<int>(this->region_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.region_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city_id().data(), static_cast<int>(this->city_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.city_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 category_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_category_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 subcategory_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_subcategory_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subcategory_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 price = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 event_ts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_event_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &event_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_type().data(), static_cast<int>(this->search_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ContactsAnalysisEvent.search_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContactsAnalysisEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContactsAnalysisEvent)
  return false;
#undef DO_
}

void ContactsAnalysisEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContactsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .KafkaEventSource source = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source(), output);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // optional string product_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  // optional int32 split = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->split(), output);
  }

  // optional string engine = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->engine().data(), static_cast<int>(this->engine().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.engine");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->engine(), output);
  }

  // optional int32 distance = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->distance(), output);
  }

  // optional string region_id = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.region_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->region_id(), output);
  }

  // optional string city_id = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.city_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->city_id(), output);
  }

  // optional int32 category_id = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->category_id(), output);
  }

  // optional int32 subcategory_id = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->subcategory_id(), output);
  }

  // optional int64 price = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->price(), output);
  }

  // optional int64 event_ts = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->event_ts(), output);
  }

  // optional string search_type = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_type().data(), static_cast<int>(this->search_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.search_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->search_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ContactsAnalysisEvent)
}

::google::protobuf::uint8* ContactsAnalysisEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ContactsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .KafkaEventSource source = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->source(), target);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // optional string product_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  // optional int32 split = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->split(), target);
  }

  // optional string engine = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->engine().data(), static_cast<int>(this->engine().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.engine");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->engine(), target);
  }

  // optional int32 distance = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->distance(), target);
  }

  // optional string region_id = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.region_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->region_id(), target);
  }

  // optional string city_id = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.city_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->city_id(), target);
  }

  // optional int32 category_id = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->category_id(), target);
  }

  // optional int32 subcategory_id = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->subcategory_id(), target);
  }

  // optional int64 price = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->price(), target);
  }

  // optional int64 event_ts = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->event_ts(), target);
  }

  // optional string search_type = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_type().data(), static_cast<int>(this->search_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ContactsAnalysisEvent.search_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->search_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ContactsAnalysisEvent)
  return target;
}

size_t ContactsAnalysisEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ContactsAnalysisEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string product_id = 3;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional string engine = 5;
    if (has_engine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->engine());
    }

    // optional string region_id = 7;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region_id());
    }

    // optional string city_id = 8;
    if (has_city_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city_id());
    }

    // optional string search_type = 13;
    if (has_search_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_type());
    }

    // optional .KafkaEventSource source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
    }

    // optional int32 split = 4;
    if (has_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->split());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional int32 distance = 6;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->distance());
    }

    // optional int32 category_id = 9;
    if (has_category_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->category_id());
    }

    // optional int64 price = 11;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->price());
    }

    // optional int64 event_ts = 12;
    if (has_event_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->event_ts());
    }

    // optional int32 subcategory_id = 10;
    if (has_subcategory_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->subcategory_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactsAnalysisEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ContactsAnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactsAnalysisEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactsAnalysisEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ContactsAnalysisEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ContactsAnalysisEvent)
    MergeFrom(*source);
  }
}

void ContactsAnalysisEvent::MergeFrom(const ContactsAnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ContactsAnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_engine();
      engine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.engine_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_region_id();
      region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_city_id();
      city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_search_type();
      search_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_type_);
    }
    if (cached_has_bits & 0x00000040u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000080u) {
      split_ = from.split_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000200u) {
      category_id_ = from.category_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000800u) {
      event_ts_ = from.event_ts_;
    }
    if (cached_has_bits & 0x00001000u) {
      subcategory_id_ = from.subcategory_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ContactsAnalysisEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ContactsAnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactsAnalysisEvent::CopyFrom(const ContactsAnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ContactsAnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactsAnalysisEvent::IsInitialized() const {
  return true;
}

void ContactsAnalysisEvent::Swap(ContactsAnalysisEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactsAnalysisEvent::InternalSwap(ContactsAnalysisEvent* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_);
  product_id_.Swap(&other->product_id_);
  engine_.Swap(&other->engine_);
  region_id_.Swap(&other->region_id_);
  city_id_.Swap(&other->city_id_);
  search_type_.Swap(&other->search_type_);
  swap(source_, other->source_);
  swap(split_, other->split_);
  swap(distance_, other->distance_);
  swap(category_id_, other->category_id_);
  swap(price_, other->price_);
  swap(event_ts_, other->event_ts_);
  swap(subcategory_id_, other->subcategory_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContactsAnalysisEvent::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContactsAnalysisEvent

// optional .KafkaEventSource source = 1;
bool ContactsAnalysisEvent::has_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ContactsAnalysisEvent::set_has_source() {
  _has_bits_[0] |= 0x00000040u;
}
void ContactsAnalysisEvent::clear_has_source() {
  _has_bits_[0] &= ~0x00000040u;
}
void ContactsAnalysisEvent::clear_source() {
  source_ = 0;
  clear_has_source();
}
::KafkaEventSource ContactsAnalysisEvent::source() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.source)
  return static_cast< ::KafkaEventSource >(source_);
}
void ContactsAnalysisEvent::set_source(::KafkaEventSource value) {
  assert(::KafkaEventSource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.source)
}

// optional string user_id = 2;
bool ContactsAnalysisEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ContactsAnalysisEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ContactsAnalysisEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ContactsAnalysisEvent::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
const ::std::string& ContactsAnalysisEvent::user_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.user_id)
  return user_id_.GetNoArena();
}
void ContactsAnalysisEvent::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.user_id)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_user_id(::std::string&& value) {
  set_has_user_id();
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.user_id)
}
#endif
void ContactsAnalysisEvent::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.user_id)
}
void ContactsAnalysisEvent::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.user_id)
}
::std::string* ContactsAnalysisEvent::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_user_id() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.user_id)
}

// optional string product_id = 3;
bool ContactsAnalysisEvent::has_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ContactsAnalysisEvent::set_has_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ContactsAnalysisEvent::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ContactsAnalysisEvent::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& ContactsAnalysisEvent::product_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.product_id)
  return product_id_.GetNoArena();
}
void ContactsAnalysisEvent::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.product_id)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.product_id)
}
#endif
void ContactsAnalysisEvent::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.product_id)
}
void ContactsAnalysisEvent::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.product_id)
}
::std::string* ContactsAnalysisEvent::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_product_id() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.product_id)
}

// optional int32 split = 4;
bool ContactsAnalysisEvent::has_split() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ContactsAnalysisEvent::set_has_split() {
  _has_bits_[0] |= 0x00000080u;
}
void ContactsAnalysisEvent::clear_has_split() {
  _has_bits_[0] &= ~0x00000080u;
}
void ContactsAnalysisEvent::clear_split() {
  split_ = 0;
  clear_has_split();
}
::google::protobuf::int32 ContactsAnalysisEvent::split() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.split)
  return split_;
}
void ContactsAnalysisEvent::set_split(::google::protobuf::int32 value) {
  set_has_split();
  split_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.split)
}

// optional string engine = 5;
bool ContactsAnalysisEvent::has_engine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ContactsAnalysisEvent::set_has_engine() {
  _has_bits_[0] |= 0x00000004u;
}
void ContactsAnalysisEvent::clear_has_engine() {
  _has_bits_[0] &= ~0x00000004u;
}
void ContactsAnalysisEvent::clear_engine() {
  engine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_engine();
}
const ::std::string& ContactsAnalysisEvent::engine() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.engine)
  return engine_.GetNoArena();
}
void ContactsAnalysisEvent::set_engine(const ::std::string& value) {
  set_has_engine();
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.engine)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_engine(::std::string&& value) {
  set_has_engine();
  engine_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.engine)
}
#endif
void ContactsAnalysisEvent::set_engine(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_engine();
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.engine)
}
void ContactsAnalysisEvent::set_engine(const char* value, size_t size) {
  set_has_engine();
  engine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.engine)
}
::std::string* ContactsAnalysisEvent::mutable_engine() {
  set_has_engine();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.engine)
  return engine_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_engine() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.engine)
  clear_has_engine();
  return engine_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_engine(::std::string* engine) {
  if (engine != NULL) {
    set_has_engine();
  } else {
    clear_has_engine();
  }
  engine_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), engine);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.engine)
}

// optional int32 distance = 6;
bool ContactsAnalysisEvent::has_distance() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ContactsAnalysisEvent::set_has_distance() {
  _has_bits_[0] |= 0x00000100u;
}
void ContactsAnalysisEvent::clear_has_distance() {
  _has_bits_[0] &= ~0x00000100u;
}
void ContactsAnalysisEvent::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
::google::protobuf::int32 ContactsAnalysisEvent::distance() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.distance)
  return distance_;
}
void ContactsAnalysisEvent::set_distance(::google::protobuf::int32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.distance)
}

// optional string region_id = 7;
bool ContactsAnalysisEvent::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ContactsAnalysisEvent::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ContactsAnalysisEvent::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ContactsAnalysisEvent::clear_region_id() {
  region_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_id();
}
const ::std::string& ContactsAnalysisEvent::region_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.region_id)
  return region_id_.GetNoArena();
}
void ContactsAnalysisEvent::set_region_id(const ::std::string& value) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.region_id)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_region_id(::std::string&& value) {
  set_has_region_id();
  region_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.region_id)
}
#endif
void ContactsAnalysisEvent::set_region_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.region_id)
}
void ContactsAnalysisEvent::set_region_id(const char* value, size_t size) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.region_id)
}
::std::string* ContactsAnalysisEvent::mutable_region_id() {
  set_has_region_id();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.region_id)
  return region_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_region_id() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.region_id)
  clear_has_region_id();
  return region_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_region_id(::std::string* region_id) {
  if (region_id != NULL) {
    set_has_region_id();
  } else {
    clear_has_region_id();
  }
  region_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_id);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.region_id)
}

// optional string city_id = 8;
bool ContactsAnalysisEvent::has_city_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ContactsAnalysisEvent::set_has_city_id() {
  _has_bits_[0] |= 0x00000010u;
}
void ContactsAnalysisEvent::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void ContactsAnalysisEvent::clear_city_id() {
  city_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city_id();
}
const ::std::string& ContactsAnalysisEvent::city_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.city_id)
  return city_id_.GetNoArena();
}
void ContactsAnalysisEvent::set_city_id(const ::std::string& value) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.city_id)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_city_id(::std::string&& value) {
  set_has_city_id();
  city_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.city_id)
}
#endif
void ContactsAnalysisEvent::set_city_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.city_id)
}
void ContactsAnalysisEvent::set_city_id(const char* value, size_t size) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.city_id)
}
::std::string* ContactsAnalysisEvent::mutable_city_id() {
  set_has_city_id();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.city_id)
  return city_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_city_id() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.city_id)
  clear_has_city_id();
  return city_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_city_id(::std::string* city_id) {
  if (city_id != NULL) {
    set_has_city_id();
  } else {
    clear_has_city_id();
  }
  city_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city_id);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.city_id)
}

// optional int32 category_id = 9;
bool ContactsAnalysisEvent::has_category_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ContactsAnalysisEvent::set_has_category_id() {
  _has_bits_[0] |= 0x00000200u;
}
void ContactsAnalysisEvent::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void ContactsAnalysisEvent::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
::google::protobuf::int32 ContactsAnalysisEvent::category_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.category_id)
  return category_id_;
}
void ContactsAnalysisEvent::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.category_id)
}

// optional int32 subcategory_id = 10;
bool ContactsAnalysisEvent::has_subcategory_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ContactsAnalysisEvent::set_has_subcategory_id() {
  _has_bits_[0] |= 0x00001000u;
}
void ContactsAnalysisEvent::clear_has_subcategory_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void ContactsAnalysisEvent::clear_subcategory_id() {
  subcategory_id_ = 0;
  clear_has_subcategory_id();
}
::google::protobuf::int32 ContactsAnalysisEvent::subcategory_id() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.subcategory_id)
  return subcategory_id_;
}
void ContactsAnalysisEvent::set_subcategory_id(::google::protobuf::int32 value) {
  set_has_subcategory_id();
  subcategory_id_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.subcategory_id)
}

// optional int64 price = 11;
bool ContactsAnalysisEvent::has_price() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ContactsAnalysisEvent::set_has_price() {
  _has_bits_[0] |= 0x00000400u;
}
void ContactsAnalysisEvent::clear_has_price() {
  _has_bits_[0] &= ~0x00000400u;
}
void ContactsAnalysisEvent::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
  clear_has_price();
}
::google::protobuf::int64 ContactsAnalysisEvent::price() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.price)
  return price_;
}
void ContactsAnalysisEvent::set_price(::google::protobuf::int64 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.price)
}

// optional int64 event_ts = 12;
bool ContactsAnalysisEvent::has_event_ts() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ContactsAnalysisEvent::set_has_event_ts() {
  _has_bits_[0] |= 0x00000800u;
}
void ContactsAnalysisEvent::clear_has_event_ts() {
  _has_bits_[0] &= ~0x00000800u;
}
void ContactsAnalysisEvent::clear_event_ts() {
  event_ts_ = GOOGLE_LONGLONG(0);
  clear_has_event_ts();
}
::google::protobuf::int64 ContactsAnalysisEvent::event_ts() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.event_ts)
  return event_ts_;
}
void ContactsAnalysisEvent::set_event_ts(::google::protobuf::int64 value) {
  set_has_event_ts();
  event_ts_ = value;
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.event_ts)
}

// optional string search_type = 13;
bool ContactsAnalysisEvent::has_search_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ContactsAnalysisEvent::set_has_search_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ContactsAnalysisEvent::clear_has_search_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ContactsAnalysisEvent::clear_search_type() {
  search_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_type();
}
const ::std::string& ContactsAnalysisEvent::search_type() const {
  // @@protoc_insertion_point(field_get:ContactsAnalysisEvent.search_type)
  return search_type_.GetNoArena();
}
void ContactsAnalysisEvent::set_search_type(const ::std::string& value) {
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContactsAnalysisEvent.search_type)
}
#if LANG_CXX11
void ContactsAnalysisEvent::set_search_type(::std::string&& value) {
  set_has_search_type();
  search_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ContactsAnalysisEvent.search_type)
}
#endif
void ContactsAnalysisEvent::set_search_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContactsAnalysisEvent.search_type)
}
void ContactsAnalysisEvent::set_search_type(const char* value, size_t size) {
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContactsAnalysisEvent.search_type)
}
::std::string* ContactsAnalysisEvent::mutable_search_type() {
  set_has_search_type();
  // @@protoc_insertion_point(field_mutable:ContactsAnalysisEvent.search_type)
  return search_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContactsAnalysisEvent::release_search_type() {
  // @@protoc_insertion_point(field_release:ContactsAnalysisEvent.search_type)
  clear_has_search_type();
  return search_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContactsAnalysisEvent::set_allocated_search_type(::std::string* search_type) {
  if (search_type != NULL) {
    set_has_search_type();
  } else {
    clear_has_search_type();
  }
  search_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_type);
  // @@protoc_insertion_point(field_set_allocated:ContactsAnalysisEvent.search_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewsAnalysisEvent::kSourceFieldNumber;
const int ViewsAnalysisEvent::kUserIdFieldNumber;
const int ViewsAnalysisEvent::kProductIdFieldNumber;
const int ViewsAnalysisEvent::kSplitFieldNumber;
const int ViewsAnalysisEvent::kSearchTypeFieldNumber;
const int ViewsAnalysisEvent::kRegionIdFieldNumber;
const int ViewsAnalysisEvent::kCityIdFieldNumber;
const int ViewsAnalysisEvent::kCategoryIdFieldNumber;
const int ViewsAnalysisEvent::kSubcategoryIdFieldNumber;
const int ViewsAnalysisEvent::kPriceFieldNumber;
const int ViewsAnalysisEvent::kEventTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewsAnalysisEvent::ViewsAnalysisEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ViewsAnalysisEvent)
}
ViewsAnalysisEvent::ViewsAnalysisEvent(const ViewsAnalysisEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  search_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_type()) {
    search_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_type_);
  }
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region_id()) {
    region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
  }
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city_id()) {
    city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
  }
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_ts_) -
    reinterpret_cast<char*>(&source_)) + sizeof(event_ts_));
  // @@protoc_insertion_point(copy_constructor:ViewsAnalysisEvent)
}

void ViewsAnalysisEvent::SharedCtor() {
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_ts_) -
      reinterpret_cast<char*>(&source_)) + sizeof(event_ts_));
}

ViewsAnalysisEvent::~ViewsAnalysisEvent() {
  // @@protoc_insertion_point(destructor:ViewsAnalysisEvent)
  SharedDtor();
}

void ViewsAnalysisEvent::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ViewsAnalysisEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ViewsAnalysisEvent::descriptor() {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewsAnalysisEvent& ViewsAnalysisEvent::default_instance() {
  protobuf_youla_2eproto::InitDefaults();
  return *internal_default_instance();
}

ViewsAnalysisEvent* ViewsAnalysisEvent::New(::google::protobuf::Arena* arena) const {
  ViewsAnalysisEvent* n = new ViewsAnalysisEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ViewsAnalysisEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ViewsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!user_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!search_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*search_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!region_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*region_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!city_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_id_) -
        reinterpret_cast<char*>(&source_)) + sizeof(category_id_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&subcategory_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_ts_) -
        reinterpret_cast<char*>(&subcategory_id_)) + sizeof(event_ts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ViewsAnalysisEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ViewsAnalysisEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .KafkaEventSource source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::KafkaEventSource_IsValid(value)) {
            set_source(static_cast< ::KafkaEventSource >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ViewsAnalysisEvent.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ViewsAnalysisEvent.product_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 split = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_split();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &split_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_type().data(), static_cast<int>(this->search_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ViewsAnalysisEvent.search_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region_id().data(), static_cast<int>(this->region_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ViewsAnalysisEvent.region_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city_id().data(), static_cast<int>(this->city_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ViewsAnalysisEvent.city_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 category_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_category_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 subcategory_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_subcategory_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subcategory_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 price = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 event_ts = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_event_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &event_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ViewsAnalysisEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ViewsAnalysisEvent)
  return false;
#undef DO_
}

void ViewsAnalysisEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ViewsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .KafkaEventSource source = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source(), output);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // optional string product_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  // optional int32 split = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->split(), output);
  }

  // optional string search_type = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_type().data(), static_cast<int>(this->search_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.search_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->search_type(), output);
  }

  // optional string region_id = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.region_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->region_id(), output);
  }

  // optional string city_id = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.city_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->city_id(), output);
  }

  // optional int32 category_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->category_id(), output);
  }

  // optional int32 subcategory_id = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->subcategory_id(), output);
  }

  // optional int64 price = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->price(), output);
  }

  // optional int64 event_ts = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->event_ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ViewsAnalysisEvent)
}

::google::protobuf::uint8* ViewsAnalysisEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ViewsAnalysisEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .KafkaEventSource source = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->source(), target);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // optional string product_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  // optional int32 split = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->split(), target);
  }

  // optional string search_type = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_type().data(), static_cast<int>(this->search_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.search_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->search_type(), target);
  }

  // optional string region_id = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region_id().data(), static_cast<int>(this->region_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.region_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->region_id(), target);
  }

  // optional string city_id = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_id().data(), static_cast<int>(this->city_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ViewsAnalysisEvent.city_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->city_id(), target);
  }

  // optional int32 category_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->category_id(), target);
  }

  // optional int32 subcategory_id = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->subcategory_id(), target);
  }

  // optional int64 price = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->price(), target);
  }

  // optional int64 event_ts = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->event_ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ViewsAnalysisEvent)
  return target;
}

size_t ViewsAnalysisEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ViewsAnalysisEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string product_id = 3;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional string search_type = 5;
    if (has_search_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_type());
    }

    // optional string region_id = 6;
    if (has_region_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region_id());
    }

    // optional string city_id = 7;
    if (has_city_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city_id());
    }

    // optional .KafkaEventSource source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
    }

    // optional int32 split = 4;
    if (has_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->split());
    }

    // optional int32 category_id = 8;
    if (has_category_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->category_id());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 subcategory_id = 9;
    if (has_subcategory_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->subcategory_id());
    }

    // optional int64 price = 10;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->price());
    }

    // optional int64 event_ts = 11;
    if (has_event_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->event_ts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ViewsAnalysisEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ViewsAnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewsAnalysisEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewsAnalysisEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ViewsAnalysisEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ViewsAnalysisEvent)
    MergeFrom(*source);
  }
}

void ViewsAnalysisEvent::MergeFrom(const ViewsAnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ViewsAnalysisEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_search_type();
      search_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_type_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_region_id();
      region_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_city_id();
      city_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000040u) {
      split_ = from.split_;
    }
    if (cached_has_bits & 0x00000080u) {
      category_id_ = from.category_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      subcategory_id_ = from.subcategory_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000400u) {
      event_ts_ = from.event_ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewsAnalysisEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ViewsAnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewsAnalysisEvent::CopyFrom(const ViewsAnalysisEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ViewsAnalysisEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewsAnalysisEvent::IsInitialized() const {
  return true;
}

void ViewsAnalysisEvent::Swap(ViewsAnalysisEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ViewsAnalysisEvent::InternalSwap(ViewsAnalysisEvent* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_);
  product_id_.Swap(&other->product_id_);
  search_type_.Swap(&other->search_type_);
  region_id_.Swap(&other->region_id_);
  city_id_.Swap(&other->city_id_);
  swap(source_, other->source_);
  swap(split_, other->split_);
  swap(category_id_, other->category_id_);
  swap(subcategory_id_, other->subcategory_id_);
  swap(price_, other->price_);
  swap(event_ts_, other->event_ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ViewsAnalysisEvent::GetMetadata() const {
  protobuf_youla_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ViewsAnalysisEvent

// optional .KafkaEventSource source = 1;
bool ViewsAnalysisEvent::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ViewsAnalysisEvent::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
void ViewsAnalysisEvent::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
void ViewsAnalysisEvent::clear_source() {
  source_ = 0;
  clear_has_source();
}
::KafkaEventSource ViewsAnalysisEvent::source() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.source)
  return static_cast< ::KafkaEventSource >(source_);
}
void ViewsAnalysisEvent::set_source(::KafkaEventSource value) {
  assert(::KafkaEventSource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.source)
}

// optional string user_id = 2;
bool ViewsAnalysisEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ViewsAnalysisEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ViewsAnalysisEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ViewsAnalysisEvent::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
const ::std::string& ViewsAnalysisEvent::user_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.user_id)
  return user_id_.GetNoArena();
}
void ViewsAnalysisEvent::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.user_id)
}
#if LANG_CXX11
void ViewsAnalysisEvent::set_user_id(::std::string&& value) {
  set_has_user_id();
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ViewsAnalysisEvent.user_id)
}
#endif
void ViewsAnalysisEvent::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewsAnalysisEvent.user_id)
}
void ViewsAnalysisEvent::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewsAnalysisEvent.user_id)
}
::std::string* ViewsAnalysisEvent::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:ViewsAnalysisEvent.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ViewsAnalysisEvent::release_user_id() {
  // @@protoc_insertion_point(field_release:ViewsAnalysisEvent.user_id)
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ViewsAnalysisEvent::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ViewsAnalysisEvent.user_id)
}

// optional string product_id = 3;
bool ViewsAnalysisEvent::has_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ViewsAnalysisEvent::set_has_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ViewsAnalysisEvent::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ViewsAnalysisEvent::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& ViewsAnalysisEvent::product_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.product_id)
  return product_id_.GetNoArena();
}
void ViewsAnalysisEvent::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.product_id)
}
#if LANG_CXX11
void ViewsAnalysisEvent::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ViewsAnalysisEvent.product_id)
}
#endif
void ViewsAnalysisEvent::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewsAnalysisEvent.product_id)
}
void ViewsAnalysisEvent::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewsAnalysisEvent.product_id)
}
::std::string* ViewsAnalysisEvent::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:ViewsAnalysisEvent.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ViewsAnalysisEvent::release_product_id() {
  // @@protoc_insertion_point(field_release:ViewsAnalysisEvent.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ViewsAnalysisEvent::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:ViewsAnalysisEvent.product_id)
}

// optional int32 split = 4;
bool ViewsAnalysisEvent::has_split() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ViewsAnalysisEvent::set_has_split() {
  _has_bits_[0] |= 0x00000040u;
}
void ViewsAnalysisEvent::clear_has_split() {
  _has_bits_[0] &= ~0x00000040u;
}
void ViewsAnalysisEvent::clear_split() {
  split_ = 0;
  clear_has_split();
}
::google::protobuf::int32 ViewsAnalysisEvent::split() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.split)
  return split_;
}
void ViewsAnalysisEvent::set_split(::google::protobuf::int32 value) {
  set_has_split();
  split_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.split)
}

// optional string search_type = 5;
bool ViewsAnalysisEvent::has_search_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ViewsAnalysisEvent::set_has_search_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ViewsAnalysisEvent::clear_has_search_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ViewsAnalysisEvent::clear_search_type() {
  search_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_type();
}
const ::std::string& ViewsAnalysisEvent::search_type() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.search_type)
  return search_type_.GetNoArena();
}
void ViewsAnalysisEvent::set_search_type(const ::std::string& value) {
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.search_type)
}
#if LANG_CXX11
void ViewsAnalysisEvent::set_search_type(::std::string&& value) {
  set_has_search_type();
  search_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ViewsAnalysisEvent.search_type)
}
#endif
void ViewsAnalysisEvent::set_search_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewsAnalysisEvent.search_type)
}
void ViewsAnalysisEvent::set_search_type(const char* value, size_t size) {
  set_has_search_type();
  search_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewsAnalysisEvent.search_type)
}
::std::string* ViewsAnalysisEvent::mutable_search_type() {
  set_has_search_type();
  // @@protoc_insertion_point(field_mutable:ViewsAnalysisEvent.search_type)
  return search_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ViewsAnalysisEvent::release_search_type() {
  // @@protoc_insertion_point(field_release:ViewsAnalysisEvent.search_type)
  clear_has_search_type();
  return search_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ViewsAnalysisEvent::set_allocated_search_type(::std::string* search_type) {
  if (search_type != NULL) {
    set_has_search_type();
  } else {
    clear_has_search_type();
  }
  search_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_type);
  // @@protoc_insertion_point(field_set_allocated:ViewsAnalysisEvent.search_type)
}

// optional string region_id = 6;
bool ViewsAnalysisEvent::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ViewsAnalysisEvent::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ViewsAnalysisEvent::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ViewsAnalysisEvent::clear_region_id() {
  region_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_id();
}
const ::std::string& ViewsAnalysisEvent::region_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.region_id)
  return region_id_.GetNoArena();
}
void ViewsAnalysisEvent::set_region_id(const ::std::string& value) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.region_id)
}
#if LANG_CXX11
void ViewsAnalysisEvent::set_region_id(::std::string&& value) {
  set_has_region_id();
  region_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ViewsAnalysisEvent.region_id)
}
#endif
void ViewsAnalysisEvent::set_region_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewsAnalysisEvent.region_id)
}
void ViewsAnalysisEvent::set_region_id(const char* value, size_t size) {
  set_has_region_id();
  region_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewsAnalysisEvent.region_id)
}
::std::string* ViewsAnalysisEvent::mutable_region_id() {
  set_has_region_id();
  // @@protoc_insertion_point(field_mutable:ViewsAnalysisEvent.region_id)
  return region_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ViewsAnalysisEvent::release_region_id() {
  // @@protoc_insertion_point(field_release:ViewsAnalysisEvent.region_id)
  clear_has_region_id();
  return region_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ViewsAnalysisEvent::set_allocated_region_id(::std::string* region_id) {
  if (region_id != NULL) {
    set_has_region_id();
  } else {
    clear_has_region_id();
  }
  region_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_id);
  // @@protoc_insertion_point(field_set_allocated:ViewsAnalysisEvent.region_id)
}

// optional string city_id = 7;
bool ViewsAnalysisEvent::has_city_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ViewsAnalysisEvent::set_has_city_id() {
  _has_bits_[0] |= 0x00000010u;
}
void ViewsAnalysisEvent::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void ViewsAnalysisEvent::clear_city_id() {
  city_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city_id();
}
const ::std::string& ViewsAnalysisEvent::city_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.city_id)
  return city_id_.GetNoArena();
}
void ViewsAnalysisEvent::set_city_id(const ::std::string& value) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.city_id)
}
#if LANG_CXX11
void ViewsAnalysisEvent::set_city_id(::std::string&& value) {
  set_has_city_id();
  city_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ViewsAnalysisEvent.city_id)
}
#endif
void ViewsAnalysisEvent::set_city_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ViewsAnalysisEvent.city_id)
}
void ViewsAnalysisEvent::set_city_id(const char* value, size_t size) {
  set_has_city_id();
  city_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ViewsAnalysisEvent.city_id)
}
::std::string* ViewsAnalysisEvent::mutable_city_id() {
  set_has_city_id();
  // @@protoc_insertion_point(field_mutable:ViewsAnalysisEvent.city_id)
  return city_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ViewsAnalysisEvent::release_city_id() {
  // @@protoc_insertion_point(field_release:ViewsAnalysisEvent.city_id)
  clear_has_city_id();
  return city_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ViewsAnalysisEvent::set_allocated_city_id(::std::string* city_id) {
  if (city_id != NULL) {
    set_has_city_id();
  } else {
    clear_has_city_id();
  }
  city_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city_id);
  // @@protoc_insertion_point(field_set_allocated:ViewsAnalysisEvent.city_id)
}

// optional int32 category_id = 8;
bool ViewsAnalysisEvent::has_category_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ViewsAnalysisEvent::set_has_category_id() {
  _has_bits_[0] |= 0x00000080u;
}
void ViewsAnalysisEvent::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void ViewsAnalysisEvent::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
::google::protobuf::int32 ViewsAnalysisEvent::category_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.category_id)
  return category_id_;
}
void ViewsAnalysisEvent::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.category_id)
}

// optional int32 subcategory_id = 9;
bool ViewsAnalysisEvent::has_subcategory_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ViewsAnalysisEvent::set_has_subcategory_id() {
  _has_bits_[0] |= 0x00000100u;
}
void ViewsAnalysisEvent::clear_has_subcategory_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void ViewsAnalysisEvent::clear_subcategory_id() {
  subcategory_id_ = 0;
  clear_has_subcategory_id();
}
::google::protobuf::int32 ViewsAnalysisEvent::subcategory_id() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.subcategory_id)
  return subcategory_id_;
}
void ViewsAnalysisEvent::set_subcategory_id(::google::protobuf::int32 value) {
  set_has_subcategory_id();
  subcategory_id_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.subcategory_id)
}

// optional int64 price = 10;
bool ViewsAnalysisEvent::has_price() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ViewsAnalysisEvent::set_has_price() {
  _has_bits_[0] |= 0x00000200u;
}
void ViewsAnalysisEvent::clear_has_price() {
  _has_bits_[0] &= ~0x00000200u;
}
void ViewsAnalysisEvent::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
  clear_has_price();
}
::google::protobuf::int64 ViewsAnalysisEvent::price() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.price)
  return price_;
}
void ViewsAnalysisEvent::set_price(::google::protobuf::int64 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.price)
}

// optional int64 event_ts = 11;
bool ViewsAnalysisEvent::has_event_ts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ViewsAnalysisEvent::set_has_event_ts() {
  _has_bits_[0] |= 0x00000400u;
}
void ViewsAnalysisEvent::clear_has_event_ts() {
  _has_bits_[0] &= ~0x00000400u;
}
void ViewsAnalysisEvent::clear_event_ts() {
  event_ts_ = GOOGLE_LONGLONG(0);
  clear_has_event_ts();
}
::google::protobuf::int64 ViewsAnalysisEvent::event_ts() const {
  // @@protoc_insertion_point(field_get:ViewsAnalysisEvent.event_ts)
  return event_ts_;
}
void ViewsAnalysisEvent::set_event_ts(::google::protobuf::int64 value) {
  set_has_event_ts();
  event_ts_ = value;
  // @@protoc_insertion_point(field_set:ViewsAnalysisEvent.event_ts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
