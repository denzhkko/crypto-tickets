// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_carusel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youla_carusel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace youla {
namespace carusel {
namespace pb {
class ClickInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClickInfo>
     _instance;
} _ClickInfo_default_instance_;
class UserInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
     _instance;
} _UserInfo_default_instance_;
class YoulaClicksForCaruselDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YoulaClicksForCarusel>
     _instance;
} _YoulaClicksForCarusel_default_instance_;
class CaruselInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CaruselInfo>
     _instance;
} _CaruselInfo_default_instance_;
class DeletedCaruselDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeletedCarusel>
     _instance;
} _DeletedCarusel_default_instance_;
class SubcategoryIdsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubcategoryIds>
     _instance;
} _SubcategoryIds_default_instance_;

namespace protobuf_youla_5fcarusel_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClickInfo, subcategory_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaClicksForCarusel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaClicksForCarusel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaClicksForCarusel, click_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaClicksForCarusel, user_info_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaruselInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaruselInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaruselInfo, subcategory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaruselInfo, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletedCarusel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletedCarusel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeletedCarusel, carusel_info_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcategoryIds, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcategoryIds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcategoryIds, values_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(ClickInfo)},
  { 13, 19, sizeof(UserInfo)},
  { 20, 27, sizeof(YoulaClicksForCarusel)},
  { 29, 36, sizeof(CaruselInfo)},
  { 38, 44, sizeof(DeletedCarusel)},
  { 45, 51, sizeof(SubcategoryIds)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClickInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YoulaClicksForCarusel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CaruselInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeletedCarusel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubcategoryIds_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youla_carusel.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ClickInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClickInfo_default_instance_);_UserInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserInfo_default_instance_);_YoulaClicksForCarusel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YoulaClicksForCarusel_default_instance_);_CaruselInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CaruselInfo_default_instance_);_DeletedCarusel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeletedCarusel_default_instance_);_SubcategoryIds_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubcategoryIds_default_instance_);_YoulaClicksForCarusel_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::youla::carusel::pb::UserInfo*>(
      ::youla::carusel::pb::UserInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023youla_carusel.proto\022\020youla.carusel.pb\""
      "T\n\tClickInfo\022\022\n\nproduct_id\030\001 \002(\t\022\014\n\004time"
      "\030\002 \001(\004\022\020\n\010category\030\003 \001(\t\022\023\n\013subcategory\030"
      "\004 \001(\t\"\027\n\010UserInfo\022\013\n\003uid\030\001 \002(\t\"w\n\025YoulaC"
      "licksForCarusel\022/\n\nclick_info\030\001 \003(\0132\033.yo"
      "ula.carusel.pb.ClickInfo\022-\n\tuser_info\030\002 "
      "\001(\0132\032.youla.carusel.pb.UserInfo\"0\n\013Carus"
      "elInfo\022\023\n\013subcategory\030\001 \002(\t\022\014\n\004time\030\002 \002("
      "\004\"E\n\016DeletedCarusel\0223\n\014carusel_info\030\001 \003("
      "\0132\035.youla.carusel.pb.CaruselInfo\" \n\016Subc"
      "ategoryIds\022\016\n\006values\030\001 \003(\004B\016B\014YoulaCarus"
      "el"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 442);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youla_carusel.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_youla_5fcarusel_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClickInfo::kProductIdFieldNumber;
const int ClickInfo::kTimeFieldNumber;
const int ClickInfo::kCategoryFieldNumber;
const int ClickInfo::kSubcategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClickInfo::ClickInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.ClickInfo)
}
ClickInfo::ClickInfo(const ClickInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product_id()) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category()) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  subcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subcategory()) {
    subcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.ClickInfo)
}

void ClickInfo::SharedCtor() {
  _cached_size_ = 0;
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
}

ClickInfo::~ClickInfo() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.ClickInfo)
  SharedDtor();
}

void ClickInfo::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClickInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClickInfo::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClickInfo& ClickInfo::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClickInfo* ClickInfo::New(::google::protobuf::Arena* arena) const {
  ClickInfo* n = new ClickInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClickInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.ClickInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!product_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!category_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*category_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!subcategory_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*subcategory_.UnsafeRawStringPointer())->clear();
    }
  }
  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClickInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.ClickInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "youla.carusel.pb.ClickInfo.product_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "youla.carusel.pb.ClickInfo.category");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string subcategory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subcategory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subcategory().data(), static_cast<int>(this->subcategory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "youla.carusel.pb.ClickInfo.subcategory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.ClickInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.ClickInfo)
  return false;
#undef DO_
}

void ClickInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.ClickInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string product_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  // optional uint64 time = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  // optional string category = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category(), output);
  }

  // optional string subcategory = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory().data(), static_cast<int>(this->subcategory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.subcategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->subcategory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.ClickInfo)
}

::google::protobuf::uint8* ClickInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.ClickInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string product_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  // optional uint64 time = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  // optional string category = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category(), target);
  }

  // optional string subcategory = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory().data(), static_cast<int>(this->subcategory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.ClickInfo.subcategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->subcategory(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.ClickInfo)
  return target;
}

size_t ClickInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.ClickInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string product_id = 1;
  if (has_product_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string category = 3;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // optional string subcategory = 4;
    if (has_subcategory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subcategory());
    }

    // optional uint64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClickInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.ClickInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClickInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClickInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.ClickInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.ClickInfo)
    MergeFrom(*source);
  }
}

void ClickInfo::MergeFrom(const ClickInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.ClickInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_product_id();
      product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_category();
      category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_subcategory();
      subcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
    }
    if (cached_has_bits & 0x00000008u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClickInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.ClickInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickInfo::CopyFrom(const ClickInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.ClickInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ClickInfo::Swap(ClickInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClickInfo::InternalSwap(ClickInfo* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  category_.Swap(&other->category_);
  subcategory_.Swap(&other->subcategory_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClickInfo::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClickInfo

// required string product_id = 1;
bool ClickInfo::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClickInfo::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ClickInfo::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClickInfo::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
const ::std::string& ClickInfo::product_id() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.product_id)
  return product_id_.GetNoArena();
}
void ClickInfo::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.product_id)
}
#if LANG_CXX11
void ClickInfo::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.product_id)
}
#endif
void ClickInfo::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.product_id)
}
void ClickInfo::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.product_id)
}
::std::string* ClickInfo::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClickInfo::release_product_id() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClickInfo::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.product_id)
}

// optional uint64 time = 2;
bool ClickInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ClickInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
void ClickInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void ClickInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 ClickInfo::time() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.time)
  return time_;
}
void ClickInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.time)
}

// optional string category = 3;
bool ClickInfo::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClickInfo::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
void ClickInfo::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClickInfo::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category();
}
const ::std::string& ClickInfo::category() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.category)
  return category_.GetNoArena();
}
void ClickInfo::set_category(const ::std::string& value) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.category)
}
#if LANG_CXX11
void ClickInfo::set_category(::std::string&& value) {
  set_has_category();
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.category)
}
#endif
void ClickInfo::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.category)
}
void ClickInfo::set_category(const char* value, size_t size) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.category)
}
::std::string* ClickInfo::mutable_category() {
  set_has_category();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClickInfo::release_category() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.category)
  clear_has_category();
  return category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClickInfo::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    set_has_category();
  } else {
    clear_has_category();
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.category)
}

// optional string subcategory = 4;
bool ClickInfo::has_subcategory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClickInfo::set_has_subcategory() {
  _has_bits_[0] |= 0x00000004u;
}
void ClickInfo::clear_has_subcategory() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClickInfo::clear_subcategory() {
  subcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcategory();
}
const ::std::string& ClickInfo::subcategory() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.subcategory)
  return subcategory_.GetNoArena();
}
void ClickInfo::set_subcategory(const ::std::string& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.subcategory)
}
#if LANG_CXX11
void ClickInfo::set_subcategory(::std::string&& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.subcategory)
}
#endif
void ClickInfo::set_subcategory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.subcategory)
}
void ClickInfo::set_subcategory(const char* value, size_t size) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.subcategory)
}
::std::string* ClickInfo::mutable_subcategory() {
  set_has_subcategory();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.subcategory)
  return subcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClickInfo::release_subcategory() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.subcategory)
  clear_has_subcategory();
  return subcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClickInfo::set_allocated_subcategory(::std::string* subcategory) {
  if (subcategory != NULL) {
    set_has_subcategory();
  } else {
    clear_has_subcategory();
  }
  subcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcategory);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.subcategory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.UserInfo)
}

void UserInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_uid()) {
    GOOGLE_DCHECK(!uid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*uid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "youla.carusel.pb.UserInfo.uid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.UserInfo.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.UserInfo.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.UserInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid()) {
    set_has_uid();
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  uid_.Swap(&other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// required string uid = 1;
bool UserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void UserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserInfo::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
const ::std::string& UserInfo::uid() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.UserInfo.uid)
  return uid_.GetNoArena();
}
void UserInfo::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.UserInfo.uid)
}
#if LANG_CXX11
void UserInfo::set_uid(::std::string&& value) {
  set_has_uid();
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.UserInfo.uid)
}
#endif
void UserInfo::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.UserInfo.uid)
}
void UserInfo::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.UserInfo.uid)
}
::std::string* UserInfo::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.UserInfo.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_uid() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.UserInfo.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.UserInfo.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YoulaClicksForCarusel::kClickInfoFieldNumber;
const int YoulaClicksForCarusel::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YoulaClicksForCarusel::YoulaClicksForCarusel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.YoulaClicksForCarusel)
}
YoulaClicksForCarusel::YoulaClicksForCarusel(const YoulaClicksForCarusel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      click_info_(from.click_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::youla::carusel::pb::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.YoulaClicksForCarusel)
}

void YoulaClicksForCarusel::SharedCtor() {
  _cached_size_ = 0;
  user_info_ = NULL;
}

YoulaClicksForCarusel::~YoulaClicksForCarusel() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.YoulaClicksForCarusel)
  SharedDtor();
}

void YoulaClicksForCarusel::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void YoulaClicksForCarusel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YoulaClicksForCarusel::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YoulaClicksForCarusel& YoulaClicksForCarusel::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

YoulaClicksForCarusel* YoulaClicksForCarusel::New(::google::protobuf::Arena* arena) const {
  YoulaClicksForCarusel* n = new YoulaClicksForCarusel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YoulaClicksForCarusel::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.YoulaClicksForCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  click_info_.Clear();
  if (has_user_info()) {
    GOOGLE_DCHECK(user_info_ != NULL);
    user_info_->::youla::carusel::pb::UserInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YoulaClicksForCarusel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.YoulaClicksForCarusel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .youla.carusel.pb.ClickInfo click_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_click_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .youla.carusel.pb.UserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.YoulaClicksForCarusel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.YoulaClicksForCarusel)
  return false;
#undef DO_
}

void YoulaClicksForCarusel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.YoulaClicksForCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.carusel.pb.ClickInfo click_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->click_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->click_info(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .youla.carusel.pb.UserInfo user_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.YoulaClicksForCarusel)
}

::google::protobuf::uint8* YoulaClicksForCarusel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.YoulaClicksForCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.carusel.pb.ClickInfo click_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->click_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->click_info(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .youla.carusel.pb.UserInfo user_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.YoulaClicksForCarusel)
  return target;
}

size_t YoulaClicksForCarusel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.YoulaClicksForCarusel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .youla.carusel.pb.ClickInfo click_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->click_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->click_info(static_cast<int>(i)));
    }
  }

  // optional .youla.carusel.pb.UserInfo user_info = 2;
  if (has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YoulaClicksForCarusel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.YoulaClicksForCarusel)
  GOOGLE_DCHECK_NE(&from, this);
  const YoulaClicksForCarusel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YoulaClicksForCarusel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.YoulaClicksForCarusel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.YoulaClicksForCarusel)
    MergeFrom(*source);
  }
}

void YoulaClicksForCarusel::MergeFrom(const YoulaClicksForCarusel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.YoulaClicksForCarusel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  click_info_.MergeFrom(from.click_info_);
  if (from.has_user_info()) {
    mutable_user_info()->::youla::carusel::pb::UserInfo::MergeFrom(from.user_info());
  }
}

void YoulaClicksForCarusel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.YoulaClicksForCarusel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YoulaClicksForCarusel::CopyFrom(const YoulaClicksForCarusel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.YoulaClicksForCarusel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoulaClicksForCarusel::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->click_info())) return false;
  if (has_user_info()) {
    if (!this->user_info_->IsInitialized()) return false;
  }
  return true;
}

void YoulaClicksForCarusel::Swap(YoulaClicksForCarusel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YoulaClicksForCarusel::InternalSwap(YoulaClicksForCarusel* other) {
  using std::swap;
  click_info_.InternalSwap(&other->click_info_);
  swap(user_info_, other->user_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YoulaClicksForCarusel::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YoulaClicksForCarusel

// repeated .youla.carusel.pb.ClickInfo click_info = 1;
int YoulaClicksForCarusel::click_info_size() const {
  return click_info_.size();
}
void YoulaClicksForCarusel::clear_click_info() {
  click_info_.Clear();
}
const ::youla::carusel::pb::ClickInfo& YoulaClicksForCarusel::click_info(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Get(index);
}
::youla::carusel::pb::ClickInfo* YoulaClicksForCarusel::mutable_click_info(int index) {
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Mutable(index);
}
::youla::carusel::pb::ClickInfo* YoulaClicksForCarusel::add_click_info() {
  // @@protoc_insertion_point(field_add:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >*
YoulaClicksForCarusel::mutable_click_info() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return &click_info_;
}
const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >&
YoulaClicksForCarusel::click_info() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_;
}

// optional .youla.carusel.pb.UserInfo user_info = 2;
bool YoulaClicksForCarusel::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YoulaClicksForCarusel::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
void YoulaClicksForCarusel::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void YoulaClicksForCarusel::clear_user_info() {
  if (user_info_ != NULL) user_info_->::youla::carusel::pb::UserInfo::Clear();
  clear_has_user_info();
}
const ::youla::carusel::pb::UserInfo& YoulaClicksForCarusel::user_info() const {
  const ::youla::carusel::pb::UserInfo* p = user_info_;
  // @@protoc_insertion_point(field_get:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::youla::carusel::pb::UserInfo*>(
      &::youla::carusel::pb::_UserInfo_default_instance_);
}
::youla::carusel::pb::UserInfo* YoulaClicksForCarusel::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::youla::carusel::pb::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  return user_info_;
}
::youla::carusel::pb::UserInfo* YoulaClicksForCarusel::release_user_info() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  clear_has_user_info();
  ::youla::carusel::pb::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
void YoulaClicksForCarusel::set_allocated_user_info(::youla::carusel::pb::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.YoulaClicksForCarusel.user_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaruselInfo::kSubcategoryFieldNumber;
const int CaruselInfo::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaruselInfo::CaruselInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.CaruselInfo)
}
CaruselInfo::CaruselInfo(const CaruselInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subcategory()) {
    subcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.CaruselInfo)
}

void CaruselInfo::SharedCtor() {
  _cached_size_ = 0;
  subcategory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
}

CaruselInfo::~CaruselInfo() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.CaruselInfo)
  SharedDtor();
}

void CaruselInfo::SharedDtor() {
  subcategory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CaruselInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaruselInfo::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CaruselInfo& CaruselInfo::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

CaruselInfo* CaruselInfo::New(::google::protobuf::Arena* arena) const {
  CaruselInfo* n = new CaruselInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CaruselInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.CaruselInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_subcategory()) {
    GOOGLE_DCHECK(!subcategory_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*subcategory_.UnsafeRawStringPointer())->clear();
  }
  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CaruselInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.CaruselInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string subcategory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subcategory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subcategory().data(), static_cast<int>(this->subcategory().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "youla.carusel.pb.CaruselInfo.subcategory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.CaruselInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.CaruselInfo)
  return false;
#undef DO_
}

void CaruselInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.CaruselInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string subcategory = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory().data(), static_cast<int>(this->subcategory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.CaruselInfo.subcategory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subcategory(), output);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.CaruselInfo)
}

::google::protobuf::uint8* CaruselInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.CaruselInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string subcategory = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subcategory().data(), static_cast<int>(this->subcategory().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "youla.carusel.pb.CaruselInfo.subcategory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subcategory(), target);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.CaruselInfo)
  return target;
}

size_t CaruselInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:youla.carusel.pb.CaruselInfo)
  size_t total_size = 0;

  if (has_subcategory()) {
    // required string subcategory = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subcategory());
  }

  if (has_time()) {
    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
size_t CaruselInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.CaruselInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string subcategory = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subcategory());

    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CaruselInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.CaruselInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CaruselInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CaruselInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.CaruselInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.CaruselInfo)
    MergeFrom(*source);
  }
}

void CaruselInfo::MergeFrom(const CaruselInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.CaruselInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_subcategory();
      subcategory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CaruselInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.CaruselInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaruselInfo::CopyFrom(const CaruselInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.CaruselInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaruselInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CaruselInfo::Swap(CaruselInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaruselInfo::InternalSwap(CaruselInfo* other) {
  using std::swap;
  subcategory_.Swap(&other->subcategory_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CaruselInfo::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CaruselInfo

// required string subcategory = 1;
bool CaruselInfo::has_subcategory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CaruselInfo::set_has_subcategory() {
  _has_bits_[0] |= 0x00000001u;
}
void CaruselInfo::clear_has_subcategory() {
  _has_bits_[0] &= ~0x00000001u;
}
void CaruselInfo::clear_subcategory() {
  subcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcategory();
}
const ::std::string& CaruselInfo::subcategory() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.CaruselInfo.subcategory)
  return subcategory_.GetNoArena();
}
void CaruselInfo::set_subcategory(const ::std::string& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.CaruselInfo.subcategory)
}
#if LANG_CXX11
void CaruselInfo::set_subcategory(::std::string&& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.CaruselInfo.subcategory)
}
#endif
void CaruselInfo::set_subcategory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.CaruselInfo.subcategory)
}
void CaruselInfo::set_subcategory(const char* value, size_t size) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.CaruselInfo.subcategory)
}
::std::string* CaruselInfo::mutable_subcategory() {
  set_has_subcategory();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.CaruselInfo.subcategory)
  return subcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CaruselInfo::release_subcategory() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.CaruselInfo.subcategory)
  clear_has_subcategory();
  return subcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CaruselInfo::set_allocated_subcategory(::std::string* subcategory) {
  if (subcategory != NULL) {
    set_has_subcategory();
  } else {
    clear_has_subcategory();
  }
  subcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcategory);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.CaruselInfo.subcategory)
}

// required uint64 time = 2;
bool CaruselInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CaruselInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CaruselInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CaruselInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 CaruselInfo::time() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.CaruselInfo.time)
  return time_;
}
void CaruselInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:youla.carusel.pb.CaruselInfo.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletedCarusel::kCaruselInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletedCarusel::DeletedCarusel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.DeletedCarusel)
}
DeletedCarusel::DeletedCarusel(const DeletedCarusel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      carusel_info_(from.carusel_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.DeletedCarusel)
}

void DeletedCarusel::SharedCtor() {
  _cached_size_ = 0;
}

DeletedCarusel::~DeletedCarusel() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.DeletedCarusel)
  SharedDtor();
}

void DeletedCarusel::SharedDtor() {
}

void DeletedCarusel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeletedCarusel::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletedCarusel& DeletedCarusel::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeletedCarusel* DeletedCarusel::New(::google::protobuf::Arena* arena) const {
  DeletedCarusel* n = new DeletedCarusel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeletedCarusel::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.DeletedCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  carusel_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeletedCarusel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.DeletedCarusel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_carusel_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.DeletedCarusel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.DeletedCarusel)
  return false;
#undef DO_
}

void DeletedCarusel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.DeletedCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->carusel_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->carusel_info(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.DeletedCarusel)
}

::google::protobuf::uint8* DeletedCarusel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.DeletedCarusel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->carusel_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->carusel_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.DeletedCarusel)
  return target;
}

size_t DeletedCarusel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.DeletedCarusel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->carusel_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->carusel_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeletedCarusel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.DeletedCarusel)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletedCarusel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletedCarusel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.DeletedCarusel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.DeletedCarusel)
    MergeFrom(*source);
  }
}

void DeletedCarusel::MergeFrom(const DeletedCarusel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.DeletedCarusel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  carusel_info_.MergeFrom(from.carusel_info_);
}

void DeletedCarusel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.DeletedCarusel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletedCarusel::CopyFrom(const DeletedCarusel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.DeletedCarusel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletedCarusel::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->carusel_info())) return false;
  return true;
}

void DeletedCarusel::Swap(DeletedCarusel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletedCarusel::InternalSwap(DeletedCarusel* other) {
  using std::swap;
  carusel_info_.InternalSwap(&other->carusel_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeletedCarusel::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeletedCarusel

// repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
int DeletedCarusel::carusel_info_size() const {
  return carusel_info_.size();
}
void DeletedCarusel::clear_carusel_info() {
  carusel_info_.Clear();
}
const ::youla::carusel::pb::CaruselInfo& DeletedCarusel::carusel_info(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Get(index);
}
::youla::carusel::pb::CaruselInfo* DeletedCarusel::mutable_carusel_info(int index) {
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Mutable(index);
}
::youla::carusel::pb::CaruselInfo* DeletedCarusel::add_carusel_info() {
  // @@protoc_insertion_point(field_add:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >*
DeletedCarusel::mutable_carusel_info() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.DeletedCarusel.carusel_info)
  return &carusel_info_;
}
const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >&
DeletedCarusel::carusel_info() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubcategoryIds::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubcategoryIds::SubcategoryIds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fcarusel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.carusel.pb.SubcategoryIds)
}
SubcategoryIds::SubcategoryIds(const SubcategoryIds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youla.carusel.pb.SubcategoryIds)
}

void SubcategoryIds::SharedCtor() {
  _cached_size_ = 0;
}

SubcategoryIds::~SubcategoryIds() {
  // @@protoc_insertion_point(destructor:youla.carusel.pb.SubcategoryIds)
  SharedDtor();
}

void SubcategoryIds::SharedDtor() {
}

void SubcategoryIds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubcategoryIds::descriptor() {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubcategoryIds& SubcategoryIds::default_instance() {
  protobuf_youla_5fcarusel_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubcategoryIds* SubcategoryIds::New(::google::protobuf::Arena* arena) const {
  SubcategoryIds* n = new SubcategoryIds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubcategoryIds::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.carusel.pb.SubcategoryIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubcategoryIds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.carusel.pb.SubcategoryIds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.carusel.pb.SubcategoryIds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.carusel.pb.SubcategoryIds)
  return false;
#undef DO_
}

void SubcategoryIds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.carusel.pb.SubcategoryIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.carusel.pb.SubcategoryIds)
}

::google::protobuf::uint8* SubcategoryIds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.carusel.pb.SubcategoryIds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 values = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->values_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.carusel.pb.SubcategoryIds)
  return target;
}

size_t SubcategoryIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.carusel.pb.SubcategoryIds)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 values = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->values_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->values_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubcategoryIds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.carusel.pb.SubcategoryIds)
  GOOGLE_DCHECK_NE(&from, this);
  const SubcategoryIds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubcategoryIds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.carusel.pb.SubcategoryIds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.carusel.pb.SubcategoryIds)
    MergeFrom(*source);
  }
}

void SubcategoryIds::MergeFrom(const SubcategoryIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.carusel.pb.SubcategoryIds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void SubcategoryIds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.carusel.pb.SubcategoryIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubcategoryIds::CopyFrom(const SubcategoryIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.carusel.pb.SubcategoryIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubcategoryIds::IsInitialized() const {
  return true;
}

void SubcategoryIds::Swap(SubcategoryIds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubcategoryIds::InternalSwap(SubcategoryIds* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubcategoryIds::GetMetadata() const {
  protobuf_youla_5fcarusel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fcarusel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubcategoryIds

// repeated uint64 values = 1;
int SubcategoryIds::values_size() const {
  return values_.size();
}
void SubcategoryIds::clear_values() {
  values_.Clear();
}
::google::protobuf::uint64 SubcategoryIds::values(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.SubcategoryIds.values)
  return values_.Get(index);
}
void SubcategoryIds::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.SubcategoryIds.values)
}
void SubcategoryIds::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:youla.carusel.pb.SubcategoryIds.values)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SubcategoryIds::values() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.SubcategoryIds.values)
  return values_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SubcategoryIds::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.SubcategoryIds.values)
  return &values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace carusel
}  // namespace youla

// @@protoc_insertion_point(global_scope)
