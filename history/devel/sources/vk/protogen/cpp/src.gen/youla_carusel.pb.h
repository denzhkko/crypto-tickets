// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_carusel.proto

#ifndef PROTOBUF_youla_5fcarusel_2eproto__INCLUDED
#define PROTOBUF_youla_5fcarusel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace youla {
namespace carusel {
namespace pb {
class CaruselInfo;
class CaruselInfoDefaultTypeInternal;
extern CaruselInfoDefaultTypeInternal _CaruselInfo_default_instance_;
class ClickInfo;
class ClickInfoDefaultTypeInternal;
extern ClickInfoDefaultTypeInternal _ClickInfo_default_instance_;
class DeletedCarusel;
class DeletedCaruselDefaultTypeInternal;
extern DeletedCaruselDefaultTypeInternal _DeletedCarusel_default_instance_;
class SubcategoryIds;
class SubcategoryIdsDefaultTypeInternal;
extern SubcategoryIdsDefaultTypeInternal _SubcategoryIds_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class YoulaClicksForCarusel;
class YoulaClicksForCaruselDefaultTypeInternal;
extern YoulaClicksForCaruselDefaultTypeInternal _YoulaClicksForCarusel_default_instance_;
}  // namespace pb
}  // namespace carusel
}  // namespace youla

namespace youla {
namespace carusel {
namespace pb {

namespace protobuf_youla_5fcarusel_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_youla_5fcarusel_2eproto

// ===================================================================

class ClickInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.ClickInfo) */ {
 public:
  ClickInfo();
  virtual ~ClickInfo();

  ClickInfo(const ClickInfo& from);

  inline ClickInfo& operator=(const ClickInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClickInfo(ClickInfo&& from) noexcept
    : ClickInfo() {
    *this = ::std::move(from);
  }

  inline ClickInfo& operator=(ClickInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClickInfo& default_instance();

  static inline const ClickInfo* internal_default_instance() {
    return reinterpret_cast<const ClickInfo*>(
               &_ClickInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClickInfo* other);
  friend void swap(ClickInfo& a, ClickInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClickInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClickInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClickInfo& from);
  void MergeFrom(const ClickInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClickInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string product_id = 1;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // optional string category = 3;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  #if LANG_CXX11
  void set_category(::std::string&& value);
  #endif
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // optional string subcategory = 4;
  bool has_subcategory() const;
  void clear_subcategory();
  static const int kSubcategoryFieldNumber = 4;
  const ::std::string& subcategory() const;
  void set_subcategory(const ::std::string& value);
  #if LANG_CXX11
  void set_subcategory(::std::string&& value);
  #endif
  void set_subcategory(const char* value);
  void set_subcategory(const char* value, size_t size);
  ::std::string* mutable_subcategory();
  ::std::string* release_subcategory();
  void set_allocated_subcategory(::std::string* subcategory);

  // optional uint64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.ClickInfo)
 private:
  void set_has_product_id();
  void clear_has_product_id();
  void set_has_time();
  void clear_has_time();
  void set_has_category();
  void clear_has_category();
  void set_has_subcategory();
  void clear_has_subcategory();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  ::google::protobuf::internal::ArenaStringPtr subcategory_;
  ::google::protobuf::uint64 time_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.UserInfo)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class YoulaClicksForCarusel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.YoulaClicksForCarusel) */ {
 public:
  YoulaClicksForCarusel();
  virtual ~YoulaClicksForCarusel();

  YoulaClicksForCarusel(const YoulaClicksForCarusel& from);

  inline YoulaClicksForCarusel& operator=(const YoulaClicksForCarusel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YoulaClicksForCarusel(YoulaClicksForCarusel&& from) noexcept
    : YoulaClicksForCarusel() {
    *this = ::std::move(from);
  }

  inline YoulaClicksForCarusel& operator=(YoulaClicksForCarusel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YoulaClicksForCarusel& default_instance();

  static inline const YoulaClicksForCarusel* internal_default_instance() {
    return reinterpret_cast<const YoulaClicksForCarusel*>(
               &_YoulaClicksForCarusel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(YoulaClicksForCarusel* other);
  friend void swap(YoulaClicksForCarusel& a, YoulaClicksForCarusel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YoulaClicksForCarusel* New() const PROTOBUF_FINAL { return New(NULL); }

  YoulaClicksForCarusel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YoulaClicksForCarusel& from);
  void MergeFrom(const YoulaClicksForCarusel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YoulaClicksForCarusel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .youla.carusel.pb.ClickInfo click_info = 1;
  int click_info_size() const;
  void clear_click_info();
  static const int kClickInfoFieldNumber = 1;
  const ::youla::carusel::pb::ClickInfo& click_info(int index) const;
  ::youla::carusel::pb::ClickInfo* mutable_click_info(int index);
  ::youla::carusel::pb::ClickInfo* add_click_info();
  ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >*
      mutable_click_info();
  const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >&
      click_info() const;

  // optional .youla.carusel.pb.UserInfo user_info = 2;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  const ::youla::carusel::pb::UserInfo& user_info() const;
  ::youla::carusel::pb::UserInfo* mutable_user_info();
  ::youla::carusel::pb::UserInfo* release_user_info();
  void set_allocated_user_info(::youla::carusel::pb::UserInfo* user_info);

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.YoulaClicksForCarusel)
 private:
  void set_has_user_info();
  void clear_has_user_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo > click_info_;
  ::youla::carusel::pb::UserInfo* user_info_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CaruselInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.CaruselInfo) */ {
 public:
  CaruselInfo();
  virtual ~CaruselInfo();

  CaruselInfo(const CaruselInfo& from);

  inline CaruselInfo& operator=(const CaruselInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CaruselInfo(CaruselInfo&& from) noexcept
    : CaruselInfo() {
    *this = ::std::move(from);
  }

  inline CaruselInfo& operator=(CaruselInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CaruselInfo& default_instance();

  static inline const CaruselInfo* internal_default_instance() {
    return reinterpret_cast<const CaruselInfo*>(
               &_CaruselInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CaruselInfo* other);
  friend void swap(CaruselInfo& a, CaruselInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CaruselInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CaruselInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CaruselInfo& from);
  void MergeFrom(const CaruselInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CaruselInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string subcategory = 1;
  bool has_subcategory() const;
  void clear_subcategory();
  static const int kSubcategoryFieldNumber = 1;
  const ::std::string& subcategory() const;
  void set_subcategory(const ::std::string& value);
  #if LANG_CXX11
  void set_subcategory(::std::string&& value);
  #endif
  void set_subcategory(const char* value);
  void set_subcategory(const char* value, size_t size);
  ::std::string* mutable_subcategory();
  ::std::string* release_subcategory();
  void set_allocated_subcategory(::std::string* subcategory);

  // required uint64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.CaruselInfo)
 private:
  void set_has_subcategory();
  void clear_has_subcategory();
  void set_has_time();
  void clear_has_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr subcategory_;
  ::google::protobuf::uint64 time_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletedCarusel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.DeletedCarusel) */ {
 public:
  DeletedCarusel();
  virtual ~DeletedCarusel();

  DeletedCarusel(const DeletedCarusel& from);

  inline DeletedCarusel& operator=(const DeletedCarusel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletedCarusel(DeletedCarusel&& from) noexcept
    : DeletedCarusel() {
    *this = ::std::move(from);
  }

  inline DeletedCarusel& operator=(DeletedCarusel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletedCarusel& default_instance();

  static inline const DeletedCarusel* internal_default_instance() {
    return reinterpret_cast<const DeletedCarusel*>(
               &_DeletedCarusel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DeletedCarusel* other);
  friend void swap(DeletedCarusel& a, DeletedCarusel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletedCarusel* New() const PROTOBUF_FINAL { return New(NULL); }

  DeletedCarusel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeletedCarusel& from);
  void MergeFrom(const DeletedCarusel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeletedCarusel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
  int carusel_info_size() const;
  void clear_carusel_info();
  static const int kCaruselInfoFieldNumber = 1;
  const ::youla::carusel::pb::CaruselInfo& carusel_info(int index) const;
  ::youla::carusel::pb::CaruselInfo* mutable_carusel_info(int index);
  ::youla::carusel::pb::CaruselInfo* add_carusel_info();
  ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >*
      mutable_carusel_info();
  const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >&
      carusel_info() const;

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.DeletedCarusel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo > carusel_info_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubcategoryIds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youla.carusel.pb.SubcategoryIds) */ {
 public:
  SubcategoryIds();
  virtual ~SubcategoryIds();

  SubcategoryIds(const SubcategoryIds& from);

  inline SubcategoryIds& operator=(const SubcategoryIds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubcategoryIds(SubcategoryIds&& from) noexcept
    : SubcategoryIds() {
    *this = ::std::move(from);
  }

  inline SubcategoryIds& operator=(SubcategoryIds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubcategoryIds& default_instance();

  static inline const SubcategoryIds* internal_default_instance() {
    return reinterpret_cast<const SubcategoryIds*>(
               &_SubcategoryIds_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SubcategoryIds* other);
  friend void swap(SubcategoryIds& a, SubcategoryIds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubcategoryIds* New() const PROTOBUF_FINAL { return New(NULL); }

  SubcategoryIds* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubcategoryIds& from);
  void MergeFrom(const SubcategoryIds& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubcategoryIds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::uint64 values(int index) const;
  void set_values(int index, ::google::protobuf::uint64 value);
  void add_values(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:youla.carusel.pb.SubcategoryIds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;
  friend struct protobuf_youla_5fcarusel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClickInfo

// required string product_id = 1;
inline bool ClickInfo::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClickInfo::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClickInfo::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClickInfo::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
inline const ::std::string& ClickInfo::product_id() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.product_id)
  return product_id_.GetNoArena();
}
inline void ClickInfo::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.product_id)
}
#if LANG_CXX11
inline void ClickInfo::set_product_id(::std::string&& value) {
  set_has_product_id();
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.product_id)
}
#endif
inline void ClickInfo::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.product_id)
}
inline void ClickInfo::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.product_id)
}
inline ::std::string* ClickInfo::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClickInfo::release_product_id() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.product_id)
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClickInfo::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.product_id)
}

// optional uint64 time = 2;
inline bool ClickInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClickInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClickInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClickInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 ClickInfo::time() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.time)
  return time_;
}
inline void ClickInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.time)
}

// optional string category = 3;
inline bool ClickInfo::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClickInfo::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClickInfo::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClickInfo::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category();
}
inline const ::std::string& ClickInfo::category() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.category)
  return category_.GetNoArena();
}
inline void ClickInfo::set_category(const ::std::string& value) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.category)
}
#if LANG_CXX11
inline void ClickInfo::set_category(::std::string&& value) {
  set_has_category();
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.category)
}
#endif
inline void ClickInfo::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.category)
}
inline void ClickInfo::set_category(const char* value, size_t size) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.category)
}
inline ::std::string* ClickInfo::mutable_category() {
  set_has_category();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClickInfo::release_category() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.category)
  clear_has_category();
  return category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClickInfo::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    set_has_category();
  } else {
    clear_has_category();
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.category)
}

// optional string subcategory = 4;
inline bool ClickInfo::has_subcategory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClickInfo::set_has_subcategory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClickInfo::clear_has_subcategory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClickInfo::clear_subcategory() {
  subcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcategory();
}
inline const ::std::string& ClickInfo::subcategory() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.ClickInfo.subcategory)
  return subcategory_.GetNoArena();
}
inline void ClickInfo::set_subcategory(const ::std::string& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.ClickInfo.subcategory)
}
#if LANG_CXX11
inline void ClickInfo::set_subcategory(::std::string&& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.ClickInfo.subcategory)
}
#endif
inline void ClickInfo::set_subcategory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.ClickInfo.subcategory)
}
inline void ClickInfo::set_subcategory(const char* value, size_t size) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.ClickInfo.subcategory)
}
inline ::std::string* ClickInfo::mutable_subcategory() {
  set_has_subcategory();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.ClickInfo.subcategory)
  return subcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClickInfo::release_subcategory() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.ClickInfo.subcategory)
  clear_has_subcategory();
  return subcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClickInfo::set_allocated_subcategory(::std::string* subcategory) {
  if (subcategory != NULL) {
    set_has_subcategory();
  } else {
    clear_has_subcategory();
  }
  subcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcategory);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.ClickInfo.subcategory)
}

// -------------------------------------------------------------------

// UserInfo

// required string uid = 1;
inline bool UserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& UserInfo::uid() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.UserInfo.uid)
  return uid_.GetNoArena();
}
inline void UserInfo::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.UserInfo.uid)
}
#if LANG_CXX11
inline void UserInfo::set_uid(::std::string&& value) {
  set_has_uid();
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.UserInfo.uid)
}
#endif
inline void UserInfo::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.UserInfo.uid)
}
inline void UserInfo::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.UserInfo.uid)
}
inline ::std::string* UserInfo::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.UserInfo.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_uid() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.UserInfo.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.UserInfo.uid)
}

// -------------------------------------------------------------------

// YoulaClicksForCarusel

// repeated .youla.carusel.pb.ClickInfo click_info = 1;
inline int YoulaClicksForCarusel::click_info_size() const {
  return click_info_.size();
}
inline void YoulaClicksForCarusel::clear_click_info() {
  click_info_.Clear();
}
inline const ::youla::carusel::pb::ClickInfo& YoulaClicksForCarusel::click_info(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Get(index);
}
inline ::youla::carusel::pb::ClickInfo* YoulaClicksForCarusel::mutable_click_info(int index) {
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Mutable(index);
}
inline ::youla::carusel::pb::ClickInfo* YoulaClicksForCarusel::add_click_info() {
  // @@protoc_insertion_point(field_add:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >*
YoulaClicksForCarusel::mutable_click_info() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return &click_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::ClickInfo >&
YoulaClicksForCarusel::click_info() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.YoulaClicksForCarusel.click_info)
  return click_info_;
}

// optional .youla.carusel.pb.UserInfo user_info = 2;
inline bool YoulaClicksForCarusel::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YoulaClicksForCarusel::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YoulaClicksForCarusel::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YoulaClicksForCarusel::clear_user_info() {
  if (user_info_ != NULL) user_info_->::youla::carusel::pb::UserInfo::Clear();
  clear_has_user_info();
}
inline const ::youla::carusel::pb::UserInfo& YoulaClicksForCarusel::user_info() const {
  const ::youla::carusel::pb::UserInfo* p = user_info_;
  // @@protoc_insertion_point(field_get:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::youla::carusel::pb::UserInfo*>(
      &::youla::carusel::pb::_UserInfo_default_instance_);
}
inline ::youla::carusel::pb::UserInfo* YoulaClicksForCarusel::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::youla::carusel::pb::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  return user_info_;
}
inline ::youla::carusel::pb::UserInfo* YoulaClicksForCarusel::release_user_info() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.YoulaClicksForCarusel.user_info)
  clear_has_user_info();
  ::youla::carusel::pb::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void YoulaClicksForCarusel::set_allocated_user_info(::youla::carusel::pb::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.YoulaClicksForCarusel.user_info)
}

// -------------------------------------------------------------------

// CaruselInfo

// required string subcategory = 1;
inline bool CaruselInfo::has_subcategory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CaruselInfo::set_has_subcategory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CaruselInfo::clear_has_subcategory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CaruselInfo::clear_subcategory() {
  subcategory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subcategory();
}
inline const ::std::string& CaruselInfo::subcategory() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.CaruselInfo.subcategory)
  return subcategory_.GetNoArena();
}
inline void CaruselInfo::set_subcategory(const ::std::string& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.CaruselInfo.subcategory)
}
#if LANG_CXX11
inline void CaruselInfo::set_subcategory(::std::string&& value) {
  set_has_subcategory();
  subcategory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youla.carusel.pb.CaruselInfo.subcategory)
}
#endif
inline void CaruselInfo::set_subcategory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youla.carusel.pb.CaruselInfo.subcategory)
}
inline void CaruselInfo::set_subcategory(const char* value, size_t size) {
  set_has_subcategory();
  subcategory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youla.carusel.pb.CaruselInfo.subcategory)
}
inline ::std::string* CaruselInfo::mutable_subcategory() {
  set_has_subcategory();
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.CaruselInfo.subcategory)
  return subcategory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CaruselInfo::release_subcategory() {
  // @@protoc_insertion_point(field_release:youla.carusel.pb.CaruselInfo.subcategory)
  clear_has_subcategory();
  return subcategory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CaruselInfo::set_allocated_subcategory(::std::string* subcategory) {
  if (subcategory != NULL) {
    set_has_subcategory();
  } else {
    clear_has_subcategory();
  }
  subcategory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcategory);
  // @@protoc_insertion_point(field_set_allocated:youla.carusel.pb.CaruselInfo.subcategory)
}

// required uint64 time = 2;
inline bool CaruselInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CaruselInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CaruselInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CaruselInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 CaruselInfo::time() const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.CaruselInfo.time)
  return time_;
}
inline void CaruselInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:youla.carusel.pb.CaruselInfo.time)
}

// -------------------------------------------------------------------

// DeletedCarusel

// repeated .youla.carusel.pb.CaruselInfo carusel_info = 1;
inline int DeletedCarusel::carusel_info_size() const {
  return carusel_info_.size();
}
inline void DeletedCarusel::clear_carusel_info() {
  carusel_info_.Clear();
}
inline const ::youla::carusel::pb::CaruselInfo& DeletedCarusel::carusel_info(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Get(index);
}
inline ::youla::carusel::pb::CaruselInfo* DeletedCarusel::mutable_carusel_info(int index) {
  // @@protoc_insertion_point(field_mutable:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Mutable(index);
}
inline ::youla::carusel::pb::CaruselInfo* DeletedCarusel::add_carusel_info() {
  // @@protoc_insertion_point(field_add:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >*
DeletedCarusel::mutable_carusel_info() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.DeletedCarusel.carusel_info)
  return &carusel_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::youla::carusel::pb::CaruselInfo >&
DeletedCarusel::carusel_info() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.DeletedCarusel.carusel_info)
  return carusel_info_;
}

// -------------------------------------------------------------------

// SubcategoryIds

// repeated uint64 values = 1;
inline int SubcategoryIds::values_size() const {
  return values_.size();
}
inline void SubcategoryIds::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 SubcategoryIds::values(int index) const {
  // @@protoc_insertion_point(field_get:youla.carusel.pb.SubcategoryIds.values)
  return values_.Get(index);
}
inline void SubcategoryIds::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:youla.carusel.pb.SubcategoryIds.values)
}
inline void SubcategoryIds::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:youla.carusel.pb.SubcategoryIds.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SubcategoryIds::values() const {
  // @@protoc_insertion_point(field_list:youla.carusel.pb.SubcategoryIds.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SubcategoryIds::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:youla.carusel.pb.SubcategoryIds.values)
  return &values_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace carusel
}  // namespace youla

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youla_5fcarusel_2eproto__INCLUDED
