// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_embed_recom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youla_embed_recom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace youla {
namespace embed_recom {
namespace pb {
class EmbeddingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Embedding>
     _instance;
} _Embedding_default_instance_;
class SubcatWeightDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubcatWeight>
     _instance;
} _SubcatWeight_default_instance_;
class SubcatWeightsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubcatWeights>
     _instance;
} _SubcatWeights_default_instance_;

namespace protobuf_youla_5fembed_5frecom_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, components_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeight, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeight, subcat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeight, weight_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeights, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubcatWeights, weights_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(Embedding)},
  { 7, 14, sizeof(SubcatWeight)},
  { 16, 22, sizeof(SubcatWeights)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Embedding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubcatWeight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubcatWeights_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youla_embed_recom.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Embedding_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Embedding_default_instance_);_SubcatWeight_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubcatWeight_default_instance_);_SubcatWeights_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubcatWeights_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027youla_embed_recom.proto\022\024youla.embed_r"
      "ecom.pb\"\037\n\tEmbedding\022\022\n\ncomponents\030\001 \003(\002"
      "\"1\n\014SubcatWeight\022\021\n\tsubcat_id\030\001 \002(\r\022\016\n\006w"
      "eight\030\002 \002(\002\"D\n\rSubcatWeights\0223\n\007weights\030"
      "\001 \003(\0132\".youla.embed_recom.pb.SubcatWeigh"
      "t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youla_embed_recom.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_youla_5fembed_5frecom_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Embedding::kComponentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Embedding::Embedding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.embed_recom.pb.Embedding)
}
Embedding::Embedding(const Embedding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      components_(from.components_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youla.embed_recom.pb.Embedding)
}

void Embedding::SharedCtor() {
  _cached_size_ = 0;
}

Embedding::~Embedding() {
  // @@protoc_insertion_point(destructor:youla.embed_recom.pb.Embedding)
  SharedDtor();
}

void Embedding::SharedDtor() {
}

void Embedding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Embedding::descriptor() {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Embedding& Embedding::default_instance() {
  protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  return *internal_default_instance();
}

Embedding* Embedding::New(::google::protobuf::Arena* arena) const {
  Embedding* n = new Embedding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Embedding::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.embed_recom.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  components_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Embedding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.embed_recom.pb.Embedding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float components = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_components())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_components())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.embed_recom.pb.Embedding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.embed_recom.pb.Embedding)
  return false;
#undef DO_
}

void Embedding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.embed_recom.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float components = 1;
  for (int i = 0, n = this->components_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->components(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.embed_recom.pb.Embedding)
}

::google::protobuf::uint8* Embedding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.embed_recom.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float components = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->components_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.embed_recom.pb.Embedding)
  return target;
}

size_t Embedding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.embed_recom.pb.Embedding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float components = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->components_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->components_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Embedding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.embed_recom.pb.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  const Embedding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Embedding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.embed_recom.pb.Embedding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.embed_recom.pb.Embedding)
    MergeFrom(*source);
  }
}

void Embedding::MergeFrom(const Embedding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.embed_recom.pb.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  components_.MergeFrom(from.components_);
}

void Embedding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.embed_recom.pb.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Embedding::CopyFrom(const Embedding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.embed_recom.pb.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Embedding::IsInitialized() const {
  return true;
}

void Embedding::Swap(Embedding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Embedding::InternalSwap(Embedding* other) {
  using std::swap;
  components_.InternalSwap(&other->components_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Embedding::GetMetadata() const {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Embedding

// repeated float components = 1;
int Embedding::components_size() const {
  return components_.size();
}
void Embedding::clear_components() {
  components_.Clear();
}
float Embedding::components(int index) const {
  // @@protoc_insertion_point(field_get:youla.embed_recom.pb.Embedding.components)
  return components_.Get(index);
}
void Embedding::set_components(int index, float value) {
  components_.Set(index, value);
  // @@protoc_insertion_point(field_set:youla.embed_recom.pb.Embedding.components)
}
void Embedding::add_components(float value) {
  components_.Add(value);
  // @@protoc_insertion_point(field_add:youla.embed_recom.pb.Embedding.components)
}
const ::google::protobuf::RepeatedField< float >&
Embedding::components() const {
  // @@protoc_insertion_point(field_list:youla.embed_recom.pb.Embedding.components)
  return components_;
}
::google::protobuf::RepeatedField< float >*
Embedding::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:youla.embed_recom.pb.Embedding.components)
  return &components_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubcatWeight::kSubcatIdFieldNumber;
const int SubcatWeight::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubcatWeight::SubcatWeight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.embed_recom.pb.SubcatWeight)
}
SubcatWeight::SubcatWeight(const SubcatWeight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&subcat_id_, &from.subcat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&subcat_id_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:youla.embed_recom.pb.SubcatWeight)
}

void SubcatWeight::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&subcat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&subcat_id_)) + sizeof(weight_));
}

SubcatWeight::~SubcatWeight() {
  // @@protoc_insertion_point(destructor:youla.embed_recom.pb.SubcatWeight)
  SharedDtor();
}

void SubcatWeight::SharedDtor() {
}

void SubcatWeight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubcatWeight::descriptor() {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubcatWeight& SubcatWeight::default_instance() {
  protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubcatWeight* SubcatWeight::New(::google::protobuf::Arena* arena) const {
  SubcatWeight* n = new SubcatWeight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubcatWeight::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.embed_recom.pb.SubcatWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&subcat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weight_) -
        reinterpret_cast<char*>(&subcat_id_)) + sizeof(weight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubcatWeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.embed_recom.pb.SubcatWeight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 subcat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subcat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subcat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.embed_recom.pb.SubcatWeight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.embed_recom.pb.SubcatWeight)
  return false;
#undef DO_
}

void SubcatWeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.embed_recom.pb.SubcatWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 subcat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->subcat_id(), output);
  }

  // required float weight = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.embed_recom.pb.SubcatWeight)
}

::google::protobuf::uint8* SubcatWeight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.embed_recom.pb.SubcatWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 subcat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->subcat_id(), target);
  }

  // required float weight = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.embed_recom.pb.SubcatWeight)
  return target;
}

size_t SubcatWeight::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:youla.embed_recom.pb.SubcatWeight)
  size_t total_size = 0;

  if (has_subcat_id()) {
    // required uint32 subcat_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subcat_id());
  }

  if (has_weight()) {
    // required float weight = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SubcatWeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.embed_recom.pb.SubcatWeight)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 subcat_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subcat_id());

    // required float weight = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubcatWeight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.embed_recom.pb.SubcatWeight)
  GOOGLE_DCHECK_NE(&from, this);
  const SubcatWeight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubcatWeight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.embed_recom.pb.SubcatWeight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.embed_recom.pb.SubcatWeight)
    MergeFrom(*source);
  }
}

void SubcatWeight::MergeFrom(const SubcatWeight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.embed_recom.pb.SubcatWeight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      subcat_id_ = from.subcat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      weight_ = from.weight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SubcatWeight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.embed_recom.pb.SubcatWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubcatWeight::CopyFrom(const SubcatWeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.embed_recom.pb.SubcatWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubcatWeight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SubcatWeight::Swap(SubcatWeight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubcatWeight::InternalSwap(SubcatWeight* other) {
  using std::swap;
  swap(subcat_id_, other->subcat_id_);
  swap(weight_, other->weight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubcatWeight::GetMetadata() const {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubcatWeight

// required uint32 subcat_id = 1;
bool SubcatWeight::has_subcat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubcatWeight::set_has_subcat_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SubcatWeight::clear_has_subcat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubcatWeight::clear_subcat_id() {
  subcat_id_ = 0u;
  clear_has_subcat_id();
}
::google::protobuf::uint32 SubcatWeight::subcat_id() const {
  // @@protoc_insertion_point(field_get:youla.embed_recom.pb.SubcatWeight.subcat_id)
  return subcat_id_;
}
void SubcatWeight::set_subcat_id(::google::protobuf::uint32 value) {
  set_has_subcat_id();
  subcat_id_ = value;
  // @@protoc_insertion_point(field_set:youla.embed_recom.pb.SubcatWeight.subcat_id)
}

// required float weight = 2;
bool SubcatWeight::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubcatWeight::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void SubcatWeight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubcatWeight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
float SubcatWeight::weight() const {
  // @@protoc_insertion_point(field_get:youla.embed_recom.pb.SubcatWeight.weight)
  return weight_;
}
void SubcatWeight::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:youla.embed_recom.pb.SubcatWeight.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubcatWeights::kWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubcatWeights::SubcatWeights()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youla.embed_recom.pb.SubcatWeights)
}
SubcatWeights::SubcatWeights(const SubcatWeights& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      weights_(from.weights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youla.embed_recom.pb.SubcatWeights)
}

void SubcatWeights::SharedCtor() {
  _cached_size_ = 0;
}

SubcatWeights::~SubcatWeights() {
  // @@protoc_insertion_point(destructor:youla.embed_recom.pb.SubcatWeights)
  SharedDtor();
}

void SubcatWeights::SharedDtor() {
}

void SubcatWeights::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubcatWeights::descriptor() {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubcatWeights& SubcatWeights::default_instance() {
  protobuf_youla_5fembed_5frecom_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubcatWeights* SubcatWeights::New(::google::protobuf::Arena* arena) const {
  SubcatWeights* n = new SubcatWeights;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubcatWeights::Clear() {
// @@protoc_insertion_point(message_clear_start:youla.embed_recom.pb.SubcatWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubcatWeights::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youla.embed_recom.pb.SubcatWeights)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .youla.embed_recom.pb.SubcatWeight weights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youla.embed_recom.pb.SubcatWeights)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youla.embed_recom.pb.SubcatWeights)
  return false;
#undef DO_
}

void SubcatWeights::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youla.embed_recom.pb.SubcatWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.embed_recom.pb.SubcatWeight weights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weights_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->weights(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:youla.embed_recom.pb.SubcatWeights)
}

::google::protobuf::uint8* SubcatWeights::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youla.embed_recom.pb.SubcatWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .youla.embed_recom.pb.SubcatWeight weights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weights_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->weights(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youla.embed_recom.pb.SubcatWeights)
  return target;
}

size_t SubcatWeights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youla.embed_recom.pb.SubcatWeights)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .youla.embed_recom.pb.SubcatWeight weights = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->weights_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weights(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubcatWeights::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youla.embed_recom.pb.SubcatWeights)
  GOOGLE_DCHECK_NE(&from, this);
  const SubcatWeights* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubcatWeights>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youla.embed_recom.pb.SubcatWeights)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youla.embed_recom.pb.SubcatWeights)
    MergeFrom(*source);
  }
}

void SubcatWeights::MergeFrom(const SubcatWeights& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youla.embed_recom.pb.SubcatWeights)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
}

void SubcatWeights::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youla.embed_recom.pb.SubcatWeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubcatWeights::CopyFrom(const SubcatWeights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youla.embed_recom.pb.SubcatWeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubcatWeights::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->weights())) return false;
  return true;
}

void SubcatWeights::Swap(SubcatWeights* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubcatWeights::InternalSwap(SubcatWeights* other) {
  using std::swap;
  weights_.InternalSwap(&other->weights_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubcatWeights::GetMetadata() const {
  protobuf_youla_5fembed_5frecom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fembed_5frecom_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubcatWeights

// repeated .youla.embed_recom.pb.SubcatWeight weights = 1;
int SubcatWeights::weights_size() const {
  return weights_.size();
}
void SubcatWeights::clear_weights() {
  weights_.Clear();
}
const ::youla::embed_recom::pb::SubcatWeight& SubcatWeights::weights(int index) const {
  // @@protoc_insertion_point(field_get:youla.embed_recom.pb.SubcatWeights.weights)
  return weights_.Get(index);
}
::youla::embed_recom::pb::SubcatWeight* SubcatWeights::mutable_weights(int index) {
  // @@protoc_insertion_point(field_mutable:youla.embed_recom.pb.SubcatWeights.weights)
  return weights_.Mutable(index);
}
::youla::embed_recom::pb::SubcatWeight* SubcatWeights::add_weights() {
  // @@protoc_insertion_point(field_add:youla.embed_recom.pb.SubcatWeights.weights)
  return weights_.Add();
}
::google::protobuf::RepeatedPtrField< ::youla::embed_recom::pb::SubcatWeight >*
SubcatWeights::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:youla.embed_recom.pb.SubcatWeights.weights)
  return &weights_;
}
const ::google::protobuf::RepeatedPtrField< ::youla::embed_recom::pb::SubcatWeight >&
SubcatWeights::weights() const {
  // @@protoc_insertion_point(field_list:youla.embed_recom.pb.SubcatWeights.weights)
  return weights_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace embed_recom
}  // namespace youla

// @@protoc_insertion_point(global_scope)
