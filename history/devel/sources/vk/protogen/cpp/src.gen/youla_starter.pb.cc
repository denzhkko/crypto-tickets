// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_starter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youla_starter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
class YoulaQueryDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YoulaQueryData>
     _instance;
} _YoulaQueryData_default_instance_;
class UserQueriesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserQueries>
     _instance;
} _UserQueries_default_instance_;
class MatchEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchEntry>
     _instance;
} _MatchEntry_default_instance_;
class MatchRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchRecord>
     _instance;
} _MatchRecord_default_instance_;
class MatchOK2VIDEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchOK2VIDEntry>
     _instance;
} _MatchOK2VIDEntry_default_instance_;
class MatchOK2VIDRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchOK2VIDRecord>
     _instance;
} _MatchOK2VIDRecord_default_instance_;
class UidInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UidInfo>
     _instance;
} _UidInfo_default_instance_;
class UserCoordinatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserCoordinates>
     _instance;
} _UserCoordinates_default_instance_;
class UserInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
     _instance;
} _UserInfo_default_instance_;
class InterestsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Interests>
     _instance;
} _Interests_default_instance_;

namespace protobuf_youla_5fstarter_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YoulaQueryData, ttl_),
  1,
  0,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserQueries, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserQueries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserQueries, queries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchEntry, liru_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchEntry, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchRecord, matches_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDEntry, vid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDEntry, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOK2VIDRecord, matches_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, date_updated_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidInfo, date_now_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserCoordinates, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserCoordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserCoordinates, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserCoordinates, latitude_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, last_visit_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, coordinates_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interests, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interests, queries_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(YoulaQueryData)},
  { 13, 19, sizeof(UserQueries)},
  { 20, 27, sizeof(MatchEntry)},
  { 29, 35, sizeof(MatchRecord)},
  { 36, 43, sizeof(MatchOK2VIDEntry)},
  { 45, 51, sizeof(MatchOK2VIDRecord)},
  { 52, 61, sizeof(UidInfo)},
  { 65, 72, sizeof(UserCoordinates)},
  { 74, 81, sizeof(UserInfo)},
  { 83, 89, sizeof(Interests)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_YoulaQueryData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserQueries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchOK2VIDEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchOK2VIDRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UidInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserCoordinates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Interests_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youla_starter.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _YoulaQueryData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YoulaQueryData_default_instance_);_UserQueries_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserQueries_default_instance_);_MatchEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchEntry_default_instance_);_MatchRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchRecord_default_instance_);_MatchOK2VIDEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchOK2VIDEntry_default_instance_);_MatchOK2VIDRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchOK2VIDRecord_default_instance_);_UidInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UidInfo_default_instance_);_UserCoordinates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserCoordinates_default_instance_);_UserInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserInfo_default_instance_);_Interests_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Interests_default_instance_);_UserInfo_default_instance_._instance.get_mutable()->coordinates_ = const_cast< ::pb::UserCoordinates*>(
      ::pb::UserCoordinates::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023youla_starter.proto\022\002pb\"\363\001\n\016YoulaQuery"
      "Data\022\014\n\004time\030\001 \002(\004\022\014\n\004text\030\002 \002(\t\0222\n\013sour"
      "ce_type\030\003 \001(\0162\035.pb.YoulaQueryData.Source"
      "Type\022\013\n\003ttl\030\004 \001(\004\"\203\001\n\nSourceType\022\023\n\017othe"
      "r_interests\020\000\022\022\n\016auto_interests\020\001\022\032\n\026use"
      "r_queries_interests\020\002\022\030\n\024commercial_inte"
      "rests\020\003\022\026\n\022shopping_interests\020\004\"2\n\013UserQ"
      "ueries\022#\n\007queries\030\001 \003(\0132\022.pb.YoulaQueryD"
      "ata\"(\n\nMatchEntry\022\014\n\004liru\030\001 \002(\t\022\014\n\004time\030"
      "\002 \002(\004\".\n\013MatchRecord\022\037\n\007matches\030\001 \003(\0132\016."
      "pb.MatchEntry\"-\n\020MatchOK2VIDEntry\022\013\n\003vid"
      "\030\001 \002(\t\022\014\n\004time\030\002 \002(\004\":\n\021MatchOK2VIDRecor"
      "d\022%\n\007matches\030\001 \003(\0132\024.pb.MatchOK2VIDEntry"
      "\"N\n\007UidInfo\022\014\n\004seed\030\001 \002(\004\022\n\n\002ts\030\002 \002(\004\022\027\n"
      "\017date_updated_to\030\003 \001(\004\022\020\n\010date_now\030\004 \002(\004"
      "\"6\n\017UserCoordinates\022\021\n\tlongitude\030\001 \002(\002\022\020"
      "\n\010latitude\030\002 \002(\002\"K\n\010UserInfo\022\025\n\rlast_vis"
      "it_ts\030\001 \002(\004\022(\n\013coordinates\030\002 \001(\0132\023.pb.Us"
      "erCoordinates\"\034\n\tInterests\022\017\n\007queries\030\001 "
      "\003(\tB\016B\014YoulaStarter"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 779);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youla_starter.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_youla_5fstarter_2eproto

const ::google::protobuf::EnumDescriptor* YoulaQueryData_SourceType_descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_enum_descriptors[0];
}
bool YoulaQueryData_SourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YoulaQueryData_SourceType YoulaQueryData::other_interests;
const YoulaQueryData_SourceType YoulaQueryData::auto_interests;
const YoulaQueryData_SourceType YoulaQueryData::user_queries_interests;
const YoulaQueryData_SourceType YoulaQueryData::commercial_interests;
const YoulaQueryData_SourceType YoulaQueryData::shopping_interests;
const YoulaQueryData_SourceType YoulaQueryData::SourceType_MIN;
const YoulaQueryData_SourceType YoulaQueryData::SourceType_MAX;
const int YoulaQueryData::SourceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YoulaQueryData::kTimeFieldNumber;
const int YoulaQueryData::kTextFieldNumber;
const int YoulaQueryData::kSourceTypeFieldNumber;
const int YoulaQueryData::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YoulaQueryData::YoulaQueryData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.YoulaQueryData)
}
YoulaQueryData::YoulaQueryData(const YoulaQueryData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(source_type_));
  // @@protoc_insertion_point(copy_constructor:pb.YoulaQueryData)
}

void YoulaQueryData::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_type_) -
      reinterpret_cast<char*>(&time_)) + sizeof(source_type_));
}

YoulaQueryData::~YoulaQueryData() {
  // @@protoc_insertion_point(destructor:pb.YoulaQueryData)
  SharedDtor();
}

void YoulaQueryData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YoulaQueryData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YoulaQueryData::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YoulaQueryData& YoulaQueryData::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

YoulaQueryData* YoulaQueryData::New(::google::protobuf::Arena* arena) const {
  YoulaQueryData* n = new YoulaQueryData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YoulaQueryData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.YoulaQueryData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&source_type_) -
        reinterpret_cast<char*>(&time_)) + sizeof(source_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YoulaQueryData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.YoulaQueryData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.YoulaQueryData.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.YoulaQueryData.SourceType source_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::YoulaQueryData_SourceType_IsValid(value)) {
            set_source_type(static_cast< ::pb::YoulaQueryData_SourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ttl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ttl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.YoulaQueryData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.YoulaQueryData)
  return false;
#undef DO_
}

void YoulaQueryData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.YoulaQueryData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.YoulaQueryData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional .pb.YoulaQueryData.SourceType source_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->source_type(), output);
  }

  // optional uint64 ttl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ttl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.YoulaQueryData)
}

::google::protobuf::uint8* YoulaQueryData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.YoulaQueryData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 time = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.YoulaQueryData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional .pb.YoulaQueryData.SourceType source_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->source_type(), target);
  }

  // optional uint64 ttl = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ttl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.YoulaQueryData)
  return target;
}

size_t YoulaQueryData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.YoulaQueryData)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_time()) {
    // required uint64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
size_t YoulaQueryData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.YoulaQueryData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required uint64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional uint64 ttl = 4;
    if (has_ttl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ttl());
    }

    // optional .pb.YoulaQueryData.SourceType source_type = 3;
    if (has_source_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YoulaQueryData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.YoulaQueryData)
  GOOGLE_DCHECK_NE(&from, this);
  const YoulaQueryData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YoulaQueryData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.YoulaQueryData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.YoulaQueryData)
    MergeFrom(*source);
  }
}

void YoulaQueryData::MergeFrom(const YoulaQueryData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.YoulaQueryData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000004u) {
      ttl_ = from.ttl_;
    }
    if (cached_has_bits & 0x00000008u) {
      source_type_ = from.source_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YoulaQueryData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.YoulaQueryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YoulaQueryData::CopyFrom(const YoulaQueryData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.YoulaQueryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoulaQueryData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void YoulaQueryData::Swap(YoulaQueryData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YoulaQueryData::InternalSwap(YoulaQueryData* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(time_, other->time_);
  swap(ttl_, other->ttl_);
  swap(source_type_, other->source_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YoulaQueryData::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YoulaQueryData

// required uint64 time = 1;
bool YoulaQueryData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YoulaQueryData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void YoulaQueryData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void YoulaQueryData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 YoulaQueryData::time() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.time)
  return time_;
}
void YoulaQueryData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.time)
}

// required string text = 2;
bool YoulaQueryData::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YoulaQueryData::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void YoulaQueryData::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void YoulaQueryData::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& YoulaQueryData::text() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.text)
  return text_.GetNoArena();
}
void YoulaQueryData::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.text)
}
#if LANG_CXX11
void YoulaQueryData::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.YoulaQueryData.text)
}
#endif
void YoulaQueryData::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.YoulaQueryData.text)
}
void YoulaQueryData::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.YoulaQueryData.text)
}
::std::string* YoulaQueryData::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pb.YoulaQueryData.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YoulaQueryData::release_text() {
  // @@protoc_insertion_point(field_release:pb.YoulaQueryData.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YoulaQueryData::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.YoulaQueryData.text)
}

// optional .pb.YoulaQueryData.SourceType source_type = 3;
bool YoulaQueryData::has_source_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YoulaQueryData::set_has_source_type() {
  _has_bits_[0] |= 0x00000008u;
}
void YoulaQueryData::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void YoulaQueryData::clear_source_type() {
  source_type_ = 0;
  clear_has_source_type();
}
::pb::YoulaQueryData_SourceType YoulaQueryData::source_type() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.source_type)
  return static_cast< ::pb::YoulaQueryData_SourceType >(source_type_);
}
void YoulaQueryData::set_source_type(::pb::YoulaQueryData_SourceType value) {
  assert(::pb::YoulaQueryData_SourceType_IsValid(value));
  set_has_source_type();
  source_type_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.source_type)
}

// optional uint64 ttl = 4;
bool YoulaQueryData::has_ttl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YoulaQueryData::set_has_ttl() {
  _has_bits_[0] |= 0x00000004u;
}
void YoulaQueryData::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000004u;
}
void YoulaQueryData::clear_ttl() {
  ttl_ = GOOGLE_ULONGLONG(0);
  clear_has_ttl();
}
::google::protobuf::uint64 YoulaQueryData::ttl() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.ttl)
  return ttl_;
}
void YoulaQueryData::set_ttl(::google::protobuf::uint64 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.ttl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserQueries::kQueriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserQueries::UserQueries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UserQueries)
}
UserQueries::UserQueries(const UserQueries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      queries_(from.queries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.UserQueries)
}

void UserQueries::SharedCtor() {
  _cached_size_ = 0;
}

UserQueries::~UserQueries() {
  // @@protoc_insertion_point(destructor:pb.UserQueries)
  SharedDtor();
}

void UserQueries::SharedDtor() {
}

void UserQueries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserQueries::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserQueries& UserQueries::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserQueries* UserQueries::New(::google::protobuf::Arena* arena) const {
  UserQueries* n = new UserQueries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserQueries::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UserQueries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserQueries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UserQueries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.YoulaQueryData queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UserQueries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UserQueries)
  return false;
#undef DO_
}

void UserQueries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UserQueries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.YoulaQueryData queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->queries(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.UserQueries)
}

::google::protobuf::uint8* UserQueries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.UserQueries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.YoulaQueryData queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->queries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.UserQueries)
  return target;
}

size_t UserQueries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UserQueries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pb.YoulaQueryData queries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->queries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserQueries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UserQueries)
  GOOGLE_DCHECK_NE(&from, this);
  const UserQueries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserQueries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UserQueries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UserQueries)
    MergeFrom(*source);
  }
}

void UserQueries::MergeFrom(const UserQueries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UserQueries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
}

void UserQueries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UserQueries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserQueries::CopyFrom(const UserQueries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UserQueries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserQueries::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->queries())) return false;
  return true;
}

void UserQueries::Swap(UserQueries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserQueries::InternalSwap(UserQueries* other) {
  using std::swap;
  queries_.InternalSwap(&other->queries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserQueries::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserQueries

// repeated .pb.YoulaQueryData queries = 1;
int UserQueries::queries_size() const {
  return queries_.size();
}
void UserQueries::clear_queries() {
  queries_.Clear();
}
const ::pb::YoulaQueryData& UserQueries::queries(int index) const {
  // @@protoc_insertion_point(field_get:pb.UserQueries.queries)
  return queries_.Get(index);
}
::pb::YoulaQueryData* UserQueries::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:pb.UserQueries.queries)
  return queries_.Mutable(index);
}
::pb::YoulaQueryData* UserQueries::add_queries() {
  // @@protoc_insertion_point(field_add:pb.UserQueries.queries)
  return queries_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >*
UserQueries::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:pb.UserQueries.queries)
  return &queries_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >&
UserQueries::queries() const {
  // @@protoc_insertion_point(field_list:pb.UserQueries.queries)
  return queries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchEntry::kLiruFieldNumber;
const int MatchEntry::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchEntry::MatchEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MatchEntry)
}
MatchEntry::MatchEntry(const MatchEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  liru_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_liru()) {
    liru_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liru_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:pb.MatchEntry)
}

void MatchEntry::SharedCtor() {
  _cached_size_ = 0;
  liru_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
}

MatchEntry::~MatchEntry() {
  // @@protoc_insertion_point(destructor:pb.MatchEntry)
  SharedDtor();
}

void MatchEntry::SharedDtor() {
  liru_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchEntry::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchEntry& MatchEntry::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchEntry* MatchEntry::New(::google::protobuf::Arena* arena) const {
  MatchEntry* n = new MatchEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_liru()) {
    GOOGLE_DCHECK(!liru_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*liru_.UnsafeRawStringPointer())->clear();
  }
  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MatchEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string liru = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liru()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->liru().data(), static_cast<int>(this->liru().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.MatchEntry.liru");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MatchEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MatchEntry)
  return false;
#undef DO_
}

void MatchEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string liru = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->liru().data(), static_cast<int>(this->liru().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.MatchEntry.liru");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->liru(), output);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.MatchEntry)
}

::google::protobuf::uint8* MatchEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.MatchEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string liru = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->liru().data(), static_cast<int>(this->liru().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.MatchEntry.liru");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->liru(), target);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.MatchEntry)
  return target;
}

size_t MatchEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.MatchEntry)
  size_t total_size = 0;

  if (has_liru()) {
    // required string liru = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->liru());
  }

  if (has_time()) {
    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
size_t MatchEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MatchEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string liru = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->liru());

    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MatchEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MatchEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MatchEntry)
    MergeFrom(*source);
  }
}

void MatchEntry::MergeFrom(const MatchEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MatchEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_liru();
      liru_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liru_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MatchEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchEntry::CopyFrom(const MatchEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MatchEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MatchEntry::Swap(MatchEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchEntry::InternalSwap(MatchEntry* other) {
  using std::swap;
  liru_.Swap(&other->liru_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchEntry::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchEntry

// required string liru = 1;
bool MatchEntry::has_liru() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchEntry::set_has_liru() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchEntry::clear_has_liru() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchEntry::clear_liru() {
  liru_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_liru();
}
const ::std::string& MatchEntry::liru() const {
  // @@protoc_insertion_point(field_get:pb.MatchEntry.liru)
  return liru_.GetNoArena();
}
void MatchEntry::set_liru(const ::std::string& value) {
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.MatchEntry.liru)
}
#if LANG_CXX11
void MatchEntry::set_liru(::std::string&& value) {
  set_has_liru();
  liru_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.MatchEntry.liru)
}
#endif
void MatchEntry::set_liru(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.MatchEntry.liru)
}
void MatchEntry::set_liru(const char* value, size_t size) {
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.MatchEntry.liru)
}
::std::string* MatchEntry::mutable_liru() {
  set_has_liru();
  // @@protoc_insertion_point(field_mutable:pb.MatchEntry.liru)
  return liru_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchEntry::release_liru() {
  // @@protoc_insertion_point(field_release:pb.MatchEntry.liru)
  clear_has_liru();
  return liru_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchEntry::set_allocated_liru(::std::string* liru) {
  if (liru != NULL) {
    set_has_liru();
  } else {
    clear_has_liru();
  }
  liru_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liru);
  // @@protoc_insertion_point(field_set_allocated:pb.MatchEntry.liru)
}

// required uint64 time = 2;
bool MatchEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 MatchEntry::time() const {
  // @@protoc_insertion_point(field_get:pb.MatchEntry.time)
  return time_;
}
void MatchEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.MatchEntry.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchRecord::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchRecord::MatchRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MatchRecord)
}
MatchRecord::MatchRecord(const MatchRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      matches_(from.matches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.MatchRecord)
}

void MatchRecord::SharedCtor() {
  _cached_size_ = 0;
}

MatchRecord::~MatchRecord() {
  // @@protoc_insertion_point(destructor:pb.MatchRecord)
  SharedDtor();
}

void MatchRecord::SharedDtor() {
}

void MatchRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchRecord::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchRecord& MatchRecord::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchRecord* MatchRecord::New(::google::protobuf::Arena* arena) const {
  MatchRecord* n = new MatchRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MatchRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MatchRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MatchEntry matches = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MatchRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MatchRecord)
  return false;
#undef DO_
}

void MatchRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MatchRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.MatchEntry matches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.MatchRecord)
}

::google::protobuf::uint8* MatchRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.MatchRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.MatchEntry matches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.MatchRecord)
  return target;
}

size_t MatchRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MatchRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pb.MatchEntry matches = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->matches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matches(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MatchRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MatchRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MatchRecord)
    MergeFrom(*source);
  }
}

void MatchRecord::MergeFrom(const MatchRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MatchRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matches_.MergeFrom(from.matches_);
}

void MatchRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MatchRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchRecord::CopyFrom(const MatchRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MatchRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchRecord::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->matches())) return false;
  return true;
}

void MatchRecord::Swap(MatchRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchRecord::InternalSwap(MatchRecord* other) {
  using std::swap;
  matches_.InternalSwap(&other->matches_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchRecord::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchRecord

// repeated .pb.MatchEntry matches = 1;
int MatchRecord::matches_size() const {
  return matches_.size();
}
void MatchRecord::clear_matches() {
  matches_.Clear();
}
const ::pb::MatchEntry& MatchRecord::matches(int index) const {
  // @@protoc_insertion_point(field_get:pb.MatchRecord.matches)
  return matches_.Get(index);
}
::pb::MatchEntry* MatchRecord::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:pb.MatchRecord.matches)
  return matches_.Mutable(index);
}
::pb::MatchEntry* MatchRecord::add_matches() {
  // @@protoc_insertion_point(field_add:pb.MatchRecord.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >*
MatchRecord::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:pb.MatchRecord.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >&
MatchRecord::matches() const {
  // @@protoc_insertion_point(field_list:pb.MatchRecord.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchOK2VIDEntry::kVidFieldNumber;
const int MatchOK2VIDEntry::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchOK2VIDEntry::MatchOK2VIDEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MatchOK2VIDEntry)
}
MatchOK2VIDEntry::MatchOK2VIDEntry(const MatchOK2VIDEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vid()) {
    vid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vid_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:pb.MatchOK2VIDEntry)
}

void MatchOK2VIDEntry::SharedCtor() {
  _cached_size_ = 0;
  vid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
}

MatchOK2VIDEntry::~MatchOK2VIDEntry() {
  // @@protoc_insertion_point(destructor:pb.MatchOK2VIDEntry)
  SharedDtor();
}

void MatchOK2VIDEntry::SharedDtor() {
  vid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchOK2VIDEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchOK2VIDEntry::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchOK2VIDEntry& MatchOK2VIDEntry::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchOK2VIDEntry* MatchOK2VIDEntry::New(::google::protobuf::Arena* arena) const {
  MatchOK2VIDEntry* n = new MatchOK2VIDEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchOK2VIDEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MatchOK2VIDEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_vid()) {
    GOOGLE_DCHECK(!vid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*vid_.UnsafeRawStringPointer())->clear();
  }
  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchOK2VIDEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MatchOK2VIDEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string vid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vid().data(), static_cast<int>(this->vid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.MatchOK2VIDEntry.vid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MatchOK2VIDEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MatchOK2VIDEntry)
  return false;
#undef DO_
}

void MatchOK2VIDEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MatchOK2VIDEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid().data(), static_cast<int>(this->vid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.MatchOK2VIDEntry.vid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vid(), output);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.MatchOK2VIDEntry)
}

::google::protobuf::uint8* MatchOK2VIDEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.MatchOK2VIDEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid().data(), static_cast<int>(this->vid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.MatchOK2VIDEntry.vid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vid(), target);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.MatchOK2VIDEntry)
  return target;
}

size_t MatchOK2VIDEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.MatchOK2VIDEntry)
  size_t total_size = 0;

  if (has_vid()) {
    // required string vid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vid());
  }

  if (has_time()) {
    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
size_t MatchOK2VIDEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MatchOK2VIDEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string vid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vid());

    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchOK2VIDEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MatchOK2VIDEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchOK2VIDEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchOK2VIDEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MatchOK2VIDEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MatchOK2VIDEntry)
    MergeFrom(*source);
  }
}

void MatchOK2VIDEntry::MergeFrom(const MatchOK2VIDEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MatchOK2VIDEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vid();
      vid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vid_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatchOK2VIDEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MatchOK2VIDEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchOK2VIDEntry::CopyFrom(const MatchOK2VIDEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MatchOK2VIDEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchOK2VIDEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MatchOK2VIDEntry::Swap(MatchOK2VIDEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchOK2VIDEntry::InternalSwap(MatchOK2VIDEntry* other) {
  using std::swap;
  vid_.Swap(&other->vid_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchOK2VIDEntry::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchOK2VIDEntry

// required string vid = 1;
bool MatchOK2VIDEntry::has_vid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchOK2VIDEntry::set_has_vid() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchOK2VIDEntry::clear_has_vid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchOK2VIDEntry::clear_vid() {
  vid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vid();
}
const ::std::string& MatchOK2VIDEntry::vid() const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDEntry.vid)
  return vid_.GetNoArena();
}
void MatchOK2VIDEntry::set_vid(const ::std::string& value) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.MatchOK2VIDEntry.vid)
}
#if LANG_CXX11
void MatchOK2VIDEntry::set_vid(::std::string&& value) {
  set_has_vid();
  vid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.MatchOK2VIDEntry.vid)
}
#endif
void MatchOK2VIDEntry::set_vid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.MatchOK2VIDEntry.vid)
}
void MatchOK2VIDEntry::set_vid(const char* value, size_t size) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.MatchOK2VIDEntry.vid)
}
::std::string* MatchOK2VIDEntry::mutable_vid() {
  set_has_vid();
  // @@protoc_insertion_point(field_mutable:pb.MatchOK2VIDEntry.vid)
  return vid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchOK2VIDEntry::release_vid() {
  // @@protoc_insertion_point(field_release:pb.MatchOK2VIDEntry.vid)
  clear_has_vid();
  return vid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchOK2VIDEntry::set_allocated_vid(::std::string* vid) {
  if (vid != NULL) {
    set_has_vid();
  } else {
    clear_has_vid();
  }
  vid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vid);
  // @@protoc_insertion_point(field_set_allocated:pb.MatchOK2VIDEntry.vid)
}

// required uint64 time = 2;
bool MatchOK2VIDEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchOK2VIDEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchOK2VIDEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchOK2VIDEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
::google::protobuf::uint64 MatchOK2VIDEntry::time() const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDEntry.time)
  return time_;
}
void MatchOK2VIDEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.MatchOK2VIDEntry.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchOK2VIDRecord::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchOK2VIDRecord::MatchOK2VIDRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MatchOK2VIDRecord)
}
MatchOK2VIDRecord::MatchOK2VIDRecord(const MatchOK2VIDRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      matches_(from.matches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.MatchOK2VIDRecord)
}

void MatchOK2VIDRecord::SharedCtor() {
  _cached_size_ = 0;
}

MatchOK2VIDRecord::~MatchOK2VIDRecord() {
  // @@protoc_insertion_point(destructor:pb.MatchOK2VIDRecord)
  SharedDtor();
}

void MatchOK2VIDRecord::SharedDtor() {
}

void MatchOK2VIDRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchOK2VIDRecord::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchOK2VIDRecord& MatchOK2VIDRecord::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchOK2VIDRecord* MatchOK2VIDRecord::New(::google::protobuf::Arena* arena) const {
  MatchOK2VIDRecord* n = new MatchOK2VIDRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchOK2VIDRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MatchOK2VIDRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatchOK2VIDRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MatchOK2VIDRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MatchOK2VIDEntry matches = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MatchOK2VIDRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MatchOK2VIDRecord)
  return false;
#undef DO_
}

void MatchOK2VIDRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MatchOK2VIDRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.MatchOK2VIDEntry matches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.MatchOK2VIDRecord)
}

::google::protobuf::uint8* MatchOK2VIDRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.MatchOK2VIDRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.MatchOK2VIDEntry matches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.MatchOK2VIDRecord)
  return target;
}

size_t MatchOK2VIDRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MatchOK2VIDRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .pb.MatchOK2VIDEntry matches = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->matches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->matches(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchOK2VIDRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MatchOK2VIDRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchOK2VIDRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchOK2VIDRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MatchOK2VIDRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MatchOK2VIDRecord)
    MergeFrom(*source);
  }
}

void MatchOK2VIDRecord::MergeFrom(const MatchOK2VIDRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MatchOK2VIDRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matches_.MergeFrom(from.matches_);
}

void MatchOK2VIDRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MatchOK2VIDRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchOK2VIDRecord::CopyFrom(const MatchOK2VIDRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MatchOK2VIDRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchOK2VIDRecord::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->matches())) return false;
  return true;
}

void MatchOK2VIDRecord::Swap(MatchOK2VIDRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchOK2VIDRecord::InternalSwap(MatchOK2VIDRecord* other) {
  using std::swap;
  matches_.InternalSwap(&other->matches_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchOK2VIDRecord::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchOK2VIDRecord

// repeated .pb.MatchOK2VIDEntry matches = 1;
int MatchOK2VIDRecord::matches_size() const {
  return matches_.size();
}
void MatchOK2VIDRecord::clear_matches() {
  matches_.Clear();
}
const ::pb::MatchOK2VIDEntry& MatchOK2VIDRecord::matches(int index) const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDRecord.matches)
  return matches_.Get(index);
}
::pb::MatchOK2VIDEntry* MatchOK2VIDRecord::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:pb.MatchOK2VIDRecord.matches)
  return matches_.Mutable(index);
}
::pb::MatchOK2VIDEntry* MatchOK2VIDRecord::add_matches() {
  // @@protoc_insertion_point(field_add:pb.MatchOK2VIDRecord.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >*
MatchOK2VIDRecord::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:pb.MatchOK2VIDRecord.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >&
MatchOK2VIDRecord::matches() const {
  // @@protoc_insertion_point(field_list:pb.MatchOK2VIDRecord.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UidInfo::kSeedFieldNumber;
const int UidInfo::kTsFieldNumber;
const int UidInfo::kDateUpdatedToFieldNumber;
const int UidInfo::kDateNowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UidInfo::UidInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UidInfo)
}
UidInfo::UidInfo(const UidInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seed_, &from.seed_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_now_) -
    reinterpret_cast<char*>(&seed_)) + sizeof(date_now_));
  // @@protoc_insertion_point(copy_constructor:pb.UidInfo)
}

void UidInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_now_) -
      reinterpret_cast<char*>(&seed_)) + sizeof(date_now_));
}

UidInfo::~UidInfo() {
  // @@protoc_insertion_point(destructor:pb.UidInfo)
  SharedDtor();
}

void UidInfo::SharedDtor() {
}

void UidInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UidInfo::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UidInfo& UidInfo::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

UidInfo* UidInfo::New(::google::protobuf::Arena* arena) const {
  UidInfo* n = new UidInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UidInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&seed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&date_now_) -
        reinterpret_cast<char*>(&seed_)) + sizeof(date_now_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UidInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UidInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 date_updated_to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_date_updated_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &date_updated_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 date_now = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_date_now();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &date_now_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UidInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UidInfo)
  return false;
#undef DO_
}

void UidInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seed(), output);
  }

  // required uint64 ts = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ts(), output);
  }

  // optional uint64 date_updated_to = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->date_updated_to(), output);
  }

  // required uint64 date_now = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->date_now(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.UidInfo)
}

::google::protobuf::uint8* UidInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.UidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seed(), target);
  }

  // required uint64 ts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ts(), target);
  }

  // optional uint64 date_updated_to = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->date_updated_to(), target);
  }

  // required uint64 date_now = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->date_now(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.UidInfo)
  return target;
}

size_t UidInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.UidInfo)
  size_t total_size = 0;

  if (has_seed()) {
    // required uint64 seed = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seed());
  }

  if (has_ts()) {
    // required uint64 ts = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ts());
  }

  if (has_date_now()) {
    // required uint64 date_now = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->date_now());
  }

  return total_size;
}
size_t UidInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UidInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required uint64 seed = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seed());

    // required uint64 ts = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ts());

    // required uint64 date_now = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->date_now());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint64 date_updated_to = 3;
  if (has_date_updated_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->date_updated_to());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UidInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UidInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UidInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UidInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UidInfo)
    MergeFrom(*source);
  }
}

void UidInfo::MergeFrom(const UidInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      seed_ = from.seed_;
    }
    if (cached_has_bits & 0x00000002u) {
      ts_ = from.ts_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_updated_to_ = from.date_updated_to_;
    }
    if (cached_has_bits & 0x00000008u) {
      date_now_ = from.date_now_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UidInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UidInfo::CopyFrom(const UidInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UidInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void UidInfo::Swap(UidInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UidInfo::InternalSwap(UidInfo* other) {
  using std::swap;
  swap(seed_, other->seed_);
  swap(ts_, other->ts_);
  swap(date_updated_to_, other->date_updated_to_);
  swap(date_now_, other->date_now_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UidInfo::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UidInfo

// required uint64 seed = 1;
bool UidInfo::has_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UidInfo::set_has_seed() {
  _has_bits_[0] |= 0x00000001u;
}
void UidInfo::clear_has_seed() {
  _has_bits_[0] &= ~0x00000001u;
}
void UidInfo::clear_seed() {
  seed_ = GOOGLE_ULONGLONG(0);
  clear_has_seed();
}
::google::protobuf::uint64 UidInfo::seed() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.seed)
  return seed_;
}
void UidInfo::set_seed(::google::protobuf::uint64 value) {
  set_has_seed();
  seed_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.seed)
}

// required uint64 ts = 2;
bool UidInfo::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UidInfo::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void UidInfo::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void UidInfo::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
::google::protobuf::uint64 UidInfo::ts() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.ts)
  return ts_;
}
void UidInfo::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.ts)
}

// optional uint64 date_updated_to = 3;
bool UidInfo::has_date_updated_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UidInfo::set_has_date_updated_to() {
  _has_bits_[0] |= 0x00000004u;
}
void UidInfo::clear_has_date_updated_to() {
  _has_bits_[0] &= ~0x00000004u;
}
void UidInfo::clear_date_updated_to() {
  date_updated_to_ = GOOGLE_ULONGLONG(0);
  clear_has_date_updated_to();
}
::google::protobuf::uint64 UidInfo::date_updated_to() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.date_updated_to)
  return date_updated_to_;
}
void UidInfo::set_date_updated_to(::google::protobuf::uint64 value) {
  set_has_date_updated_to();
  date_updated_to_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.date_updated_to)
}

// required uint64 date_now = 4;
bool UidInfo::has_date_now() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UidInfo::set_has_date_now() {
  _has_bits_[0] |= 0x00000008u;
}
void UidInfo::clear_has_date_now() {
  _has_bits_[0] &= ~0x00000008u;
}
void UidInfo::clear_date_now() {
  date_now_ = GOOGLE_ULONGLONG(0);
  clear_has_date_now();
}
::google::protobuf::uint64 UidInfo::date_now() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.date_now)
  return date_now_;
}
void UidInfo::set_date_now(::google::protobuf::uint64 value) {
  set_has_date_now();
  date_now_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.date_now)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCoordinates::kLongitudeFieldNumber;
const int UserCoordinates::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCoordinates::UserCoordinates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UserCoordinates)
}
UserCoordinates::UserCoordinates(const UserCoordinates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:pb.UserCoordinates)
}

void UserCoordinates::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

UserCoordinates::~UserCoordinates() {
  // @@protoc_insertion_point(destructor:pb.UserCoordinates)
  SharedDtor();
}

void UserCoordinates::SharedDtor() {
}

void UserCoordinates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserCoordinates::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserCoordinates& UserCoordinates::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserCoordinates* UserCoordinates::New(::google::protobuf::Arena* arena) const {
  UserCoordinates* n = new UserCoordinates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserCoordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UserCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&longitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&latitude_) -
        reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserCoordinates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UserCoordinates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UserCoordinates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UserCoordinates)
  return false;
#undef DO_
}

void UserCoordinates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UserCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->longitude(), output);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.UserCoordinates)
}

::google::protobuf::uint8* UserCoordinates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.UserCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->longitude(), target);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.UserCoordinates)
  return target;
}

size_t UserCoordinates::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.UserCoordinates)
  size_t total_size = 0;

  if (has_longitude()) {
    // required float longitude = 1;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float latitude = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t UserCoordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UserCoordinates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float longitude = 1;
    total_size += 1 + 4;

    // required float latitude = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserCoordinates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UserCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCoordinates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserCoordinates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UserCoordinates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UserCoordinates)
    MergeFrom(*source);
  }
}

void UserCoordinates::MergeFrom(const UserCoordinates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UserCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserCoordinates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UserCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCoordinates::CopyFrom(const UserCoordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UserCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCoordinates::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserCoordinates::Swap(UserCoordinates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserCoordinates::InternalSwap(UserCoordinates* other) {
  using std::swap;
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserCoordinates::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserCoordinates

// required float longitude = 1;
bool UserCoordinates::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserCoordinates::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
void UserCoordinates::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserCoordinates::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float UserCoordinates::longitude() const {
  // @@protoc_insertion_point(field_get:pb.UserCoordinates.longitude)
  return longitude_;
}
void UserCoordinates::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:pb.UserCoordinates.longitude)
}

// required float latitude = 2;
bool UserCoordinates::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserCoordinates::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
void UserCoordinates::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserCoordinates::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float UserCoordinates::latitude() const {
  // @@protoc_insertion_point(field_get:pb.UserCoordinates.latitude)
  return latitude_;
}
void UserCoordinates::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:pb.UserCoordinates.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kLastVisitTsFieldNumber;
const int UserInfo::kCoordinatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_coordinates()) {
    coordinates_ = new ::pb::UserCoordinates(*from.coordinates_);
  } else {
    coordinates_ = NULL;
  }
  last_visit_ts_ = from.last_visit_ts_;
  // @@protoc_insertion_point(copy_constructor:pb.UserInfo)
}

void UserInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&coordinates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_visit_ts_) -
      reinterpret_cast<char*>(&coordinates_)) + sizeof(last_visit_ts_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:pb.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  if (this != internal_default_instance()) delete coordinates_;
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_coordinates()) {
    GOOGLE_DCHECK(coordinates_ != NULL);
    coordinates_->::pb::UserCoordinates::Clear();
  }
  last_visit_ts_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 last_visit_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_last_visit_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_visit_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.UserCoordinates coordinates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coordinates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 last_visit_ts = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->last_visit_ts(), output);
  }

  // optional .pb.UserCoordinates coordinates = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->coordinates_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 last_visit_ts = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->last_visit_ts(), target);
  }

  // optional .pb.UserCoordinates coordinates = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->coordinates_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UserInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 last_visit_ts = 1;
  if (has_last_visit_ts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_visit_ts());
  }
  // optional .pb.UserCoordinates coordinates = 2;
  if (has_coordinates()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coordinates_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_coordinates()->::pb::UserCoordinates::MergeFrom(from.coordinates());
    }
    if (cached_has_bits & 0x00000002u) {
      last_visit_ts_ = from.last_visit_ts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_coordinates()) {
    if (!this->coordinates_->IsInitialized()) return false;
  }
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  swap(coordinates_, other->coordinates_);
  swap(last_visit_ts_, other->last_visit_ts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// required uint64 last_visit_ts = 1;
bool UserInfo::has_last_visit_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserInfo::set_has_last_visit_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void UserInfo::clear_has_last_visit_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserInfo::clear_last_visit_ts() {
  last_visit_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_last_visit_ts();
}
::google::protobuf::uint64 UserInfo::last_visit_ts() const {
  // @@protoc_insertion_point(field_get:pb.UserInfo.last_visit_ts)
  return last_visit_ts_;
}
void UserInfo::set_last_visit_ts(::google::protobuf::uint64 value) {
  set_has_last_visit_ts();
  last_visit_ts_ = value;
  // @@protoc_insertion_point(field_set:pb.UserInfo.last_visit_ts)
}

// optional .pb.UserCoordinates coordinates = 2;
bool UserInfo::has_coordinates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserInfo::set_has_coordinates() {
  _has_bits_[0] |= 0x00000001u;
}
void UserInfo::clear_has_coordinates() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserInfo::clear_coordinates() {
  if (coordinates_ != NULL) coordinates_->::pb::UserCoordinates::Clear();
  clear_has_coordinates();
}
const ::pb::UserCoordinates& UserInfo::coordinates() const {
  const ::pb::UserCoordinates* p = coordinates_;
  // @@protoc_insertion_point(field_get:pb.UserInfo.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::UserCoordinates*>(
      &::pb::_UserCoordinates_default_instance_);
}
::pb::UserCoordinates* UserInfo::mutable_coordinates() {
  set_has_coordinates();
  if (coordinates_ == NULL) {
    coordinates_ = new ::pb::UserCoordinates;
  }
  // @@protoc_insertion_point(field_mutable:pb.UserInfo.coordinates)
  return coordinates_;
}
::pb::UserCoordinates* UserInfo::release_coordinates() {
  // @@protoc_insertion_point(field_release:pb.UserInfo.coordinates)
  clear_has_coordinates();
  ::pb::UserCoordinates* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
void UserInfo::set_allocated_coordinates(::pb::UserCoordinates* coordinates) {
  delete coordinates_;
  coordinates_ = coordinates;
  if (coordinates) {
    set_has_coordinates();
  } else {
    clear_has_coordinates();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.UserInfo.coordinates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Interests::kQueriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Interests::Interests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fstarter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Interests)
}
Interests::Interests(const Interests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      queries_(from.queries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.Interests)
}

void Interests::SharedCtor() {
  _cached_size_ = 0;
}

Interests::~Interests() {
  // @@protoc_insertion_point(destructor:pb.Interests)
  SharedDtor();
}

void Interests::SharedDtor() {
}

void Interests::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Interests::descriptor() {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Interests& Interests::default_instance() {
  protobuf_youla_5fstarter_2eproto::InitDefaults();
  return *internal_default_instance();
}

Interests* Interests::New(::google::protobuf::Arena* arena) const {
  Interests* n = new Interests;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Interests::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Interests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Interests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Interests)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_queries()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->queries(this->queries_size() - 1).data(),
            static_cast<int>(this->queries(this->queries_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Interests.queries");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Interests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Interests)
  return false;
#undef DO_
}

void Interests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Interests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Interests.queries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->queries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Interests)
}

::google::protobuf::uint8* Interests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Interests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Interests.queries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->queries(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Interests)
  return target;
}

size_t Interests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Interests)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string queries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->queries_size());
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->queries(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Interests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Interests)
  GOOGLE_DCHECK_NE(&from, this);
  const Interests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Interests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Interests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Interests)
    MergeFrom(*source);
  }
}

void Interests::MergeFrom(const Interests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Interests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
}

void Interests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Interests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interests::CopyFrom(const Interests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Interests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interests::IsInitialized() const {
  return true;
}

void Interests::Swap(Interests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interests::InternalSwap(Interests* other) {
  using std::swap;
  queries_.InternalSwap(&other->queries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Interests::GetMetadata() const {
  protobuf_youla_5fstarter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fstarter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Interests

// repeated string queries = 1;
int Interests::queries_size() const {
  return queries_.size();
}
void Interests::clear_queries() {
  queries_.Clear();
}
const ::std::string& Interests::queries(int index) const {
  // @@protoc_insertion_point(field_get:pb.Interests.queries)
  return queries_.Get(index);
}
::std::string* Interests::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Interests.queries)
  return queries_.Mutable(index);
}
void Interests::set_queries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.Interests.queries)
  queries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Interests::set_queries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pb.Interests.queries)
  queries_.Mutable(index)->assign(std::move(value));
}
#endif
void Interests::set_queries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  queries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.Interests.queries)
}
void Interests::set_queries(int index, const char* value, size_t size) {
  queries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.Interests.queries)
}
::std::string* Interests::add_queries() {
  // @@protoc_insertion_point(field_add_mutable:pb.Interests.queries)
  return queries_.Add();
}
void Interests::add_queries(const ::std::string& value) {
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.Interests.queries)
}
#if LANG_CXX11
void Interests::add_queries(::std::string&& value) {
  queries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb.Interests.queries)
}
#endif
void Interests::add_queries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.Interests.queries)
}
void Interests::add_queries(const char* value, size_t size) {
  queries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.Interests.queries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interests::queries() const {
  // @@protoc_insertion_point(field_list:pb.Interests.queries)
  return queries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Interests::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:pb.Interests.queries)
  return &queries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
