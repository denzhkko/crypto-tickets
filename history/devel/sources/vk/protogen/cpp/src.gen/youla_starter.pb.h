// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_starter.proto

#ifndef PROTOBUF_youla_5fstarter_2eproto__INCLUDED
#define PROTOBUF_youla_5fstarter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pb {
class Interests;
class InterestsDefaultTypeInternal;
extern InterestsDefaultTypeInternal _Interests_default_instance_;
class MatchEntry;
class MatchEntryDefaultTypeInternal;
extern MatchEntryDefaultTypeInternal _MatchEntry_default_instance_;
class MatchOK2VIDEntry;
class MatchOK2VIDEntryDefaultTypeInternal;
extern MatchOK2VIDEntryDefaultTypeInternal _MatchOK2VIDEntry_default_instance_;
class MatchOK2VIDRecord;
class MatchOK2VIDRecordDefaultTypeInternal;
extern MatchOK2VIDRecordDefaultTypeInternal _MatchOK2VIDRecord_default_instance_;
class MatchRecord;
class MatchRecordDefaultTypeInternal;
extern MatchRecordDefaultTypeInternal _MatchRecord_default_instance_;
class UidInfo;
class UidInfoDefaultTypeInternal;
extern UidInfoDefaultTypeInternal _UidInfo_default_instance_;
class UserCoordinates;
class UserCoordinatesDefaultTypeInternal;
extern UserCoordinatesDefaultTypeInternal _UserCoordinates_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserQueries;
class UserQueriesDefaultTypeInternal;
extern UserQueriesDefaultTypeInternal _UserQueries_default_instance_;
class YoulaQueryData;
class YoulaQueryDataDefaultTypeInternal;
extern YoulaQueryDataDefaultTypeInternal _YoulaQueryData_default_instance_;
}  // namespace pb

namespace pb {

namespace protobuf_youla_5fstarter_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_youla_5fstarter_2eproto

enum YoulaQueryData_SourceType {
  YoulaQueryData_SourceType_other_interests = 0,
  YoulaQueryData_SourceType_auto_interests = 1,
  YoulaQueryData_SourceType_user_queries_interests = 2,
  YoulaQueryData_SourceType_commercial_interests = 3,
  YoulaQueryData_SourceType_shopping_interests = 4
};
bool YoulaQueryData_SourceType_IsValid(int value);
const YoulaQueryData_SourceType YoulaQueryData_SourceType_SourceType_MIN = YoulaQueryData_SourceType_other_interests;
const YoulaQueryData_SourceType YoulaQueryData_SourceType_SourceType_MAX = YoulaQueryData_SourceType_shopping_interests;
const int YoulaQueryData_SourceType_SourceType_ARRAYSIZE = YoulaQueryData_SourceType_SourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* YoulaQueryData_SourceType_descriptor();
inline const ::std::string& YoulaQueryData_SourceType_Name(YoulaQueryData_SourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    YoulaQueryData_SourceType_descriptor(), value);
}
inline bool YoulaQueryData_SourceType_Parse(
    const ::std::string& name, YoulaQueryData_SourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<YoulaQueryData_SourceType>(
    YoulaQueryData_SourceType_descriptor(), name, value);
}
// ===================================================================

class YoulaQueryData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.YoulaQueryData) */ {
 public:
  YoulaQueryData();
  virtual ~YoulaQueryData();

  YoulaQueryData(const YoulaQueryData& from);

  inline YoulaQueryData& operator=(const YoulaQueryData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YoulaQueryData(YoulaQueryData&& from) noexcept
    : YoulaQueryData() {
    *this = ::std::move(from);
  }

  inline YoulaQueryData& operator=(YoulaQueryData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YoulaQueryData& default_instance();

  static inline const YoulaQueryData* internal_default_instance() {
    return reinterpret_cast<const YoulaQueryData*>(
               &_YoulaQueryData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(YoulaQueryData* other);
  friend void swap(YoulaQueryData& a, YoulaQueryData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YoulaQueryData* New() const PROTOBUF_FINAL { return New(NULL); }

  YoulaQueryData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YoulaQueryData& from);
  void MergeFrom(const YoulaQueryData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YoulaQueryData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef YoulaQueryData_SourceType SourceType;
  static const SourceType other_interests =
    YoulaQueryData_SourceType_other_interests;
  static const SourceType auto_interests =
    YoulaQueryData_SourceType_auto_interests;
  static const SourceType user_queries_interests =
    YoulaQueryData_SourceType_user_queries_interests;
  static const SourceType commercial_interests =
    YoulaQueryData_SourceType_commercial_interests;
  static const SourceType shopping_interests =
    YoulaQueryData_SourceType_shopping_interests;
  static inline bool SourceType_IsValid(int value) {
    return YoulaQueryData_SourceType_IsValid(value);
  }
  static const SourceType SourceType_MIN =
    YoulaQueryData_SourceType_SourceType_MIN;
  static const SourceType SourceType_MAX =
    YoulaQueryData_SourceType_SourceType_MAX;
  static const int SourceType_ARRAYSIZE =
    YoulaQueryData_SourceType_SourceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SourceType_descriptor() {
    return YoulaQueryData_SourceType_descriptor();
  }
  static inline const ::std::string& SourceType_Name(SourceType value) {
    return YoulaQueryData_SourceType_Name(value);
  }
  static inline bool SourceType_Parse(const ::std::string& name,
      SourceType* value) {
    return YoulaQueryData_SourceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required uint64 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional uint64 ttl = 4;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 4;
  ::google::protobuf::uint64 ttl() const;
  void set_ttl(::google::protobuf::uint64 value);

  // optional .pb.YoulaQueryData.SourceType source_type = 3;
  bool has_source_type() const;
  void clear_source_type();
  static const int kSourceTypeFieldNumber = 3;
  ::pb::YoulaQueryData_SourceType source_type() const;
  void set_source_type(::pb::YoulaQueryData_SourceType value);

  // @@protoc_insertion_point(class_scope:pb.YoulaQueryData)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_text();
  void clear_has_text();
  void set_has_source_type();
  void clear_has_source_type();
  void set_has_ttl();
  void clear_has_ttl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 ttl_;
  int source_type_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserQueries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.UserQueries) */ {
 public:
  UserQueries();
  virtual ~UserQueries();

  UserQueries(const UserQueries& from);

  inline UserQueries& operator=(const UserQueries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserQueries(UserQueries&& from) noexcept
    : UserQueries() {
    *this = ::std::move(from);
  }

  inline UserQueries& operator=(UserQueries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserQueries& default_instance();

  static inline const UserQueries* internal_default_instance() {
    return reinterpret_cast<const UserQueries*>(
               &_UserQueries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserQueries* other);
  friend void swap(UserQueries& a, UserQueries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserQueries* New() const PROTOBUF_FINAL { return New(NULL); }

  UserQueries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserQueries& from);
  void MergeFrom(const UserQueries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserQueries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.YoulaQueryData queries = 1;
  int queries_size() const;
  void clear_queries();
  static const int kQueriesFieldNumber = 1;
  const ::pb::YoulaQueryData& queries(int index) const;
  ::pb::YoulaQueryData* mutable_queries(int index);
  ::pb::YoulaQueryData* add_queries();
  ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >*
      mutable_queries();
  const ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >&
      queries() const;

  // @@protoc_insertion_point(class_scope:pb.UserQueries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData > queries_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.MatchEntry) */ {
 public:
  MatchEntry();
  virtual ~MatchEntry();

  MatchEntry(const MatchEntry& from);

  inline MatchEntry& operator=(const MatchEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchEntry(MatchEntry&& from) noexcept
    : MatchEntry() {
    *this = ::std::move(from);
  }

  inline MatchEntry& operator=(MatchEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchEntry& default_instance();

  static inline const MatchEntry* internal_default_instance() {
    return reinterpret_cast<const MatchEntry*>(
               &_MatchEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MatchEntry* other);
  friend void swap(MatchEntry& a, MatchEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchEntry& from);
  void MergeFrom(const MatchEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string liru = 1;
  bool has_liru() const;
  void clear_liru();
  static const int kLiruFieldNumber = 1;
  const ::std::string& liru() const;
  void set_liru(const ::std::string& value);
  #if LANG_CXX11
  void set_liru(::std::string&& value);
  #endif
  void set_liru(const char* value);
  void set_liru(const char* value, size_t size);
  ::std::string* mutable_liru();
  ::std::string* release_liru();
  void set_allocated_liru(::std::string* liru);

  // required uint64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.MatchEntry)
 private:
  void set_has_liru();
  void clear_has_liru();
  void set_has_time();
  void clear_has_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr liru_;
  ::google::protobuf::uint64 time_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.MatchRecord) */ {
 public:
  MatchRecord();
  virtual ~MatchRecord();

  MatchRecord(const MatchRecord& from);

  inline MatchRecord& operator=(const MatchRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchRecord(MatchRecord&& from) noexcept
    : MatchRecord() {
    *this = ::std::move(from);
  }

  inline MatchRecord& operator=(MatchRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRecord& default_instance();

  static inline const MatchRecord* internal_default_instance() {
    return reinterpret_cast<const MatchRecord*>(
               &_MatchRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MatchRecord* other);
  friend void swap(MatchRecord& a, MatchRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchRecord& from);
  void MergeFrom(const MatchRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.MatchEntry matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::pb::MatchEntry& matches(int index) const;
  ::pb::MatchEntry* mutable_matches(int index);
  ::pb::MatchEntry* add_matches();
  ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >&
      matches() const;

  // @@protoc_insertion_point(class_scope:pb.MatchRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry > matches_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchOK2VIDEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.MatchOK2VIDEntry) */ {
 public:
  MatchOK2VIDEntry();
  virtual ~MatchOK2VIDEntry();

  MatchOK2VIDEntry(const MatchOK2VIDEntry& from);

  inline MatchOK2VIDEntry& operator=(const MatchOK2VIDEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchOK2VIDEntry(MatchOK2VIDEntry&& from) noexcept
    : MatchOK2VIDEntry() {
    *this = ::std::move(from);
  }

  inline MatchOK2VIDEntry& operator=(MatchOK2VIDEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchOK2VIDEntry& default_instance();

  static inline const MatchOK2VIDEntry* internal_default_instance() {
    return reinterpret_cast<const MatchOK2VIDEntry*>(
               &_MatchOK2VIDEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MatchOK2VIDEntry* other);
  friend void swap(MatchOK2VIDEntry& a, MatchOK2VIDEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchOK2VIDEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchOK2VIDEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchOK2VIDEntry& from);
  void MergeFrom(const MatchOK2VIDEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchOK2VIDEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string vid = 1;
  bool has_vid() const;
  void clear_vid();
  static const int kVidFieldNumber = 1;
  const ::std::string& vid() const;
  void set_vid(const ::std::string& value);
  #if LANG_CXX11
  void set_vid(::std::string&& value);
  #endif
  void set_vid(const char* value);
  void set_vid(const char* value, size_t size);
  ::std::string* mutable_vid();
  ::std::string* release_vid();
  void set_allocated_vid(::std::string* vid);

  // required uint64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.MatchOK2VIDEntry)
 private:
  void set_has_vid();
  void clear_has_vid();
  void set_has_time();
  void clear_has_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr vid_;
  ::google::protobuf::uint64 time_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchOK2VIDRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.MatchOK2VIDRecord) */ {
 public:
  MatchOK2VIDRecord();
  virtual ~MatchOK2VIDRecord();

  MatchOK2VIDRecord(const MatchOK2VIDRecord& from);

  inline MatchOK2VIDRecord& operator=(const MatchOK2VIDRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchOK2VIDRecord(MatchOK2VIDRecord&& from) noexcept
    : MatchOK2VIDRecord() {
    *this = ::std::move(from);
  }

  inline MatchOK2VIDRecord& operator=(MatchOK2VIDRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchOK2VIDRecord& default_instance();

  static inline const MatchOK2VIDRecord* internal_default_instance() {
    return reinterpret_cast<const MatchOK2VIDRecord*>(
               &_MatchOK2VIDRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MatchOK2VIDRecord* other);
  friend void swap(MatchOK2VIDRecord& a, MatchOK2VIDRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchOK2VIDRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchOK2VIDRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchOK2VIDRecord& from);
  void MergeFrom(const MatchOK2VIDRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchOK2VIDRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.MatchOK2VIDEntry matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::pb::MatchOK2VIDEntry& matches(int index) const;
  ::pb::MatchOK2VIDEntry* mutable_matches(int index);
  ::pb::MatchOK2VIDEntry* add_matches();
  ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >&
      matches() const;

  // @@protoc_insertion_point(class_scope:pb.MatchOK2VIDRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry > matches_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UidInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.UidInfo) */ {
 public:
  UidInfo();
  virtual ~UidInfo();

  UidInfo(const UidInfo& from);

  inline UidInfo& operator=(const UidInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UidInfo(UidInfo&& from) noexcept
    : UidInfo() {
    *this = ::std::move(from);
  }

  inline UidInfo& operator=(UidInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UidInfo& default_instance();

  static inline const UidInfo* internal_default_instance() {
    return reinterpret_cast<const UidInfo*>(
               &_UidInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(UidInfo* other);
  friend void swap(UidInfo& a, UidInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UidInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UidInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UidInfo& from);
  void MergeFrom(const UidInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UidInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 seed = 1;
  bool has_seed() const;
  void clear_seed();
  static const int kSeedFieldNumber = 1;
  ::google::protobuf::uint64 seed() const;
  void set_seed(::google::protobuf::uint64 value);

  // required uint64 ts = 2;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 2;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // optional uint64 date_updated_to = 3;
  bool has_date_updated_to() const;
  void clear_date_updated_to();
  static const int kDateUpdatedToFieldNumber = 3;
  ::google::protobuf::uint64 date_updated_to() const;
  void set_date_updated_to(::google::protobuf::uint64 value);

  // required uint64 date_now = 4;
  bool has_date_now() const;
  void clear_date_now();
  static const int kDateNowFieldNumber = 4;
  ::google::protobuf::uint64 date_now() const;
  void set_date_now(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.UidInfo)
 private:
  void set_has_seed();
  void clear_has_seed();
  void set_has_ts();
  void clear_has_ts();
  void set_has_date_updated_to();
  void clear_has_date_updated_to();
  void set_has_date_now();
  void clear_has_date_now();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 seed_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::uint64 date_updated_to_;
  ::google::protobuf::uint64 date_now_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserCoordinates : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.UserCoordinates) */ {
 public:
  UserCoordinates();
  virtual ~UserCoordinates();

  UserCoordinates(const UserCoordinates& from);

  inline UserCoordinates& operator=(const UserCoordinates& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCoordinates(UserCoordinates&& from) noexcept
    : UserCoordinates() {
    *this = ::std::move(from);
  }

  inline UserCoordinates& operator=(UserCoordinates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCoordinates& default_instance();

  static inline const UserCoordinates* internal_default_instance() {
    return reinterpret_cast<const UserCoordinates*>(
               &_UserCoordinates_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UserCoordinates* other);
  friend void swap(UserCoordinates& a, UserCoordinates& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCoordinates* New() const PROTOBUF_FINAL { return New(NULL); }

  UserCoordinates* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserCoordinates& from);
  void MergeFrom(const UserCoordinates& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserCoordinates* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float longitude = 1;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  float longitude() const;
  void set_longitude(float value);

  // required float latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // @@protoc_insertion_point(class_scope:pb.UserCoordinates)
 private:
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float longitude_;
  float latitude_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.UserCoordinates coordinates = 2;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 2;
  const ::pb::UserCoordinates& coordinates() const;
  ::pb::UserCoordinates* mutable_coordinates();
  ::pb::UserCoordinates* release_coordinates();
  void set_allocated_coordinates(::pb::UserCoordinates* coordinates);

  // required uint64 last_visit_ts = 1;
  bool has_last_visit_ts() const;
  void clear_last_visit_ts();
  static const int kLastVisitTsFieldNumber = 1;
  ::google::protobuf::uint64 last_visit_ts() const;
  void set_last_visit_ts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.UserInfo)
 private:
  void set_has_last_visit_ts();
  void clear_has_last_visit_ts();
  void set_has_coordinates();
  void clear_has_coordinates();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::UserCoordinates* coordinates_;
  ::google::protobuf::uint64 last_visit_ts_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interests : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Interests) */ {
 public:
  Interests();
  virtual ~Interests();

  Interests(const Interests& from);

  inline Interests& operator=(const Interests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interests(Interests&& from) noexcept
    : Interests() {
    *this = ::std::move(from);
  }

  inline Interests& operator=(Interests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Interests& default_instance();

  static inline const Interests* internal_default_instance() {
    return reinterpret_cast<const Interests*>(
               &_Interests_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Interests* other);
  friend void swap(Interests& a, Interests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interests* New() const PROTOBUF_FINAL { return New(NULL); }

  Interests* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Interests& from);
  void MergeFrom(const Interests& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Interests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string queries = 1;
  int queries_size() const;
  void clear_queries();
  static const int kQueriesFieldNumber = 1;
  const ::std::string& queries(int index) const;
  ::std::string* mutable_queries(int index);
  void set_queries(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_queries(int index, ::std::string&& value);
  #endif
  void set_queries(int index, const char* value);
  void set_queries(int index, const char* value, size_t size);
  ::std::string* add_queries();
  void add_queries(const ::std::string& value);
  #if LANG_CXX11
  void add_queries(::std::string&& value);
  #endif
  void add_queries(const char* value);
  void add_queries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& queries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_queries();

  // @@protoc_insertion_point(class_scope:pb.Interests)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> queries_;
  friend struct protobuf_youla_5fstarter_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// YoulaQueryData

// required uint64 time = 1;
inline bool YoulaQueryData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YoulaQueryData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YoulaQueryData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YoulaQueryData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 YoulaQueryData::time() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.time)
  return time_;
}
inline void YoulaQueryData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.time)
}

// required string text = 2;
inline bool YoulaQueryData::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YoulaQueryData::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YoulaQueryData::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YoulaQueryData::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& YoulaQueryData::text() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.text)
  return text_.GetNoArena();
}
inline void YoulaQueryData::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.text)
}
#if LANG_CXX11
inline void YoulaQueryData::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.YoulaQueryData.text)
}
#endif
inline void YoulaQueryData::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.YoulaQueryData.text)
}
inline void YoulaQueryData::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.YoulaQueryData.text)
}
inline ::std::string* YoulaQueryData::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pb.YoulaQueryData.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YoulaQueryData::release_text() {
  // @@protoc_insertion_point(field_release:pb.YoulaQueryData.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoulaQueryData::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pb.YoulaQueryData.text)
}

// optional .pb.YoulaQueryData.SourceType source_type = 3;
inline bool YoulaQueryData::has_source_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YoulaQueryData::set_has_source_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YoulaQueryData::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YoulaQueryData::clear_source_type() {
  source_type_ = 0;
  clear_has_source_type();
}
inline ::pb::YoulaQueryData_SourceType YoulaQueryData::source_type() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.source_type)
  return static_cast< ::pb::YoulaQueryData_SourceType >(source_type_);
}
inline void YoulaQueryData::set_source_type(::pb::YoulaQueryData_SourceType value) {
  assert(::pb::YoulaQueryData_SourceType_IsValid(value));
  set_has_source_type();
  source_type_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.source_type)
}

// optional uint64 ttl = 4;
inline bool YoulaQueryData::has_ttl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YoulaQueryData::set_has_ttl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YoulaQueryData::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YoulaQueryData::clear_ttl() {
  ttl_ = GOOGLE_ULONGLONG(0);
  clear_has_ttl();
}
inline ::google::protobuf::uint64 YoulaQueryData::ttl() const {
  // @@protoc_insertion_point(field_get:pb.YoulaQueryData.ttl)
  return ttl_;
}
inline void YoulaQueryData::set_ttl(::google::protobuf::uint64 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:pb.YoulaQueryData.ttl)
}

// -------------------------------------------------------------------

// UserQueries

// repeated .pb.YoulaQueryData queries = 1;
inline int UserQueries::queries_size() const {
  return queries_.size();
}
inline void UserQueries::clear_queries() {
  queries_.Clear();
}
inline const ::pb::YoulaQueryData& UserQueries::queries(int index) const {
  // @@protoc_insertion_point(field_get:pb.UserQueries.queries)
  return queries_.Get(index);
}
inline ::pb::YoulaQueryData* UserQueries::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:pb.UserQueries.queries)
  return queries_.Mutable(index);
}
inline ::pb::YoulaQueryData* UserQueries::add_queries() {
  // @@protoc_insertion_point(field_add:pb.UserQueries.queries)
  return queries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >*
UserQueries::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:pb.UserQueries.queries)
  return &queries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::YoulaQueryData >&
UserQueries::queries() const {
  // @@protoc_insertion_point(field_list:pb.UserQueries.queries)
  return queries_;
}

// -------------------------------------------------------------------

// MatchEntry

// required string liru = 1;
inline bool MatchEntry::has_liru() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchEntry::set_has_liru() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchEntry::clear_has_liru() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchEntry::clear_liru() {
  liru_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_liru();
}
inline const ::std::string& MatchEntry::liru() const {
  // @@protoc_insertion_point(field_get:pb.MatchEntry.liru)
  return liru_.GetNoArena();
}
inline void MatchEntry::set_liru(const ::std::string& value) {
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.MatchEntry.liru)
}
#if LANG_CXX11
inline void MatchEntry::set_liru(::std::string&& value) {
  set_has_liru();
  liru_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.MatchEntry.liru)
}
#endif
inline void MatchEntry::set_liru(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.MatchEntry.liru)
}
inline void MatchEntry::set_liru(const char* value, size_t size) {
  set_has_liru();
  liru_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.MatchEntry.liru)
}
inline ::std::string* MatchEntry::mutable_liru() {
  set_has_liru();
  // @@protoc_insertion_point(field_mutable:pb.MatchEntry.liru)
  return liru_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchEntry::release_liru() {
  // @@protoc_insertion_point(field_release:pb.MatchEntry.liru)
  clear_has_liru();
  return liru_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchEntry::set_allocated_liru(::std::string* liru) {
  if (liru != NULL) {
    set_has_liru();
  } else {
    clear_has_liru();
  }
  liru_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liru);
  // @@protoc_insertion_point(field_set_allocated:pb.MatchEntry.liru)
}

// required uint64 time = 2;
inline bool MatchEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 MatchEntry::time() const {
  // @@protoc_insertion_point(field_get:pb.MatchEntry.time)
  return time_;
}
inline void MatchEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.MatchEntry.time)
}

// -------------------------------------------------------------------

// MatchRecord

// repeated .pb.MatchEntry matches = 1;
inline int MatchRecord::matches_size() const {
  return matches_.size();
}
inline void MatchRecord::clear_matches() {
  matches_.Clear();
}
inline const ::pb::MatchEntry& MatchRecord::matches(int index) const {
  // @@protoc_insertion_point(field_get:pb.MatchRecord.matches)
  return matches_.Get(index);
}
inline ::pb::MatchEntry* MatchRecord::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:pb.MatchRecord.matches)
  return matches_.Mutable(index);
}
inline ::pb::MatchEntry* MatchRecord::add_matches() {
  // @@protoc_insertion_point(field_add:pb.MatchRecord.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >*
MatchRecord::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:pb.MatchRecord.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::MatchEntry >&
MatchRecord::matches() const {
  // @@protoc_insertion_point(field_list:pb.MatchRecord.matches)
  return matches_;
}

// -------------------------------------------------------------------

// MatchOK2VIDEntry

// required string vid = 1;
inline bool MatchOK2VIDEntry::has_vid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchOK2VIDEntry::set_has_vid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchOK2VIDEntry::clear_has_vid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchOK2VIDEntry::clear_vid() {
  vid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vid();
}
inline const ::std::string& MatchOK2VIDEntry::vid() const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDEntry.vid)
  return vid_.GetNoArena();
}
inline void MatchOK2VIDEntry::set_vid(const ::std::string& value) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.MatchOK2VIDEntry.vid)
}
#if LANG_CXX11
inline void MatchOK2VIDEntry::set_vid(::std::string&& value) {
  set_has_vid();
  vid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.MatchOK2VIDEntry.vid)
}
#endif
inline void MatchOK2VIDEntry::set_vid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.MatchOK2VIDEntry.vid)
}
inline void MatchOK2VIDEntry::set_vid(const char* value, size_t size) {
  set_has_vid();
  vid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.MatchOK2VIDEntry.vid)
}
inline ::std::string* MatchOK2VIDEntry::mutable_vid() {
  set_has_vid();
  // @@protoc_insertion_point(field_mutable:pb.MatchOK2VIDEntry.vid)
  return vid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchOK2VIDEntry::release_vid() {
  // @@protoc_insertion_point(field_release:pb.MatchOK2VIDEntry.vid)
  clear_has_vid();
  return vid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchOK2VIDEntry::set_allocated_vid(::std::string* vid) {
  if (vid != NULL) {
    set_has_vid();
  } else {
    clear_has_vid();
  }
  vid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vid);
  // @@protoc_insertion_point(field_set_allocated:pb.MatchOK2VIDEntry.vid)
}

// required uint64 time = 2;
inline bool MatchOK2VIDEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchOK2VIDEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchOK2VIDEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchOK2VIDEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 MatchOK2VIDEntry::time() const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDEntry.time)
  return time_;
}
inline void MatchOK2VIDEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.MatchOK2VIDEntry.time)
}

// -------------------------------------------------------------------

// MatchOK2VIDRecord

// repeated .pb.MatchOK2VIDEntry matches = 1;
inline int MatchOK2VIDRecord::matches_size() const {
  return matches_.size();
}
inline void MatchOK2VIDRecord::clear_matches() {
  matches_.Clear();
}
inline const ::pb::MatchOK2VIDEntry& MatchOK2VIDRecord::matches(int index) const {
  // @@protoc_insertion_point(field_get:pb.MatchOK2VIDRecord.matches)
  return matches_.Get(index);
}
inline ::pb::MatchOK2VIDEntry* MatchOK2VIDRecord::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:pb.MatchOK2VIDRecord.matches)
  return matches_.Mutable(index);
}
inline ::pb::MatchOK2VIDEntry* MatchOK2VIDRecord::add_matches() {
  // @@protoc_insertion_point(field_add:pb.MatchOK2VIDRecord.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >*
MatchOK2VIDRecord::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:pb.MatchOK2VIDRecord.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::MatchOK2VIDEntry >&
MatchOK2VIDRecord::matches() const {
  // @@protoc_insertion_point(field_list:pb.MatchOK2VIDRecord.matches)
  return matches_;
}

// -------------------------------------------------------------------

// UidInfo

// required uint64 seed = 1;
inline bool UidInfo::has_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UidInfo::set_has_seed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UidInfo::clear_has_seed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UidInfo::clear_seed() {
  seed_ = GOOGLE_ULONGLONG(0);
  clear_has_seed();
}
inline ::google::protobuf::uint64 UidInfo::seed() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.seed)
  return seed_;
}
inline void UidInfo::set_seed(::google::protobuf::uint64 value) {
  set_has_seed();
  seed_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.seed)
}

// required uint64 ts = 2;
inline bool UidInfo::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UidInfo::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UidInfo::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UidInfo::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 UidInfo::ts() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.ts)
  return ts_;
}
inline void UidInfo::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.ts)
}

// optional uint64 date_updated_to = 3;
inline bool UidInfo::has_date_updated_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UidInfo::set_has_date_updated_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UidInfo::clear_has_date_updated_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UidInfo::clear_date_updated_to() {
  date_updated_to_ = GOOGLE_ULONGLONG(0);
  clear_has_date_updated_to();
}
inline ::google::protobuf::uint64 UidInfo::date_updated_to() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.date_updated_to)
  return date_updated_to_;
}
inline void UidInfo::set_date_updated_to(::google::protobuf::uint64 value) {
  set_has_date_updated_to();
  date_updated_to_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.date_updated_to)
}

// required uint64 date_now = 4;
inline bool UidInfo::has_date_now() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UidInfo::set_has_date_now() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UidInfo::clear_has_date_now() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UidInfo::clear_date_now() {
  date_now_ = GOOGLE_ULONGLONG(0);
  clear_has_date_now();
}
inline ::google::protobuf::uint64 UidInfo::date_now() const {
  // @@protoc_insertion_point(field_get:pb.UidInfo.date_now)
  return date_now_;
}
inline void UidInfo::set_date_now(::google::protobuf::uint64 value) {
  set_has_date_now();
  date_now_ = value;
  // @@protoc_insertion_point(field_set:pb.UidInfo.date_now)
}

// -------------------------------------------------------------------

// UserCoordinates

// required float longitude = 1;
inline bool UserCoordinates::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCoordinates::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCoordinates::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCoordinates::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float UserCoordinates::longitude() const {
  // @@protoc_insertion_point(field_get:pb.UserCoordinates.longitude)
  return longitude_;
}
inline void UserCoordinates::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:pb.UserCoordinates.longitude)
}

// required float latitude = 2;
inline bool UserCoordinates::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCoordinates::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCoordinates::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCoordinates::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float UserCoordinates::latitude() const {
  // @@protoc_insertion_point(field_get:pb.UserCoordinates.latitude)
  return latitude_;
}
inline void UserCoordinates::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:pb.UserCoordinates.latitude)
}

// -------------------------------------------------------------------

// UserInfo

// required uint64 last_visit_ts = 1;
inline bool UserInfo::has_last_visit_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfo::set_has_last_visit_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfo::clear_has_last_visit_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfo::clear_last_visit_ts() {
  last_visit_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_last_visit_ts();
}
inline ::google::protobuf::uint64 UserInfo::last_visit_ts() const {
  // @@protoc_insertion_point(field_get:pb.UserInfo.last_visit_ts)
  return last_visit_ts_;
}
inline void UserInfo::set_last_visit_ts(::google::protobuf::uint64 value) {
  set_has_last_visit_ts();
  last_visit_ts_ = value;
  // @@protoc_insertion_point(field_set:pb.UserInfo.last_visit_ts)
}

// optional .pb.UserCoordinates coordinates = 2;
inline bool UserInfo::has_coordinates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_coordinates() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_coordinates() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_coordinates() {
  if (coordinates_ != NULL) coordinates_->::pb::UserCoordinates::Clear();
  clear_has_coordinates();
}
inline const ::pb::UserCoordinates& UserInfo::coordinates() const {
  const ::pb::UserCoordinates* p = coordinates_;
  // @@protoc_insertion_point(field_get:pb.UserInfo.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::UserCoordinates*>(
      &::pb::_UserCoordinates_default_instance_);
}
inline ::pb::UserCoordinates* UserInfo::mutable_coordinates() {
  set_has_coordinates();
  if (coordinates_ == NULL) {
    coordinates_ = new ::pb::UserCoordinates;
  }
  // @@protoc_insertion_point(field_mutable:pb.UserInfo.coordinates)
  return coordinates_;
}
inline ::pb::UserCoordinates* UserInfo::release_coordinates() {
  // @@protoc_insertion_point(field_release:pb.UserInfo.coordinates)
  clear_has_coordinates();
  ::pb::UserCoordinates* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
inline void UserInfo::set_allocated_coordinates(::pb::UserCoordinates* coordinates) {
  delete coordinates_;
  coordinates_ = coordinates;
  if (coordinates) {
    set_has_coordinates();
  } else {
    clear_has_coordinates();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.UserInfo.coordinates)
}

// -------------------------------------------------------------------

// Interests

// repeated string queries = 1;
inline int Interests::queries_size() const {
  return queries_.size();
}
inline void Interests::clear_queries() {
  queries_.Clear();
}
inline const ::std::string& Interests::queries(int index) const {
  // @@protoc_insertion_point(field_get:pb.Interests.queries)
  return queries_.Get(index);
}
inline ::std::string* Interests::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Interests.queries)
  return queries_.Mutable(index);
}
inline void Interests::set_queries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.Interests.queries)
  queries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interests::set_queries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pb.Interests.queries)
  queries_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interests::set_queries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  queries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.Interests.queries)
}
inline void Interests::set_queries(int index, const char* value, size_t size) {
  queries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.Interests.queries)
}
inline ::std::string* Interests::add_queries() {
  // @@protoc_insertion_point(field_add_mutable:pb.Interests.queries)
  return queries_.Add();
}
inline void Interests::add_queries(const ::std::string& value) {
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.Interests.queries)
}
#if LANG_CXX11
inline void Interests::add_queries(::std::string&& value) {
  queries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb.Interests.queries)
}
#endif
inline void Interests::add_queries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.Interests.queries)
}
inline void Interests::add_queries(const char* value, size_t size) {
  queries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.Interests.queries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interests::queries() const {
  // @@protoc_insertion_point(field_list:pb.Interests.queries)
  return queries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interests::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:pb.Interests.queries)
  return &queries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::YoulaQueryData_SourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::YoulaQueryData_SourceType>() {
  return ::pb::YoulaQueryData_SourceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youla_5fstarter_2eproto__INCLUDED
