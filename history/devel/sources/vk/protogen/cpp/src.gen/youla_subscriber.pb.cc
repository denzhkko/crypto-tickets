// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_subscriber.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youla_subscriber.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UserSubscriptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserSubscription>
     _instance;
} _UserSubscription_default_instance_;
class UserSubscriptionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserSubscriptions>
     _instance;
} _UserSubscriptions_default_instance_;

namespace protobuf_youla_5fsubscriber_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, sid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, search_from_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, created_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, original_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, is_wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscription, ngsid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscriptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscriptions, subscriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscriptions, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSubscriptions, expiration_timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UserSubscription)},
  { 13, -1, sizeof(UserSubscriptions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserSubscription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserSubscriptions_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youla_subscriber.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserSubscription_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserSubscription_default_instance_);_UserSubscriptions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserSubscriptions_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026youla_subscriber.proto\"\257\001\n\020UserSubscri"
      "ption\022\016\n\006params\030\001 \001(\t\022\013\n\003sid\030\002 \001(\004\022\026\n\016se"
      "arch_from_ts\030\003 \001(\004\022\022\n\nexpiration\030\004 \001(\004\022\031"
      "\n\021created_timestamp\030\005 \001(\004\022\027\n\017original_pa"
      "rams\030\006 \001(\t\022\017\n\007is_wide\030\007 \001(\010\022\r\n\005ngsid\030\010 \001"
      "(\004\"h\n\021UserSubscriptions\022(\n\rsubscriptions"
      "\030\001 \003(\0132\021.UserSubscription\022\013\n\003uid\030\002 \001(\t\022\034"
      "\n\024expiration_timestamp\030\003 \001(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youla_subscriber.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_youla_5fsubscriber_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSubscription::kParamsFieldNumber;
const int UserSubscription::kSidFieldNumber;
const int UserSubscription::kSearchFromTsFieldNumber;
const int UserSubscription::kExpirationFieldNumber;
const int UserSubscription::kCreatedTimestampFieldNumber;
const int UserSubscription::kOriginalParamsFieldNumber;
const int UserSubscription::kIsWideFieldNumber;
const int UserSubscription::kNgsidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSubscription::UserSubscription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fsubscriber_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserSubscription)
}
UserSubscription::UserSubscription(const UserSubscription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  original_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_params().size() > 0) {
    original_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_params_);
  }
  ::memcpy(&sid_, &from.sid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_wide_) -
    reinterpret_cast<char*>(&sid_)) + sizeof(is_wide_));
  // @@protoc_insertion_point(copy_constructor:UserSubscription)
}

void UserSubscription::SharedCtor() {
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wide_) -
      reinterpret_cast<char*>(&sid_)) + sizeof(is_wide_));
  _cached_size_ = 0;
}

UserSubscription::~UserSubscription() {
  // @@protoc_insertion_point(destructor:UserSubscription)
  SharedDtor();
}

void UserSubscription::SharedDtor() {
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserSubscription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserSubscription::descriptor() {
  protobuf_youla_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSubscription& UserSubscription::default_instance() {
  protobuf_youla_5fsubscriber_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserSubscription* UserSubscription::New(::google::protobuf::Arena* arena) const {
  UserSubscription* n = new UserSubscription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:UserSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wide_) -
      reinterpret_cast<char*>(&sid_)) + sizeof(is_wide_));
  _internal_metadata_.Clear();
}

bool UserSubscription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserSubscription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params().data(), static_cast<int>(this->params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserSubscription.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 search_from_ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &search_from_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expiration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_params = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_params().data(), static_cast<int>(this->original_params().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserSubscription.original_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_wide = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ngsid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ngsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserSubscription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserSubscription)
  return false;
#undef DO_
}

void UserSubscription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string params = 1;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscription.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->params(), output);
  }

  // uint64 sid = 2;
  if (this->sid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sid(), output);
  }

  // uint64 search_from_ts = 3;
  if (this->search_from_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->search_from_ts(), output);
  }

  // uint64 expiration = 4;
  if (this->expiration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->expiration(), output);
  }

  // uint64 created_timestamp = 5;
  if (this->created_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->created_timestamp(), output);
  }

  // string original_params = 6;
  if (this->original_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_params().data(), static_cast<int>(this->original_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscription.original_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->original_params(), output);
  }

  // bool is_wide = 7;
  if (this->is_wide() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_wide(), output);
  }

  // uint64 ngsid = 8;
  if (this->ngsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->ngsid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UserSubscription)
}

::google::protobuf::uint8* UserSubscription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string params = 1;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscription.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->params(), target);
  }

  // uint64 sid = 2;
  if (this->sid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sid(), target);
  }

  // uint64 search_from_ts = 3;
  if (this->search_from_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->search_from_ts(), target);
  }

  // uint64 expiration = 4;
  if (this->expiration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->expiration(), target);
  }

  // uint64 created_timestamp = 5;
  if (this->created_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->created_timestamp(), target);
  }

  // string original_params = 6;
  if (this->original_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_params().data(), static_cast<int>(this->original_params().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscription.original_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->original_params(), target);
  }

  // bool is_wide = 7;
  if (this->is_wide() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_wide(), target);
  }

  // uint64 ngsid = 8;
  if (this->ngsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->ngsid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserSubscription)
  return target;
}

size_t UserSubscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserSubscription)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string params = 1;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->params());
  }

  // string original_params = 6;
  if (this->original_params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_params());
  }

  // uint64 sid = 2;
  if (this->sid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sid());
  }

  // uint64 search_from_ts = 3;
  if (this->search_from_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->search_from_ts());
  }

  // uint64 expiration = 4;
  if (this->expiration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expiration());
  }

  // uint64 created_timestamp = 5;
  if (this->created_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created_timestamp());
  }

  // uint64 ngsid = 8;
  if (this->ngsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ngsid());
  }

  // bool is_wide = 7;
  if (this->is_wide() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserSubscription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSubscription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSubscription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserSubscription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserSubscription)
    MergeFrom(*source);
  }
}

void UserSubscription::MergeFrom(const UserSubscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.original_params().size() > 0) {

    original_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_params_);
  }
  if (from.sid() != 0) {
    set_sid(from.sid());
  }
  if (from.search_from_ts() != 0) {
    set_search_from_ts(from.search_from_ts());
  }
  if (from.expiration() != 0) {
    set_expiration(from.expiration());
  }
  if (from.created_timestamp() != 0) {
    set_created_timestamp(from.created_timestamp());
  }
  if (from.ngsid() != 0) {
    set_ngsid(from.ngsid());
  }
  if (from.is_wide() != 0) {
    set_is_wide(from.is_wide());
  }
}

void UserSubscription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSubscription::CopyFrom(const UserSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSubscription::IsInitialized() const {
  return true;
}

void UserSubscription::Swap(UserSubscription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserSubscription::InternalSwap(UserSubscription* other) {
  using std::swap;
  params_.Swap(&other->params_);
  original_params_.Swap(&other->original_params_);
  swap(sid_, other->sid_);
  swap(search_from_ts_, other->search_from_ts_);
  swap(expiration_, other->expiration_);
  swap(created_timestamp_, other->created_timestamp_);
  swap(ngsid_, other->ngsid_);
  swap(is_wide_, other->is_wide_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserSubscription::GetMetadata() const {
  protobuf_youla_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserSubscription

// string params = 1;
void UserSubscription::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserSubscription::params() const {
  // @@protoc_insertion_point(field_get:UserSubscription.params)
  return params_.GetNoArena();
}
void UserSubscription::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscription.params)
}
#if LANG_CXX11
void UserSubscription::set_params(::std::string&& value) {
  
  params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscription.params)
}
#endif
void UserSubscription::set_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscription.params)
}
void UserSubscription::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscription.params)
}
::std::string* UserSubscription::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscription.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserSubscription::release_params() {
  // @@protoc_insertion_point(field_release:UserSubscription.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserSubscription::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:UserSubscription.params)
}

// uint64 sid = 2;
void UserSubscription::clear_sid() {
  sid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscription::sid() const {
  // @@protoc_insertion_point(field_get:UserSubscription.sid)
  return sid_;
}
void UserSubscription::set_sid(::google::protobuf::uint64 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.sid)
}

// uint64 search_from_ts = 3;
void UserSubscription::clear_search_from_ts() {
  search_from_ts_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscription::search_from_ts() const {
  // @@protoc_insertion_point(field_get:UserSubscription.search_from_ts)
  return search_from_ts_;
}
void UserSubscription::set_search_from_ts(::google::protobuf::uint64 value) {
  
  search_from_ts_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.search_from_ts)
}

// uint64 expiration = 4;
void UserSubscription::clear_expiration() {
  expiration_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscription::expiration() const {
  // @@protoc_insertion_point(field_get:UserSubscription.expiration)
  return expiration_;
}
void UserSubscription::set_expiration(::google::protobuf::uint64 value) {
  
  expiration_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.expiration)
}

// uint64 created_timestamp = 5;
void UserSubscription::clear_created_timestamp() {
  created_timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscription::created_timestamp() const {
  // @@protoc_insertion_point(field_get:UserSubscription.created_timestamp)
  return created_timestamp_;
}
void UserSubscription::set_created_timestamp(::google::protobuf::uint64 value) {
  
  created_timestamp_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.created_timestamp)
}

// string original_params = 6;
void UserSubscription::clear_original_params() {
  original_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserSubscription::original_params() const {
  // @@protoc_insertion_point(field_get:UserSubscription.original_params)
  return original_params_.GetNoArena();
}
void UserSubscription::set_original_params(const ::std::string& value) {
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscription.original_params)
}
#if LANG_CXX11
void UserSubscription::set_original_params(::std::string&& value) {
  
  original_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscription.original_params)
}
#endif
void UserSubscription::set_original_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscription.original_params)
}
void UserSubscription::set_original_params(const char* value, size_t size) {
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscription.original_params)
}
::std::string* UserSubscription::mutable_original_params() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscription.original_params)
  return original_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserSubscription::release_original_params() {
  // @@protoc_insertion_point(field_release:UserSubscription.original_params)
  
  return original_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserSubscription::set_allocated_original_params(::std::string* original_params) {
  if (original_params != NULL) {
    
  } else {
    
  }
  original_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_params);
  // @@protoc_insertion_point(field_set_allocated:UserSubscription.original_params)
}

// bool is_wide = 7;
void UserSubscription::clear_is_wide() {
  is_wide_ = false;
}
bool UserSubscription::is_wide() const {
  // @@protoc_insertion_point(field_get:UserSubscription.is_wide)
  return is_wide_;
}
void UserSubscription::set_is_wide(bool value) {
  
  is_wide_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.is_wide)
}

// uint64 ngsid = 8;
void UserSubscription::clear_ngsid() {
  ngsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscription::ngsid() const {
  // @@protoc_insertion_point(field_get:UserSubscription.ngsid)
  return ngsid_;
}
void UserSubscription::set_ngsid(::google::protobuf::uint64 value) {
  
  ngsid_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.ngsid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSubscriptions::kSubscriptionsFieldNumber;
const int UserSubscriptions::kUidFieldNumber;
const int UserSubscriptions::kExpirationTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSubscriptions::UserSubscriptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_youla_5fsubscriber_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserSubscriptions)
}
UserSubscriptions::UserSubscriptions(const UserSubscriptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscriptions_(from.subscriptions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  expiration_timestamp_ = from.expiration_timestamp_;
  // @@protoc_insertion_point(copy_constructor:UserSubscriptions)
}

void UserSubscriptions::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_timestamp_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UserSubscriptions::~UserSubscriptions() {
  // @@protoc_insertion_point(destructor:UserSubscriptions)
  SharedDtor();
}

void UserSubscriptions::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserSubscriptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserSubscriptions::descriptor() {
  protobuf_youla_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSubscriptions& UserSubscriptions::default_instance() {
  protobuf_youla_5fsubscriber_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserSubscriptions* UserSubscriptions::New(::google::protobuf::Arena* arena) const {
  UserSubscriptions* n = new UserSubscriptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserSubscriptions::Clear() {
// @@protoc_insertion_point(message_clear_start:UserSubscriptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptions_.Clear();
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UserSubscriptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserSubscriptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserSubscription subscriptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subscriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserSubscriptions.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expiration_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserSubscriptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserSubscriptions)
  return false;
#undef DO_
}

void UserSubscriptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserSubscriptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserSubscription subscriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subscriptions(static_cast<int>(i)), output);
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscriptions.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uid(), output);
  }

  // uint64 expiration_timestamp = 3;
  if (this->expiration_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expiration_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UserSubscriptions)
}

::google::protobuf::uint8* UserSubscriptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserSubscriptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserSubscription subscriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->subscriptions(static_cast<int>(i)), deterministic, target);
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserSubscriptions.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uid(), target);
  }

  // uint64 expiration_timestamp = 3;
  if (this->expiration_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expiration_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserSubscriptions)
  return target;
}

size_t UserSubscriptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserSubscriptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .UserSubscription subscriptions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->subscriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscriptions(static_cast<int>(i)));
    }
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // uint64 expiration_timestamp = 3;
  if (this->expiration_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expiration_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserSubscriptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserSubscriptions)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSubscriptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSubscriptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserSubscriptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserSubscriptions)
    MergeFrom(*source);
  }
}

void UserSubscriptions::MergeFrom(const UserSubscriptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserSubscriptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriptions_.MergeFrom(from.subscriptions_);
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.expiration_timestamp() != 0) {
    set_expiration_timestamp(from.expiration_timestamp());
  }
}

void UserSubscriptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserSubscriptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSubscriptions::CopyFrom(const UserSubscriptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserSubscriptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSubscriptions::IsInitialized() const {
  return true;
}

void UserSubscriptions::Swap(UserSubscriptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserSubscriptions::InternalSwap(UserSubscriptions* other) {
  using std::swap;
  subscriptions_.InternalSwap(&other->subscriptions_);
  uid_.Swap(&other->uid_);
  swap(expiration_timestamp_, other->expiration_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserSubscriptions::GetMetadata() const {
  protobuf_youla_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youla_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserSubscriptions

// repeated .UserSubscription subscriptions = 1;
int UserSubscriptions::subscriptions_size() const {
  return subscriptions_.size();
}
void UserSubscriptions::clear_subscriptions() {
  subscriptions_.Clear();
}
const ::UserSubscription& UserSubscriptions::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.subscriptions)
  return subscriptions_.Get(index);
}
::UserSubscription* UserSubscriptions::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:UserSubscriptions.subscriptions)
  return subscriptions_.Mutable(index);
}
::UserSubscription* UserSubscriptions::add_subscriptions() {
  // @@protoc_insertion_point(field_add:UserSubscriptions.subscriptions)
  return subscriptions_.Add();
}
::google::protobuf::RepeatedPtrField< ::UserSubscription >*
UserSubscriptions::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:UserSubscriptions.subscriptions)
  return &subscriptions_;
}
const ::google::protobuf::RepeatedPtrField< ::UserSubscription >&
UserSubscriptions::subscriptions() const {
  // @@protoc_insertion_point(field_list:UserSubscriptions.subscriptions)
  return subscriptions_;
}

// string uid = 2;
void UserSubscriptions::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserSubscriptions::uid() const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.uid)
  return uid_.GetNoArena();
}
void UserSubscriptions::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscriptions.uid)
}
#if LANG_CXX11
void UserSubscriptions::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscriptions.uid)
}
#endif
void UserSubscriptions::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscriptions.uid)
}
void UserSubscriptions::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscriptions.uid)
}
::std::string* UserSubscriptions::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscriptions.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserSubscriptions::release_uid() {
  // @@protoc_insertion_point(field_release:UserSubscriptions.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserSubscriptions::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:UserSubscriptions.uid)
}

// uint64 expiration_timestamp = 3;
void UserSubscriptions::clear_expiration_timestamp() {
  expiration_timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserSubscriptions::expiration_timestamp() const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.expiration_timestamp)
  return expiration_timestamp_;
}
void UserSubscriptions::set_expiration_timestamp(::google::protobuf::uint64 value) {
  
  expiration_timestamp_ = value;
  // @@protoc_insertion_point(field_set:UserSubscriptions.expiration_timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
