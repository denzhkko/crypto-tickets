// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youla_subscriber.proto

#ifndef PROTOBUF_youla_5fsubscriber_2eproto__INCLUDED
#define PROTOBUF_youla_5fsubscriber_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class UserSubscription;
class UserSubscriptionDefaultTypeInternal;
extern UserSubscriptionDefaultTypeInternal _UserSubscription_default_instance_;
class UserSubscriptions;
class UserSubscriptionsDefaultTypeInternal;
extern UserSubscriptionsDefaultTypeInternal _UserSubscriptions_default_instance_;

namespace protobuf_youla_5fsubscriber_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_youla_5fsubscriber_2eproto

// ===================================================================

class UserSubscription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSubscription) */ {
 public:
  UserSubscription();
  virtual ~UserSubscription();

  UserSubscription(const UserSubscription& from);

  inline UserSubscription& operator=(const UserSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSubscription(UserSubscription&& from) noexcept
    : UserSubscription() {
    *this = ::std::move(from);
  }

  inline UserSubscription& operator=(UserSubscription&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSubscription& default_instance();

  static inline const UserSubscription* internal_default_instance() {
    return reinterpret_cast<const UserSubscription*>(
               &_UserSubscription_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserSubscription* other);
  friend void swap(UserSubscription& a, UserSubscription& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSubscription* New() const PROTOBUF_FINAL { return New(NULL); }

  UserSubscription* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserSubscription& from);
  void MergeFrom(const UserSubscription& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserSubscription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string params = 1;
  void clear_params();
  static const int kParamsFieldNumber = 1;
  const ::std::string& params() const;
  void set_params(const ::std::string& value);
  #if LANG_CXX11
  void set_params(::std::string&& value);
  #endif
  void set_params(const char* value);
  void set_params(const char* value, size_t size);
  ::std::string* mutable_params();
  ::std::string* release_params();
  void set_allocated_params(::std::string* params);

  // string original_params = 6;
  void clear_original_params();
  static const int kOriginalParamsFieldNumber = 6;
  const ::std::string& original_params() const;
  void set_original_params(const ::std::string& value);
  #if LANG_CXX11
  void set_original_params(::std::string&& value);
  #endif
  void set_original_params(const char* value);
  void set_original_params(const char* value, size_t size);
  ::std::string* mutable_original_params();
  ::std::string* release_original_params();
  void set_allocated_original_params(::std::string* original_params);

  // uint64 sid = 2;
  void clear_sid();
  static const int kSidFieldNumber = 2;
  ::google::protobuf::uint64 sid() const;
  void set_sid(::google::protobuf::uint64 value);

  // uint64 search_from_ts = 3;
  void clear_search_from_ts();
  static const int kSearchFromTsFieldNumber = 3;
  ::google::protobuf::uint64 search_from_ts() const;
  void set_search_from_ts(::google::protobuf::uint64 value);

  // uint64 expiration = 4;
  void clear_expiration();
  static const int kExpirationFieldNumber = 4;
  ::google::protobuf::uint64 expiration() const;
  void set_expiration(::google::protobuf::uint64 value);

  // uint64 created_timestamp = 5;
  void clear_created_timestamp();
  static const int kCreatedTimestampFieldNumber = 5;
  ::google::protobuf::uint64 created_timestamp() const;
  void set_created_timestamp(::google::protobuf::uint64 value);

  // uint64 ngsid = 8;
  void clear_ngsid();
  static const int kNgsidFieldNumber = 8;
  ::google::protobuf::uint64 ngsid() const;
  void set_ngsid(::google::protobuf::uint64 value);

  // bool is_wide = 7;
  void clear_is_wide();
  static const int kIsWideFieldNumber = 7;
  bool is_wide() const;
  void set_is_wide(bool value);

  // @@protoc_insertion_point(class_scope:UserSubscription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr params_;
  ::google::protobuf::internal::ArenaStringPtr original_params_;
  ::google::protobuf::uint64 sid_;
  ::google::protobuf::uint64 search_from_ts_;
  ::google::protobuf::uint64 expiration_;
  ::google::protobuf::uint64 created_timestamp_;
  ::google::protobuf::uint64 ngsid_;
  bool is_wide_;
  mutable int _cached_size_;
  friend struct protobuf_youla_5fsubscriber_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSubscriptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSubscriptions) */ {
 public:
  UserSubscriptions();
  virtual ~UserSubscriptions();

  UserSubscriptions(const UserSubscriptions& from);

  inline UserSubscriptions& operator=(const UserSubscriptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSubscriptions(UserSubscriptions&& from) noexcept
    : UserSubscriptions() {
    *this = ::std::move(from);
  }

  inline UserSubscriptions& operator=(UserSubscriptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSubscriptions& default_instance();

  static inline const UserSubscriptions* internal_default_instance() {
    return reinterpret_cast<const UserSubscriptions*>(
               &_UserSubscriptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserSubscriptions* other);
  friend void swap(UserSubscriptions& a, UserSubscriptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSubscriptions* New() const PROTOBUF_FINAL { return New(NULL); }

  UserSubscriptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserSubscriptions& from);
  void MergeFrom(const UserSubscriptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserSubscriptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserSubscription subscriptions = 1;
  int subscriptions_size() const;
  void clear_subscriptions();
  static const int kSubscriptionsFieldNumber = 1;
  const ::UserSubscription& subscriptions(int index) const;
  ::UserSubscription* mutable_subscriptions(int index);
  ::UserSubscription* add_subscriptions();
  ::google::protobuf::RepeatedPtrField< ::UserSubscription >*
      mutable_subscriptions();
  const ::google::protobuf::RepeatedPtrField< ::UserSubscription >&
      subscriptions() const;

  // string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // uint64 expiration_timestamp = 3;
  void clear_expiration_timestamp();
  static const int kExpirationTimestampFieldNumber = 3;
  ::google::protobuf::uint64 expiration_timestamp() const;
  void set_expiration_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:UserSubscriptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::UserSubscription > subscriptions_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint64 expiration_timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_youla_5fsubscriber_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserSubscription

// string params = 1;
inline void UserSubscription::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserSubscription::params() const {
  // @@protoc_insertion_point(field_get:UserSubscription.params)
  return params_.GetNoArena();
}
inline void UserSubscription::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscription.params)
}
#if LANG_CXX11
inline void UserSubscription::set_params(::std::string&& value) {
  
  params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscription.params)
}
#endif
inline void UserSubscription::set_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscription.params)
}
inline void UserSubscription::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscription.params)
}
inline ::std::string* UserSubscription::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscription.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserSubscription::release_params() {
  // @@protoc_insertion_point(field_release:UserSubscription.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserSubscription::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:UserSubscription.params)
}

// uint64 sid = 2;
inline void UserSubscription::clear_sid() {
  sid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscription::sid() const {
  // @@protoc_insertion_point(field_get:UserSubscription.sid)
  return sid_;
}
inline void UserSubscription::set_sid(::google::protobuf::uint64 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.sid)
}

// uint64 search_from_ts = 3;
inline void UserSubscription::clear_search_from_ts() {
  search_from_ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscription::search_from_ts() const {
  // @@protoc_insertion_point(field_get:UserSubscription.search_from_ts)
  return search_from_ts_;
}
inline void UserSubscription::set_search_from_ts(::google::protobuf::uint64 value) {
  
  search_from_ts_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.search_from_ts)
}

// uint64 expiration = 4;
inline void UserSubscription::clear_expiration() {
  expiration_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscription::expiration() const {
  // @@protoc_insertion_point(field_get:UserSubscription.expiration)
  return expiration_;
}
inline void UserSubscription::set_expiration(::google::protobuf::uint64 value) {
  
  expiration_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.expiration)
}

// uint64 created_timestamp = 5;
inline void UserSubscription::clear_created_timestamp() {
  created_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscription::created_timestamp() const {
  // @@protoc_insertion_point(field_get:UserSubscription.created_timestamp)
  return created_timestamp_;
}
inline void UserSubscription::set_created_timestamp(::google::protobuf::uint64 value) {
  
  created_timestamp_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.created_timestamp)
}

// string original_params = 6;
inline void UserSubscription::clear_original_params() {
  original_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserSubscription::original_params() const {
  // @@protoc_insertion_point(field_get:UserSubscription.original_params)
  return original_params_.GetNoArena();
}
inline void UserSubscription::set_original_params(const ::std::string& value) {
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscription.original_params)
}
#if LANG_CXX11
inline void UserSubscription::set_original_params(::std::string&& value) {
  
  original_params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscription.original_params)
}
#endif
inline void UserSubscription::set_original_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscription.original_params)
}
inline void UserSubscription::set_original_params(const char* value, size_t size) {
  
  original_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscription.original_params)
}
inline ::std::string* UserSubscription::mutable_original_params() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscription.original_params)
  return original_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserSubscription::release_original_params() {
  // @@protoc_insertion_point(field_release:UserSubscription.original_params)
  
  return original_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserSubscription::set_allocated_original_params(::std::string* original_params) {
  if (original_params != NULL) {
    
  } else {
    
  }
  original_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_params);
  // @@protoc_insertion_point(field_set_allocated:UserSubscription.original_params)
}

// bool is_wide = 7;
inline void UserSubscription::clear_is_wide() {
  is_wide_ = false;
}
inline bool UserSubscription::is_wide() const {
  // @@protoc_insertion_point(field_get:UserSubscription.is_wide)
  return is_wide_;
}
inline void UserSubscription::set_is_wide(bool value) {
  
  is_wide_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.is_wide)
}

// uint64 ngsid = 8;
inline void UserSubscription::clear_ngsid() {
  ngsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscription::ngsid() const {
  // @@protoc_insertion_point(field_get:UserSubscription.ngsid)
  return ngsid_;
}
inline void UserSubscription::set_ngsid(::google::protobuf::uint64 value) {
  
  ngsid_ = value;
  // @@protoc_insertion_point(field_set:UserSubscription.ngsid)
}

// -------------------------------------------------------------------

// UserSubscriptions

// repeated .UserSubscription subscriptions = 1;
inline int UserSubscriptions::subscriptions_size() const {
  return subscriptions_.size();
}
inline void UserSubscriptions::clear_subscriptions() {
  subscriptions_.Clear();
}
inline const ::UserSubscription& UserSubscriptions::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.subscriptions)
  return subscriptions_.Get(index);
}
inline ::UserSubscription* UserSubscriptions::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:UserSubscriptions.subscriptions)
  return subscriptions_.Mutable(index);
}
inline ::UserSubscription* UserSubscriptions::add_subscriptions() {
  // @@protoc_insertion_point(field_add:UserSubscriptions.subscriptions)
  return subscriptions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserSubscription >*
UserSubscriptions::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:UserSubscriptions.subscriptions)
  return &subscriptions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSubscription >&
UserSubscriptions::subscriptions() const {
  // @@protoc_insertion_point(field_list:UserSubscriptions.subscriptions)
  return subscriptions_;
}

// string uid = 2;
inline void UserSubscriptions::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserSubscriptions::uid() const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.uid)
  return uid_.GetNoArena();
}
inline void UserSubscriptions::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserSubscriptions.uid)
}
#if LANG_CXX11
inline void UserSubscriptions::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserSubscriptions.uid)
}
#endif
inline void UserSubscriptions::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserSubscriptions.uid)
}
inline void UserSubscriptions::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserSubscriptions.uid)
}
inline ::std::string* UserSubscriptions::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:UserSubscriptions.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserSubscriptions::release_uid() {
  // @@protoc_insertion_point(field_release:UserSubscriptions.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserSubscriptions::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:UserSubscriptions.uid)
}

// uint64 expiration_timestamp = 3;
inline void UserSubscriptions::clear_expiration_timestamp() {
  expiration_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserSubscriptions::expiration_timestamp() const {
  // @@protoc_insertion_point(field_get:UserSubscriptions.expiration_timestamp)
  return expiration_timestamp_;
}
inline void UserSubscriptions::set_expiration_timestamp(::google::protobuf::uint64 value) {
  
  expiration_timestamp_ = value;
  // @@protoc_insertion_point(field_set:UserSubscriptions.expiration_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youla_5fsubscriber_2eproto__INCLUDED
