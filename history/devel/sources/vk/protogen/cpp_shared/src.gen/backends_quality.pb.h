// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backends_quality.proto

#ifndef PROTOBUF_backends_5fquality_2eproto__INCLUDED
#define PROTOBUF_backends_5fquality_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace backends_quality {
namespace pb {
class BackendsQuality;
class BackendsQualityDefaultTypeInternal;
extern BackendsQualityDefaultTypeInternal _BackendsQuality_default_instance_;
class FailedBackend;
class FailedBackendDefaultTypeInternal;
extern FailedBackendDefaultTypeInternal _FailedBackend_default_instance_;
}  // namespace pb
}  // namespace backends_quality

namespace backends_quality {
namespace pb {

namespace protobuf_backends_5fquality_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_backends_5fquality_2eproto

// ===================================================================

class FailedBackend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:backends_quality.pb.FailedBackend) */ {
 public:
  FailedBackend();
  virtual ~FailedBackend();

  FailedBackend(const FailedBackend& from);

  inline FailedBackend& operator=(const FailedBackend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FailedBackend(FailedBackend&& from) noexcept
    : FailedBackend() {
    *this = ::std::move(from);
  }

  inline FailedBackend& operator=(FailedBackend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FailedBackend& default_instance();

  static inline const FailedBackend* internal_default_instance() {
    return reinterpret_cast<const FailedBackend*>(
               &_FailedBackend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FailedBackend* other);
  friend void swap(FailedBackend& a, FailedBackend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FailedBackend* New() const PROTOBUF_FINAL { return New(NULL); }

  FailedBackend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FailedBackend& from);
  void MergeFrom(const FailedBackend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FailedBackend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:backends_quality.pb.FailedBackend)
 private:
  void set_has_host();
  void clear_has_host();
  void set_has_description();
  void clear_has_description();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  friend struct protobuf_backends_5fquality_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackendsQuality : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:backends_quality.pb.BackendsQuality) */ {
 public:
  BackendsQuality();
  virtual ~BackendsQuality();

  BackendsQuality(const BackendsQuality& from);

  inline BackendsQuality& operator=(const BackendsQuality& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackendsQuality(BackendsQuality&& from) noexcept
    : BackendsQuality() {
    *this = ::std::move(from);
  }

  inline BackendsQuality& operator=(BackendsQuality&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackendsQuality& default_instance();

  static inline const BackendsQuality* internal_default_instance() {
    return reinterpret_cast<const BackendsQuality*>(
               &_BackendsQuality_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(BackendsQuality* other);
  friend void swap(BackendsQuality& a, BackendsQuality& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackendsQuality* New() const PROTOBUF_FINAL { return New(NULL); }

  BackendsQuality* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackendsQuality& from);
  void MergeFrom(const BackendsQuality& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackendsQuality* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .backends_quality.pb.FailedBackend failed_backends = 2;
  int failed_backends_size() const;
  void clear_failed_backends();
  static const int kFailedBackendsFieldNumber = 2;
  const ::backends_quality::pb::FailedBackend& failed_backends(int index) const;
  ::backends_quality::pb::FailedBackend* mutable_failed_backends(int index);
  ::backends_quality::pb::FailedBackend* add_failed_backends();
  ::google::protobuf::RepeatedPtrField< ::backends_quality::pb::FailedBackend >*
      mutable_failed_backends();
  const ::google::protobuf::RepeatedPtrField< ::backends_quality::pb::FailedBackend >&
      failed_backends() const;

  // optional uint64 successful_backends_count = 1;
  bool has_successful_backends_count() const;
  void clear_successful_backends_count();
  static const int kSuccessfulBackendsCountFieldNumber = 1;
  ::google::protobuf::uint64 successful_backends_count() const;
  void set_successful_backends_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:backends_quality.pb.BackendsQuality)
 private:
  void set_has_successful_backends_count();
  void clear_has_successful_backends_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::backends_quality::pb::FailedBackend > failed_backends_;
  ::google::protobuf::uint64 successful_backends_count_;
  friend struct protobuf_backends_5fquality_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FailedBackend

// optional string host = 1;
inline bool FailedBackend::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FailedBackend::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FailedBackend::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FailedBackend::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& FailedBackend::host() const {
  // @@protoc_insertion_point(field_get:backends_quality.pb.FailedBackend.host)
  return host_.GetNoArena();
}
inline void FailedBackend::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:backends_quality.pb.FailedBackend.host)
}
#if LANG_CXX11
inline void FailedBackend::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:backends_quality.pb.FailedBackend.host)
}
#endif
inline void FailedBackend::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:backends_quality.pb.FailedBackend.host)
}
inline void FailedBackend::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:backends_quality.pb.FailedBackend.host)
}
inline ::std::string* FailedBackend::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:backends_quality.pb.FailedBackend.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FailedBackend::release_host() {
  // @@protoc_insertion_point(field_release:backends_quality.pb.FailedBackend.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FailedBackend::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:backends_quality.pb.FailedBackend.host)
}

// optional string description = 2;
inline bool FailedBackend::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FailedBackend::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FailedBackend::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FailedBackend::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& FailedBackend::description() const {
  // @@protoc_insertion_point(field_get:backends_quality.pb.FailedBackend.description)
  return description_.GetNoArena();
}
inline void FailedBackend::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:backends_quality.pb.FailedBackend.description)
}
#if LANG_CXX11
inline void FailedBackend::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:backends_quality.pb.FailedBackend.description)
}
#endif
inline void FailedBackend::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:backends_quality.pb.FailedBackend.description)
}
inline void FailedBackend::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:backends_quality.pb.FailedBackend.description)
}
inline ::std::string* FailedBackend::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:backends_quality.pb.FailedBackend.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FailedBackend::release_description() {
  // @@protoc_insertion_point(field_release:backends_quality.pb.FailedBackend.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FailedBackend::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:backends_quality.pb.FailedBackend.description)
}

// -------------------------------------------------------------------

// BackendsQuality

// optional uint64 successful_backends_count = 1;
inline bool BackendsQuality::has_successful_backends_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BackendsQuality::set_has_successful_backends_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BackendsQuality::clear_has_successful_backends_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BackendsQuality::clear_successful_backends_count() {
  successful_backends_count_ = GOOGLE_ULONGLONG(0);
  clear_has_successful_backends_count();
}
inline ::google::protobuf::uint64 BackendsQuality::successful_backends_count() const {
  // @@protoc_insertion_point(field_get:backends_quality.pb.BackendsQuality.successful_backends_count)
  return successful_backends_count_;
}
inline void BackendsQuality::set_successful_backends_count(::google::protobuf::uint64 value) {
  set_has_successful_backends_count();
  successful_backends_count_ = value;
  // @@protoc_insertion_point(field_set:backends_quality.pb.BackendsQuality.successful_backends_count)
}

// repeated .backends_quality.pb.FailedBackend failed_backends = 2;
inline int BackendsQuality::failed_backends_size() const {
  return failed_backends_.size();
}
inline void BackendsQuality::clear_failed_backends() {
  failed_backends_.Clear();
}
inline const ::backends_quality::pb::FailedBackend& BackendsQuality::failed_backends(int index) const {
  // @@protoc_insertion_point(field_get:backends_quality.pb.BackendsQuality.failed_backends)
  return failed_backends_.Get(index);
}
inline ::backends_quality::pb::FailedBackend* BackendsQuality::mutable_failed_backends(int index) {
  // @@protoc_insertion_point(field_mutable:backends_quality.pb.BackendsQuality.failed_backends)
  return failed_backends_.Mutable(index);
}
inline ::backends_quality::pb::FailedBackend* BackendsQuality::add_failed_backends() {
  // @@protoc_insertion_point(field_add:backends_quality.pb.BackendsQuality.failed_backends)
  return failed_backends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::backends_quality::pb::FailedBackend >*
BackendsQuality::mutable_failed_backends() {
  // @@protoc_insertion_point(field_mutable_list:backends_quality.pb.BackendsQuality.failed_backends)
  return &failed_backends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::backends_quality::pb::FailedBackend >&
BackendsQuality::failed_backends() const {
  // @@protoc_insertion_point(field_list:backends_quality.pb.BackendsQuality.failed_backends)
  return failed_backends_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace backends_quality

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_backends_5fquality_2eproto__INCLUDED
