// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bongd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bongd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bongd {
class SnippetStruct_ImageStructDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SnippetStruct_ImageStruct>
     _instance;
} _SnippetStruct_ImageStruct_default_instance_;
class SnippetStruct_CustomFieldStructDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SnippetStruct_CustomFieldStruct>
     _instance;
} _SnippetStruct_CustomFieldStruct_default_instance_;
class SnippetStruct_MetaDataStructDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SnippetStruct_MetaDataStruct>
     _instance;
} _SnippetStruct_MetaDataStruct_default_instance_;
class SnippetStructDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SnippetStruct>
     _instance;
} _SnippetStruct_default_instance_;

namespace protobuf_bongd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, orig_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, srch_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, orig_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, orig_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_ImageStruct, orig_height_),
  0,
  1,
  3,
  4,
  2,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_CustomFieldStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_CustomFieldStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_CustomFieldStruct, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_CustomFieldStruct, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_MetaDataStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_MetaDataStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_MetaDataStruct, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct_MetaDataStruct, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, snippet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, fetch_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, creation_qid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, creation_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, favicon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, is_handmade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, redirect_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, has_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, layer_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, layer_images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, is_vydra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, custom_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, meta_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, is_dynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, layer_words_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, vk_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, from_amp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, layer_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, layer_footer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, vk_image_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, creation_error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, http_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnippetStruct, duration_),
  0,
  1,
  2,
  12,
  ~0u,
  3,
  4,
  10,
  5,
  13,
  6,
  14,
  7,
  ~0u,
  15,
  ~0u,
  ~0u,
  16,
  17,
  11,
  18,
  8,
  9,
  ~0u,
  19,
  20,
  21,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(SnippetStruct_ImageStruct)},
  { 21, 28, sizeof(SnippetStruct_CustomFieldStruct)},
  { 30, 37, sizeof(SnippetStruct_MetaDataStruct)},
  { 39, 71, sizeof(SnippetStruct)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnippetStruct_ImageStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnippetStruct_CustomFieldStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnippetStruct_MetaDataStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnippetStruct_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bongd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SnippetStruct_ImageStruct_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SnippetStruct_ImageStruct_default_instance_);_SnippetStruct_CustomFieldStruct_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SnippetStruct_CustomFieldStruct_default_instance_);_SnippetStruct_MetaDataStruct_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SnippetStruct_MetaDataStruct_default_instance_);_SnippetStruct_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SnippetStruct_default_instance_);_SnippetStruct_default_instance_._instance.get_mutable()->favicon_ = const_cast< ::bongd::SnippetStruct_ImageStruct*>(
      ::bongd::SnippetStruct_ImageStruct::internal_default_instance());
  _SnippetStruct_default_instance_._instance.get_mutable()->vk_image_ = const_cast< ::bongd::SnippetStruct_ImageStruct*>(
      ::bongd::SnippetStruct_ImageStruct::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013bongd.proto\022\005bongd\"\247\010\n\rSnippetStruct\022\013"
      "\n\003url\030\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\017\n\007snippet\030\003 "
      "\001(\t\022\020\n\010fetch_ts\030\004 \002(\r\0220\n\006images\030\005 \003(\0132 ."
      "bongd.SnippetStruct.ImageStruct\022\024\n\014creat"
      "ion_qid\030\006 \001(\t\022\026\n\016creation_error\030\007 \001(\t\0221\n"
      "\007favicon\030\010 \001(\0132 .bongd.SnippetStruct.Ima"
      "geStruct\022\024\n\014content_type\030\t \001(\t\022\023\n\013is_han"
      "dmade\030\n \001(\010\022\024\n\014redirect_url\030\013 \001(\t\022\021\n\thas"
      "_layer\030\014 \001(\010\022\022\n\nlayer_html\030\r \001(\014\0226\n\014laye"
      "r_images\030\016 \003(\0132 .bongd.SnippetStruct.Ima"
      "geStruct\022\020\n\010is_vydra\030\017 \001(\010\022=\n\rcustom_fie"
      "lds\030\020 \003(\0132&.bongd.SnippetStruct.CustomFi"
      "eldStruct\0226\n\tmeta_data\030\021 \003(\0132#.bongd.Sni"
      "ppetStruct.MetaDataStruct\022\022\n\nis_dynamic\030"
      "\022 \001(\010\022\031\n\021layer_words_count\030\023 \001(\005\0222\n\010vk_i"
      "mage\030\024 \001(\0132 .bongd.SnippetStruct.ImageSt"
      "ruct\022\020\n\010from_amp\030\025 \001(\010\022\024\n\014layer_header\030\026"
      " \001(\t\022\024\n\014layer_footer\030\027 \001(\t\0228\n\016vk_image_a"
      "rray\030\030 \003(\0132 .bongd.SnippetStruct.ImageSt"
      "ruct\022\033\n\023creation_error_code\030\031 \001(\005\022\021\n\thtt"
      "p_code\030\032 \001(\005\022\020\n\010duration\030\033 \001(\005\032\234\001\n\013Image"
      "Struct\022\020\n\010orig_url\030\001 \002(\t\022\020\n\010srch_key\030\002 \002"
      "(\t\022\r\n\005width\030\003 \002(\r\022\016\n\006height\030\004 \002(\r\022\016\n\006for"
      "mat\030\005 \002(\t\022\021\n\torig_size\030\006 \001(\r\022\022\n\norig_wid"
      "th\030\007 \001(\r\022\023\n\013orig_height\030\010 \001(\r\0320\n\021CustomF"
      "ieldStruct\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \001(\t\032"
      "-\n\016MetaDataStruct\022\014\n\004name\030\001 \002(\t\022\r\n\005value"
      "\030\002 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1086);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bongd.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_bongd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnippetStruct_ImageStruct::kOrigUrlFieldNumber;
const int SnippetStruct_ImageStruct::kSrchKeyFieldNumber;
const int SnippetStruct_ImageStruct::kWidthFieldNumber;
const int SnippetStruct_ImageStruct::kHeightFieldNumber;
const int SnippetStruct_ImageStruct::kFormatFieldNumber;
const int SnippetStruct_ImageStruct::kOrigSizeFieldNumber;
const int SnippetStruct_ImageStruct::kOrigWidthFieldNumber;
const int SnippetStruct_ImageStruct::kOrigHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnippetStruct_ImageStruct::SnippetStruct_ImageStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bongd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bongd.SnippetStruct.ImageStruct)
}
SnippetStruct_ImageStruct::SnippetStruct_ImageStruct(const SnippetStruct_ImageStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  orig_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orig_url()) {
    orig_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_url_);
  }
  srch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_srch_key()) {
    srch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srch_key_);
  }
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_format()) {
    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&orig_height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(orig_height_));
  // @@protoc_insertion_point(copy_constructor:bongd.SnippetStruct.ImageStruct)
}

void SnippetStruct_ImageStruct::SharedCtor() {
  _cached_size_ = 0;
  orig_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orig_height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(orig_height_));
}

SnippetStruct_ImageStruct::~SnippetStruct_ImageStruct() {
  // @@protoc_insertion_point(destructor:bongd.SnippetStruct.ImageStruct)
  SharedDtor();
}

void SnippetStruct_ImageStruct::SharedDtor() {
  orig_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srch_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SnippetStruct_ImageStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnippetStruct_ImageStruct::descriptor() {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnippetStruct_ImageStruct& SnippetStruct_ImageStruct::default_instance() {
  protobuf_bongd_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnippetStruct_ImageStruct* SnippetStruct_ImageStruct::New(::google::protobuf::Arena* arena) const {
  SnippetStruct_ImageStruct* n = new SnippetStruct_ImageStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnippetStruct_ImageStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:bongd.SnippetStruct.ImageStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!orig_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*orig_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!srch_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*srch_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!format_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*format_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&orig_height_) -
        reinterpret_cast<char*>(&width_)) + sizeof(orig_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnippetStruct_ImageStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bongd.SnippetStruct.ImageStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string orig_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orig_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orig_url().data(), static_cast<int>(this->orig_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.ImageStruct.orig_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string srch_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srch_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srch_key().data(), static_cast<int>(this->srch_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.ImageStruct.srch_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string format = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->format().data(), static_cast<int>(this->format().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.ImageStruct.format");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 orig_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_orig_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orig_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 orig_width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_orig_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orig_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 orig_height = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_orig_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orig_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bongd.SnippetStruct.ImageStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bongd.SnippetStruct.ImageStruct)
  return false;
#undef DO_
}

void SnippetStruct_ImageStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bongd.SnippetStruct.ImageStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string orig_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_url().data(), static_cast<int>(this->orig_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.orig_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orig_url(), output);
  }

  // required string srch_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srch_key().data(), static_cast<int>(this->srch_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.srch_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srch_key(), output);
  }

  // required uint32 width = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // required uint32 height = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // required string format = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->format(), output);
  }

  // optional uint32 orig_size = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->orig_size(), output);
  }

  // optional uint32 orig_width = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->orig_width(), output);
  }

  // optional uint32 orig_height = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->orig_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bongd.SnippetStruct.ImageStruct)
}

::google::protobuf::uint8* SnippetStruct_ImageStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bongd.SnippetStruct.ImageStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string orig_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_url().data(), static_cast<int>(this->orig_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.orig_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orig_url(), target);
  }

  // required string srch_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srch_key().data(), static_cast<int>(this->srch_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.srch_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srch_key(), target);
  }

  // required uint32 width = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // required uint32 height = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // required string format = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.ImageStruct.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->format(), target);
  }

  // optional uint32 orig_size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->orig_size(), target);
  }

  // optional uint32 orig_width = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->orig_width(), target);
  }

  // optional uint32 orig_height = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->orig_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bongd.SnippetStruct.ImageStruct)
  return target;
}

size_t SnippetStruct_ImageStruct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bongd.SnippetStruct.ImageStruct)
  size_t total_size = 0;

  if (has_orig_url()) {
    // required string orig_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orig_url());
  }

  if (has_srch_key()) {
    // required string srch_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srch_key());
  }

  if (has_format()) {
    // required string format = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  if (has_width()) {
    // required uint32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  if (has_height()) {
    // required uint32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  return total_size;
}
size_t SnippetStruct_ImageStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bongd.SnippetStruct.ImageStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string orig_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orig_url());

    // required string srch_key = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srch_key());

    // required string format = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());

    // required uint32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());

    // required uint32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional uint32 orig_size = 6;
    if (has_orig_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orig_size());
    }

    // optional uint32 orig_width = 7;
    if (has_orig_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orig_width());
    }

    // optional uint32 orig_height = 8;
    if (has_orig_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orig_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnippetStruct_ImageStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bongd.SnippetStruct.ImageStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const SnippetStruct_ImageStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnippetStruct_ImageStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bongd.SnippetStruct.ImageStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bongd.SnippetStruct.ImageStruct)
    MergeFrom(*source);
  }
}

void SnippetStruct_ImageStruct::MergeFrom(const SnippetStruct_ImageStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bongd.SnippetStruct.ImageStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_orig_url();
      orig_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orig_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_srch_key();
      srch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srch_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_format();
      format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
    }
    if (cached_has_bits & 0x00000008u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000020u) {
      orig_size_ = from.orig_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      orig_width_ = from.orig_width_;
    }
    if (cached_has_bits & 0x00000080u) {
      orig_height_ = from.orig_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SnippetStruct_ImageStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bongd.SnippetStruct.ImageStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnippetStruct_ImageStruct::CopyFrom(const SnippetStruct_ImageStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bongd.SnippetStruct.ImageStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnippetStruct_ImageStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void SnippetStruct_ImageStruct::Swap(SnippetStruct_ImageStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnippetStruct_ImageStruct::InternalSwap(SnippetStruct_ImageStruct* other) {
  using std::swap;
  orig_url_.Swap(&other->orig_url_);
  srch_key_.Swap(&other->srch_key_);
  format_.Swap(&other->format_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(orig_size_, other->orig_size_);
  swap(orig_width_, other->orig_width_);
  swap(orig_height_, other->orig_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnippetStruct_ImageStruct::GetMetadata() const {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnippetStruct_ImageStruct

// required string orig_url = 1;
bool SnippetStruct_ImageStruct::has_orig_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnippetStruct_ImageStruct::set_has_orig_url() {
  _has_bits_[0] |= 0x00000001u;
}
void SnippetStruct_ImageStruct::clear_has_orig_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnippetStruct_ImageStruct::clear_orig_url() {
  orig_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orig_url();
}
const ::std::string& SnippetStruct_ImageStruct::orig_url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_url)
  return orig_url_.GetNoArena();
}
void SnippetStruct_ImageStruct::set_orig_url(const ::std::string& value) {
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_url)
}
#if LANG_CXX11
void SnippetStruct_ImageStruct::set_orig_url(::std::string&& value) {
  set_has_orig_url();
  orig_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.orig_url)
}
#endif
void SnippetStruct_ImageStruct::set_orig_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.orig_url)
}
void SnippetStruct_ImageStruct::set_orig_url(const char* value, size_t size) {
  set_has_orig_url();
  orig_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.orig_url)
}
::std::string* SnippetStruct_ImageStruct::mutable_orig_url() {
  set_has_orig_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.orig_url)
  return orig_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_ImageStruct::release_orig_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.orig_url)
  clear_has_orig_url();
  return orig_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_ImageStruct::set_allocated_orig_url(::std::string* orig_url) {
  if (orig_url != NULL) {
    set_has_orig_url();
  } else {
    clear_has_orig_url();
  }
  orig_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orig_url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.orig_url)
}

// required string srch_key = 2;
bool SnippetStruct_ImageStruct::has_srch_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnippetStruct_ImageStruct::set_has_srch_key() {
  _has_bits_[0] |= 0x00000002u;
}
void SnippetStruct_ImageStruct::clear_has_srch_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnippetStruct_ImageStruct::clear_srch_key() {
  srch_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_srch_key();
}
const ::std::string& SnippetStruct_ImageStruct::srch_key() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.srch_key)
  return srch_key_.GetNoArena();
}
void SnippetStruct_ImageStruct::set_srch_key(const ::std::string& value) {
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.srch_key)
}
#if LANG_CXX11
void SnippetStruct_ImageStruct::set_srch_key(::std::string&& value) {
  set_has_srch_key();
  srch_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.srch_key)
}
#endif
void SnippetStruct_ImageStruct::set_srch_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.srch_key)
}
void SnippetStruct_ImageStruct::set_srch_key(const char* value, size_t size) {
  set_has_srch_key();
  srch_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.srch_key)
}
::std::string* SnippetStruct_ImageStruct::mutable_srch_key() {
  set_has_srch_key();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.srch_key)
  return srch_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_ImageStruct::release_srch_key() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.srch_key)
  clear_has_srch_key();
  return srch_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_ImageStruct::set_allocated_srch_key(::std::string* srch_key) {
  if (srch_key != NULL) {
    set_has_srch_key();
  } else {
    clear_has_srch_key();
  }
  srch_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srch_key);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.srch_key)
}

// required uint32 width = 3;
bool SnippetStruct_ImageStruct::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SnippetStruct_ImageStruct::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
void SnippetStruct_ImageStruct::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
void SnippetStruct_ImageStruct::clear_width() {
  width_ = 0u;
  clear_has_width();
}
::google::protobuf::uint32 SnippetStruct_ImageStruct::width() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.width)
  return width_;
}
void SnippetStruct_ImageStruct::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.width)
}

// required uint32 height = 4;
bool SnippetStruct_ImageStruct::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SnippetStruct_ImageStruct::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
void SnippetStruct_ImageStruct::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
void SnippetStruct_ImageStruct::clear_height() {
  height_ = 0u;
  clear_has_height();
}
::google::protobuf::uint32 SnippetStruct_ImageStruct::height() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.height)
  return height_;
}
void SnippetStruct_ImageStruct::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.height)
}

// required string format = 5;
bool SnippetStruct_ImageStruct::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SnippetStruct_ImageStruct::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
void SnippetStruct_ImageStruct::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
void SnippetStruct_ImageStruct::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_format();
}
const ::std::string& SnippetStruct_ImageStruct::format() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.format)
  return format_.GetNoArena();
}
void SnippetStruct_ImageStruct::set_format(const ::std::string& value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.format)
}
#if LANG_CXX11
void SnippetStruct_ImageStruct::set_format(::std::string&& value) {
  set_has_format();
  format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.ImageStruct.format)
}
#endif
void SnippetStruct_ImageStruct::set_format(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.ImageStruct.format)
}
void SnippetStruct_ImageStruct::set_format(const char* value, size_t size) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.ImageStruct.format)
}
::std::string* SnippetStruct_ImageStruct::mutable_format() {
  set_has_format();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.ImageStruct.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_ImageStruct::release_format() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.ImageStruct.format)
  clear_has_format();
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_ImageStruct::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    set_has_format();
  } else {
    clear_has_format();
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.ImageStruct.format)
}

// optional uint32 orig_size = 6;
bool SnippetStruct_ImageStruct::has_orig_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SnippetStruct_ImageStruct::set_has_orig_size() {
  _has_bits_[0] |= 0x00000020u;
}
void SnippetStruct_ImageStruct::clear_has_orig_size() {
  _has_bits_[0] &= ~0x00000020u;
}
void SnippetStruct_ImageStruct::clear_orig_size() {
  orig_size_ = 0u;
  clear_has_orig_size();
}
::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_size() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_size)
  return orig_size_;
}
void SnippetStruct_ImageStruct::set_orig_size(::google::protobuf::uint32 value) {
  set_has_orig_size();
  orig_size_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_size)
}

// optional uint32 orig_width = 7;
bool SnippetStruct_ImageStruct::has_orig_width() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SnippetStruct_ImageStruct::set_has_orig_width() {
  _has_bits_[0] |= 0x00000040u;
}
void SnippetStruct_ImageStruct::clear_has_orig_width() {
  _has_bits_[0] &= ~0x00000040u;
}
void SnippetStruct_ImageStruct::clear_orig_width() {
  orig_width_ = 0u;
  clear_has_orig_width();
}
::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_width() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_width)
  return orig_width_;
}
void SnippetStruct_ImageStruct::set_orig_width(::google::protobuf::uint32 value) {
  set_has_orig_width();
  orig_width_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_width)
}

// optional uint32 orig_height = 8;
bool SnippetStruct_ImageStruct::has_orig_height() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SnippetStruct_ImageStruct::set_has_orig_height() {
  _has_bits_[0] |= 0x00000080u;
}
void SnippetStruct_ImageStruct::clear_has_orig_height() {
  _has_bits_[0] &= ~0x00000080u;
}
void SnippetStruct_ImageStruct::clear_orig_height() {
  orig_height_ = 0u;
  clear_has_orig_height();
}
::google::protobuf::uint32 SnippetStruct_ImageStruct::orig_height() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.ImageStruct.orig_height)
  return orig_height_;
}
void SnippetStruct_ImageStruct::set_orig_height(::google::protobuf::uint32 value) {
  set_has_orig_height();
  orig_height_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.ImageStruct.orig_height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnippetStruct_CustomFieldStruct::kNameFieldNumber;
const int SnippetStruct_CustomFieldStruct::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnippetStruct_CustomFieldStruct::SnippetStruct_CustomFieldStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bongd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bongd.SnippetStruct.CustomFieldStruct)
}
SnippetStruct_CustomFieldStruct::SnippetStruct_CustomFieldStruct(const SnippetStruct_CustomFieldStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:bongd.SnippetStruct.CustomFieldStruct)
}

void SnippetStruct_CustomFieldStruct::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SnippetStruct_CustomFieldStruct::~SnippetStruct_CustomFieldStruct() {
  // @@protoc_insertion_point(destructor:bongd.SnippetStruct.CustomFieldStruct)
  SharedDtor();
}

void SnippetStruct_CustomFieldStruct::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SnippetStruct_CustomFieldStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnippetStruct_CustomFieldStruct::descriptor() {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnippetStruct_CustomFieldStruct& SnippetStruct_CustomFieldStruct::default_instance() {
  protobuf_bongd_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnippetStruct_CustomFieldStruct* SnippetStruct_CustomFieldStruct::New(::google::protobuf::Arena* arena) const {
  SnippetStruct_CustomFieldStruct* n = new SnippetStruct_CustomFieldStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnippetStruct_CustomFieldStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:bongd.SnippetStruct.CustomFieldStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnippetStruct_CustomFieldStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bongd.SnippetStruct.CustomFieldStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.CustomFieldStruct.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.CustomFieldStruct.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bongd.SnippetStruct.CustomFieldStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bongd.SnippetStruct.CustomFieldStruct)
  return false;
#undef DO_
}

void SnippetStruct_CustomFieldStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bongd.SnippetStruct.CustomFieldStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.CustomFieldStruct.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.CustomFieldStruct.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bongd.SnippetStruct.CustomFieldStruct)
}

::google::protobuf::uint8* SnippetStruct_CustomFieldStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bongd.SnippetStruct.CustomFieldStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.CustomFieldStruct.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.CustomFieldStruct.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bongd.SnippetStruct.CustomFieldStruct)
  return target;
}

size_t SnippetStruct_CustomFieldStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bongd.SnippetStruct.CustomFieldStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional string value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnippetStruct_CustomFieldStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bongd.SnippetStruct.CustomFieldStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const SnippetStruct_CustomFieldStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnippetStruct_CustomFieldStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bongd.SnippetStruct.CustomFieldStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bongd.SnippetStruct.CustomFieldStruct)
    MergeFrom(*source);
  }
}

void SnippetStruct_CustomFieldStruct::MergeFrom(const SnippetStruct_CustomFieldStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bongd.SnippetStruct.CustomFieldStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void SnippetStruct_CustomFieldStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bongd.SnippetStruct.CustomFieldStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnippetStruct_CustomFieldStruct::CopyFrom(const SnippetStruct_CustomFieldStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bongd.SnippetStruct.CustomFieldStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnippetStruct_CustomFieldStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SnippetStruct_CustomFieldStruct::Swap(SnippetStruct_CustomFieldStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnippetStruct_CustomFieldStruct::InternalSwap(SnippetStruct_CustomFieldStruct* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnippetStruct_CustomFieldStruct::GetMetadata() const {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnippetStruct_CustomFieldStruct

// required string name = 1;
bool SnippetStruct_CustomFieldStruct::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnippetStruct_CustomFieldStruct::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SnippetStruct_CustomFieldStruct::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnippetStruct_CustomFieldStruct::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SnippetStruct_CustomFieldStruct::name() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.CustomFieldStruct.name)
  return name_.GetNoArena();
}
void SnippetStruct_CustomFieldStruct::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.CustomFieldStruct.name)
}
#if LANG_CXX11
void SnippetStruct_CustomFieldStruct::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.CustomFieldStruct.name)
}
#endif
void SnippetStruct_CustomFieldStruct::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.CustomFieldStruct.name)
}
void SnippetStruct_CustomFieldStruct::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.CustomFieldStruct.name)
}
::std::string* SnippetStruct_CustomFieldStruct::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.CustomFieldStruct.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_CustomFieldStruct::release_name() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.CustomFieldStruct.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_CustomFieldStruct::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.CustomFieldStruct.name)
}

// optional string value = 2;
bool SnippetStruct_CustomFieldStruct::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnippetStruct_CustomFieldStruct::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SnippetStruct_CustomFieldStruct::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnippetStruct_CustomFieldStruct::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& SnippetStruct_CustomFieldStruct::value() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.CustomFieldStruct.value)
  return value_.GetNoArena();
}
void SnippetStruct_CustomFieldStruct::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.CustomFieldStruct.value)
}
#if LANG_CXX11
void SnippetStruct_CustomFieldStruct::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.CustomFieldStruct.value)
}
#endif
void SnippetStruct_CustomFieldStruct::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.CustomFieldStruct.value)
}
void SnippetStruct_CustomFieldStruct::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.CustomFieldStruct.value)
}
::std::string* SnippetStruct_CustomFieldStruct::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.CustomFieldStruct.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_CustomFieldStruct::release_value() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.CustomFieldStruct.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_CustomFieldStruct::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.CustomFieldStruct.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnippetStruct_MetaDataStruct::kNameFieldNumber;
const int SnippetStruct_MetaDataStruct::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnippetStruct_MetaDataStruct::SnippetStruct_MetaDataStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bongd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bongd.SnippetStruct.MetaDataStruct)
}
SnippetStruct_MetaDataStruct::SnippetStruct_MetaDataStruct(const SnippetStruct_MetaDataStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:bongd.SnippetStruct.MetaDataStruct)
}

void SnippetStruct_MetaDataStruct::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SnippetStruct_MetaDataStruct::~SnippetStruct_MetaDataStruct() {
  // @@protoc_insertion_point(destructor:bongd.SnippetStruct.MetaDataStruct)
  SharedDtor();
}

void SnippetStruct_MetaDataStruct::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SnippetStruct_MetaDataStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnippetStruct_MetaDataStruct::descriptor() {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnippetStruct_MetaDataStruct& SnippetStruct_MetaDataStruct::default_instance() {
  protobuf_bongd_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnippetStruct_MetaDataStruct* SnippetStruct_MetaDataStruct::New(::google::protobuf::Arena* arena) const {
  SnippetStruct_MetaDataStruct* n = new SnippetStruct_MetaDataStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnippetStruct_MetaDataStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:bongd.SnippetStruct.MetaDataStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnippetStruct_MetaDataStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bongd.SnippetStruct.MetaDataStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.MetaDataStruct.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.MetaDataStruct.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bongd.SnippetStruct.MetaDataStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bongd.SnippetStruct.MetaDataStruct)
  return false;
#undef DO_
}

void SnippetStruct_MetaDataStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bongd.SnippetStruct.MetaDataStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.MetaDataStruct.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.MetaDataStruct.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bongd.SnippetStruct.MetaDataStruct)
}

::google::protobuf::uint8* SnippetStruct_MetaDataStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bongd.SnippetStruct.MetaDataStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.MetaDataStruct.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.MetaDataStruct.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bongd.SnippetStruct.MetaDataStruct)
  return target;
}

size_t SnippetStruct_MetaDataStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bongd.SnippetStruct.MetaDataStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional string value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnippetStruct_MetaDataStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bongd.SnippetStruct.MetaDataStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const SnippetStruct_MetaDataStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnippetStruct_MetaDataStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bongd.SnippetStruct.MetaDataStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bongd.SnippetStruct.MetaDataStruct)
    MergeFrom(*source);
  }
}

void SnippetStruct_MetaDataStruct::MergeFrom(const SnippetStruct_MetaDataStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bongd.SnippetStruct.MetaDataStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void SnippetStruct_MetaDataStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bongd.SnippetStruct.MetaDataStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnippetStruct_MetaDataStruct::CopyFrom(const SnippetStruct_MetaDataStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bongd.SnippetStruct.MetaDataStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnippetStruct_MetaDataStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SnippetStruct_MetaDataStruct::Swap(SnippetStruct_MetaDataStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnippetStruct_MetaDataStruct::InternalSwap(SnippetStruct_MetaDataStruct* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnippetStruct_MetaDataStruct::GetMetadata() const {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnippetStruct_MetaDataStruct

// required string name = 1;
bool SnippetStruct_MetaDataStruct::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnippetStruct_MetaDataStruct::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SnippetStruct_MetaDataStruct::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnippetStruct_MetaDataStruct::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SnippetStruct_MetaDataStruct::name() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.MetaDataStruct.name)
  return name_.GetNoArena();
}
void SnippetStruct_MetaDataStruct::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.MetaDataStruct.name)
}
#if LANG_CXX11
void SnippetStruct_MetaDataStruct::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.MetaDataStruct.name)
}
#endif
void SnippetStruct_MetaDataStruct::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.MetaDataStruct.name)
}
void SnippetStruct_MetaDataStruct::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.MetaDataStruct.name)
}
::std::string* SnippetStruct_MetaDataStruct::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.MetaDataStruct.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_MetaDataStruct::release_name() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.MetaDataStruct.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_MetaDataStruct::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.MetaDataStruct.name)
}

// optional string value = 2;
bool SnippetStruct_MetaDataStruct::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnippetStruct_MetaDataStruct::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SnippetStruct_MetaDataStruct::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnippetStruct_MetaDataStruct::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& SnippetStruct_MetaDataStruct::value() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.MetaDataStruct.value)
  return value_.GetNoArena();
}
void SnippetStruct_MetaDataStruct::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.MetaDataStruct.value)
}
#if LANG_CXX11
void SnippetStruct_MetaDataStruct::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.MetaDataStruct.value)
}
#endif
void SnippetStruct_MetaDataStruct::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.MetaDataStruct.value)
}
void SnippetStruct_MetaDataStruct::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.MetaDataStruct.value)
}
::std::string* SnippetStruct_MetaDataStruct::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.MetaDataStruct.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct_MetaDataStruct::release_value() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.MetaDataStruct.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct_MetaDataStruct::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.MetaDataStruct.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnippetStruct::kUrlFieldNumber;
const int SnippetStruct::kTitleFieldNumber;
const int SnippetStruct::kSnippetFieldNumber;
const int SnippetStruct::kFetchTsFieldNumber;
const int SnippetStruct::kImagesFieldNumber;
const int SnippetStruct::kCreationQidFieldNumber;
const int SnippetStruct::kCreationErrorFieldNumber;
const int SnippetStruct::kFaviconFieldNumber;
const int SnippetStruct::kContentTypeFieldNumber;
const int SnippetStruct::kIsHandmadeFieldNumber;
const int SnippetStruct::kRedirectUrlFieldNumber;
const int SnippetStruct::kHasLayerFieldNumber;
const int SnippetStruct::kLayerHtmlFieldNumber;
const int SnippetStruct::kLayerImagesFieldNumber;
const int SnippetStruct::kIsVydraFieldNumber;
const int SnippetStruct::kCustomFieldsFieldNumber;
const int SnippetStruct::kMetaDataFieldNumber;
const int SnippetStruct::kIsDynamicFieldNumber;
const int SnippetStruct::kLayerWordsCountFieldNumber;
const int SnippetStruct::kVkImageFieldNumber;
const int SnippetStruct::kFromAmpFieldNumber;
const int SnippetStruct::kLayerHeaderFieldNumber;
const int SnippetStruct::kLayerFooterFieldNumber;
const int SnippetStruct::kVkImageArrayFieldNumber;
const int SnippetStruct::kCreationErrorCodeFieldNumber;
const int SnippetStruct::kHttpCodeFieldNumber;
const int SnippetStruct::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnippetStruct::SnippetStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bongd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bongd.SnippetStruct)
}
SnippetStruct::SnippetStruct(const SnippetStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      images_(from.images_),
      layer_images_(from.layer_images_),
      custom_fields_(from.custom_fields_),
      meta_data_(from.meta_data_),
      vk_image_array_(from.vk_image_array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_snippet()) {
    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
  creation_qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creation_qid()) {
    creation_qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_qid_);
  }
  creation_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creation_error()) {
    creation_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_error_);
  }
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content_type()) {
    content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
  }
  redirect_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect_url()) {
    redirect_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_url_);
  }
  layer_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_layer_html()) {
    layer_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_html_);
  }
  layer_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_layer_header()) {
    layer_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_header_);
  }
  layer_footer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_layer_footer()) {
    layer_footer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_footer_);
  }
  if (from.has_favicon()) {
    favicon_ = new ::bongd::SnippetStruct_ImageStruct(*from.favicon_);
  } else {
    favicon_ = NULL;
  }
  if (from.has_vk_image()) {
    vk_image_ = new ::bongd::SnippetStruct_ImageStruct(*from.vk_image_);
  } else {
    vk_image_ = NULL;
  }
  ::memcpy(&fetch_ts_, &from.fetch_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&fetch_ts_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:bongd.SnippetStruct)
}

void SnippetStruct::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_qid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_footer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&favicon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&favicon_)) + sizeof(duration_));
}

SnippetStruct::~SnippetStruct() {
  // @@protoc_insertion_point(destructor:bongd.SnippetStruct)
  SharedDtor();
}

void SnippetStruct::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_qid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creation_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_footer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete favicon_;
  if (this != internal_default_instance()) delete vk_image_;
}

void SnippetStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnippetStruct::descriptor() {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnippetStruct& SnippetStruct::default_instance() {
  protobuf_bongd_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnippetStruct* SnippetStruct::New(::google::protobuf::Arena* arena) const {
  SnippetStruct* n = new SnippetStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnippetStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:bongd.SnippetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  layer_images_.Clear();
  custom_fields_.Clear();
  meta_data_.Clear();
  vk_image_array_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!snippet_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*snippet_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!creation_qid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*creation_qid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!creation_error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*creation_error_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!content_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!redirect_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*redirect_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!layer_html_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*layer_html_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!layer_header_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*layer_header_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!layer_footer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*layer_footer_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(favicon_ != NULL);
      favicon_->::bongd::SnippetStruct_ImageStruct::Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(vk_image_ != NULL);
      vk_image_->::bongd::SnippetStruct_ImageStruct::Clear();
    }
  }
  if (cached_has_bits & 61440u) {
    ::memset(&fetch_ts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_vydra_) -
        reinterpret_cast<char*>(&fetch_ts_)) + sizeof(is_vydra_));
  }
  if (cached_has_bits & 4128768u) {
    ::memset(&is_dynamic_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&is_dynamic_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnippetStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bongd.SnippetStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string snippet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snippet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->snippet().data(), static_cast<int>(this->snippet().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.snippet");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 fetch_ts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_fetch_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fetch_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bongd.SnippetStruct.ImageStruct images = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string creation_qid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creation_qid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creation_qid().data(), static_cast<int>(this->creation_qid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.creation_qid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string creation_error = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creation_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creation_error().data(), static_cast<int>(this->creation_error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.creation_error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .bongd.SnippetStruct.ImageStruct favicon = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_favicon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_type().data(), static_cast<int>(this->content_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.content_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_handmade = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_handmade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_handmade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect_url = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.redirect_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_layer = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_has_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes layer_html = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_layer_html()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_layer_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_vydra = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_is_vydra();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vydra_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_custom_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_meta_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dynamic = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_is_dynamic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dynamic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 layer_words_count = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_layer_words_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_words_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vk_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_amp = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_from_amp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_amp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string layer_header = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer_header()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_header().data(), static_cast<int>(this->layer_header().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.layer_header");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string layer_footer = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer_footer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer_footer().data(), static_cast<int>(this->layer_footer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bongd.SnippetStruct.layer_footer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vk_image_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 creation_error_code = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_creation_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &creation_error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 http_code = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_http_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &http_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bongd.SnippetStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bongd.SnippetStruct)
  return false;
#undef DO_
}

void SnippetStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bongd.SnippetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string snippet = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.snippet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->snippet(), output);
  }

  // required uint32 fetch_ts = 4;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fetch_ts(), output);
  }

  // repeated .bongd.SnippetStruct.ImageStruct images = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->images(static_cast<int>(i)), output);
  }

  // optional string creation_qid = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_qid().data(), static_cast<int>(this->creation_qid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.creation_qid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->creation_qid(), output);
  }

  // optional string creation_error = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_error().data(), static_cast<int>(this->creation_error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.creation_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->creation_error(), output);
  }

  // optional .bongd.SnippetStruct.ImageStruct favicon = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->favicon_, output);
  }

  // optional string content_type = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), static_cast<int>(this->content_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->content_type(), output);
  }

  // optional bool is_handmade = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_handmade(), output);
  }

  // optional string redirect_url = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.redirect_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->redirect_url(), output);
  }

  // optional bool has_layer = 12;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->has_layer(), output);
  }

  // optional bytes layer_html = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->layer_html(), output);
  }

  // repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->layer_images(static_cast<int>(i)), output);
  }

  // optional bool is_vydra = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_vydra(), output);
  }

  // repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->custom_fields(static_cast<int>(i)), output);
  }

  // repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->meta_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->meta_data(static_cast<int>(i)), output);
  }

  // optional bool is_dynamic = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_dynamic(), output);
  }

  // optional int32 layer_words_count = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->layer_words_count(), output);
  }

  // optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->vk_image_, output);
  }

  // optional bool from_amp = 21;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->from_amp(), output);
  }

  // optional string layer_header = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_header().data(), static_cast<int>(this->layer_header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.layer_header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->layer_header(), output);
  }

  // optional string layer_footer = 23;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_footer().data(), static_cast<int>(this->layer_footer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.layer_footer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->layer_footer(), output);
  }

  // repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vk_image_array_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->vk_image_array(static_cast<int>(i)), output);
  }

  // optional int32 creation_error_code = 25;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->creation_error_code(), output);
  }

  // optional int32 http_code = 26;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->http_code(), output);
  }

  // optional int32 duration = 27;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bongd.SnippetStruct)
}

::google::protobuf::uint8* SnippetStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bongd.SnippetStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string snippet = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.snippet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->snippet(), target);
  }

  // required uint32 fetch_ts = 4;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fetch_ts(), target);
  }

  // repeated .bongd.SnippetStruct.ImageStruct images = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->images(static_cast<int>(i)), deterministic, target);
  }

  // optional string creation_qid = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_qid().data(), static_cast<int>(this->creation_qid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.creation_qid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->creation_qid(), target);
  }

  // optional string creation_error = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creation_error().data(), static_cast<int>(this->creation_error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.creation_error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->creation_error(), target);
  }

  // optional .bongd.SnippetStruct.ImageStruct favicon = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->favicon_, deterministic, target);
  }

  // optional string content_type = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), static_cast<int>(this->content_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->content_type(), target);
  }

  // optional bool is_handmade = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_handmade(), target);
  }

  // optional string redirect_url = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_url().data(), static_cast<int>(this->redirect_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.redirect_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->redirect_url(), target);
  }

  // optional bool has_layer = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->has_layer(), target);
  }

  // optional bytes layer_html = 13;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->layer_html(), target);
  }

  // repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->layer_images(static_cast<int>(i)), deterministic, target);
  }

  // optional bool is_vydra = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_vydra(), target);
  }

  // repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->custom_fields(static_cast<int>(i)), deterministic, target);
  }

  // repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->meta_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, this->meta_data(static_cast<int>(i)), deterministic, target);
  }

  // optional bool is_dynamic = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_dynamic(), target);
  }

  // optional int32 layer_words_count = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->layer_words_count(), target);
  }

  // optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->vk_image_, deterministic, target);
  }

  // optional bool from_amp = 21;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->from_amp(), target);
  }

  // optional string layer_header = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_header().data(), static_cast<int>(this->layer_header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.layer_header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->layer_header(), target);
  }

  // optional string layer_footer = 23;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer_footer().data(), static_cast<int>(this->layer_footer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bongd.SnippetStruct.layer_footer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->layer_footer(), target);
  }

  // repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vk_image_array_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, this->vk_image_array(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 creation_error_code = 25;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->creation_error_code(), target);
  }

  // optional int32 http_code = 26;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->http_code(), target);
  }

  // optional int32 duration = 27;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bongd.SnippetStruct)
  return target;
}

size_t SnippetStruct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bongd.SnippetStruct)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_fetch_ts()) {
    // required uint32 fetch_ts = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_ts());
  }

  return total_size;
}
size_t SnippetStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bongd.SnippetStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001001) ^ 0x00001001) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required uint32 fetch_ts = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_ts());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .bongd.SnippetStruct.ImageStruct images = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(static_cast<int>(i)));
    }
  }

  // repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->layer_images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->layer_images(static_cast<int>(i)));
    }
  }

  // repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_fields_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->custom_fields(static_cast<int>(i)));
    }
  }

  // repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->meta_data_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->meta_data(static_cast<int>(i)));
    }
  }

  // repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->vk_image_array_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vk_image_array(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 254u) {
    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string snippet = 3;
    if (has_snippet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->snippet());
    }

    // optional string creation_qid = 6;
    if (has_creation_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creation_qid());
    }

    // optional string creation_error = 7;
    if (has_creation_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creation_error());
    }

    // optional string content_type = 9;
    if (has_content_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_type());
    }

    // optional string redirect_url = 11;
    if (has_redirect_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_url());
    }

    // optional bytes layer_html = 13;
    if (has_layer_html()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->layer_html());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string layer_header = 22;
    if (has_layer_header()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer_header());
    }

    // optional string layer_footer = 23;
    if (has_layer_footer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer_footer());
    }

    // optional .bongd.SnippetStruct.ImageStruct favicon = 8;
    if (has_favicon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->favicon_);
    }

    // optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
    if (has_vk_image()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vk_image_);
    }

  }
  if (_has_bits_[8 / 32] & 57344u) {
    // optional bool is_handmade = 10;
    if (has_is_handmade()) {
      total_size += 1 + 1;
    }

    // optional bool has_layer = 12;
    if (has_has_layer()) {
      total_size += 1 + 1;
    }

    // optional bool is_vydra = 15;
    if (has_is_vydra()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional bool is_dynamic = 18;
    if (has_is_dynamic()) {
      total_size += 2 + 1;
    }

    // optional int32 layer_words_count = 19;
    if (has_layer_words_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layer_words_count());
    }

    // optional bool from_amp = 21;
    if (has_from_amp()) {
      total_size += 2 + 1;
    }

    // optional int32 creation_error_code = 25;
    if (has_creation_error_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->creation_error_code());
    }

    // optional int32 http_code = 26;
    if (has_http_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->http_code());
    }

    // optional int32 duration = 27;
    if (has_duration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnippetStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bongd.SnippetStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const SnippetStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnippetStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bongd.SnippetStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bongd.SnippetStruct)
    MergeFrom(*source);
  }
}

void SnippetStruct::MergeFrom(const SnippetStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bongd.SnippetStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  layer_images_.MergeFrom(from.layer_images_);
  custom_fields_.MergeFrom(from.custom_fields_);
  meta_data_.MergeFrom(from.meta_data_);
  vk_image_array_.MergeFrom(from.vk_image_array_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_snippet();
      snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_creation_qid();
      creation_qid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_qid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_creation_error();
      creation_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creation_error_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_content_type();
      content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_redirect_url();
      redirect_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_url_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_layer_html();
      layer_html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_html_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_layer_header();
      layer_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_header_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_layer_footer();
      layer_footer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layer_footer_);
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_favicon()->::bongd::SnippetStruct_ImageStruct::MergeFrom(from.favicon());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_vk_image()->::bongd::SnippetStruct_ImageStruct::MergeFrom(from.vk_image());
    }
    if (cached_has_bits & 0x00001000u) {
      fetch_ts_ = from.fetch_ts_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_handmade_ = from.is_handmade_;
    }
    if (cached_has_bits & 0x00004000u) {
      has_layer_ = from.has_layer_;
    }
    if (cached_has_bits & 0x00008000u) {
      is_vydra_ = from.is_vydra_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      is_dynamic_ = from.is_dynamic_;
    }
    if (cached_has_bits & 0x00020000u) {
      layer_words_count_ = from.layer_words_count_;
    }
    if (cached_has_bits & 0x00040000u) {
      from_amp_ = from.from_amp_;
    }
    if (cached_has_bits & 0x00080000u) {
      creation_error_code_ = from.creation_error_code_;
    }
    if (cached_has_bits & 0x00100000u) {
      http_code_ = from.http_code_;
    }
    if (cached_has_bits & 0x00200000u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SnippetStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bongd.SnippetStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnippetStruct::CopyFrom(const SnippetStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bongd.SnippetStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnippetStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001001) != 0x00001001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->images())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->layer_images())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->custom_fields())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->meta_data())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vk_image_array())) return false;
  if (has_favicon()) {
    if (!this->favicon_->IsInitialized()) return false;
  }
  if (has_vk_image()) {
    if (!this->vk_image_->IsInitialized()) return false;
  }
  return true;
}

void SnippetStruct::Swap(SnippetStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnippetStruct::InternalSwap(SnippetStruct* other) {
  using std::swap;
  images_.InternalSwap(&other->images_);
  layer_images_.InternalSwap(&other->layer_images_);
  custom_fields_.InternalSwap(&other->custom_fields_);
  meta_data_.InternalSwap(&other->meta_data_);
  vk_image_array_.InternalSwap(&other->vk_image_array_);
  url_.Swap(&other->url_);
  title_.Swap(&other->title_);
  snippet_.Swap(&other->snippet_);
  creation_qid_.Swap(&other->creation_qid_);
  creation_error_.Swap(&other->creation_error_);
  content_type_.Swap(&other->content_type_);
  redirect_url_.Swap(&other->redirect_url_);
  layer_html_.Swap(&other->layer_html_);
  layer_header_.Swap(&other->layer_header_);
  layer_footer_.Swap(&other->layer_footer_);
  swap(favicon_, other->favicon_);
  swap(vk_image_, other->vk_image_);
  swap(fetch_ts_, other->fetch_ts_);
  swap(is_handmade_, other->is_handmade_);
  swap(has_layer_, other->has_layer_);
  swap(is_vydra_, other->is_vydra_);
  swap(is_dynamic_, other->is_dynamic_);
  swap(layer_words_count_, other->layer_words_count_);
  swap(from_amp_, other->from_amp_);
  swap(creation_error_code_, other->creation_error_code_);
  swap(http_code_, other->http_code_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnippetStruct::GetMetadata() const {
  protobuf_bongd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bongd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnippetStruct

// required string url = 1;
bool SnippetStruct::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnippetStruct::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void SnippetStruct::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnippetStruct::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& SnippetStruct::url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.url)
  return url_.GetNoArena();
}
void SnippetStruct::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.url)
}
#if LANG_CXX11
void SnippetStruct::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.url)
}
#endif
void SnippetStruct::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.url)
}
void SnippetStruct::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.url)
}
::std::string* SnippetStruct::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.url)
}

// optional string title = 2;
bool SnippetStruct::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnippetStruct::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void SnippetStruct::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnippetStruct::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& SnippetStruct::title() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.title)
  return title_.GetNoArena();
}
void SnippetStruct::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.title)
}
#if LANG_CXX11
void SnippetStruct::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.title)
}
#endif
void SnippetStruct::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.title)
}
void SnippetStruct::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.title)
}
::std::string* SnippetStruct::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_title() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.title)
}

// optional string snippet = 3;
bool SnippetStruct::has_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SnippetStruct::set_has_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
void SnippetStruct::clear_has_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
void SnippetStruct::clear_snippet() {
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snippet();
}
const ::std::string& SnippetStruct::snippet() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.snippet)
  return snippet_.GetNoArena();
}
void SnippetStruct::set_snippet(const ::std::string& value) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.snippet)
}
#if LANG_CXX11
void SnippetStruct::set_snippet(::std::string&& value) {
  set_has_snippet();
  snippet_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.snippet)
}
#endif
void SnippetStruct::set_snippet(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.snippet)
}
void SnippetStruct::set_snippet(const char* value, size_t size) {
  set_has_snippet();
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.snippet)
}
::std::string* SnippetStruct::mutable_snippet() {
  set_has_snippet();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.snippet)
  return snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_snippet() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.snippet)
  clear_has_snippet();
  return snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_snippet(::std::string* snippet) {
  if (snippet != NULL) {
    set_has_snippet();
  } else {
    clear_has_snippet();
  }
  snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippet);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.snippet)
}

// required uint32 fetch_ts = 4;
bool SnippetStruct::has_fetch_ts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SnippetStruct::set_has_fetch_ts() {
  _has_bits_[0] |= 0x00001000u;
}
void SnippetStruct::clear_has_fetch_ts() {
  _has_bits_[0] &= ~0x00001000u;
}
void SnippetStruct::clear_fetch_ts() {
  fetch_ts_ = 0u;
  clear_has_fetch_ts();
}
::google::protobuf::uint32 SnippetStruct::fetch_ts() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.fetch_ts)
  return fetch_ts_;
}
void SnippetStruct::set_fetch_ts(::google::protobuf::uint32 value) {
  set_has_fetch_ts();
  fetch_ts_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.fetch_ts)
}

// repeated .bongd.SnippetStruct.ImageStruct images = 5;
int SnippetStruct::images_size() const {
  return images_.size();
}
void SnippetStruct::clear_images() {
  images_.Clear();
}
const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::images(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.images)
  return images_.Get(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.images)
  return images_.Mutable(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_images() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::images() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.images)
  return images_;
}

// optional string creation_qid = 6;
bool SnippetStruct::has_creation_qid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SnippetStruct::set_has_creation_qid() {
  _has_bits_[0] |= 0x00000008u;
}
void SnippetStruct::clear_has_creation_qid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SnippetStruct::clear_creation_qid() {
  creation_qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_qid();
}
const ::std::string& SnippetStruct::creation_qid() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_qid)
  return creation_qid_.GetNoArena();
}
void SnippetStruct::set_creation_qid(const ::std::string& value) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_qid)
}
#if LANG_CXX11
void SnippetStruct::set_creation_qid(::std::string&& value) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.creation_qid)
}
#endif
void SnippetStruct::set_creation_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.creation_qid)
}
void SnippetStruct::set_creation_qid(const char* value, size_t size) {
  set_has_creation_qid();
  creation_qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.creation_qid)
}
::std::string* SnippetStruct::mutable_creation_qid() {
  set_has_creation_qid();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.creation_qid)
  return creation_qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_creation_qid() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.creation_qid)
  clear_has_creation_qid();
  return creation_qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_creation_qid(::std::string* creation_qid) {
  if (creation_qid != NULL) {
    set_has_creation_qid();
  } else {
    clear_has_creation_qid();
  }
  creation_qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_qid);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.creation_qid)
}

// optional string creation_error = 7;
bool SnippetStruct::has_creation_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SnippetStruct::set_has_creation_error() {
  _has_bits_[0] |= 0x00000010u;
}
void SnippetStruct::clear_has_creation_error() {
  _has_bits_[0] &= ~0x00000010u;
}
void SnippetStruct::clear_creation_error() {
  creation_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creation_error();
}
const ::std::string& SnippetStruct::creation_error() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_error)
  return creation_error_.GetNoArena();
}
void SnippetStruct::set_creation_error(const ::std::string& value) {
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_error)
}
#if LANG_CXX11
void SnippetStruct::set_creation_error(::std::string&& value) {
  set_has_creation_error();
  creation_error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.creation_error)
}
#endif
void SnippetStruct::set_creation_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.creation_error)
}
void SnippetStruct::set_creation_error(const char* value, size_t size) {
  set_has_creation_error();
  creation_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.creation_error)
}
::std::string* SnippetStruct::mutable_creation_error() {
  set_has_creation_error();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.creation_error)
  return creation_error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_creation_error() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.creation_error)
  clear_has_creation_error();
  return creation_error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_creation_error(::std::string* creation_error) {
  if (creation_error != NULL) {
    set_has_creation_error();
  } else {
    clear_has_creation_error();
  }
  creation_error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creation_error);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.creation_error)
}

// optional .bongd.SnippetStruct.ImageStruct favicon = 8;
bool SnippetStruct::has_favicon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SnippetStruct::set_has_favicon() {
  _has_bits_[0] |= 0x00000400u;
}
void SnippetStruct::clear_has_favicon() {
  _has_bits_[0] &= ~0x00000400u;
}
void SnippetStruct::clear_favicon() {
  if (favicon_ != NULL) favicon_->::bongd::SnippetStruct_ImageStruct::Clear();
  clear_has_favicon();
}
const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::favicon() const {
  const ::bongd::SnippetStruct_ImageStruct* p = favicon_;
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.favicon)
  return p != NULL ? *p : *reinterpret_cast<const ::bongd::SnippetStruct_ImageStruct*>(
      &::bongd::_SnippetStruct_ImageStruct_default_instance_);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_favicon() {
  set_has_favicon();
  if (favicon_ == NULL) {
    favicon_ = new ::bongd::SnippetStruct_ImageStruct;
  }
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.favicon)
  return favicon_;
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::release_favicon() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.favicon)
  clear_has_favicon();
  ::bongd::SnippetStruct_ImageStruct* temp = favicon_;
  favicon_ = NULL;
  return temp;
}
void SnippetStruct::set_allocated_favicon(::bongd::SnippetStruct_ImageStruct* favicon) {
  delete favicon_;
  favicon_ = favicon;
  if (favicon) {
    set_has_favicon();
  } else {
    clear_has_favicon();
  }
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.favicon)
}

// optional string content_type = 9;
bool SnippetStruct::has_content_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SnippetStruct::set_has_content_type() {
  _has_bits_[0] |= 0x00000020u;
}
void SnippetStruct::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void SnippetStruct::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content_type();
}
const ::std::string& SnippetStruct::content_type() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.content_type)
  return content_type_.GetNoArena();
}
void SnippetStruct::set_content_type(const ::std::string& value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.content_type)
}
#if LANG_CXX11
void SnippetStruct::set_content_type(::std::string&& value) {
  set_has_content_type();
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.content_type)
}
#endif
void SnippetStruct::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.content_type)
}
void SnippetStruct::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.content_type)
}
::std::string* SnippetStruct::mutable_content_type() {
  set_has_content_type();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_content_type() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.content_type)
  clear_has_content_type();
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    set_has_content_type();
  } else {
    clear_has_content_type();
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.content_type)
}

// optional bool is_handmade = 10;
bool SnippetStruct::has_is_handmade() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SnippetStruct::set_has_is_handmade() {
  _has_bits_[0] |= 0x00002000u;
}
void SnippetStruct::clear_has_is_handmade() {
  _has_bits_[0] &= ~0x00002000u;
}
void SnippetStruct::clear_is_handmade() {
  is_handmade_ = false;
  clear_has_is_handmade();
}
bool SnippetStruct::is_handmade() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_handmade)
  return is_handmade_;
}
void SnippetStruct::set_is_handmade(bool value) {
  set_has_is_handmade();
  is_handmade_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_handmade)
}

// optional string redirect_url = 11;
bool SnippetStruct::has_redirect_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SnippetStruct::set_has_redirect_url() {
  _has_bits_[0] |= 0x00000040u;
}
void SnippetStruct::clear_has_redirect_url() {
  _has_bits_[0] &= ~0x00000040u;
}
void SnippetStruct::clear_redirect_url() {
  redirect_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect_url();
}
const ::std::string& SnippetStruct::redirect_url() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.redirect_url)
  return redirect_url_.GetNoArena();
}
void SnippetStruct::set_redirect_url(const ::std::string& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.redirect_url)
}
#if LANG_CXX11
void SnippetStruct::set_redirect_url(::std::string&& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.redirect_url)
}
#endif
void SnippetStruct::set_redirect_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.redirect_url)
}
void SnippetStruct::set_redirect_url(const char* value, size_t size) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.redirect_url)
}
::std::string* SnippetStruct::mutable_redirect_url() {
  set_has_redirect_url();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.redirect_url)
  return redirect_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_redirect_url() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.redirect_url)
  clear_has_redirect_url();
  return redirect_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_redirect_url(::std::string* redirect_url) {
  if (redirect_url != NULL) {
    set_has_redirect_url();
  } else {
    clear_has_redirect_url();
  }
  redirect_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_url);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.redirect_url)
}

// optional bool has_layer = 12;
bool SnippetStruct::has_has_layer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SnippetStruct::set_has_has_layer() {
  _has_bits_[0] |= 0x00004000u;
}
void SnippetStruct::clear_has_has_layer() {
  _has_bits_[0] &= ~0x00004000u;
}
void SnippetStruct::clear_has_layer() {
  has_layer_ = false;
  clear_has_has_layer();
}
bool SnippetStruct::has_layer() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.has_layer)
  return has_layer_;
}
void SnippetStruct::set_has_layer(bool value) {
  set_has_has_layer();
  has_layer_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.has_layer)
}

// optional bytes layer_html = 13;
bool SnippetStruct::has_layer_html() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SnippetStruct::set_has_layer_html() {
  _has_bits_[0] |= 0x00000080u;
}
void SnippetStruct::clear_has_layer_html() {
  _has_bits_[0] &= ~0x00000080u;
}
void SnippetStruct::clear_layer_html() {
  layer_html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_html();
}
const ::std::string& SnippetStruct::layer_html() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_html)
  return layer_html_.GetNoArena();
}
void SnippetStruct::set_layer_html(const ::std::string& value) {
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_html)
}
#if LANG_CXX11
void SnippetStruct::set_layer_html(::std::string&& value) {
  set_has_layer_html();
  layer_html_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_html)
}
#endif
void SnippetStruct::set_layer_html(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_html)
}
void SnippetStruct::set_layer_html(const void* value, size_t size) {
  set_has_layer_html();
  layer_html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_html)
}
::std::string* SnippetStruct::mutable_layer_html() {
  set_has_layer_html();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_html)
  return layer_html_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_layer_html() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_html)
  clear_has_layer_html();
  return layer_html_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_layer_html(::std::string* layer_html) {
  if (layer_html != NULL) {
    set_has_layer_html();
  } else {
    clear_has_layer_html();
  }
  layer_html_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_html);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_html)
}

// repeated .bongd.SnippetStruct.ImageStruct layer_images = 14;
int SnippetStruct::layer_images_size() const {
  return layer_images_.size();
}
void SnippetStruct::clear_layer_images() {
  layer_images_.Clear();
}
const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::layer_images(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_images)
  return layer_images_.Get(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_layer_images(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_images)
  return layer_images_.Mutable(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_layer_images() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.layer_images)
  return layer_images_.Add();
}
::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_layer_images() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.layer_images)
  return &layer_images_;
}
const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::layer_images() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.layer_images)
  return layer_images_;
}

// optional bool is_vydra = 15;
bool SnippetStruct::has_is_vydra() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SnippetStruct::set_has_is_vydra() {
  _has_bits_[0] |= 0x00008000u;
}
void SnippetStruct::clear_has_is_vydra() {
  _has_bits_[0] &= ~0x00008000u;
}
void SnippetStruct::clear_is_vydra() {
  is_vydra_ = false;
  clear_has_is_vydra();
}
bool SnippetStruct::is_vydra() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_vydra)
  return is_vydra_;
}
void SnippetStruct::set_is_vydra(bool value) {
  set_has_is_vydra();
  is_vydra_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_vydra)
}

// repeated .bongd.SnippetStruct.CustomFieldStruct custom_fields = 16;
int SnippetStruct::custom_fields_size() const {
  return custom_fields_.size();
}
void SnippetStruct::clear_custom_fields() {
  custom_fields_.Clear();
}
const ::bongd::SnippetStruct_CustomFieldStruct& SnippetStruct::custom_fields(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Get(index);
}
::bongd::SnippetStruct_CustomFieldStruct* SnippetStruct::mutable_custom_fields(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Mutable(index);
}
::bongd::SnippetStruct_CustomFieldStruct* SnippetStruct::add_custom_fields() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.custom_fields)
  return custom_fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >*
SnippetStruct::mutable_custom_fields() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.custom_fields)
  return &custom_fields_;
}
const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_CustomFieldStruct >&
SnippetStruct::custom_fields() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.custom_fields)
  return custom_fields_;
}

// repeated .bongd.SnippetStruct.MetaDataStruct meta_data = 17;
int SnippetStruct::meta_data_size() const {
  return meta_data_.size();
}
void SnippetStruct::clear_meta_data() {
  meta_data_.Clear();
}
const ::bongd::SnippetStruct_MetaDataStruct& SnippetStruct::meta_data(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.meta_data)
  return meta_data_.Get(index);
}
::bongd::SnippetStruct_MetaDataStruct* SnippetStruct::mutable_meta_data(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.meta_data)
  return meta_data_.Mutable(index);
}
::bongd::SnippetStruct_MetaDataStruct* SnippetStruct::add_meta_data() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.meta_data)
  return meta_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >*
SnippetStruct::mutable_meta_data() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.meta_data)
  return &meta_data_;
}
const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_MetaDataStruct >&
SnippetStruct::meta_data() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.meta_data)
  return meta_data_;
}

// optional bool is_dynamic = 18;
bool SnippetStruct::has_is_dynamic() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void SnippetStruct::set_has_is_dynamic() {
  _has_bits_[0] |= 0x00010000u;
}
void SnippetStruct::clear_has_is_dynamic() {
  _has_bits_[0] &= ~0x00010000u;
}
void SnippetStruct::clear_is_dynamic() {
  is_dynamic_ = false;
  clear_has_is_dynamic();
}
bool SnippetStruct::is_dynamic() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.is_dynamic)
  return is_dynamic_;
}
void SnippetStruct::set_is_dynamic(bool value) {
  set_has_is_dynamic();
  is_dynamic_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.is_dynamic)
}

// optional int32 layer_words_count = 19;
bool SnippetStruct::has_layer_words_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void SnippetStruct::set_has_layer_words_count() {
  _has_bits_[0] |= 0x00020000u;
}
void SnippetStruct::clear_has_layer_words_count() {
  _has_bits_[0] &= ~0x00020000u;
}
void SnippetStruct::clear_layer_words_count() {
  layer_words_count_ = 0;
  clear_has_layer_words_count();
}
::google::protobuf::int32 SnippetStruct::layer_words_count() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_words_count)
  return layer_words_count_;
}
void SnippetStruct::set_layer_words_count(::google::protobuf::int32 value) {
  set_has_layer_words_count();
  layer_words_count_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_words_count)
}

// optional .bongd.SnippetStruct.ImageStruct vk_image = 20;
bool SnippetStruct::has_vk_image() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SnippetStruct::set_has_vk_image() {
  _has_bits_[0] |= 0x00000800u;
}
void SnippetStruct::clear_has_vk_image() {
  _has_bits_[0] &= ~0x00000800u;
}
void SnippetStruct::clear_vk_image() {
  if (vk_image_ != NULL) vk_image_->::bongd::SnippetStruct_ImageStruct::Clear();
  clear_has_vk_image();
}
const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::vk_image() const {
  const ::bongd::SnippetStruct_ImageStruct* p = vk_image_;
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.vk_image)
  return p != NULL ? *p : *reinterpret_cast<const ::bongd::SnippetStruct_ImageStruct*>(
      &::bongd::_SnippetStruct_ImageStruct_default_instance_);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_vk_image() {
  set_has_vk_image();
  if (vk_image_ == NULL) {
    vk_image_ = new ::bongd::SnippetStruct_ImageStruct;
  }
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.vk_image)
  return vk_image_;
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::release_vk_image() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.vk_image)
  clear_has_vk_image();
  ::bongd::SnippetStruct_ImageStruct* temp = vk_image_;
  vk_image_ = NULL;
  return temp;
}
void SnippetStruct::set_allocated_vk_image(::bongd::SnippetStruct_ImageStruct* vk_image) {
  delete vk_image_;
  vk_image_ = vk_image;
  if (vk_image) {
    set_has_vk_image();
  } else {
    clear_has_vk_image();
  }
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.vk_image)
}

// optional bool from_amp = 21;
bool SnippetStruct::has_from_amp() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void SnippetStruct::set_has_from_amp() {
  _has_bits_[0] |= 0x00040000u;
}
void SnippetStruct::clear_has_from_amp() {
  _has_bits_[0] &= ~0x00040000u;
}
void SnippetStruct::clear_from_amp() {
  from_amp_ = false;
  clear_has_from_amp();
}
bool SnippetStruct::from_amp() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.from_amp)
  return from_amp_;
}
void SnippetStruct::set_from_amp(bool value) {
  set_has_from_amp();
  from_amp_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.from_amp)
}

// optional string layer_header = 22;
bool SnippetStruct::has_layer_header() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SnippetStruct::set_has_layer_header() {
  _has_bits_[0] |= 0x00000100u;
}
void SnippetStruct::clear_has_layer_header() {
  _has_bits_[0] &= ~0x00000100u;
}
void SnippetStruct::clear_layer_header() {
  layer_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_header();
}
const ::std::string& SnippetStruct::layer_header() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_header)
  return layer_header_.GetNoArena();
}
void SnippetStruct::set_layer_header(const ::std::string& value) {
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_header)
}
#if LANG_CXX11
void SnippetStruct::set_layer_header(::std::string&& value) {
  set_has_layer_header();
  layer_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_header)
}
#endif
void SnippetStruct::set_layer_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_header)
}
void SnippetStruct::set_layer_header(const char* value, size_t size) {
  set_has_layer_header();
  layer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_header)
}
::std::string* SnippetStruct::mutable_layer_header() {
  set_has_layer_header();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_header)
  return layer_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_layer_header() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_header)
  clear_has_layer_header();
  return layer_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_layer_header(::std::string* layer_header) {
  if (layer_header != NULL) {
    set_has_layer_header();
  } else {
    clear_has_layer_header();
  }
  layer_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_header);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_header)
}

// optional string layer_footer = 23;
bool SnippetStruct::has_layer_footer() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SnippetStruct::set_has_layer_footer() {
  _has_bits_[0] |= 0x00000200u;
}
void SnippetStruct::clear_has_layer_footer() {
  _has_bits_[0] &= ~0x00000200u;
}
void SnippetStruct::clear_layer_footer() {
  layer_footer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_footer();
}
const ::std::string& SnippetStruct::layer_footer() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.layer_footer)
  return layer_footer_.GetNoArena();
}
void SnippetStruct::set_layer_footer(const ::std::string& value) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.layer_footer)
}
#if LANG_CXX11
void SnippetStruct::set_layer_footer(::std::string&& value) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bongd.SnippetStruct.layer_footer)
}
#endif
void SnippetStruct::set_layer_footer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bongd.SnippetStruct.layer_footer)
}
void SnippetStruct::set_layer_footer(const char* value, size_t size) {
  set_has_layer_footer();
  layer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bongd.SnippetStruct.layer_footer)
}
::std::string* SnippetStruct::mutable_layer_footer() {
  set_has_layer_footer();
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.layer_footer)
  return layer_footer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnippetStruct::release_layer_footer() {
  // @@protoc_insertion_point(field_release:bongd.SnippetStruct.layer_footer)
  clear_has_layer_footer();
  return layer_footer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnippetStruct::set_allocated_layer_footer(::std::string* layer_footer) {
  if (layer_footer != NULL) {
    set_has_layer_footer();
  } else {
    clear_has_layer_footer();
  }
  layer_footer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_footer);
  // @@protoc_insertion_point(field_set_allocated:bongd.SnippetStruct.layer_footer)
}

// repeated .bongd.SnippetStruct.ImageStruct vk_image_array = 24;
int SnippetStruct::vk_image_array_size() const {
  return vk_image_array_.size();
}
void SnippetStruct::clear_vk_image_array() {
  vk_image_array_.Clear();
}
const ::bongd::SnippetStruct_ImageStruct& SnippetStruct::vk_image_array(int index) const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Get(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::mutable_vk_image_array(int index) {
  // @@protoc_insertion_point(field_mutable:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Mutable(index);
}
::bongd::SnippetStruct_ImageStruct* SnippetStruct::add_vk_image_array() {
  // @@protoc_insertion_point(field_add:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_.Add();
}
::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >*
SnippetStruct::mutable_vk_image_array() {
  // @@protoc_insertion_point(field_mutable_list:bongd.SnippetStruct.vk_image_array)
  return &vk_image_array_;
}
const ::google::protobuf::RepeatedPtrField< ::bongd::SnippetStruct_ImageStruct >&
SnippetStruct::vk_image_array() const {
  // @@protoc_insertion_point(field_list:bongd.SnippetStruct.vk_image_array)
  return vk_image_array_;
}

// optional int32 creation_error_code = 25;
bool SnippetStruct::has_creation_error_code() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void SnippetStruct::set_has_creation_error_code() {
  _has_bits_[0] |= 0x00080000u;
}
void SnippetStruct::clear_has_creation_error_code() {
  _has_bits_[0] &= ~0x00080000u;
}
void SnippetStruct::clear_creation_error_code() {
  creation_error_code_ = 0;
  clear_has_creation_error_code();
}
::google::protobuf::int32 SnippetStruct::creation_error_code() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.creation_error_code)
  return creation_error_code_;
}
void SnippetStruct::set_creation_error_code(::google::protobuf::int32 value) {
  set_has_creation_error_code();
  creation_error_code_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.creation_error_code)
}

// optional int32 http_code = 26;
bool SnippetStruct::has_http_code() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void SnippetStruct::set_has_http_code() {
  _has_bits_[0] |= 0x00100000u;
}
void SnippetStruct::clear_has_http_code() {
  _has_bits_[0] &= ~0x00100000u;
}
void SnippetStruct::clear_http_code() {
  http_code_ = 0;
  clear_has_http_code();
}
::google::protobuf::int32 SnippetStruct::http_code() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.http_code)
  return http_code_;
}
void SnippetStruct::set_http_code(::google::protobuf::int32 value) {
  set_has_http_code();
  http_code_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.http_code)
}

// optional int32 duration = 27;
bool SnippetStruct::has_duration() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void SnippetStruct::set_has_duration() {
  _has_bits_[0] |= 0x00200000u;
}
void SnippetStruct::clear_has_duration() {
  _has_bits_[0] &= ~0x00200000u;
}
void SnippetStruct::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
::google::protobuf::int32 SnippetStruct::duration() const {
  // @@protoc_insertion_point(field_get:bongd.SnippetStruct.duration)
  return duration_;
}
void SnippetStruct::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:bongd.SnippetStruct.duration)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bongd

// @@protoc_insertion_point(global_scope)
