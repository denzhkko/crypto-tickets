// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linkgraph_blobs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "linkgraph_blobs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace linkgraph {
class RedirectorMessage_RedirectDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectorMessage_Redirect>
     _instance;
} _RedirectorMessage_Redirect_default_instance_;
class RedirectorMessage_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectorMessage_Link>
     _instance;
} _RedirectorMessage_Link_default_instance_;
class RedirectorMessage_ExtraTextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectorMessage_ExtraText>
     _instance;
} _RedirectorMessage_ExtraText_default_instance_;
class RedirectorMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectorMessage>
     _instance;
} _RedirectorMessage_default_instance_;

namespace protobuf_linkgraph_5fblobs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Redirect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Redirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Redirect, to_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Link, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_Link, text_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_ExtraText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_ExtraText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_ExtraText, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage_ExtraText, extratextarray_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectorMessage, etext_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(RedirectorMessage_Redirect)},
  { 7, 14, sizeof(RedirectorMessage_Link)},
  { 16, 23, sizeof(RedirectorMessage_ExtraText)},
  { 25, 33, sizeof(RedirectorMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectorMessage_Redirect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectorMessage_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectorMessage_ExtraText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectorMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "linkgraph_blobs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ru::mail::go::webbase::blobs::protobuf_parsed_5fblobs_2eproto::InitDefaults();
  _RedirectorMessage_Redirect_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectorMessage_Redirect_default_instance_);_RedirectorMessage_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectorMessage_Link_default_instance_);_RedirectorMessage_ExtraText_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectorMessage_ExtraText_default_instance_);_RedirectorMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectorMessage_default_instance_);_RedirectorMessage_ExtraText_default_instance_._instance.get_mutable()->extratextarray_ = const_cast< ::ru::mail::go::webbase::blobs::ExtraTextArray*>(
      ::ru::mail::go::webbase::blobs::ExtraTextArray::internal_default_instance());
  _RedirectorMessage_default_instance_._instance.get_mutable()->link_ = const_cast< ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link*>(
      ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link::internal_default_instance());
  _RedirectorMessage_default_instance_._instance.get_mutable()->redirect_ = const_cast< ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect*>(
      ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect::internal_default_instance());
  _RedirectorMessage_default_instance_._instance.get_mutable()->etext_ = const_cast< ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText*>(
      ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025linkgraph_blobs.proto\022\034ru.mail.go.webb"
      "ase.linkgraph\032\022parsed_blobs.proto\"\204\003\n\021Re"
      "directorMessage\022B\n\004link\030\001 \001(\01324.ru.mail."
      "go.webbase.linkgraph.RedirectorMessage.L"
      "ink\022J\n\010redirect\030\002 \001(\01328.ru.mail.go.webba"
      "se.linkgraph.RedirectorMessage.Redirect\022"
      "H\n\005etext\030\003 \001(\01329.ru.mail.go.webbase.link"
      "graph.RedirectorMessage.ExtraText\032\026\n\010Red"
      "irect\022\n\n\002to\030\001 \002(\t\032\"\n\004Link\022\014\n\004from\030\001 \002(\t\022"
      "\014\n\004text\030\002 \002(\t\032Y\n\tExtraText\022\n\n\002id\030\001 \002(\t\022@"
      "\n\016extratextArray\030\002 \002(\0132(.ru.mail.go.webb"
      "ase.blobs.ExtraTextArrayB\020B\016LinkGraphBlo"
      "bs"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 482);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "linkgraph_blobs.proto", &protobuf_RegisterTypes);
  ::ru::mail::go::webbase::blobs::protobuf_parsed_5fblobs_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_linkgraph_5fblobs_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectorMessage_Redirect::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectorMessage_Redirect::RedirectorMessage_Redirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
}
RedirectorMessage_Redirect::RedirectorMessage_Redirect(const RedirectorMessage_Redirect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
}

void RedirectorMessage_Redirect::SharedCtor() {
  _cached_size_ = 0;
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RedirectorMessage_Redirect::~RedirectorMessage_Redirect() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  SharedDtor();
}

void RedirectorMessage_Redirect::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RedirectorMessage_Redirect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectorMessage_Redirect::descriptor() {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectorMessage_Redirect& RedirectorMessage_Redirect::default_instance() {
  protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectorMessage_Redirect* RedirectorMessage_Redirect::New(::google::protobuf::Arena* arena) const {
  RedirectorMessage_Redirect* n = new RedirectorMessage_Redirect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectorMessage_Redirect::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_to()) {
    GOOGLE_DCHECK(!to_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*to_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectorMessage_Redirect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  return false;
#undef DO_
}

void RedirectorMessage_Redirect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
}

::google::protobuf::uint8* RedirectorMessage_Redirect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  return target;
}

size_t RedirectorMessage_Redirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string to = 1;
  if (has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectorMessage_Redirect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectorMessage_Redirect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectorMessage_Redirect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
    MergeFrom(*source);
  }
}

void RedirectorMessage_Redirect::MergeFrom(const RedirectorMessage_Redirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_to()) {
    set_has_to();
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
}

void RedirectorMessage_Redirect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectorMessage_Redirect::CopyFrom(const RedirectorMessage_Redirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectorMessage_Redirect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RedirectorMessage_Redirect::Swap(RedirectorMessage_Redirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectorMessage_Redirect::InternalSwap(RedirectorMessage_Redirect* other) {
  using std::swap;
  to_.Swap(&other->to_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectorMessage_Redirect::GetMetadata() const {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectorMessage_Redirect

// required string to = 1;
bool RedirectorMessage_Redirect::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectorMessage_Redirect::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectorMessage_Redirect::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectorMessage_Redirect::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
const ::std::string& RedirectorMessage_Redirect::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
  return to_.GetNoArena();
}
void RedirectorMessage_Redirect::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
}
#if LANG_CXX11
void RedirectorMessage_Redirect::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
}
#endif
void RedirectorMessage_Redirect::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
}
void RedirectorMessage_Redirect::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
}
::std::string* RedirectorMessage_Redirect::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectorMessage_Redirect::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectorMessage_Redirect::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect.to)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectorMessage_Link::kFromFieldNumber;
const int RedirectorMessage_Link::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectorMessage_Link::RedirectorMessage_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
}
RedirectorMessage_Link::RedirectorMessage_Link(const RedirectorMessage_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from()) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
}

void RedirectorMessage_Link::SharedCtor() {
  _cached_size_ = 0;
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RedirectorMessage_Link::~RedirectorMessage_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  SharedDtor();
}

void RedirectorMessage_Link::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RedirectorMessage_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectorMessage_Link::descriptor() {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectorMessage_Link& RedirectorMessage_Link::default_instance() {
  protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectorMessage_Link* RedirectorMessage_Link::New(::google::protobuf::Arena* arena) const {
  RedirectorMessage_Link* n = new RedirectorMessage_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectorMessage_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!from_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*from_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectorMessage_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  return false;
#undef DO_
}

void RedirectorMessage_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
}

::google::protobuf::uint8* RedirectorMessage_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  return target;
}

size_t RedirectorMessage_Link::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  size_t total_size = 0;

  if (has_from()) {
    // required string from = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  return total_size;
}
size_t RedirectorMessage_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string from = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());

    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectorMessage_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectorMessage_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectorMessage_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
    MergeFrom(*source);
  }
}

void RedirectorMessage_Link::MergeFrom(const RedirectorMessage_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from();
      from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
}

void RedirectorMessage_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectorMessage_Link::CopyFrom(const RedirectorMessage_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectorMessage_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RedirectorMessage_Link::Swap(RedirectorMessage_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectorMessage_Link::InternalSwap(RedirectorMessage_Link* other) {
  using std::swap;
  from_.Swap(&other->from_);
  text_.Swap(&other->text_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectorMessage_Link::GetMetadata() const {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectorMessage_Link

// required string from = 1;
bool RedirectorMessage_Link::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectorMessage_Link::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectorMessage_Link::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectorMessage_Link::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from();
}
const ::std::string& RedirectorMessage_Link::from() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
  return from_.GetNoArena();
}
void RedirectorMessage_Link::set_from(const ::std::string& value) {
  set_has_from();
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
}
#if LANG_CXX11
void RedirectorMessage_Link::set_from(::std::string&& value) {
  set_has_from();
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
}
#endif
void RedirectorMessage_Link::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from();
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
}
void RedirectorMessage_Link::set_from(const char* value, size_t size) {
  set_has_from();
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
}
::std::string* RedirectorMessage_Link::mutable_from() {
  set_has_from();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectorMessage_Link::release_from() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
  clear_has_from();
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectorMessage_Link::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    set_has_from();
  } else {
    clear_has_from();
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.from)
}

// required string text = 2;
bool RedirectorMessage_Link::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectorMessage_Link::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectorMessage_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectorMessage_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& RedirectorMessage_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
  return text_.GetNoArena();
}
void RedirectorMessage_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
}
#if LANG_CXX11
void RedirectorMessage_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
}
#endif
void RedirectorMessage_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
}
void RedirectorMessage_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
}
::std::string* RedirectorMessage_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectorMessage_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectorMessage_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.Link.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectorMessage_ExtraText::kIdFieldNumber;
const int RedirectorMessage_ExtraText::kExtratextArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectorMessage_ExtraText::RedirectorMessage_ExtraText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
}
RedirectorMessage_ExtraText::RedirectorMessage_ExtraText(const RedirectorMessage_ExtraText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_extratextarray()) {
    extratextarray_ = new ::ru::mail::go::webbase::blobs::ExtraTextArray(*from.extratextarray_);
  } else {
    extratextarray_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
}

void RedirectorMessage_ExtraText::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extratextarray_ = NULL;
}

RedirectorMessage_ExtraText::~RedirectorMessage_ExtraText() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  SharedDtor();
}

void RedirectorMessage_ExtraText::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extratextarray_;
}

void RedirectorMessage_ExtraText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectorMessage_ExtraText::descriptor() {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectorMessage_ExtraText& RedirectorMessage_ExtraText::default_instance() {
  protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectorMessage_ExtraText* RedirectorMessage_ExtraText::New(::google::protobuf::Arena* arena) const {
  RedirectorMessage_ExtraText* n = new RedirectorMessage_ExtraText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectorMessage_ExtraText::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(extratextarray_ != NULL);
      extratextarray_->::ru::mail::go::webbase::blobs::ExtraTextArray::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectorMessage_ExtraText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extratextarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  return false;
#undef DO_
}

void RedirectorMessage_ExtraText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->extratextarray_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
}

::google::protobuf::uint8* RedirectorMessage_ExtraText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->extratextarray_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  return target;
}

size_t RedirectorMessage_ExtraText::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_extratextarray()) {
    // required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extratextarray_);
  }

  return total_size;
}
size_t RedirectorMessage_ExtraText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extratextarray_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectorMessage_ExtraText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectorMessage_ExtraText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectorMessage_ExtraText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
    MergeFrom(*source);
  }
}

void RedirectorMessage_ExtraText::MergeFrom(const RedirectorMessage_ExtraText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_extratextarray()->::ru::mail::go::webbase::blobs::ExtraTextArray::MergeFrom(from.extratextarray());
    }
  }
}

void RedirectorMessage_ExtraText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectorMessage_ExtraText::CopyFrom(const RedirectorMessage_ExtraText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectorMessage_ExtraText::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_extratextarray()) {
    if (!this->extratextarray_->IsInitialized()) return false;
  }
  return true;
}

void RedirectorMessage_ExtraText::Swap(RedirectorMessage_ExtraText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectorMessage_ExtraText::InternalSwap(RedirectorMessage_ExtraText* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(extratextarray_, other->extratextarray_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectorMessage_ExtraText::GetMetadata() const {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectorMessage_ExtraText

// required string id = 1;
bool RedirectorMessage_ExtraText::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectorMessage_ExtraText::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectorMessage_ExtraText::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectorMessage_ExtraText::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& RedirectorMessage_ExtraText::id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
  return id_.GetNoArena();
}
void RedirectorMessage_ExtraText::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
}
#if LANG_CXX11
void RedirectorMessage_ExtraText::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
}
#endif
void RedirectorMessage_ExtraText::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
}
void RedirectorMessage_ExtraText::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
}
::std::string* RedirectorMessage_ExtraText::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectorMessage_ExtraText::release_id() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectorMessage_ExtraText::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.id)
}

// required .ru.mail.go.webbase.blobs.ExtraTextArray extratextArray = 2;
bool RedirectorMessage_ExtraText::has_extratextarray() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectorMessage_ExtraText::set_has_extratextarray() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectorMessage_ExtraText::clear_has_extratextarray() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectorMessage_ExtraText::clear_extratextarray() {
  if (extratextarray_ != NULL) extratextarray_->::ru::mail::go::webbase::blobs::ExtraTextArray::Clear();
  clear_has_extratextarray();
}
const ::ru::mail::go::webbase::blobs::ExtraTextArray& RedirectorMessage_ExtraText::extratextarray() const {
  const ::ru::mail::go::webbase::blobs::ExtraTextArray* p = extratextarray_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.extratextArray)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::ExtraTextArray*>(
      &::ru::mail::go::webbase::blobs::_ExtraTextArray_default_instance_);
}
::ru::mail::go::webbase::blobs::ExtraTextArray* RedirectorMessage_ExtraText::mutable_extratextarray() {
  set_has_extratextarray();
  if (extratextarray_ == NULL) {
    extratextarray_ = new ::ru::mail::go::webbase::blobs::ExtraTextArray;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.extratextArray)
  return extratextarray_;
}
::ru::mail::go::webbase::blobs::ExtraTextArray* RedirectorMessage_ExtraText::release_extratextarray() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.extratextArray)
  clear_has_extratextarray();
  ::ru::mail::go::webbase::blobs::ExtraTextArray* temp = extratextarray_;
  extratextarray_ = NULL;
  return temp;
}
void RedirectorMessage_ExtraText::set_allocated_extratextarray(::ru::mail::go::webbase::blobs::ExtraTextArray* extratextarray) {
  delete extratextarray_;
  extratextarray_ = extratextarray;
  if (extratextarray) {
    set_has_extratextarray();
  } else {
    clear_has_extratextarray();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText.extratextArray)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectorMessage::kLinkFieldNumber;
const int RedirectorMessage::kRedirectFieldNumber;
const int RedirectorMessage::kEtextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectorMessage::RedirectorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage)
}
RedirectorMessage::RedirectorMessage(const RedirectorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_link()) {
    link_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link(*from.link_);
  } else {
    link_ = NULL;
  }
  if (from.has_redirect()) {
    redirect_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect(*from.redirect_);
  } else {
    redirect_ = NULL;
  }
  if (from.has_etext()) {
    etext_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText(*from.etext_);
  } else {
    etext_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.linkgraph.RedirectorMessage)
}

void RedirectorMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&link_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etext_) -
      reinterpret_cast<char*>(&link_)) + sizeof(etext_));
}

RedirectorMessage::~RedirectorMessage() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  SharedDtor();
}

void RedirectorMessage::SharedDtor() {
  if (this != internal_default_instance()) delete link_;
  if (this != internal_default_instance()) delete redirect_;
  if (this != internal_default_instance()) delete etext_;
}

void RedirectorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectorMessage::descriptor() {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectorMessage& RedirectorMessage::default_instance() {
  protobuf_linkgraph_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectorMessage* RedirectorMessage::New(::google::protobuf::Arena* arena) const {
  RedirectorMessage* n = new RedirectorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(link_ != NULL);
      link_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(redirect_ != NULL);
      redirect_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(etext_ != NULL);
      etext_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Link link = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect redirect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_redirect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText etext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  return false;
#undef DO_
}

void RedirectorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Link link = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->link_, output);
  }

  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect redirect = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->redirect_, output);
  }

  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText etext = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->etext_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.linkgraph.RedirectorMessage)
}

::google::protobuf::uint8* RedirectorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Link link = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->link_, deterministic, target);
  }

  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect redirect = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->redirect_, deterministic, target);
  }

  // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText etext = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->etext_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  return target;
}

size_t RedirectorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Link link = 1;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->link_);
    }

    // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect redirect = 2;
    if (has_redirect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->redirect_);
    }

    // optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText etext = 3;
    if (has_etext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->etext_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.linkgraph.RedirectorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.linkgraph.RedirectorMessage)
    MergeFrom(*source);
  }
}

void RedirectorMessage::MergeFrom(const RedirectorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_link()->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link::MergeFrom(from.link());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_redirect()->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect::MergeFrom(from.redirect());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_etext()->::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText::MergeFrom(from.etext());
    }
  }
}

void RedirectorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectorMessage::CopyFrom(const RedirectorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.linkgraph.RedirectorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectorMessage::IsInitialized() const {
  if (has_link()) {
    if (!this->link_->IsInitialized()) return false;
  }
  if (has_redirect()) {
    if (!this->redirect_->IsInitialized()) return false;
  }
  if (has_etext()) {
    if (!this->etext_->IsInitialized()) return false;
  }
  return true;
}

void RedirectorMessage::Swap(RedirectorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectorMessage::InternalSwap(RedirectorMessage* other) {
  using std::swap;
  swap(link_, other->link_);
  swap(redirect_, other->redirect_);
  swap(etext_, other->etext_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectorMessage::GetMetadata() const {
  protobuf_linkgraph_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linkgraph_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectorMessage

// optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Link link = 1;
bool RedirectorMessage::has_link() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectorMessage::set_has_link() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectorMessage::clear_has_link() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectorMessage::clear_link() {
  if (link_ != NULL) link_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link::Clear();
  clear_has_link();
}
const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link& RedirectorMessage::link() const {
  const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link* p = link_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.link)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link*>(
      &::ru::mail::go::webbase::linkgraph::_RedirectorMessage_Link_default_instance_);
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link* RedirectorMessage::mutable_link() {
  set_has_link();
  if (link_ == NULL) {
    link_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.link)
  return link_;
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link* RedirectorMessage::release_link() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.link)
  clear_has_link();
  ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link* temp = link_;
  link_ = NULL;
  return temp;
}
void RedirectorMessage::set_allocated_link(::ru::mail::go::webbase::linkgraph::RedirectorMessage_Link* link) {
  delete link_;
  link_ = link;
  if (link) {
    set_has_link();
  } else {
    clear_has_link();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.link)
}

// optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.Redirect redirect = 2;
bool RedirectorMessage::has_redirect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectorMessage::set_has_redirect() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectorMessage::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectorMessage::clear_redirect() {
  if (redirect_ != NULL) redirect_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect::Clear();
  clear_has_redirect();
}
const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect& RedirectorMessage::redirect() const {
  const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect* p = redirect_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.redirect)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect*>(
      &::ru::mail::go::webbase::linkgraph::_RedirectorMessage_Redirect_default_instance_);
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect* RedirectorMessage::mutable_redirect() {
  set_has_redirect();
  if (redirect_ == NULL) {
    redirect_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.redirect)
  return redirect_;
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect* RedirectorMessage::release_redirect() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.redirect)
  clear_has_redirect();
  ::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect* temp = redirect_;
  redirect_ = NULL;
  return temp;
}
void RedirectorMessage::set_allocated_redirect(::ru::mail::go::webbase::linkgraph::RedirectorMessage_Redirect* redirect) {
  delete redirect_;
  redirect_ = redirect;
  if (redirect) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.redirect)
}

// optional .ru.mail.go.webbase.linkgraph.RedirectorMessage.ExtraText etext = 3;
bool RedirectorMessage::has_etext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RedirectorMessage::set_has_etext() {
  _has_bits_[0] |= 0x00000004u;
}
void RedirectorMessage::clear_has_etext() {
  _has_bits_[0] &= ~0x00000004u;
}
void RedirectorMessage::clear_etext() {
  if (etext_ != NULL) etext_->::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText::Clear();
  clear_has_etext();
}
const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText& RedirectorMessage::etext() const {
  const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText* p = etext_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.linkgraph.RedirectorMessage.etext)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText*>(
      &::ru::mail::go::webbase::linkgraph::_RedirectorMessage_ExtraText_default_instance_);
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText* RedirectorMessage::mutable_etext() {
  set_has_etext();
  if (etext_ == NULL) {
    etext_ = new ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.linkgraph.RedirectorMessage.etext)
  return etext_;
}
::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText* RedirectorMessage::release_etext() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.linkgraph.RedirectorMessage.etext)
  clear_has_etext();
  ::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText* temp = etext_;
  etext_ = NULL;
  return temp;
}
void RedirectorMessage::set_allocated_etext(::ru::mail::go::webbase::linkgraph::RedirectorMessage_ExtraText* etext) {
  delete etext_;
  etext_ = etext;
  if (etext) {
    set_has_etext();
  } else {
    clear_has_etext();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.linkgraph.RedirectorMessage.etext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace linkgraph
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
