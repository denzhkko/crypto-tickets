// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parsed_blobs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "parsed_blobs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class RawLinks_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RawLinks_Link>
     _instance;
} _RawLinks_Link_default_instance_;
class RawLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RawLinks>
     _instance;
} _RawLinks_default_instance_;
class InnerLinks_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InnerLinks_Link>
     _instance;
} _InnerLinks_Link_default_instance_;
class InnerLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InnerLinks>
     _instance;
} _InnerLinks_default_instance_;
class RedirectedLinks_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectedLinks_Link>
     _instance;
} _RedirectedLinks_Link_default_instance_;
class RedirectedLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedirectedLinks>
     _instance;
} _RedirectedLinks_default_instance_;
class IndexableLinks_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IndexableLinks_Link>
     _instance;
} _IndexableLinks_Link_default_instance_;
class IndexableLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IndexableLinks>
     _instance;
} _IndexableLinks_default_instance_;
class QLinks_TextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QLinks_Text>
     _instance;
} _QLinks_Text_default_instance_;
class QLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QLinks>
     _instance;
} _QLinks_default_instance_;
class XLinks_LinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XLinks_Link>
     _instance;
} _XLinks_Link_default_instance_;
class XLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XLinks>
     _instance;
} _XLinks_default_instance_;
class ExtraTextArray_ExtraTextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExtraTextArray_ExtraText>
     _instance;
} _ExtraTextArray_ExtraText_default_instance_;
class ExtraTextArrayDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExtraTextArray>
     _instance;
} _ExtraTextArray_default_instance_;

namespace protobuf_parsed_5fblobs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks_Link, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks_Link, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks_Link, flag_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawLinks, links_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks_Link, to_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLinks, links_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks_Link, uniq_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedirectedLinks, links_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks_Link, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks_Link, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks_Link, rank_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexableLinks, links_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, sr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks_Text, se_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QLinks, texts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks_Link, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks_Link, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks_Link, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks_Link, anchor_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLinks, links_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray_ExtraText, extraattribute_),
  0,
  2,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraTextArray, texts_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(RawLinks_Link)},
  { 11, 17, sizeof(RawLinks)},
  { 18, 24, sizeof(InnerLinks_Link)},
  { 25, 31, sizeof(InnerLinks)},
  { 32, 41, sizeof(RedirectedLinks_Link)},
  { 45, 51, sizeof(RedirectedLinks)},
  { 52, 60, sizeof(IndexableLinks_Link)},
  { 63, 69, sizeof(IndexableLinks)},
  { 70, 80, sizeof(QLinks_Text)},
  { 85, 91, sizeof(QLinks)},
  { 92, 100, sizeof(XLinks_Link)},
  { 103, 109, sizeof(XLinks)},
  { 110, 120, sizeof(ExtraTextArray_ExtraText)},
  { 125, 131, sizeof(ExtraTextArray)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RawLinks_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RawLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InnerLinks_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InnerLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectedLinks_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedirectedLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexableLinks_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexableLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QLinks_Text_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XLinks_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XLinks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExtraTextArray_ExtraText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExtraTextArray_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "parsed_blobs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RawLinks_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RawLinks_Link_default_instance_);_RawLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RawLinks_default_instance_);_InnerLinks_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InnerLinks_Link_default_instance_);_InnerLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InnerLinks_default_instance_);_RedirectedLinks_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectedLinks_Link_default_instance_);_RedirectedLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedirectedLinks_default_instance_);_IndexableLinks_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IndexableLinks_Link_default_instance_);_IndexableLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IndexableLinks_default_instance_);_QLinks_Text_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QLinks_Text_default_instance_);_QLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QLinks_default_instance_);_XLinks_Link_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XLinks_Link_default_instance_);_XLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XLinks_default_instance_);_ExtraTextArray_ExtraText_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExtraTextArray_ExtraText_default_instance_);_ExtraTextArray_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExtraTextArray_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022parsed_blobs.proto\022\030ru.mail.go.webbase"
      ".blobs\"\320\001\n\010RawLinks\0226\n\005links\030\001 \003(\0132\'.ru."
      "mail.go.webbase.blobs.RawLinks.Link\032\213\001\n\004"
      "Link\022\n\n\002to\030\001 \002(\t\022\014\n\004text\030\002 \002(\t\022>\n\004flag\030\003"
      " \001(\01620.ru.mail.go.webbase.blobs.RawLinks"
      ".Link.textFlag\")\n\010textFlag\022\021\n\rwiki_nofol"
      "low\020\001\022\n\n\006iframe\020\002\"Z\n\nInnerLinks\0228\n\005links"
      "\030\001 \003(\0132).ru.mail.go.webbase.blobs.InnerL"
      "inks.Link\032\022\n\004Link\022\n\n\002to\030\001 \002(\t\"\216\001\n\017Redire"
      "ctedLinks\022=\n\005links\030\001 \003(\0132..ru.mail.go.we"
      "bbase.blobs.RedirectedLinks.Link\032<\n\004Link"
      "\022\n\n\002to\030\001 \002(\t\022\014\n\004text\030\002 \002(\t\022\014\n\004hits\030\003 \001(\005"
      "\022\014\n\004uniq\030\004 \001(\005\"\205\001\n\016IndexableLinks\022<\n\005lin"
      "ks\030\001 \003(\0132-.ru.mail.go.webbase.blobs.Inde"
      "xableLinks.Link\0325\n\004Link\022\014\n\004text\030\001 \002(\t\022\021\n"
      "\tfrequency\030\002 \002(\r\022\014\n\004rank\030\003 \002(\002\"\261\002\n\006QLink"
      "s\0224\n\005texts\030\001 \003(\0132%.ru.mail.go.webbase.bl"
      "obs.QLinks.Text\032\360\001\n\004Text\022\014\n\004text\030\001 \002(\t\022\n"
      "\n\002sr\030\002 \002(\002\022\t\n\001c\030\003 \002(\005\0229\n\003src\030\004 \002(\0162,.ru."
      "mail.go.webbase.blobs.QLinks.Text.Source"
      "\0228\n\002se\030\005 \002(\0162,.ru.mail.go.webbase.blobs."
      "QLinks.Text.Engine\",\n\006Source\022\013\n\007SRANKER\020"
      "\001\022\010\n\004LIRU\020\002\022\013\n\007TOPMAIL\020\003\" \n\006Engine\022\n\n\006GO"
      "OGLE\020\001\022\n\n\006YANDEX\020\002\"r\n\006XLinks\0224\n\005links\030\001 "
      "\003(\0132%.ru.mail.go.webbase.blobs.XLinks.Li"
      "nk\0322\n\004Link\022\014\n\004text\030\001 \002(\t\022\014\n\004cost\030\002 \002(\002\022\016"
      "\n\006anchor\030\003 \001(\t\"\310\t\n\016ExtraTextArray\022A\n\005tex"
      "ts\030\001 \003(\01322.ru.mail.go.webbase.blobs.Extr"
      "aTextArray.ExtraText\032\362\010\n\tExtraText\022\014\n\004te"
      "xt\030\001 \002(\t\022E\n\004type\030\002 \002(\01627.ru.mail.go.webb"
      "ase.blobs.ExtraTextArray.ExtraText.Type\022"
      "\014\n\004rank\030\003 \002(\002\022\021\n\tattribute\030\004 \003(\r\022\026\n\016extr"
      "aAttribute\030\005 \003(\r\"\326\007\n\004Type\022\t\n\005XLink\020\001\022\013\n\007"
      "QLinkCR\020\002\022\014\n\010QLinkSRY\020\003\022\014\n\010QLinkSRG\020\004\022\013\n"
      "\007ExtLink\020\005\022\017\n\013XLinkAnchor\020\006\022\n\n\006WTitle\020\007\022"
      "\t\n\005WLink\020\010\022\t\n\005TLink\020\t\022\014\n\010QLinkALY\020\n\022\014\n\010Q"
      "LinkALG\020\013\022\014\n\010CtgTitle\020\014\022\013\n\007CtgName\020\r\022\016\n\n"
      "CtgSection\020\016\022\021\n\rCtgSubSection\020\017\022\022\n\016CtgDe"
      "scription\020\020\022\017\n\013CtgKeyWords\020\021\022\016\n\nCtgServi"
      "ce\020\022\022\014\n\010Translit\020\023\022\r\n\tClickLink\020\024\022\010\n\004Nai"
      "l\020\025\022\017\n\013QLinkAntiCR\020\026\022\014\n\010QLinkBRY\020\027\022\014\n\010QL"
      "inkBRG\020\030\022\014\n\010QLinkBRM\020\031\022\016\n\nQLinkNavig\020\032\022\017"
      "\n\013QLinkSRLiru\020\033\022\014\n\010SubjLink\020\034\022\r\n\tQLinkAL"
      "FY\020\035\022\r\n\tQLinkALFG\020\036\022\014\n\010QLinkCRB\020\037\022\r\n\tQLi"
      "nkSRBY\020 \022\r\n\tQLinkSRBG\020!\022\r\n\tQLinkALBY\020\"\022\r"
      "\n\tQLinkALBG\020#\022\024\n\020ShortestRedirect\020$\022\016\n\nQ"
      "LinkALTUG\020%\022\016\n\nQLinkALTUY\020&\022\017\n\013QLinkALTU"
      "MG\020\'\022\016\n\nQLinkALTUM\020(\022\016\n\nQLinkALTBG\020)\022\016\n\n"
      "QLinkALTBY\020*\022\017\n\013QLinkALTBMG\020+\022\016\n\nQLinkAL"
      "TBM\020,\022\r\n\tQLinkFB_Y\020-\022\r\n\tQLinkFB_G\020.\022\r\n\tQ"
      "LinkFB_M\020/\022\020\n\014BackRedirect\0200\022\016\n\nQLinkIMG"
      "CR\020d\022\017\n\013QLinkIMGALG\020e\022\017\n\013QLinkIMGALY\020f\022\023"
      "\n\017QLinkIMGALG_MIX\020g\022\022\n\016ImagesKeywords\020n\022"
      "\007\n\003Tag\020o\022\r\n\tStackBody\020p\022\021\n\rEBinderTitleG"
      "\020q\022\023\n\017EBinderSnippetG\020r\022\021\n\rEBinderTitleY"
      "\020s\022\023\n\017EBinderSnippetY\020t\022\n\n\006ExtAlt\020u\022\020\n\014E"
      "xtPageTitle\020v\022\014\n\010ExtHText\020w\022\014\n\010QLinkCR2\020"
      "xB\rB\013ParsedBlobs"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2296);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "parsed_blobs.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_parsed_5fblobs_2eproto

const ::google::protobuf::EnumDescriptor* RawLinks_Link_textFlag_descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_enum_descriptors[0];
}
bool RawLinks_Link_textFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RawLinks_Link_textFlag RawLinks_Link::wiki_nofollow;
const RawLinks_Link_textFlag RawLinks_Link::iframe;
const RawLinks_Link_textFlag RawLinks_Link::textFlag_MIN;
const RawLinks_Link_textFlag RawLinks_Link::textFlag_MAX;
const int RawLinks_Link::textFlag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QLinks_Text_Source_descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_enum_descriptors[1];
}
bool QLinks_Text_Source_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QLinks_Text_Source QLinks_Text::SRANKER;
const QLinks_Text_Source QLinks_Text::LIRU;
const QLinks_Text_Source QLinks_Text::TOPMAIL;
const QLinks_Text_Source QLinks_Text::Source_MIN;
const QLinks_Text_Source QLinks_Text::Source_MAX;
const int QLinks_Text::Source_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QLinks_Text_Engine_descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_enum_descriptors[2];
}
bool QLinks_Text_Engine_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QLinks_Text_Engine QLinks_Text::GOOGLE;
const QLinks_Text_Engine QLinks_Text::YANDEX;
const QLinks_Text_Engine QLinks_Text::Engine_MIN;
const QLinks_Text_Engine QLinks_Text::Engine_MAX;
const int QLinks_Text::Engine_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExtraTextArray_ExtraText_Type_descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_enum_descriptors[3];
}
bool ExtraTextArray_ExtraText_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 100:
    case 101:
    case 102:
    case 103:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::XLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkCR;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkSRY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkSRG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ExtLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::XLinkAnchor;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::WTitle;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::WLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::TLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgTitle;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgName;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgSection;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgSubSection;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgDescription;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgKeyWords;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::CtgService;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::Translit;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ClickLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::Nail;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkAntiCR;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkBRY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkBRG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkBRM;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkNavig;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkSRLiru;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::SubjLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALFY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALFG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkCRB;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkSRBY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkSRBG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALBY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALBG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ShortestRedirect;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTUG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTUY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTUMG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTUM;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTBG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTBY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTBMG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkALTBM;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkFB_Y;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkFB_G;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkFB_M;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::BackRedirect;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkIMGCR;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkIMGALG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkIMGALY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkIMGALG_MIX;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ImagesKeywords;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::Tag;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::StackBody;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::EBinderTitleG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::EBinderSnippetG;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::EBinderTitleY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::EBinderSnippetY;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ExtAlt;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ExtPageTitle;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::ExtHText;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::QLinkCR2;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::Type_MIN;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::Type_MAX;
const int ExtraTextArray_ExtraText::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawLinks_Link::kToFieldNumber;
const int RawLinks_Link::kTextFieldNumber;
const int RawLinks_Link::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawLinks_Link::RawLinks_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.RawLinks.Link)
}
RawLinks_Link::RawLinks_Link(const RawLinks_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.RawLinks.Link)
}

void RawLinks_Link::SharedCtor() {
  _cached_size_ = 0;
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_ = 1;
}

RawLinks_Link::~RawLinks_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.RawLinks.Link)
  SharedDtor();
}

void RawLinks_Link::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RawLinks_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RawLinks_Link::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawLinks_Link& RawLinks_Link::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RawLinks_Link* RawLinks_Link::New(::google::protobuf::Arena* arena) const {
  RawLinks_Link* n = new RawLinks_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RawLinks_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!to_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    flag_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RawLinks_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.RawLinks.Link.to");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.RawLinks.Link.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag_IsValid(value)) {
            set_flag(static_cast< ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.RawLinks.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.RawLinks.Link)
  return false;
#undef DO_
}

void RawLinks_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RawLinks.Link.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RawLinks.Link.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.RawLinks.Link)
}

::google::protobuf::uint8* RawLinks_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RawLinks.Link.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RawLinks.Link.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.RawLinks.Link)
  return target;
}

size_t RawLinks_Link::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  size_t total_size = 0;

  if (has_to()) {
    // required string to = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  return total_size;
}
size_t RawLinks_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string to = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());

    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RawLinks_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const RawLinks_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawLinks_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.RawLinks.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.RawLinks.Link)
    MergeFrom(*source);
  }
}

void RawLinks_Link::MergeFrom(const RawLinks_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000004u) {
      flag_ = from.flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RawLinks_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawLinks_Link::CopyFrom(const RawLinks_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.RawLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawLinks_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RawLinks_Link::Swap(RawLinks_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawLinks_Link::InternalSwap(RawLinks_Link* other) {
  using std::swap;
  to_.Swap(&other->to_);
  text_.Swap(&other->text_);
  swap(flag_, other->flag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RawLinks_Link::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RawLinks_Link

// required string to = 1;
bool RawLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RawLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
void RawLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
void RawLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
const ::std::string& RawLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  return to_.GetNoArena();
}
void RawLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
#if LANG_CXX11
void RawLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
#endif
void RawLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
void RawLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
::std::string* RawLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RawLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RawLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}

// required string text = 2;
bool RawLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RawLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void RawLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void RawLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& RawLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  return text_.GetNoArena();
}
void RawLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
#if LANG_CXX11
void RawLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
#endif
void RawLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
void RawLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
::std::string* RawLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RawLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RawLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}

// optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
bool RawLinks_Link::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RawLinks_Link::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
void RawLinks_Link::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
void RawLinks_Link::clear_flag() {
  flag_ = 1;
  clear_has_flag();
}
::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag RawLinks_Link::flag() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.flag)
  return static_cast< ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag >(flag_);
}
void RawLinks_Link::set_flag(::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag value) {
  assert(::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag_IsValid(value));
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawLinks::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawLinks::RawLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.RawLinks)
}
RawLinks::RawLinks(const RawLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.RawLinks)
}

void RawLinks::SharedCtor() {
  _cached_size_ = 0;
}

RawLinks::~RawLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.RawLinks)
  SharedDtor();
}

void RawLinks::SharedDtor() {
}

void RawLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RawLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawLinks& RawLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RawLinks* RawLinks::New(::google::protobuf::Arena* arena) const {
  RawLinks* n = new RawLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RawLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.RawLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RawLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.RawLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.RawLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.RawLinks)
  return false;
#undef DO_
}

void RawLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.RawLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.RawLinks)
}

::google::protobuf::uint8* RawLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.RawLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.RawLinks)
  return target;
}

size_t RawLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.RawLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RawLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.RawLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const RawLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.RawLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.RawLinks)
    MergeFrom(*source);
  }
}

void RawLinks::MergeFrom(const RawLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.RawLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void RawLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.RawLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawLinks::CopyFrom(const RawLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.RawLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->links())) return false;
  return true;
}

void RawLinks::Swap(RawLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawLinks::InternalSwap(RawLinks* other) {
  using std::swap;
  links_.InternalSwap(&other->links_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RawLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RawLinks

// repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
int RawLinks::links_size() const {
  return links_.size();
}
void RawLinks::clear_links() {
  links_.Clear();
}
const ::ru::mail::go::webbase::blobs::RawLinks_Link& RawLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Get(index);
}
::ru::mail::go::webbase::blobs::RawLinks_Link* RawLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Mutable(index);
}
::ru::mail::go::webbase::blobs::RawLinks_Link* RawLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >*
RawLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.RawLinks.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >&
RawLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerLinks_Link::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerLinks_Link::InnerLinks_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.InnerLinks.Link)
}
InnerLinks_Link::InnerLinks_Link(const InnerLinks_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.InnerLinks.Link)
}

void InnerLinks_Link::SharedCtor() {
  _cached_size_ = 0;
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InnerLinks_Link::~InnerLinks_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.InnerLinks.Link)
  SharedDtor();
}

void InnerLinks_Link::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InnerLinks_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerLinks_Link::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InnerLinks_Link& InnerLinks_Link::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

InnerLinks_Link* InnerLinks_Link::New(::google::protobuf::Arena* arena) const {
  InnerLinks_Link* n = new InnerLinks_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InnerLinks_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_to()) {
    GOOGLE_DCHECK(!to_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*to_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InnerLinks_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.InnerLinks.Link.to");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.InnerLinks.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.InnerLinks.Link)
  return false;
#undef DO_
}

void InnerLinks_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.InnerLinks.Link.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.InnerLinks.Link)
}

::google::protobuf::uint8* InnerLinks_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.InnerLinks.Link.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.InnerLinks.Link)
  return target;
}

size_t InnerLinks_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string to = 1;
  if (has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerLinks_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const InnerLinks_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerLinks_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.InnerLinks.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.InnerLinks.Link)
    MergeFrom(*source);
  }
}

void InnerLinks_Link::MergeFrom(const InnerLinks_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_to()) {
    set_has_to();
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
}

void InnerLinks_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerLinks_Link::CopyFrom(const InnerLinks_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.InnerLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerLinks_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void InnerLinks_Link::Swap(InnerLinks_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerLinks_Link::InternalSwap(InnerLinks_Link* other) {
  using std::swap;
  to_.Swap(&other->to_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InnerLinks_Link::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InnerLinks_Link

// required string to = 1;
bool InnerLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InnerLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
void InnerLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
void InnerLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
const ::std::string& InnerLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  return to_.GetNoArena();
}
void InnerLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
#if LANG_CXX11
void InnerLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
#endif
void InnerLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
void InnerLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
::std::string* InnerLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InnerLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InnerLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerLinks::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerLinks::InnerLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.InnerLinks)
}
InnerLinks::InnerLinks(const InnerLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.InnerLinks)
}

void InnerLinks::SharedCtor() {
  _cached_size_ = 0;
}

InnerLinks::~InnerLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.InnerLinks)
  SharedDtor();
}

void InnerLinks::SharedDtor() {
}

void InnerLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InnerLinks& InnerLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

InnerLinks* InnerLinks::New(::google::protobuf::Arena* arena) const {
  InnerLinks* n = new InnerLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InnerLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.InnerLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InnerLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.InnerLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.InnerLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.InnerLinks)
  return false;
#undef DO_
}

void InnerLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.InnerLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.InnerLinks)
}

::google::protobuf::uint8* InnerLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.InnerLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.InnerLinks)
  return target;
}

size_t InnerLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.InnerLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.InnerLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const InnerLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.InnerLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.InnerLinks)
    MergeFrom(*source);
  }
}

void InnerLinks::MergeFrom(const InnerLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.InnerLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void InnerLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.InnerLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerLinks::CopyFrom(const InnerLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.InnerLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->links())) return false;
  return true;
}

void InnerLinks::Swap(InnerLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerLinks::InternalSwap(InnerLinks* other) {
  using std::swap;
  links_.InternalSwap(&other->links_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InnerLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InnerLinks

// repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
int InnerLinks::links_size() const {
  return links_.size();
}
void InnerLinks::clear_links() {
  links_.Clear();
}
const ::ru::mail::go::webbase::blobs::InnerLinks_Link& InnerLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Get(index);
}
::ru::mail::go::webbase::blobs::InnerLinks_Link* InnerLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Mutable(index);
}
::ru::mail::go::webbase::blobs::InnerLinks_Link* InnerLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >*
InnerLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.InnerLinks.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >&
InnerLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectedLinks_Link::kToFieldNumber;
const int RedirectedLinks_Link::kTextFieldNumber;
const int RedirectedLinks_Link::kHitsFieldNumber;
const int RedirectedLinks_Link::kUniqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectedLinks_Link::RedirectedLinks_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
}
RedirectedLinks_Link::RedirectedLinks_Link(const RedirectedLinks_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&hits_, &from.hits_,
    static_cast<size_t>(reinterpret_cast<char*>(&uniq_) -
    reinterpret_cast<char*>(&hits_)) + sizeof(uniq_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
}

void RedirectedLinks_Link::SharedCtor() {
  _cached_size_ = 0;
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniq_) -
      reinterpret_cast<char*>(&hits_)) + sizeof(uniq_));
}

RedirectedLinks_Link::~RedirectedLinks_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  SharedDtor();
}

void RedirectedLinks_Link::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RedirectedLinks_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectedLinks_Link::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectedLinks_Link& RedirectedLinks_Link::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectedLinks_Link* RedirectedLinks_Link::New(::google::protobuf::Arena* arena) const {
  RedirectedLinks_Link* n = new RedirectedLinks_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectedLinks_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!to_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*to_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&hits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uniq_) -
        reinterpret_cast<char*>(&hits_)) + sizeof(uniq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectedLinks_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.RedirectedLinks.Link.to");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.RedirectedLinks.Link.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uniq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uniq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uniq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  return false;
#undef DO_
}

void RedirectedLinks_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RedirectedLinks.Link.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RedirectedLinks.Link.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional int32 hits = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hits(), output);
  }

  // optional int32 uniq = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uniq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
}

::google::protobuf::uint8* RedirectedLinks_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RedirectedLinks.Link.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.RedirectedLinks.Link.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional int32 hits = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hits(), target);
  }

  // optional int32 uniq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uniq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  return target;
}

size_t RedirectedLinks_Link::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  size_t total_size = 0;

  if (has_to()) {
    // required string to = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  return total_size;
}
size_t RedirectedLinks_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string to = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());

    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional int32 hits = 3;
    if (has_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hits());
    }

    // optional int32 uniq = 4;
    if (has_uniq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uniq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectedLinks_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectedLinks_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectedLinks_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
    MergeFrom(*source);
  }
}

void RedirectedLinks_Link::MergeFrom(const RedirectedLinks_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000004u) {
      hits_ = from.hits_;
    }
    if (cached_has_bits & 0x00000008u) {
      uniq_ = from.uniq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RedirectedLinks_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectedLinks_Link::CopyFrom(const RedirectedLinks_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectedLinks_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RedirectedLinks_Link::Swap(RedirectedLinks_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectedLinks_Link::InternalSwap(RedirectedLinks_Link* other) {
  using std::swap;
  to_.Swap(&other->to_);
  text_.Swap(&other->text_);
  swap(hits_, other->hits_);
  swap(uniq_, other->uniq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectedLinks_Link::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectedLinks_Link

// required string to = 1;
bool RedirectedLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RedirectedLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
void RedirectedLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
void RedirectedLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
const ::std::string& RedirectedLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  return to_.GetNoArena();
}
void RedirectedLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
#if LANG_CXX11
void RedirectedLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
#endif
void RedirectedLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
void RedirectedLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
::std::string* RedirectedLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectedLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectedLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}

// required string text = 2;
bool RedirectedLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RedirectedLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void RedirectedLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void RedirectedLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& RedirectedLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  return text_.GetNoArena();
}
void RedirectedLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
#if LANG_CXX11
void RedirectedLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
#endif
void RedirectedLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
void RedirectedLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
::std::string* RedirectedLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RedirectedLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RedirectedLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}

// optional int32 hits = 3;
bool RedirectedLinks_Link::has_hits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RedirectedLinks_Link::set_has_hits() {
  _has_bits_[0] |= 0x00000004u;
}
void RedirectedLinks_Link::clear_has_hits() {
  _has_bits_[0] &= ~0x00000004u;
}
void RedirectedLinks_Link::clear_hits() {
  hits_ = 0;
  clear_has_hits();
}
::google::protobuf::int32 RedirectedLinks_Link::hits() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.hits)
  return hits_;
}
void RedirectedLinks_Link::set_hits(::google::protobuf::int32 value) {
  set_has_hits();
  hits_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.hits)
}

// optional int32 uniq = 4;
bool RedirectedLinks_Link::has_uniq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RedirectedLinks_Link::set_has_uniq() {
  _has_bits_[0] |= 0x00000008u;
}
void RedirectedLinks_Link::clear_has_uniq() {
  _has_bits_[0] &= ~0x00000008u;
}
void RedirectedLinks_Link::clear_uniq() {
  uniq_ = 0;
  clear_has_uniq();
}
::google::protobuf::int32 RedirectedLinks_Link::uniq() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.uniq)
  return uniq_;
}
void RedirectedLinks_Link::set_uniq(::google::protobuf::int32 value) {
  set_has_uniq();
  uniq_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.uniq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedirectedLinks::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedirectedLinks::RedirectedLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.RedirectedLinks)
}
RedirectedLinks::RedirectedLinks(const RedirectedLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.RedirectedLinks)
}

void RedirectedLinks::SharedCtor() {
  _cached_size_ = 0;
}

RedirectedLinks::~RedirectedLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.RedirectedLinks)
  SharedDtor();
}

void RedirectedLinks::SharedDtor() {
}

void RedirectedLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedirectedLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedirectedLinks& RedirectedLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedirectedLinks* RedirectedLinks::New(::google::protobuf::Arena* arena) const {
  RedirectedLinks* n = new RedirectedLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedirectedLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedirectedLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.RedirectedLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.RedirectedLinks)
  return false;
#undef DO_
}

void RedirectedLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.RedirectedLinks)
}

::google::protobuf::uint8* RedirectedLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.RedirectedLinks)
  return target;
}

size_t RedirectedLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedirectedLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectedLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedirectedLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.RedirectedLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.RedirectedLinks)
    MergeFrom(*source);
  }
}

void RedirectedLinks::MergeFrom(const RedirectedLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void RedirectedLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectedLinks::CopyFrom(const RedirectedLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.RedirectedLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectedLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->links())) return false;
  return true;
}

void RedirectedLinks::Swap(RedirectedLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedirectedLinks::InternalSwap(RedirectedLinks* other) {
  using std::swap;
  links_.InternalSwap(&other->links_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedirectedLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedirectedLinks

// repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
int RedirectedLinks::links_size() const {
  return links_.size();
}
void RedirectedLinks::clear_links() {
  links_.Clear();
}
const ::ru::mail::go::webbase::blobs::RedirectedLinks_Link& RedirectedLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Get(index);
}
::ru::mail::go::webbase::blobs::RedirectedLinks_Link* RedirectedLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Mutable(index);
}
::ru::mail::go::webbase::blobs::RedirectedLinks_Link* RedirectedLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >*
RedirectedLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >&
RedirectedLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexableLinks_Link::kTextFieldNumber;
const int IndexableLinks_Link::kFrequencyFieldNumber;
const int IndexableLinks_Link::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexableLinks_Link::IndexableLinks_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.IndexableLinks.Link)
}
IndexableLinks_Link::IndexableLinks_Link(const IndexableLinks_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&frequency_, &from.frequency_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&frequency_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.IndexableLinks.Link)
}

void IndexableLinks_Link::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&frequency_)) + sizeof(rank_));
}

IndexableLinks_Link::~IndexableLinks_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  SharedDtor();
}

void IndexableLinks_Link::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexableLinks_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexableLinks_Link::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexableLinks_Link& IndexableLinks_Link::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexableLinks_Link* IndexableLinks_Link::New(::google::protobuf::Arena* arena) const {
  IndexableLinks_Link* n = new IndexableLinks_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexableLinks_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&frequency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rank_) -
        reinterpret_cast<char*>(&frequency_)) + sizeof(rank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IndexableLinks_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.IndexableLinks.Link.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 frequency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  return false;
#undef DO_
}

void IndexableLinks_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.IndexableLinks.Link.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // required uint32 frequency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frequency(), output);
  }

  // required float rank = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.IndexableLinks.Link)
}

::google::protobuf::uint8* IndexableLinks_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.IndexableLinks.Link.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // required uint32 frequency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frequency(), target);
  }

  // required float rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  return target;
}

size_t IndexableLinks_Link::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_frequency()) {
    // required uint32 frequency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());
  }

  if (has_rank()) {
    // required float rank = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t IndexableLinks_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required uint32 frequency = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());

    // required float rank = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexableLinks_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexableLinks_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexableLinks_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.IndexableLinks.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.IndexableLinks.Link)
    MergeFrom(*source);
  }
}

void IndexableLinks_Link::MergeFrom(const IndexableLinks_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      frequency_ = from.frequency_;
    }
    if (cached_has_bits & 0x00000004u) {
      rank_ = from.rank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IndexableLinks_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexableLinks_Link::CopyFrom(const IndexableLinks_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.IndexableLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexableLinks_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void IndexableLinks_Link::Swap(IndexableLinks_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexableLinks_Link::InternalSwap(IndexableLinks_Link* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(frequency_, other->frequency_);
  swap(rank_, other->rank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexableLinks_Link::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexableLinks_Link

// required string text = 1;
bool IndexableLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IndexableLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void IndexableLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void IndexableLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& IndexableLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  return text_.GetNoArena();
}
void IndexableLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
#if LANG_CXX11
void IndexableLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
#endif
void IndexableLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
void IndexableLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
::std::string* IndexableLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexableLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexableLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}

// required uint32 frequency = 2;
bool IndexableLinks_Link::has_frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IndexableLinks_Link::set_has_frequency() {
  _has_bits_[0] |= 0x00000002u;
}
void IndexableLinks_Link::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
void IndexableLinks_Link::clear_frequency() {
  frequency_ = 0u;
  clear_has_frequency();
}
::google::protobuf::uint32 IndexableLinks_Link::frequency() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.frequency)
  return frequency_;
}
void IndexableLinks_Link::set_frequency(::google::protobuf::uint32 value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.frequency)
}

// required float rank = 3;
bool IndexableLinks_Link::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IndexableLinks_Link::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
void IndexableLinks_Link::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
void IndexableLinks_Link::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
float IndexableLinks_Link::rank() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.rank)
  return rank_;
}
void IndexableLinks_Link::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.rank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexableLinks::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexableLinks::IndexableLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.IndexableLinks)
}
IndexableLinks::IndexableLinks(const IndexableLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.IndexableLinks)
}

void IndexableLinks::SharedCtor() {
  _cached_size_ = 0;
}

IndexableLinks::~IndexableLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.IndexableLinks)
  SharedDtor();
}

void IndexableLinks::SharedDtor() {
}

void IndexableLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexableLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexableLinks& IndexableLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexableLinks* IndexableLinks::New(::google::protobuf::Arena* arena) const {
  IndexableLinks* n = new IndexableLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexableLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.IndexableLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IndexableLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.IndexableLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.IndexableLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.IndexableLinks)
  return false;
#undef DO_
}

void IndexableLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.IndexableLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.IndexableLinks)
}

::google::protobuf::uint8* IndexableLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.IndexableLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.IndexableLinks)
  return target;
}

size_t IndexableLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.IndexableLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexableLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.IndexableLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexableLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexableLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.IndexableLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.IndexableLinks)
    MergeFrom(*source);
  }
}

void IndexableLinks::MergeFrom(const IndexableLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.IndexableLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void IndexableLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.IndexableLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexableLinks::CopyFrom(const IndexableLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.IndexableLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexableLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->links())) return false;
  return true;
}

void IndexableLinks::Swap(IndexableLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexableLinks::InternalSwap(IndexableLinks* other) {
  using std::swap;
  links_.InternalSwap(&other->links_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexableLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexableLinks

// repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
int IndexableLinks::links_size() const {
  return links_.size();
}
void IndexableLinks::clear_links() {
  links_.Clear();
}
const ::ru::mail::go::webbase::blobs::IndexableLinks_Link& IndexableLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Get(index);
}
::ru::mail::go::webbase::blobs::IndexableLinks_Link* IndexableLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Mutable(index);
}
::ru::mail::go::webbase::blobs::IndexableLinks_Link* IndexableLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >*
IndexableLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >&
IndexableLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QLinks_Text::kTextFieldNumber;
const int QLinks_Text::kSrFieldNumber;
const int QLinks_Text::kCFieldNumber;
const int QLinks_Text::kSrcFieldNumber;
const int QLinks_Text::kSeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QLinks_Text::QLinks_Text()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.QLinks.Text)
}
QLinks_Text::QLinks_Text(const QLinks_Text& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&sr_, &from.sr_,
    static_cast<size_t>(reinterpret_cast<char*>(&se_) -
    reinterpret_cast<char*>(&sr_)) + sizeof(se_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.QLinks.Text)
}

void QLinks_Text::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c_) -
      reinterpret_cast<char*>(&sr_)) + sizeof(c_));
  src_ = 1;
  se_ = 1;
}

QLinks_Text::~QLinks_Text() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.QLinks.Text)
  SharedDtor();
}

void QLinks_Text::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QLinks_Text::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QLinks_Text::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QLinks_Text& QLinks_Text::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

QLinks_Text* QLinks_Text::New(::google::protobuf::Arena* arena) const {
  QLinks_Text* n = new QLinks_Text;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QLinks_Text::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.QLinks.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 30u) {
    ::memset(&sr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&c_) -
        reinterpret_cast<char*>(&sr_)) + sizeof(c_));
    src_ = 1;
    se_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QLinks_Text::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.QLinks.Text)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.QLinks.Text.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float sr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_sr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::webbase::blobs::QLinks_Text_Source_IsValid(value)) {
            set_src(static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Source >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::webbase::blobs::QLinks_Text_Engine_IsValid(value)) {
            set_se(static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Engine >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.QLinks.Text)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.QLinks.Text)
  return false;
#undef DO_
}

void QLinks_Text::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.QLinks.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.QLinks.Text.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // required float sr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->sr(), output);
  }

  // required int32 c = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->c(), output);
  }

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->src(), output);
  }

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->se(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.QLinks.Text)
}

::google::protobuf::uint8* QLinks_Text::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.QLinks.Text)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.QLinks.Text.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // required float sr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->sr(), target);
  }

  // required int32 c = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->c(), target);
  }

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->src(), target);
  }

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->se(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.QLinks.Text)
  return target;
}

size_t QLinks_Text::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.QLinks.Text)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_sr()) {
    // required float sr = 2;
    total_size += 1 + 4;
  }

  if (has_c()) {
    // required int32 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  if (has_src()) {
    // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->src());
  }

  if (has_se()) {
    // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->se());
  }

  return total_size;
}
size_t QLinks_Text::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.QLinks.Text)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required float sr = 2;
    total_size += 1 + 4;

    // required int32 c = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());

    // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->src());

    // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->se());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QLinks_Text::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.QLinks.Text)
  GOOGLE_DCHECK_NE(&from, this);
  const QLinks_Text* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QLinks_Text>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.QLinks.Text)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.QLinks.Text)
    MergeFrom(*source);
  }
}

void QLinks_Text::MergeFrom(const QLinks_Text& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.QLinks.Text)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      sr_ = from.sr_;
    }
    if (cached_has_bits & 0x00000004u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000008u) {
      src_ = from.src_;
    }
    if (cached_has_bits & 0x00000010u) {
      se_ = from.se_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QLinks_Text::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.QLinks.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QLinks_Text::CopyFrom(const QLinks_Text& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.QLinks.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QLinks_Text::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void QLinks_Text::Swap(QLinks_Text* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QLinks_Text::InternalSwap(QLinks_Text* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(sr_, other->sr_);
  swap(c_, other->c_);
  swap(src_, other->src_);
  swap(se_, other->se_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QLinks_Text::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QLinks_Text

// required string text = 1;
bool QLinks_Text::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QLinks_Text::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void QLinks_Text::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void QLinks_Text::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& QLinks_Text::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.text)
  return text_.GetNoArena();
}
void QLinks_Text::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
#if LANG_CXX11
void QLinks_Text::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
#endif
void QLinks_Text::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
void QLinks_Text::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
::std::string* QLinks_Text::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QLinks.Text.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QLinks_Text::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.QLinks.Text.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QLinks_Text::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.QLinks.Text.text)
}

// required float sr = 2;
bool QLinks_Text::has_sr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QLinks_Text::set_has_sr() {
  _has_bits_[0] |= 0x00000002u;
}
void QLinks_Text::clear_has_sr() {
  _has_bits_[0] &= ~0x00000002u;
}
void QLinks_Text::clear_sr() {
  sr_ = 0;
  clear_has_sr();
}
float QLinks_Text::sr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.sr)
  return sr_;
}
void QLinks_Text::set_sr(float value) {
  set_has_sr();
  sr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.sr)
}

// required int32 c = 3;
bool QLinks_Text::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QLinks_Text::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
void QLinks_Text::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
void QLinks_Text::clear_c() {
  c_ = 0;
  clear_has_c();
}
::google::protobuf::int32 QLinks_Text::c() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.c)
  return c_;
}
void QLinks_Text::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.c)
}

// required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
bool QLinks_Text::has_src() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QLinks_Text::set_has_src() {
  _has_bits_[0] |= 0x00000008u;
}
void QLinks_Text::clear_has_src() {
  _has_bits_[0] &= ~0x00000008u;
}
void QLinks_Text::clear_src() {
  src_ = 1;
  clear_has_src();
}
::ru::mail::go::webbase::blobs::QLinks_Text_Source QLinks_Text::src() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.src)
  return static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Source >(src_);
}
void QLinks_Text::set_src(::ru::mail::go::webbase::blobs::QLinks_Text_Source value) {
  assert(::ru::mail::go::webbase::blobs::QLinks_Text_Source_IsValid(value));
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.src)
}

// required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
bool QLinks_Text::has_se() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QLinks_Text::set_has_se() {
  _has_bits_[0] |= 0x00000010u;
}
void QLinks_Text::clear_has_se() {
  _has_bits_[0] &= ~0x00000010u;
}
void QLinks_Text::clear_se() {
  se_ = 1;
  clear_has_se();
}
::ru::mail::go::webbase::blobs::QLinks_Text_Engine QLinks_Text::se() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.se)
  return static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Engine >(se_);
}
void QLinks_Text::set_se(::ru::mail::go::webbase::blobs::QLinks_Text_Engine value) {
  assert(::ru::mail::go::webbase::blobs::QLinks_Text_Engine_IsValid(value));
  set_has_se();
  se_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.se)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QLinks::kTextsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QLinks::QLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.QLinks)
}
QLinks::QLinks(const QLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      texts_(from.texts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.QLinks)
}

void QLinks::SharedCtor() {
  _cached_size_ = 0;
}

QLinks::~QLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.QLinks)
  SharedDtor();
}

void QLinks::SharedDtor() {
}

void QLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QLinks& QLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

QLinks* QLinks::New(::google::protobuf::Arena* arena) const {
  QLinks* n = new QLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.QLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  texts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.QLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_texts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.QLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.QLinks)
  return false;
#undef DO_
}

void QLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.QLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->texts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.QLinks)
}

::google::protobuf::uint8* QLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.QLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->texts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.QLinks)
  return target;
}

size_t QLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.QLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->texts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->texts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.QLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const QLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.QLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.QLinks)
    MergeFrom(*source);
  }
}

void QLinks::MergeFrom(const QLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.QLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  texts_.MergeFrom(from.texts_);
}

void QLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.QLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QLinks::CopyFrom(const QLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.QLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->texts())) return false;
  return true;
}

void QLinks::Swap(QLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QLinks::InternalSwap(QLinks* other) {
  using std::swap;
  texts_.InternalSwap(&other->texts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QLinks

// repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
int QLinks::texts_size() const {
  return texts_.size();
}
void QLinks::clear_texts() {
  texts_.Clear();
}
const ::ru::mail::go::webbase::blobs::QLinks_Text& QLinks::texts(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Get(index);
}
::ru::mail::go::webbase::blobs::QLinks_Text* QLinks::mutable_texts(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Mutable(index);
}
::ru::mail::go::webbase::blobs::QLinks_Text* QLinks::add_texts() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >*
QLinks::mutable_texts() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.QLinks.texts)
  return &texts_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >&
QLinks::texts() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLinks_Link::kTextFieldNumber;
const int XLinks_Link::kCostFieldNumber;
const int XLinks_Link::kAnchorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLinks_Link::XLinks_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.XLinks.Link)
}
XLinks_Link::XLinks_Link(const XLinks_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  anchor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_anchor()) {
    anchor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_);
  }
  cost_ = from.cost_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.XLinks.Link)
}

void XLinks_Link::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
}

XLinks_Link::~XLinks_Link() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.XLinks.Link)
  SharedDtor();
}

void XLinks_Link::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XLinks_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XLinks_Link::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLinks_Link& XLinks_Link::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

XLinks_Link* XLinks_Link::New(::google::protobuf::Arena* arena) const {
  XLinks_Link* n = new XLinks_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XLinks_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.XLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!anchor_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*anchor_.UnsafeRawStringPointer())->clear();
    }
  }
  cost_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XLinks_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.XLinks.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.XLinks.Link.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string anchor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anchor().data(), static_cast<int>(this->anchor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.XLinks.Link.anchor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.XLinks.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.XLinks.Link)
  return false;
#undef DO_
}

void XLinks_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.XLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.XLinks.Link.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // required float cost = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cost(), output);
  }

  // optional string anchor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor().data(), static_cast<int>(this->anchor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.XLinks.Link.anchor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->anchor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.XLinks.Link)
}

::google::protobuf::uint8* XLinks_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.XLinks.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.XLinks.Link.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // required float cost = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cost(), target);
  }

  // optional string anchor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anchor().data(), static_cast<int>(this->anchor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.XLinks.Link.anchor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->anchor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.XLinks.Link)
  return target;
}

size_t XLinks_Link::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.XLinks.Link)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_cost()) {
    // required float cost = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t XLinks_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.XLinks.Link)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required float cost = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string anchor = 3;
  if (has_anchor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anchor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XLinks_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.XLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const XLinks_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLinks_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.XLinks.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.XLinks.Link)
    MergeFrom(*source);
  }
}

void XLinks_Link::MergeFrom(const XLinks_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.XLinks.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_anchor();
      anchor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_);
    }
    if (cached_has_bits & 0x00000004u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XLinks_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.XLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLinks_Link::CopyFrom(const XLinks_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.XLinks.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLinks_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void XLinks_Link::Swap(XLinks_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLinks_Link::InternalSwap(XLinks_Link* other) {
  using std::swap;
  text_.Swap(&other->text_);
  anchor_.Swap(&other->anchor_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XLinks_Link::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XLinks_Link

// required string text = 1;
bool XLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void XLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void XLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& XLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.text)
  return text_.GetNoArena();
}
void XLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
#if LANG_CXX11
void XLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
#endif
void XLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
void XLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
::std::string* XLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* XLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.XLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void XLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.XLinks.Link.text)
}

// required float cost = 2;
bool XLinks_Link::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XLinks_Link::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
void XLinks_Link::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
void XLinks_Link::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
float XLinks_Link::cost() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.cost)
  return cost_;
}
void XLinks_Link::set_cost(float value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.cost)
}

// optional string anchor = 3;
bool XLinks_Link::has_anchor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XLinks_Link::set_has_anchor() {
  _has_bits_[0] |= 0x00000002u;
}
void XLinks_Link::clear_has_anchor() {
  _has_bits_[0] &= ~0x00000002u;
}
void XLinks_Link::clear_anchor() {
  anchor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anchor();
}
const ::std::string& XLinks_Link::anchor() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  return anchor_.GetNoArena();
}
void XLinks_Link::set_anchor(const ::std::string& value) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
#if LANG_CXX11
void XLinks_Link::set_anchor(::std::string&& value) {
  set_has_anchor();
  anchor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
#endif
void XLinks_Link::set_anchor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
void XLinks_Link::set_anchor(const char* value, size_t size) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
::std::string* XLinks_Link::mutable_anchor() {
  set_has_anchor();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  return anchor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* XLinks_Link::release_anchor() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  clear_has_anchor();
  return anchor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void XLinks_Link::set_allocated_anchor(::std::string* anchor) {
  if (anchor != NULL) {
    set_has_anchor();
  } else {
    clear_has_anchor();
  }
  anchor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anchor);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLinks::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLinks::XLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.XLinks)
}
XLinks::XLinks(const XLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.XLinks)
}

void XLinks::SharedCtor() {
  _cached_size_ = 0;
}

XLinks::~XLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.XLinks)
  SharedDtor();
}

void XLinks::SharedDtor() {
}

void XLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XLinks::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XLinks& XLinks::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

XLinks* XLinks::New(::google::protobuf::Arena* arena) const {
  XLinks* n = new XLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.XLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.XLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.XLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.XLinks)
  return false;
#undef DO_
}

void XLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.XLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.XLinks)
}

::google::protobuf::uint8* XLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.XLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.XLinks)
  return target;
}

size_t XLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.XLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.XLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const XLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.XLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.XLinks)
    MergeFrom(*source);
  }
}

void XLinks::MergeFrom(const XLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.XLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
}

void XLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.XLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLinks::CopyFrom(const XLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.XLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->links())) return false;
  return true;
}

void XLinks::Swap(XLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLinks::InternalSwap(XLinks* other) {
  using std::swap;
  links_.InternalSwap(&other->links_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XLinks::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XLinks

// repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
int XLinks::links_size() const {
  return links_.size();
}
void XLinks::clear_links() {
  links_.Clear();
}
const ::ru::mail::go::webbase::blobs::XLinks_Link& XLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Get(index);
}
::ru::mail::go::webbase::blobs::XLinks_Link* XLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Mutable(index);
}
::ru::mail::go::webbase::blobs::XLinks_Link* XLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >*
XLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.XLinks.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >&
XLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.XLinks.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtraTextArray_ExtraText::kTextFieldNumber;
const int ExtraTextArray_ExtraText::kTypeFieldNumber;
const int ExtraTextArray_ExtraText::kRankFieldNumber;
const int ExtraTextArray_ExtraText::kAttributeFieldNumber;
const int ExtraTextArray_ExtraText::kExtraAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtraTextArray_ExtraText::ExtraTextArray_ExtraText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
}
ExtraTextArray_ExtraText::ExtraTextArray_ExtraText(const ExtraTextArray_ExtraText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attribute_(from.attribute_),
      extraattribute_(from.extraattribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
}

void ExtraTextArray_ExtraText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0;
  type_ = 1;
}

ExtraTextArray_ExtraText::~ExtraTextArray_ExtraText() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  SharedDtor();
}

void ExtraTextArray_ExtraText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExtraTextArray_ExtraText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraTextArray_ExtraText::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtraTextArray_ExtraText& ExtraTextArray_ExtraText::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExtraTextArray_ExtraText* ExtraTextArray_ExtraText::New(::google::protobuf::Arena* arena) const {
  ExtraTextArray_ExtraText* n = new ExtraTextArray_ExtraText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtraTextArray_ExtraText::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  extraattribute_.Clear();
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    rank_ = 0;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtraTextArray_ExtraText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type_IsValid(value)) {
            set_type(static_cast< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 attribute = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_attribute())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_attribute())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 extraAttribute = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_extraattribute())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_extraattribute())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  return false;
#undef DO_
}

void ExtraTextArray_ExtraText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required float rank = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rank(), output);
  }

  // repeated uint32 attribute = 4;
  for (int i = 0, n = this->attribute_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->attribute(i), output);
  }

  // repeated uint32 extraAttribute = 5;
  for (int i = 0, n = this->extraattribute_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->extraattribute(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
}

::google::protobuf::uint8* ExtraTextArray_ExtraText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required float rank = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rank(), target);
  }

  // repeated uint32 attribute = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->attribute_, target);

  // repeated uint32 extraAttribute = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->extraattribute_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  return target;
}

size_t ExtraTextArray_ExtraText::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_rank()) {
    // required float rank = 3;
    total_size += 1 + 4;
  }

  if (has_type()) {
    // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t ExtraTextArray_ExtraText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required float rank = 3;
    total_size += 1 + 4;

    // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 attribute = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->attribute_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->attribute_size());
    total_size += data_size;
  }

  // repeated uint32 extraAttribute = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->extraattribute_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->extraattribute_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraTextArray_ExtraText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtraTextArray_ExtraText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtraTextArray_ExtraText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
    MergeFrom(*source);
  }
}

void ExtraTextArray_ExtraText::MergeFrom(const ExtraTextArray_ExtraText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
  extraattribute_.MergeFrom(from.extraattribute_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtraTextArray_ExtraText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraTextArray_ExtraText::CopyFrom(const ExtraTextArray_ExtraText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraTextArray_ExtraText::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ExtraTextArray_ExtraText::Swap(ExtraTextArray_ExtraText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtraTextArray_ExtraText::InternalSwap(ExtraTextArray_ExtraText* other) {
  using std::swap;
  attribute_.InternalSwap(&other->attribute_);
  extraattribute_.InternalSwap(&other->extraattribute_);
  text_.Swap(&other->text_);
  swap(rank_, other->rank_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtraTextArray_ExtraText::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtraTextArray_ExtraText

// required string text = 1;
bool ExtraTextArray_ExtraText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExtraTextArray_ExtraText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void ExtraTextArray_ExtraText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExtraTextArray_ExtraText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& ExtraTextArray_ExtraText::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  return text_.GetNoArena();
}
void ExtraTextArray_ExtraText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
#if LANG_CXX11
void ExtraTextArray_ExtraText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
#endif
void ExtraTextArray_ExtraText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
void ExtraTextArray_ExtraText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
::std::string* ExtraTextArray_ExtraText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExtraTextArray_ExtraText::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExtraTextArray_ExtraText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}

// required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
bool ExtraTextArray_ExtraText::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExtraTextArray_ExtraText::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ExtraTextArray_ExtraText::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExtraTextArray_ExtraText::clear_type() {
  type_ = 1;
  clear_has_type();
}
::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.type)
  return static_cast< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type >(type_);
}
void ExtraTextArray_ExtraText::set_type(::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type value) {
  assert(::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.type)
}

// required float rank = 3;
bool ExtraTextArray_ExtraText::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExtraTextArray_ExtraText::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
void ExtraTextArray_ExtraText::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExtraTextArray_ExtraText::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
float ExtraTextArray_ExtraText::rank() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.rank)
  return rank_;
}
void ExtraTextArray_ExtraText::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.rank)
}

// repeated uint32 attribute = 4;
int ExtraTextArray_ExtraText::attribute_size() const {
  return attribute_.size();
}
void ExtraTextArray_ExtraText::clear_attribute() {
  attribute_.Clear();
}
::google::protobuf::uint32 ExtraTextArray_ExtraText::attribute(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return attribute_.Get(index);
}
void ExtraTextArray_ExtraText::set_attribute(int index, ::google::protobuf::uint32 value) {
  attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
}
void ExtraTextArray_ExtraText::add_attribute(::google::protobuf::uint32 value) {
  attribute_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExtraTextArray_ExtraText::attribute() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return attribute_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExtraTextArray_ExtraText::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return &attribute_;
}

// repeated uint32 extraAttribute = 5;
int ExtraTextArray_ExtraText::extraattribute_size() const {
  return extraattribute_.size();
}
void ExtraTextArray_ExtraText::clear_extraattribute() {
  extraattribute_.Clear();
}
::google::protobuf::uint32 ExtraTextArray_ExtraText::extraattribute(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return extraattribute_.Get(index);
}
void ExtraTextArray_ExtraText::set_extraattribute(int index, ::google::protobuf::uint32 value) {
  extraattribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
}
void ExtraTextArray_ExtraText::add_extraattribute(::google::protobuf::uint32 value) {
  extraattribute_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExtraTextArray_ExtraText::extraattribute() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return extraattribute_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExtraTextArray_ExtraText::mutable_extraattribute() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return &extraattribute_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtraTextArray::kTextsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtraTextArray::ExtraTextArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_parsed_5fblobs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.blobs.ExtraTextArray)
}
ExtraTextArray::ExtraTextArray(const ExtraTextArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      texts_(from.texts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.blobs.ExtraTextArray)
}

void ExtraTextArray::SharedCtor() {
  _cached_size_ = 0;
}

ExtraTextArray::~ExtraTextArray() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.blobs.ExtraTextArray)
  SharedDtor();
}

void ExtraTextArray::SharedDtor() {
}

void ExtraTextArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraTextArray::descriptor() {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtraTextArray& ExtraTextArray::default_instance() {
  protobuf_parsed_5fblobs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExtraTextArray* ExtraTextArray::New(::google::protobuf::Arena* arena) const {
  ExtraTextArray* n = new ExtraTextArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtraTextArray::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  texts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExtraTextArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_texts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.blobs.ExtraTextArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.blobs.ExtraTextArray)
  return false;
#undef DO_
}

void ExtraTextArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->texts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.blobs.ExtraTextArray)
}

::google::protobuf::uint8* ExtraTextArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->texts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.blobs.ExtraTextArray)
  return target;
}

size_t ExtraTextArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->texts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->texts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraTextArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtraTextArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtraTextArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.blobs.ExtraTextArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.blobs.ExtraTextArray)
    MergeFrom(*source);
  }
}

void ExtraTextArray::MergeFrom(const ExtraTextArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  texts_.MergeFrom(from.texts_);
}

void ExtraTextArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraTextArray::CopyFrom(const ExtraTextArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.blobs.ExtraTextArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraTextArray::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->texts())) return false;
  return true;
}

void ExtraTextArray::Swap(ExtraTextArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtraTextArray::InternalSwap(ExtraTextArray* other) {
  using std::swap;
  texts_.InternalSwap(&other->texts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtraTextArray::GetMetadata() const {
  protobuf_parsed_5fblobs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsed_5fblobs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtraTextArray

// repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
int ExtraTextArray::texts_size() const {
  return texts_.size();
}
void ExtraTextArray::clear_texts() {
  texts_.Clear();
}
const ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText& ExtraTextArray::texts(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Get(index);
}
::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* ExtraTextArray::mutable_texts(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Mutable(index);
}
::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* ExtraTextArray::add_texts() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >*
ExtraTextArray::mutable_texts() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return &texts_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >&
ExtraTextArray::texts() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
