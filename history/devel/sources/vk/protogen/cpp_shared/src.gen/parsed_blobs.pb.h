// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parsed_blobs.proto

#ifndef PROTOBUF_parsed_5fblobs_2eproto__INCLUDED
#define PROTOBUF_parsed_5fblobs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class ExtraTextArray;
class ExtraTextArrayDefaultTypeInternal;
extern ExtraTextArrayDefaultTypeInternal _ExtraTextArray_default_instance_;
class ExtraTextArray_ExtraText;
class ExtraTextArray_ExtraTextDefaultTypeInternal;
extern ExtraTextArray_ExtraTextDefaultTypeInternal _ExtraTextArray_ExtraText_default_instance_;
class IndexableLinks;
class IndexableLinksDefaultTypeInternal;
extern IndexableLinksDefaultTypeInternal _IndexableLinks_default_instance_;
class IndexableLinks_Link;
class IndexableLinks_LinkDefaultTypeInternal;
extern IndexableLinks_LinkDefaultTypeInternal _IndexableLinks_Link_default_instance_;
class InnerLinks;
class InnerLinksDefaultTypeInternal;
extern InnerLinksDefaultTypeInternal _InnerLinks_default_instance_;
class InnerLinks_Link;
class InnerLinks_LinkDefaultTypeInternal;
extern InnerLinks_LinkDefaultTypeInternal _InnerLinks_Link_default_instance_;
class QLinks;
class QLinksDefaultTypeInternal;
extern QLinksDefaultTypeInternal _QLinks_default_instance_;
class QLinks_Text;
class QLinks_TextDefaultTypeInternal;
extern QLinks_TextDefaultTypeInternal _QLinks_Text_default_instance_;
class RawLinks;
class RawLinksDefaultTypeInternal;
extern RawLinksDefaultTypeInternal _RawLinks_default_instance_;
class RawLinks_Link;
class RawLinks_LinkDefaultTypeInternal;
extern RawLinks_LinkDefaultTypeInternal _RawLinks_Link_default_instance_;
class RedirectedLinks;
class RedirectedLinksDefaultTypeInternal;
extern RedirectedLinksDefaultTypeInternal _RedirectedLinks_default_instance_;
class RedirectedLinks_Link;
class RedirectedLinks_LinkDefaultTypeInternal;
extern RedirectedLinks_LinkDefaultTypeInternal _RedirectedLinks_Link_default_instance_;
class XLinks;
class XLinksDefaultTypeInternal;
extern XLinksDefaultTypeInternal _XLinks_default_instance_;
class XLinks_Link;
class XLinks_LinkDefaultTypeInternal;
extern XLinks_LinkDefaultTypeInternal _XLinks_Link_default_instance_;
}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {

namespace protobuf_parsed_5fblobs_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_parsed_5fblobs_2eproto

enum RawLinks_Link_textFlag {
  RawLinks_Link_textFlag_wiki_nofollow = 1,
  RawLinks_Link_textFlag_iframe = 2
};
bool RawLinks_Link_textFlag_IsValid(int value);
const RawLinks_Link_textFlag RawLinks_Link_textFlag_textFlag_MIN = RawLinks_Link_textFlag_wiki_nofollow;
const RawLinks_Link_textFlag RawLinks_Link_textFlag_textFlag_MAX = RawLinks_Link_textFlag_iframe;
const int RawLinks_Link_textFlag_textFlag_ARRAYSIZE = RawLinks_Link_textFlag_textFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* RawLinks_Link_textFlag_descriptor();
inline const ::std::string& RawLinks_Link_textFlag_Name(RawLinks_Link_textFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    RawLinks_Link_textFlag_descriptor(), value);
}
inline bool RawLinks_Link_textFlag_Parse(
    const ::std::string& name, RawLinks_Link_textFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RawLinks_Link_textFlag>(
    RawLinks_Link_textFlag_descriptor(), name, value);
}
enum QLinks_Text_Source {
  QLinks_Text_Source_SRANKER = 1,
  QLinks_Text_Source_LIRU = 2,
  QLinks_Text_Source_TOPMAIL = 3
};
bool QLinks_Text_Source_IsValid(int value);
const QLinks_Text_Source QLinks_Text_Source_Source_MIN = QLinks_Text_Source_SRANKER;
const QLinks_Text_Source QLinks_Text_Source_Source_MAX = QLinks_Text_Source_TOPMAIL;
const int QLinks_Text_Source_Source_ARRAYSIZE = QLinks_Text_Source_Source_MAX + 1;

const ::google::protobuf::EnumDescriptor* QLinks_Text_Source_descriptor();
inline const ::std::string& QLinks_Text_Source_Name(QLinks_Text_Source value) {
  return ::google::protobuf::internal::NameOfEnum(
    QLinks_Text_Source_descriptor(), value);
}
inline bool QLinks_Text_Source_Parse(
    const ::std::string& name, QLinks_Text_Source* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QLinks_Text_Source>(
    QLinks_Text_Source_descriptor(), name, value);
}
enum QLinks_Text_Engine {
  QLinks_Text_Engine_GOOGLE = 1,
  QLinks_Text_Engine_YANDEX = 2
};
bool QLinks_Text_Engine_IsValid(int value);
const QLinks_Text_Engine QLinks_Text_Engine_Engine_MIN = QLinks_Text_Engine_GOOGLE;
const QLinks_Text_Engine QLinks_Text_Engine_Engine_MAX = QLinks_Text_Engine_YANDEX;
const int QLinks_Text_Engine_Engine_ARRAYSIZE = QLinks_Text_Engine_Engine_MAX + 1;

const ::google::protobuf::EnumDescriptor* QLinks_Text_Engine_descriptor();
inline const ::std::string& QLinks_Text_Engine_Name(QLinks_Text_Engine value) {
  return ::google::protobuf::internal::NameOfEnum(
    QLinks_Text_Engine_descriptor(), value);
}
inline bool QLinks_Text_Engine_Parse(
    const ::std::string& name, QLinks_Text_Engine* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QLinks_Text_Engine>(
    QLinks_Text_Engine_descriptor(), name, value);
}
enum ExtraTextArray_ExtraText_Type {
  ExtraTextArray_ExtraText_Type_XLink = 1,
  ExtraTextArray_ExtraText_Type_QLinkCR = 2,
  ExtraTextArray_ExtraText_Type_QLinkSRY = 3,
  ExtraTextArray_ExtraText_Type_QLinkSRG = 4,
  ExtraTextArray_ExtraText_Type_ExtLink = 5,
  ExtraTextArray_ExtraText_Type_XLinkAnchor = 6,
  ExtraTextArray_ExtraText_Type_WTitle = 7,
  ExtraTextArray_ExtraText_Type_WLink = 8,
  ExtraTextArray_ExtraText_Type_TLink = 9,
  ExtraTextArray_ExtraText_Type_QLinkALY = 10,
  ExtraTextArray_ExtraText_Type_QLinkALG = 11,
  ExtraTextArray_ExtraText_Type_CtgTitle = 12,
  ExtraTextArray_ExtraText_Type_CtgName = 13,
  ExtraTextArray_ExtraText_Type_CtgSection = 14,
  ExtraTextArray_ExtraText_Type_CtgSubSection = 15,
  ExtraTextArray_ExtraText_Type_CtgDescription = 16,
  ExtraTextArray_ExtraText_Type_CtgKeyWords = 17,
  ExtraTextArray_ExtraText_Type_CtgService = 18,
  ExtraTextArray_ExtraText_Type_Translit = 19,
  ExtraTextArray_ExtraText_Type_ClickLink = 20,
  ExtraTextArray_ExtraText_Type_Nail = 21,
  ExtraTextArray_ExtraText_Type_QLinkAntiCR = 22,
  ExtraTextArray_ExtraText_Type_QLinkBRY = 23,
  ExtraTextArray_ExtraText_Type_QLinkBRG = 24,
  ExtraTextArray_ExtraText_Type_QLinkBRM = 25,
  ExtraTextArray_ExtraText_Type_QLinkNavig = 26,
  ExtraTextArray_ExtraText_Type_QLinkSRLiru = 27,
  ExtraTextArray_ExtraText_Type_SubjLink = 28,
  ExtraTextArray_ExtraText_Type_QLinkALFY = 29,
  ExtraTextArray_ExtraText_Type_QLinkALFG = 30,
  ExtraTextArray_ExtraText_Type_QLinkCRB = 31,
  ExtraTextArray_ExtraText_Type_QLinkSRBY = 32,
  ExtraTextArray_ExtraText_Type_QLinkSRBG = 33,
  ExtraTextArray_ExtraText_Type_QLinkALBY = 34,
  ExtraTextArray_ExtraText_Type_QLinkALBG = 35,
  ExtraTextArray_ExtraText_Type_ShortestRedirect = 36,
  ExtraTextArray_ExtraText_Type_QLinkALTUG = 37,
  ExtraTextArray_ExtraText_Type_QLinkALTUY = 38,
  ExtraTextArray_ExtraText_Type_QLinkALTUMG = 39,
  ExtraTextArray_ExtraText_Type_QLinkALTUM = 40,
  ExtraTextArray_ExtraText_Type_QLinkALTBG = 41,
  ExtraTextArray_ExtraText_Type_QLinkALTBY = 42,
  ExtraTextArray_ExtraText_Type_QLinkALTBMG = 43,
  ExtraTextArray_ExtraText_Type_QLinkALTBM = 44,
  ExtraTextArray_ExtraText_Type_QLinkFB_Y = 45,
  ExtraTextArray_ExtraText_Type_QLinkFB_G = 46,
  ExtraTextArray_ExtraText_Type_QLinkFB_M = 47,
  ExtraTextArray_ExtraText_Type_BackRedirect = 48,
  ExtraTextArray_ExtraText_Type_QLinkIMGCR = 100,
  ExtraTextArray_ExtraText_Type_QLinkIMGALG = 101,
  ExtraTextArray_ExtraText_Type_QLinkIMGALY = 102,
  ExtraTextArray_ExtraText_Type_QLinkIMGALG_MIX = 103,
  ExtraTextArray_ExtraText_Type_ImagesKeywords = 110,
  ExtraTextArray_ExtraText_Type_Tag = 111,
  ExtraTextArray_ExtraText_Type_StackBody = 112,
  ExtraTextArray_ExtraText_Type_EBinderTitleG = 113,
  ExtraTextArray_ExtraText_Type_EBinderSnippetG = 114,
  ExtraTextArray_ExtraText_Type_EBinderTitleY = 115,
  ExtraTextArray_ExtraText_Type_EBinderSnippetY = 116,
  ExtraTextArray_ExtraText_Type_ExtAlt = 117,
  ExtraTextArray_ExtraText_Type_ExtPageTitle = 118,
  ExtraTextArray_ExtraText_Type_ExtHText = 119,
  ExtraTextArray_ExtraText_Type_QLinkCR2 = 120
};
bool ExtraTextArray_ExtraText_Type_IsValid(int value);
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText_Type_Type_MIN = ExtraTextArray_ExtraText_Type_XLink;
const ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText_Type_Type_MAX = ExtraTextArray_ExtraText_Type_QLinkCR2;
const int ExtraTextArray_ExtraText_Type_Type_ARRAYSIZE = ExtraTextArray_ExtraText_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExtraTextArray_ExtraText_Type_descriptor();
inline const ::std::string& ExtraTextArray_ExtraText_Type_Name(ExtraTextArray_ExtraText_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExtraTextArray_ExtraText_Type_descriptor(), value);
}
inline bool ExtraTextArray_ExtraText_Type_Parse(
    const ::std::string& name, ExtraTextArray_ExtraText_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExtraTextArray_ExtraText_Type>(
    ExtraTextArray_ExtraText_Type_descriptor(), name, value);
}
// ===================================================================

class RawLinks_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.RawLinks.Link) */ {
 public:
  RawLinks_Link();
  virtual ~RawLinks_Link();

  RawLinks_Link(const RawLinks_Link& from);

  inline RawLinks_Link& operator=(const RawLinks_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RawLinks_Link(RawLinks_Link&& from) noexcept
    : RawLinks_Link() {
    *this = ::std::move(from);
  }

  inline RawLinks_Link& operator=(RawLinks_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RawLinks_Link& default_instance();

  static inline const RawLinks_Link* internal_default_instance() {
    return reinterpret_cast<const RawLinks_Link*>(
               &_RawLinks_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RawLinks_Link* other);
  friend void swap(RawLinks_Link& a, RawLinks_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RawLinks_Link* New() const PROTOBUF_FINAL { return New(NULL); }

  RawLinks_Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RawLinks_Link& from);
  void MergeFrom(const RawLinks_Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RawLinks_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RawLinks_Link_textFlag textFlag;
  static const textFlag wiki_nofollow =
    RawLinks_Link_textFlag_wiki_nofollow;
  static const textFlag iframe =
    RawLinks_Link_textFlag_iframe;
  static inline bool textFlag_IsValid(int value) {
    return RawLinks_Link_textFlag_IsValid(value);
  }
  static const textFlag textFlag_MIN =
    RawLinks_Link_textFlag_textFlag_MIN;
  static const textFlag textFlag_MAX =
    RawLinks_Link_textFlag_textFlag_MAX;
  static const int textFlag_ARRAYSIZE =
    RawLinks_Link_textFlag_textFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  textFlag_descriptor() {
    return RawLinks_Link_textFlag_descriptor();
  }
  static inline const ::std::string& textFlag_Name(textFlag value) {
    return RawLinks_Link_textFlag_Name(value);
  }
  static inline bool textFlag_Parse(const ::std::string& name,
      textFlag* value) {
    return RawLinks_Link_textFlag_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string to = 1;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // required string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag flag() const;
  void set_flag(::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.RawLinks.Link)
 private:
  void set_has_to();
  void clear_has_to();
  void set_has_text();
  void clear_has_text();
  void set_has_flag();
  void clear_has_flag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int flag_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RawLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.RawLinks) */ {
 public:
  RawLinks();
  virtual ~RawLinks();

  RawLinks(const RawLinks& from);

  inline RawLinks& operator=(const RawLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RawLinks(RawLinks&& from) noexcept
    : RawLinks() {
    *this = ::std::move(from);
  }

  inline RawLinks& operator=(RawLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RawLinks& default_instance();

  static inline const RawLinks* internal_default_instance() {
    return reinterpret_cast<const RawLinks*>(
               &_RawLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RawLinks* other);
  friend void swap(RawLinks& a, RawLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RawLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  RawLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RawLinks& from);
  void MergeFrom(const RawLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RawLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RawLinks_Link Link;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::RawLinks_Link& links(int index) const;
  ::ru::mail::go::webbase::blobs::RawLinks_Link* mutable_links(int index);
  ::ru::mail::go::webbase::blobs::RawLinks_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.RawLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link > links_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InnerLinks_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.InnerLinks.Link) */ {
 public:
  InnerLinks_Link();
  virtual ~InnerLinks_Link();

  InnerLinks_Link(const InnerLinks_Link& from);

  inline InnerLinks_Link& operator=(const InnerLinks_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InnerLinks_Link(InnerLinks_Link&& from) noexcept
    : InnerLinks_Link() {
    *this = ::std::move(from);
  }

  inline InnerLinks_Link& operator=(InnerLinks_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerLinks_Link& default_instance();

  static inline const InnerLinks_Link* internal_default_instance() {
    return reinterpret_cast<const InnerLinks_Link*>(
               &_InnerLinks_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(InnerLinks_Link* other);
  friend void swap(InnerLinks_Link& a, InnerLinks_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InnerLinks_Link* New() const PROTOBUF_FINAL { return New(NULL); }

  InnerLinks_Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InnerLinks_Link& from);
  void MergeFrom(const InnerLinks_Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InnerLinks_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string to = 1;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.InnerLinks.Link)
 private:
  void set_has_to();
  void clear_has_to();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InnerLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.InnerLinks) */ {
 public:
  InnerLinks();
  virtual ~InnerLinks();

  InnerLinks(const InnerLinks& from);

  inline InnerLinks& operator=(const InnerLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InnerLinks(InnerLinks&& from) noexcept
    : InnerLinks() {
    *this = ::std::move(from);
  }

  inline InnerLinks& operator=(InnerLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerLinks& default_instance();

  static inline const InnerLinks* internal_default_instance() {
    return reinterpret_cast<const InnerLinks*>(
               &_InnerLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(InnerLinks* other);
  friend void swap(InnerLinks& a, InnerLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InnerLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  InnerLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InnerLinks& from);
  void MergeFrom(const InnerLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InnerLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InnerLinks_Link Link;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::InnerLinks_Link& links(int index) const;
  ::ru::mail::go::webbase::blobs::InnerLinks_Link* mutable_links(int index);
  ::ru::mail::go::webbase::blobs::InnerLinks_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.InnerLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link > links_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectedLinks_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.RedirectedLinks.Link) */ {
 public:
  RedirectedLinks_Link();
  virtual ~RedirectedLinks_Link();

  RedirectedLinks_Link(const RedirectedLinks_Link& from);

  inline RedirectedLinks_Link& operator=(const RedirectedLinks_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectedLinks_Link(RedirectedLinks_Link&& from) noexcept
    : RedirectedLinks_Link() {
    *this = ::std::move(from);
  }

  inline RedirectedLinks_Link& operator=(RedirectedLinks_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedirectedLinks_Link& default_instance();

  static inline const RedirectedLinks_Link* internal_default_instance() {
    return reinterpret_cast<const RedirectedLinks_Link*>(
               &_RedirectedLinks_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RedirectedLinks_Link* other);
  friend void swap(RedirectedLinks_Link& a, RedirectedLinks_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectedLinks_Link* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectedLinks_Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RedirectedLinks_Link& from);
  void MergeFrom(const RedirectedLinks_Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RedirectedLinks_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string to = 1;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // required string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional int32 hits = 3;
  bool has_hits() const;
  void clear_hits();
  static const int kHitsFieldNumber = 3;
  ::google::protobuf::int32 hits() const;
  void set_hits(::google::protobuf::int32 value);

  // optional int32 uniq = 4;
  bool has_uniq() const;
  void clear_uniq();
  static const int kUniqFieldNumber = 4;
  ::google::protobuf::int32 uniq() const;
  void set_uniq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.RedirectedLinks.Link)
 private:
  void set_has_to();
  void clear_has_to();
  void set_has_text();
  void clear_has_text();
  void set_has_hits();
  void clear_has_hits();
  void set_has_uniq();
  void clear_has_uniq();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 hits_;
  ::google::protobuf::int32 uniq_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedirectedLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.RedirectedLinks) */ {
 public:
  RedirectedLinks();
  virtual ~RedirectedLinks();

  RedirectedLinks(const RedirectedLinks& from);

  inline RedirectedLinks& operator=(const RedirectedLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedirectedLinks(RedirectedLinks&& from) noexcept
    : RedirectedLinks() {
    *this = ::std::move(from);
  }

  inline RedirectedLinks& operator=(RedirectedLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedirectedLinks& default_instance();

  static inline const RedirectedLinks* internal_default_instance() {
    return reinterpret_cast<const RedirectedLinks*>(
               &_RedirectedLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RedirectedLinks* other);
  friend void swap(RedirectedLinks& a, RedirectedLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedirectedLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  RedirectedLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RedirectedLinks& from);
  void MergeFrom(const RedirectedLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RedirectedLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RedirectedLinks_Link Link;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::RedirectedLinks_Link& links(int index) const;
  ::ru::mail::go::webbase::blobs::RedirectedLinks_Link* mutable_links(int index);
  ::ru::mail::go::webbase::blobs::RedirectedLinks_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.RedirectedLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link > links_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IndexableLinks_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.IndexableLinks.Link) */ {
 public:
  IndexableLinks_Link();
  virtual ~IndexableLinks_Link();

  IndexableLinks_Link(const IndexableLinks_Link& from);

  inline IndexableLinks_Link& operator=(const IndexableLinks_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexableLinks_Link(IndexableLinks_Link&& from) noexcept
    : IndexableLinks_Link() {
    *this = ::std::move(from);
  }

  inline IndexableLinks_Link& operator=(IndexableLinks_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexableLinks_Link& default_instance();

  static inline const IndexableLinks_Link* internal_default_instance() {
    return reinterpret_cast<const IndexableLinks_Link*>(
               &_IndexableLinks_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(IndexableLinks_Link* other);
  friend void swap(IndexableLinks_Link& a, IndexableLinks_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexableLinks_Link* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexableLinks_Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexableLinks_Link& from);
  void MergeFrom(const IndexableLinks_Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexableLinks_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required uint32 frequency = 2;
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 2;
  ::google::protobuf::uint32 frequency() const;
  void set_frequency(::google::protobuf::uint32 value);

  // required float rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  float rank() const;
  void set_rank(float value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.IndexableLinks.Link)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_frequency();
  void clear_has_frequency();
  void set_has_rank();
  void clear_has_rank();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 frequency_;
  float rank_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IndexableLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.IndexableLinks) */ {
 public:
  IndexableLinks();
  virtual ~IndexableLinks();

  IndexableLinks(const IndexableLinks& from);

  inline IndexableLinks& operator=(const IndexableLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexableLinks(IndexableLinks&& from) noexcept
    : IndexableLinks() {
    *this = ::std::move(from);
  }

  inline IndexableLinks& operator=(IndexableLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexableLinks& default_instance();

  static inline const IndexableLinks* internal_default_instance() {
    return reinterpret_cast<const IndexableLinks*>(
               &_IndexableLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(IndexableLinks* other);
  friend void swap(IndexableLinks& a, IndexableLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexableLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexableLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexableLinks& from);
  void MergeFrom(const IndexableLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexableLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef IndexableLinks_Link Link;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::IndexableLinks_Link& links(int index) const;
  ::ru::mail::go::webbase::blobs::IndexableLinks_Link* mutable_links(int index);
  ::ru::mail::go::webbase::blobs::IndexableLinks_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.IndexableLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link > links_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QLinks_Text : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.QLinks.Text) */ {
 public:
  QLinks_Text();
  virtual ~QLinks_Text();

  QLinks_Text(const QLinks_Text& from);

  inline QLinks_Text& operator=(const QLinks_Text& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QLinks_Text(QLinks_Text&& from) noexcept
    : QLinks_Text() {
    *this = ::std::move(from);
  }

  inline QLinks_Text& operator=(QLinks_Text&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QLinks_Text& default_instance();

  static inline const QLinks_Text* internal_default_instance() {
    return reinterpret_cast<const QLinks_Text*>(
               &_QLinks_Text_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(QLinks_Text* other);
  friend void swap(QLinks_Text& a, QLinks_Text& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QLinks_Text* New() const PROTOBUF_FINAL { return New(NULL); }

  QLinks_Text* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QLinks_Text& from);
  void MergeFrom(const QLinks_Text& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QLinks_Text* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QLinks_Text_Source Source;
  static const Source SRANKER =
    QLinks_Text_Source_SRANKER;
  static const Source LIRU =
    QLinks_Text_Source_LIRU;
  static const Source TOPMAIL =
    QLinks_Text_Source_TOPMAIL;
  static inline bool Source_IsValid(int value) {
    return QLinks_Text_Source_IsValid(value);
  }
  static const Source Source_MIN =
    QLinks_Text_Source_Source_MIN;
  static const Source Source_MAX =
    QLinks_Text_Source_Source_MAX;
  static const int Source_ARRAYSIZE =
    QLinks_Text_Source_Source_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Source_descriptor() {
    return QLinks_Text_Source_descriptor();
  }
  static inline const ::std::string& Source_Name(Source value) {
    return QLinks_Text_Source_Name(value);
  }
  static inline bool Source_Parse(const ::std::string& name,
      Source* value) {
    return QLinks_Text_Source_Parse(name, value);
  }

  typedef QLinks_Text_Engine Engine;
  static const Engine GOOGLE =
    QLinks_Text_Engine_GOOGLE;
  static const Engine YANDEX =
    QLinks_Text_Engine_YANDEX;
  static inline bool Engine_IsValid(int value) {
    return QLinks_Text_Engine_IsValid(value);
  }
  static const Engine Engine_MIN =
    QLinks_Text_Engine_Engine_MIN;
  static const Engine Engine_MAX =
    QLinks_Text_Engine_Engine_MAX;
  static const int Engine_ARRAYSIZE =
    QLinks_Text_Engine_Engine_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Engine_descriptor() {
    return QLinks_Text_Engine_descriptor();
  }
  static inline const ::std::string& Engine_Name(Engine value) {
    return QLinks_Text_Engine_Name(value);
  }
  static inline bool Engine_Parse(const ::std::string& name,
      Engine* value) {
    return QLinks_Text_Engine_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required float sr = 2;
  bool has_sr() const;
  void clear_sr();
  static const int kSrFieldNumber = 2;
  float sr() const;
  void set_sr(float value);

  // required int32 c = 3;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::int32 c() const;
  void set_c(::google::protobuf::int32 value);

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
  bool has_src() const;
  void clear_src();
  static const int kSrcFieldNumber = 4;
  ::ru::mail::go::webbase::blobs::QLinks_Text_Source src() const;
  void set_src(::ru::mail::go::webbase::blobs::QLinks_Text_Source value);

  // required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
  bool has_se() const;
  void clear_se();
  static const int kSeFieldNumber = 5;
  ::ru::mail::go::webbase::blobs::QLinks_Text_Engine se() const;
  void set_se(::ru::mail::go::webbase::blobs::QLinks_Text_Engine value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.QLinks.Text)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_sr();
  void clear_has_sr();
  void set_has_c();
  void clear_has_c();
  void set_has_src();
  void clear_has_src();
  void set_has_se();
  void clear_has_se();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  float sr_;
  ::google::protobuf::int32 c_;
  int src_;
  int se_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.QLinks) */ {
 public:
  QLinks();
  virtual ~QLinks();

  QLinks(const QLinks& from);

  inline QLinks& operator=(const QLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QLinks(QLinks&& from) noexcept
    : QLinks() {
    *this = ::std::move(from);
  }

  inline QLinks& operator=(QLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QLinks& default_instance();

  static inline const QLinks* internal_default_instance() {
    return reinterpret_cast<const QLinks*>(
               &_QLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(QLinks* other);
  friend void swap(QLinks& a, QLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  QLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QLinks& from);
  void MergeFrom(const QLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QLinks_Text Text;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
  int texts_size() const;
  void clear_texts();
  static const int kTextsFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::QLinks_Text& texts(int index) const;
  ::ru::mail::go::webbase::blobs::QLinks_Text* mutable_texts(int index);
  ::ru::mail::go::webbase::blobs::QLinks_Text* add_texts();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >*
      mutable_texts();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >&
      texts() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.QLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text > texts_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XLinks_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.XLinks.Link) */ {
 public:
  XLinks_Link();
  virtual ~XLinks_Link();

  XLinks_Link(const XLinks_Link& from);

  inline XLinks_Link& operator=(const XLinks_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XLinks_Link(XLinks_Link&& from) noexcept
    : XLinks_Link() {
    *this = ::std::move(from);
  }

  inline XLinks_Link& operator=(XLinks_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XLinks_Link& default_instance();

  static inline const XLinks_Link* internal_default_instance() {
    return reinterpret_cast<const XLinks_Link*>(
               &_XLinks_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XLinks_Link* other);
  friend void swap(XLinks_Link& a, XLinks_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XLinks_Link* New() const PROTOBUF_FINAL { return New(NULL); }

  XLinks_Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XLinks_Link& from);
  void MergeFrom(const XLinks_Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XLinks_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional string anchor = 3;
  bool has_anchor() const;
  void clear_anchor();
  static const int kAnchorFieldNumber = 3;
  const ::std::string& anchor() const;
  void set_anchor(const ::std::string& value);
  #if LANG_CXX11
  void set_anchor(::std::string&& value);
  #endif
  void set_anchor(const char* value);
  void set_anchor(const char* value, size_t size);
  ::std::string* mutable_anchor();
  ::std::string* release_anchor();
  void set_allocated_anchor(::std::string* anchor);

  // required float cost = 2;
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  float cost() const;
  void set_cost(float value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.XLinks.Link)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_cost();
  void clear_has_cost();
  void set_has_anchor();
  void clear_has_anchor();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr anchor_;
  float cost_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.XLinks) */ {
 public:
  XLinks();
  virtual ~XLinks();

  XLinks(const XLinks& from);

  inline XLinks& operator=(const XLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XLinks(XLinks&& from) noexcept
    : XLinks() {
    *this = ::std::move(from);
  }

  inline XLinks& operator=(XLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XLinks& default_instance();

  static inline const XLinks* internal_default_instance() {
    return reinterpret_cast<const XLinks*>(
               &_XLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XLinks* other);
  friend void swap(XLinks& a, XLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  XLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XLinks& from);
  void MergeFrom(const XLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XLinks_Link Link;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::XLinks_Link& links(int index) const;
  ::ru::mail::go::webbase::blobs::XLinks_Link* mutable_links(int index);
  ::ru::mail::go::webbase::blobs::XLinks_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.XLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link > links_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtraTextArray_ExtraText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText) */ {
 public:
  ExtraTextArray_ExtraText();
  virtual ~ExtraTextArray_ExtraText();

  ExtraTextArray_ExtraText(const ExtraTextArray_ExtraText& from);

  inline ExtraTextArray_ExtraText& operator=(const ExtraTextArray_ExtraText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtraTextArray_ExtraText(ExtraTextArray_ExtraText&& from) noexcept
    : ExtraTextArray_ExtraText() {
    *this = ::std::move(from);
  }

  inline ExtraTextArray_ExtraText& operator=(ExtraTextArray_ExtraText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtraTextArray_ExtraText& default_instance();

  static inline const ExtraTextArray_ExtraText* internal_default_instance() {
    return reinterpret_cast<const ExtraTextArray_ExtraText*>(
               &_ExtraTextArray_ExtraText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ExtraTextArray_ExtraText* other);
  friend void swap(ExtraTextArray_ExtraText& a, ExtraTextArray_ExtraText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtraTextArray_ExtraText* New() const PROTOBUF_FINAL { return New(NULL); }

  ExtraTextArray_ExtraText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExtraTextArray_ExtraText& from);
  void MergeFrom(const ExtraTextArray_ExtraText& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExtraTextArray_ExtraText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExtraTextArray_ExtraText_Type Type;
  static const Type XLink =
    ExtraTextArray_ExtraText_Type_XLink;
  static const Type QLinkCR =
    ExtraTextArray_ExtraText_Type_QLinkCR;
  static const Type QLinkSRY =
    ExtraTextArray_ExtraText_Type_QLinkSRY;
  static const Type QLinkSRG =
    ExtraTextArray_ExtraText_Type_QLinkSRG;
  static const Type ExtLink =
    ExtraTextArray_ExtraText_Type_ExtLink;
  static const Type XLinkAnchor =
    ExtraTextArray_ExtraText_Type_XLinkAnchor;
  static const Type WTitle =
    ExtraTextArray_ExtraText_Type_WTitle;
  static const Type WLink =
    ExtraTextArray_ExtraText_Type_WLink;
  static const Type TLink =
    ExtraTextArray_ExtraText_Type_TLink;
  static const Type QLinkALY =
    ExtraTextArray_ExtraText_Type_QLinkALY;
  static const Type QLinkALG =
    ExtraTextArray_ExtraText_Type_QLinkALG;
  static const Type CtgTitle =
    ExtraTextArray_ExtraText_Type_CtgTitle;
  static const Type CtgName =
    ExtraTextArray_ExtraText_Type_CtgName;
  static const Type CtgSection =
    ExtraTextArray_ExtraText_Type_CtgSection;
  static const Type CtgSubSection =
    ExtraTextArray_ExtraText_Type_CtgSubSection;
  static const Type CtgDescription =
    ExtraTextArray_ExtraText_Type_CtgDescription;
  static const Type CtgKeyWords =
    ExtraTextArray_ExtraText_Type_CtgKeyWords;
  static const Type CtgService =
    ExtraTextArray_ExtraText_Type_CtgService;
  static const Type Translit =
    ExtraTextArray_ExtraText_Type_Translit;
  static const Type ClickLink =
    ExtraTextArray_ExtraText_Type_ClickLink;
  static const Type Nail =
    ExtraTextArray_ExtraText_Type_Nail;
  static const Type QLinkAntiCR =
    ExtraTextArray_ExtraText_Type_QLinkAntiCR;
  static const Type QLinkBRY =
    ExtraTextArray_ExtraText_Type_QLinkBRY;
  static const Type QLinkBRG =
    ExtraTextArray_ExtraText_Type_QLinkBRG;
  static const Type QLinkBRM =
    ExtraTextArray_ExtraText_Type_QLinkBRM;
  static const Type QLinkNavig =
    ExtraTextArray_ExtraText_Type_QLinkNavig;
  static const Type QLinkSRLiru =
    ExtraTextArray_ExtraText_Type_QLinkSRLiru;
  static const Type SubjLink =
    ExtraTextArray_ExtraText_Type_SubjLink;
  static const Type QLinkALFY =
    ExtraTextArray_ExtraText_Type_QLinkALFY;
  static const Type QLinkALFG =
    ExtraTextArray_ExtraText_Type_QLinkALFG;
  static const Type QLinkCRB =
    ExtraTextArray_ExtraText_Type_QLinkCRB;
  static const Type QLinkSRBY =
    ExtraTextArray_ExtraText_Type_QLinkSRBY;
  static const Type QLinkSRBG =
    ExtraTextArray_ExtraText_Type_QLinkSRBG;
  static const Type QLinkALBY =
    ExtraTextArray_ExtraText_Type_QLinkALBY;
  static const Type QLinkALBG =
    ExtraTextArray_ExtraText_Type_QLinkALBG;
  static const Type ShortestRedirect =
    ExtraTextArray_ExtraText_Type_ShortestRedirect;
  static const Type QLinkALTUG =
    ExtraTextArray_ExtraText_Type_QLinkALTUG;
  static const Type QLinkALTUY =
    ExtraTextArray_ExtraText_Type_QLinkALTUY;
  static const Type QLinkALTUMG =
    ExtraTextArray_ExtraText_Type_QLinkALTUMG;
  static const Type QLinkALTUM =
    ExtraTextArray_ExtraText_Type_QLinkALTUM;
  static const Type QLinkALTBG =
    ExtraTextArray_ExtraText_Type_QLinkALTBG;
  static const Type QLinkALTBY =
    ExtraTextArray_ExtraText_Type_QLinkALTBY;
  static const Type QLinkALTBMG =
    ExtraTextArray_ExtraText_Type_QLinkALTBMG;
  static const Type QLinkALTBM =
    ExtraTextArray_ExtraText_Type_QLinkALTBM;
  static const Type QLinkFB_Y =
    ExtraTextArray_ExtraText_Type_QLinkFB_Y;
  static const Type QLinkFB_G =
    ExtraTextArray_ExtraText_Type_QLinkFB_G;
  static const Type QLinkFB_M =
    ExtraTextArray_ExtraText_Type_QLinkFB_M;
  static const Type BackRedirect =
    ExtraTextArray_ExtraText_Type_BackRedirect;
  static const Type QLinkIMGCR =
    ExtraTextArray_ExtraText_Type_QLinkIMGCR;
  static const Type QLinkIMGALG =
    ExtraTextArray_ExtraText_Type_QLinkIMGALG;
  static const Type QLinkIMGALY =
    ExtraTextArray_ExtraText_Type_QLinkIMGALY;
  static const Type QLinkIMGALG_MIX =
    ExtraTextArray_ExtraText_Type_QLinkIMGALG_MIX;
  static const Type ImagesKeywords =
    ExtraTextArray_ExtraText_Type_ImagesKeywords;
  static const Type Tag =
    ExtraTextArray_ExtraText_Type_Tag;
  static const Type StackBody =
    ExtraTextArray_ExtraText_Type_StackBody;
  static const Type EBinderTitleG =
    ExtraTextArray_ExtraText_Type_EBinderTitleG;
  static const Type EBinderSnippetG =
    ExtraTextArray_ExtraText_Type_EBinderSnippetG;
  static const Type EBinderTitleY =
    ExtraTextArray_ExtraText_Type_EBinderTitleY;
  static const Type EBinderSnippetY =
    ExtraTextArray_ExtraText_Type_EBinderSnippetY;
  static const Type ExtAlt =
    ExtraTextArray_ExtraText_Type_ExtAlt;
  static const Type ExtPageTitle =
    ExtraTextArray_ExtraText_Type_ExtPageTitle;
  static const Type ExtHText =
    ExtraTextArray_ExtraText_Type_ExtHText;
  static const Type QLinkCR2 =
    ExtraTextArray_ExtraText_Type_QLinkCR2;
  static inline bool Type_IsValid(int value) {
    return ExtraTextArray_ExtraText_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ExtraTextArray_ExtraText_Type_Type_MIN;
  static const Type Type_MAX =
    ExtraTextArray_ExtraText_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ExtraTextArray_ExtraText_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ExtraTextArray_ExtraText_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ExtraTextArray_ExtraText_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ExtraTextArray_ExtraText_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 attribute = 4;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  ::google::protobuf::uint32 attribute(int index) const;
  void set_attribute(int index, ::google::protobuf::uint32 value);
  void add_attribute(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_attribute();

  // repeated uint32 extraAttribute = 5;
  int extraattribute_size() const;
  void clear_extraattribute();
  static const int kExtraAttributeFieldNumber = 5;
  ::google::protobuf::uint32 extraattribute(int index) const;
  void set_extraattribute(int index, ::google::protobuf::uint32 value);
  void add_extraattribute(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      extraattribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_extraattribute();

  // required string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required float rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  float rank() const;
  void set_rank(float value);

  // required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type type() const;
  void set_type(::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_type();
  void clear_has_type();
  void set_has_rank();
  void clear_has_rank();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > extraattribute_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  float rank_;
  int type_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtraTextArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.ExtraTextArray) */ {
 public:
  ExtraTextArray();
  virtual ~ExtraTextArray();

  ExtraTextArray(const ExtraTextArray& from);

  inline ExtraTextArray& operator=(const ExtraTextArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtraTextArray(ExtraTextArray&& from) noexcept
    : ExtraTextArray() {
    *this = ::std::move(from);
  }

  inline ExtraTextArray& operator=(ExtraTextArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtraTextArray& default_instance();

  static inline const ExtraTextArray* internal_default_instance() {
    return reinterpret_cast<const ExtraTextArray*>(
               &_ExtraTextArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ExtraTextArray* other);
  friend void swap(ExtraTextArray& a, ExtraTextArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtraTextArray* New() const PROTOBUF_FINAL { return New(NULL); }

  ExtraTextArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExtraTextArray& from);
  void MergeFrom(const ExtraTextArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExtraTextArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExtraTextArray_ExtraText ExtraText;

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
  int texts_size() const;
  void clear_texts();
  static const int kTextsFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText& texts(int index) const;
  ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* mutable_texts(int index);
  ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* add_texts();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >*
      mutable_texts();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >&
      texts() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.ExtraTextArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText > texts_;
  friend struct protobuf_parsed_5fblobs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RawLinks_Link

// required string to = 1;
inline bool RawLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RawLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RawLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RawLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
inline const ::std::string& RawLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  return to_.GetNoArena();
}
inline void RawLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
#if LANG_CXX11
inline void RawLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
#endif
inline void RawLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
inline void RawLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}
inline ::std::string* RawLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RawLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RawLinks.Link.to)
}

// required string text = 2;
inline bool RawLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RawLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RawLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RawLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& RawLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  return text_.GetNoArena();
}
inline void RawLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
#if LANG_CXX11
inline void RawLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
#endif
inline void RawLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
inline void RawLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}
inline ::std::string* RawLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RawLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RawLinks.Link.text)
}

// optional .ru.mail.go.webbase.blobs.RawLinks.Link.textFlag flag = 3;
inline bool RawLinks_Link::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RawLinks_Link::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RawLinks_Link::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RawLinks_Link::clear_flag() {
  flag_ = 1;
  clear_has_flag();
}
inline ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag RawLinks_Link::flag() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.Link.flag)
  return static_cast< ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag >(flag_);
}
inline void RawLinks_Link::set_flag(::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag value) {
  assert(::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag_IsValid(value));
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RawLinks.Link.flag)
}

// -------------------------------------------------------------------

// RawLinks

// repeated .ru.mail.go.webbase.blobs.RawLinks.Link links = 1;
inline int RawLinks::links_size() const {
  return links_.size();
}
inline void RawLinks::clear_links() {
  links_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::RawLinks_Link& RawLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::RawLinks_Link* RawLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::RawLinks_Link* RawLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >*
RawLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.RawLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RawLinks_Link >&
RawLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.RawLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// InnerLinks_Link

// required string to = 1;
inline bool InnerLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnerLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnerLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnerLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
inline const ::std::string& InnerLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  return to_.GetNoArena();
}
inline void InnerLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
#if LANG_CXX11
inline void InnerLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
#endif
inline void InnerLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
inline void InnerLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}
inline ::std::string* InnerLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InnerLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InnerLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.InnerLinks.Link.to)
}

// -------------------------------------------------------------------

// InnerLinks

// repeated .ru.mail.go.webbase.blobs.InnerLinks.Link links = 1;
inline int InnerLinks::links_size() const {
  return links_.size();
}
inline void InnerLinks::clear_links() {
  links_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::InnerLinks_Link& InnerLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::InnerLinks_Link* InnerLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::InnerLinks_Link* InnerLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >*
InnerLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.InnerLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::InnerLinks_Link >&
InnerLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.InnerLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// RedirectedLinks_Link

// required string to = 1;
inline bool RedirectedLinks_Link::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedirectedLinks_Link::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedirectedLinks_Link::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedirectedLinks_Link::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
inline const ::std::string& RedirectedLinks_Link::to() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  return to_.GetNoArena();
}
inline void RedirectedLinks_Link::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
#if LANG_CXX11
inline void RedirectedLinks_Link::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
#endif
inline void RedirectedLinks_Link::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
inline void RedirectedLinks_Link::set_to(const char* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}
inline ::std::string* RedirectedLinks_Link::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedirectedLinks_Link::release_to() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
  clear_has_to();
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedirectedLinks_Link::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RedirectedLinks.Link.to)
}

// required string text = 2;
inline bool RedirectedLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedirectedLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedirectedLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedirectedLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& RedirectedLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  return text_.GetNoArena();
}
inline void RedirectedLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
#if LANG_CXX11
inline void RedirectedLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
#endif
inline void RedirectedLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
inline void RedirectedLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}
inline ::std::string* RedirectedLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedirectedLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedirectedLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.RedirectedLinks.Link.text)
}

// optional int32 hits = 3;
inline bool RedirectedLinks_Link::has_hits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RedirectedLinks_Link::set_has_hits() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RedirectedLinks_Link::clear_has_hits() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RedirectedLinks_Link::clear_hits() {
  hits_ = 0;
  clear_has_hits();
}
inline ::google::protobuf::int32 RedirectedLinks_Link::hits() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.hits)
  return hits_;
}
inline void RedirectedLinks_Link::set_hits(::google::protobuf::int32 value) {
  set_has_hits();
  hits_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.hits)
}

// optional int32 uniq = 4;
inline bool RedirectedLinks_Link::has_uniq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RedirectedLinks_Link::set_has_uniq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RedirectedLinks_Link::clear_has_uniq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RedirectedLinks_Link::clear_uniq() {
  uniq_ = 0;
  clear_has_uniq();
}
inline ::google::protobuf::int32 RedirectedLinks_Link::uniq() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.Link.uniq)
  return uniq_;
}
inline void RedirectedLinks_Link::set_uniq(::google::protobuf::int32 value) {
  set_has_uniq();
  uniq_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.RedirectedLinks.Link.uniq)
}

// -------------------------------------------------------------------

// RedirectedLinks

// repeated .ru.mail.go.webbase.blobs.RedirectedLinks.Link links = 1;
inline int RedirectedLinks::links_size() const {
  return links_.size();
}
inline void RedirectedLinks::clear_links() {
  links_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::RedirectedLinks_Link& RedirectedLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::RedirectedLinks_Link* RedirectedLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::RedirectedLinks_Link* RedirectedLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >*
RedirectedLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::RedirectedLinks_Link >&
RedirectedLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.RedirectedLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// IndexableLinks_Link

// required string text = 1;
inline bool IndexableLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndexableLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndexableLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndexableLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& IndexableLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  return text_.GetNoArena();
}
inline void IndexableLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
#if LANG_CXX11
inline void IndexableLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
#endif
inline void IndexableLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
inline void IndexableLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}
inline ::std::string* IndexableLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IndexableLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexableLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.IndexableLinks.Link.text)
}

// required uint32 frequency = 2;
inline bool IndexableLinks_Link::has_frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndexableLinks_Link::set_has_frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndexableLinks_Link::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndexableLinks_Link::clear_frequency() {
  frequency_ = 0u;
  clear_has_frequency();
}
inline ::google::protobuf::uint32 IndexableLinks_Link::frequency() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.frequency)
  return frequency_;
}
inline void IndexableLinks_Link::set_frequency(::google::protobuf::uint32 value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.frequency)
}

// required float rank = 3;
inline bool IndexableLinks_Link::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndexableLinks_Link::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndexableLinks_Link::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndexableLinks_Link::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline float IndexableLinks_Link::rank() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.Link.rank)
  return rank_;
}
inline void IndexableLinks_Link::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.IndexableLinks.Link.rank)
}

// -------------------------------------------------------------------

// IndexableLinks

// repeated .ru.mail.go.webbase.blobs.IndexableLinks.Link links = 1;
inline int IndexableLinks::links_size() const {
  return links_.size();
}
inline void IndexableLinks::clear_links() {
  links_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::IndexableLinks_Link& IndexableLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::IndexableLinks_Link* IndexableLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::IndexableLinks_Link* IndexableLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >*
IndexableLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::IndexableLinks_Link >&
IndexableLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.IndexableLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// QLinks_Text

// required string text = 1;
inline bool QLinks_Text::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QLinks_Text::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QLinks_Text::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QLinks_Text::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& QLinks_Text::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.text)
  return text_.GetNoArena();
}
inline void QLinks_Text::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
#if LANG_CXX11
inline void QLinks_Text::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
#endif
inline void QLinks_Text::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
inline void QLinks_Text::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.QLinks.Text.text)
}
inline ::std::string* QLinks_Text::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QLinks.Text.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QLinks_Text::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.QLinks.Text.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QLinks_Text::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.QLinks.Text.text)
}

// required float sr = 2;
inline bool QLinks_Text::has_sr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QLinks_Text::set_has_sr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QLinks_Text::clear_has_sr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QLinks_Text::clear_sr() {
  sr_ = 0;
  clear_has_sr();
}
inline float QLinks_Text::sr() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.sr)
  return sr_;
}
inline void QLinks_Text::set_sr(float value) {
  set_has_sr();
  sr_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.sr)
}

// required int32 c = 3;
inline bool QLinks_Text::has_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QLinks_Text::set_has_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QLinks_Text::clear_has_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QLinks_Text::clear_c() {
  c_ = 0;
  clear_has_c();
}
inline ::google::protobuf::int32 QLinks_Text::c() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.c)
  return c_;
}
inline void QLinks_Text::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.c)
}

// required .ru.mail.go.webbase.blobs.QLinks.Text.Source src = 4;
inline bool QLinks_Text::has_src() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QLinks_Text::set_has_src() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QLinks_Text::clear_has_src() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QLinks_Text::clear_src() {
  src_ = 1;
  clear_has_src();
}
inline ::ru::mail::go::webbase::blobs::QLinks_Text_Source QLinks_Text::src() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.src)
  return static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Source >(src_);
}
inline void QLinks_Text::set_src(::ru::mail::go::webbase::blobs::QLinks_Text_Source value) {
  assert(::ru::mail::go::webbase::blobs::QLinks_Text_Source_IsValid(value));
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.src)
}

// required .ru.mail.go.webbase.blobs.QLinks.Text.Engine se = 5;
inline bool QLinks_Text::has_se() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QLinks_Text::set_has_se() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QLinks_Text::clear_has_se() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QLinks_Text::clear_se() {
  se_ = 1;
  clear_has_se();
}
inline ::ru::mail::go::webbase::blobs::QLinks_Text_Engine QLinks_Text::se() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.Text.se)
  return static_cast< ::ru::mail::go::webbase::blobs::QLinks_Text_Engine >(se_);
}
inline void QLinks_Text::set_se(::ru::mail::go::webbase::blobs::QLinks_Text_Engine value) {
  assert(::ru::mail::go::webbase::blobs::QLinks_Text_Engine_IsValid(value));
  set_has_se();
  se_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QLinks.Text.se)
}

// -------------------------------------------------------------------

// QLinks

// repeated .ru.mail.go.webbase.blobs.QLinks.Text texts = 1;
inline int QLinks::texts_size() const {
  return texts_.size();
}
inline void QLinks::clear_texts() {
  texts_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::QLinks_Text& QLinks::texts(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::QLinks_Text* QLinks::mutable_texts(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::QLinks_Text* QLinks::add_texts() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >*
QLinks::mutable_texts() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.QLinks.texts)
  return &texts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QLinks_Text >&
QLinks::texts() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.QLinks.texts)
  return texts_;
}

// -------------------------------------------------------------------

// XLinks_Link

// required string text = 1;
inline bool XLinks_Link::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XLinks_Link::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XLinks_Link::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XLinks_Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& XLinks_Link::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.text)
  return text_.GetNoArena();
}
inline void XLinks_Link::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
#if LANG_CXX11
inline void XLinks_Link::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
#endif
inline void XLinks_Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
inline void XLinks_Link::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.XLinks.Link.text)
}
inline ::std::string* XLinks_Link::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XLinks_Link::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.XLinks.Link.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XLinks_Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.XLinks.Link.text)
}

// required float cost = 2;
inline bool XLinks_Link::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XLinks_Link::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XLinks_Link::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XLinks_Link::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline float XLinks_Link::cost() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.cost)
  return cost_;
}
inline void XLinks_Link::set_cost(float value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.cost)
}

// optional string anchor = 3;
inline bool XLinks_Link::has_anchor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XLinks_Link::set_has_anchor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XLinks_Link::clear_has_anchor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XLinks_Link::clear_anchor() {
  anchor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anchor();
}
inline const ::std::string& XLinks_Link::anchor() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  return anchor_.GetNoArena();
}
inline void XLinks_Link::set_anchor(const ::std::string& value) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
#if LANG_CXX11
inline void XLinks_Link::set_anchor(::std::string&& value) {
  set_has_anchor();
  anchor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
#endif
inline void XLinks_Link::set_anchor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
inline void XLinks_Link::set_anchor(const char* value, size_t size) {
  set_has_anchor();
  anchor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}
inline ::std::string* XLinks_Link::mutable_anchor() {
  set_has_anchor();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  return anchor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XLinks_Link::release_anchor() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
  clear_has_anchor();
  return anchor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XLinks_Link::set_allocated_anchor(::std::string* anchor) {
  if (anchor != NULL) {
    set_has_anchor();
  } else {
    clear_has_anchor();
  }
  anchor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anchor);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.XLinks.Link.anchor)
}

// -------------------------------------------------------------------

// XLinks

// repeated .ru.mail.go.webbase.blobs.XLinks.Link links = 1;
inline int XLinks::links_size() const {
  return links_.size();
}
inline void XLinks::clear_links() {
  links_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::XLinks_Link& XLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::XLinks_Link* XLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::XLinks_Link* XLinks::add_links() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.XLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >*
XLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.XLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::XLinks_Link >&
XLinks::links() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.XLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// ExtraTextArray_ExtraText

// required string text = 1;
inline bool ExtraTextArray_ExtraText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtraTextArray_ExtraText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtraTextArray_ExtraText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtraTextArray_ExtraText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& ExtraTextArray_ExtraText::text() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  return text_.GetNoArena();
}
inline void ExtraTextArray_ExtraText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
#if LANG_CXX11
inline void ExtraTextArray_ExtraText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
#endif
inline void ExtraTextArray_ExtraText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
inline void ExtraTextArray_ExtraText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}
inline ::std::string* ExtraTextArray_ExtraText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtraTextArray_ExtraText::release_text() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraTextArray_ExtraText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.text)
}

// required .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.Type type = 2;
inline bool ExtraTextArray_ExtraText::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtraTextArray_ExtraText::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExtraTextArray_ExtraText::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExtraTextArray_ExtraText::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type ExtraTextArray_ExtraText::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.type)
  return static_cast< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type >(type_);
}
inline void ExtraTextArray_ExtraText::set_type(::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type value) {
  assert(::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.type)
}

// required float rank = 3;
inline bool ExtraTextArray_ExtraText::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtraTextArray_ExtraText::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtraTextArray_ExtraText::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtraTextArray_ExtraText::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline float ExtraTextArray_ExtraText::rank() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.rank)
  return rank_;
}
inline void ExtraTextArray_ExtraText::set_rank(float value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.rank)
}

// repeated uint32 attribute = 4;
inline int ExtraTextArray_ExtraText::attribute_size() const {
  return attribute_.size();
}
inline void ExtraTextArray_ExtraText::clear_attribute() {
  attribute_.Clear();
}
inline ::google::protobuf::uint32 ExtraTextArray_ExtraText::attribute(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return attribute_.Get(index);
}
inline void ExtraTextArray_ExtraText::set_attribute(int index, ::google::protobuf::uint32 value) {
  attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
}
inline void ExtraTextArray_ExtraText::add_attribute(::google::protobuf::uint32 value) {
  attribute_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExtraTextArray_ExtraText::attribute() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExtraTextArray_ExtraText::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.attribute)
  return &attribute_;
}

// repeated uint32 extraAttribute = 5;
inline int ExtraTextArray_ExtraText::extraattribute_size() const {
  return extraattribute_.size();
}
inline void ExtraTextArray_ExtraText::clear_extraattribute() {
  extraattribute_.Clear();
}
inline ::google::protobuf::uint32 ExtraTextArray_ExtraText::extraattribute(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return extraattribute_.Get(index);
}
inline void ExtraTextArray_ExtraText::set_extraattribute(int index, ::google::protobuf::uint32 value) {
  extraattribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
}
inline void ExtraTextArray_ExtraText::add_extraattribute(::google::protobuf::uint32 value) {
  extraattribute_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExtraTextArray_ExtraText::extraattribute() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return extraattribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExtraTextArray_ExtraText::mutable_extraattribute() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText.extraAttribute)
  return &extraattribute_;
}

// -------------------------------------------------------------------

// ExtraTextArray

// repeated .ru.mail.go.webbase.blobs.ExtraTextArray.ExtraText texts = 1;
inline int ExtraTextArray::texts_size() const {
  return texts_.size();
}
inline void ExtraTextArray::clear_texts() {
  texts_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText& ExtraTextArray::texts(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* ExtraTextArray::mutable_texts(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText* ExtraTextArray::add_texts() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >*
ExtraTextArray::mutable_texts() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return &texts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText >&
ExtraTextArray::texts() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.ExtraTextArray.texts)
  return texts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag>() {
  return ::ru::mail::go::webbase::blobs::RawLinks_Link_textFlag_descriptor();
}
template <> struct is_proto_enum< ::ru::mail::go::webbase::blobs::QLinks_Text_Source> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::blobs::QLinks_Text_Source>() {
  return ::ru::mail::go::webbase::blobs::QLinks_Text_Source_descriptor();
}
template <> struct is_proto_enum< ::ru::mail::go::webbase::blobs::QLinks_Text_Engine> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::blobs::QLinks_Text_Engine>() {
  return ::ru::mail::go::webbase::blobs::QLinks_Text_Engine_descriptor();
}
template <> struct is_proto_enum< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type>() {
  return ::ru::mail::go::webbase::blobs::ExtraTextArray_ExtraText_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_parsed_5fblobs_2eproto__INCLUDED
