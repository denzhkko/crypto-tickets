// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phantomas.proto

#ifndef PROTOBUF_phantomas_2eproto__INCLUDED
#define PROTOBUF_phantomas_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace phantomas {
namespace data {
class PhantomasResponse;
class PhantomasResponseDefaultTypeInternal;
extern PhantomasResponseDefaultTypeInternal _PhantomasResponse_default_instance_;
}  // namespace data
}  // namespace phantomas
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace phantomas {
namespace data {

namespace protobuf_phantomas_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_phantomas_2eproto

enum PhantomasResponseStatus {
  OK = 0,
  FAIL = 1
};
bool PhantomasResponseStatus_IsValid(int value);
const PhantomasResponseStatus PhantomasResponseStatus_MIN = OK;
const PhantomasResponseStatus PhantomasResponseStatus_MAX = FAIL;
const int PhantomasResponseStatus_ARRAYSIZE = PhantomasResponseStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PhantomasResponseStatus_descriptor();
inline const ::std::string& PhantomasResponseStatus_Name(PhantomasResponseStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PhantomasResponseStatus_descriptor(), value);
}
inline bool PhantomasResponseStatus_Parse(
    const ::std::string& name, PhantomasResponseStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PhantomasResponseStatus>(
    PhantomasResponseStatus_descriptor(), name, value);
}
// ===================================================================

class PhantomasResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.phantomas.data.PhantomasResponse) */ {
 public:
  PhantomasResponse();
  virtual ~PhantomasResponse();

  PhantomasResponse(const PhantomasResponse& from);

  inline PhantomasResponse& operator=(const PhantomasResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhantomasResponse(PhantomasResponse&& from) noexcept
    : PhantomasResponse() {
    *this = ::std::move(from);
  }

  inline PhantomasResponse& operator=(PhantomasResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhantomasResponse& default_instance();

  static inline const PhantomasResponse* internal_default_instance() {
    return reinterpret_cast<const PhantomasResponse*>(
               &_PhantomasResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PhantomasResponse* other);
  friend void swap(PhantomasResponse& a, PhantomasResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhantomasResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PhantomasResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhantomasResponse& from);
  void MergeFrom(const PhantomasResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhantomasResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional string redirect_url = 3;
  bool has_redirect_url() const;
  void clear_redirect_url();
  static const int kRedirectUrlFieldNumber = 3;
  const ::std::string& redirect_url() const;
  void set_redirect_url(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect_url(::std::string&& value);
  #endif
  void set_redirect_url(const char* value);
  void set_redirect_url(const char* value, size_t size);
  ::std::string* mutable_redirect_url();
  ::std::string* release_redirect_url();
  void set_allocated_redirect_url(::std::string* redirect_url);

  // optional string qid = 5;
  bool has_qid() const;
  void clear_qid();
  static const int kQidFieldNumber = 5;
  const ::std::string& qid() const;
  void set_qid(const ::std::string& value);
  #if LANG_CXX11
  void set_qid(::std::string&& value);
  #endif
  void set_qid(const char* value);
  void set_qid(const char* value, size_t size);
  ::std::string* mutable_qid();
  ::std::string* release_qid();
  void set_allocated_qid(::std::string* qid);

  // required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::ru::mail::go::phantomas::data::PhantomasResponseStatus status() const;
  void set_status(::ru::mail::go::phantomas::data::PhantomasResponseStatus value);

  // optional int32 http_status_code = 4;
  bool has_http_status_code() const;
  void clear_http_status_code();
  static const int kHttpStatusCodeFieldNumber = 4;
  ::google::protobuf::int32 http_status_code() const;
  void set_http_status_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.phantomas.data.PhantomasResponse)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_data();
  void clear_has_data();
  void set_has_redirect_url();
  void clear_has_redirect_url();
  void set_has_http_status_code();
  void clear_has_http_status_code();
  void set_has_qid();
  void clear_has_qid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr redirect_url_;
  ::google::protobuf::internal::ArenaStringPtr qid_;
  int status_;
  ::google::protobuf::int32 http_status_code_;
  friend struct protobuf_phantomas_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PhantomasResponse

// required .ru.mail.go.phantomas.data.PhantomasResponseStatus status = 1;
inline bool PhantomasResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PhantomasResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PhantomasResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PhantomasResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::ru::mail::go::phantomas::data::PhantomasResponseStatus PhantomasResponse::status() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.status)
  return static_cast< ::ru::mail::go::phantomas::data::PhantomasResponseStatus >(status_);
}
inline void PhantomasResponse::set_status(::ru::mail::go::phantomas::data::PhantomasResponseStatus value) {
  assert(::ru::mail::go::phantomas::data::PhantomasResponseStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.status)
}

// required string data = 2;
inline bool PhantomasResponse::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhantomasResponse::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhantomasResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhantomasResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& PhantomasResponse::data() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.data)
  return data_.GetNoArena();
}
inline void PhantomasResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
#if LANG_CXX11
inline void PhantomasResponse::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
#endif
inline void PhantomasResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
inline void PhantomasResponse::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.data)
}
inline ::std::string* PhantomasResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhantomasResponse::release_data() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhantomasResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.data)
}

// optional string redirect_url = 3;
inline bool PhantomasResponse::has_redirect_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhantomasResponse::set_has_redirect_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhantomasResponse::clear_has_redirect_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhantomasResponse::clear_redirect_url() {
  redirect_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect_url();
}
inline const ::std::string& PhantomasResponse::redirect_url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  return redirect_url_.GetNoArena();
}
inline void PhantomasResponse::set_redirect_url(const ::std::string& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
#if LANG_CXX11
inline void PhantomasResponse::set_redirect_url(::std::string&& value) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
#endif
inline void PhantomasResponse::set_redirect_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
inline void PhantomasResponse::set_redirect_url(const char* value, size_t size) {
  set_has_redirect_url();
  redirect_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}
inline ::std::string* PhantomasResponse::mutable_redirect_url() {
  set_has_redirect_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  return redirect_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhantomasResponse::release_redirect_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
  clear_has_redirect_url();
  return redirect_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhantomasResponse::set_allocated_redirect_url(::std::string* redirect_url) {
  if (redirect_url != NULL) {
    set_has_redirect_url();
  } else {
    clear_has_redirect_url();
  }
  redirect_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.redirect_url)
}

// optional int32 http_status_code = 4;
inline bool PhantomasResponse::has_http_status_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PhantomasResponse::set_has_http_status_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PhantomasResponse::clear_has_http_status_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PhantomasResponse::clear_http_status_code() {
  http_status_code_ = 0;
  clear_has_http_status_code();
}
inline ::google::protobuf::int32 PhantomasResponse::http_status_code() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.http_status_code)
  return http_status_code_;
}
inline void PhantomasResponse::set_http_status_code(::google::protobuf::int32 value) {
  set_has_http_status_code();
  http_status_code_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.http_status_code)
}

// optional string qid = 5;
inline bool PhantomasResponse::has_qid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PhantomasResponse::set_has_qid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PhantomasResponse::clear_has_qid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PhantomasResponse::clear_qid() {
  qid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qid();
}
inline const ::std::string& PhantomasResponse::qid() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  return qid_.GetNoArena();
}
inline void PhantomasResponse::set_qid(const ::std::string& value) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
#if LANG_CXX11
inline void PhantomasResponse::set_qid(::std::string&& value) {
  set_has_qid();
  qid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
#endif
inline void PhantomasResponse::set_qid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
inline void PhantomasResponse::set_qid(const char* value, size_t size) {
  set_has_qid();
  qid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}
inline ::std::string* PhantomasResponse::mutable_qid() {
  set_has_qid();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  return qid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhantomasResponse::release_qid() {
  // @@protoc_insertion_point(field_release:ru.mail.go.phantomas.data.PhantomasResponse.qid)
  clear_has_qid();
  return qid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhantomasResponse::set_allocated_qid(::std::string* qid) {
  if (qid != NULL) {
    set_has_qid();
  } else {
    clear_has_qid();
  }
  qid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qid);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.phantomas.data.PhantomasResponse.qid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace data
}  // namespace phantomas
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ru::mail::go::phantomas::data::PhantomasResponseStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::phantomas::data::PhantomasResponseStatus>() {
  return ::ru::mail::go::phantomas::data::PhantomasResponseStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_phantomas_2eproto__INCLUDED
