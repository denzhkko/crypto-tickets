// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qembedder.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "qembedder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qembedder {
namespace pb {
class Embedding_NamedEmbeddingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Embedding_NamedEmbedding>
     _instance;
} _Embedding_NamedEmbedding_default_instance_;
class EmbeddingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Embedding>
     _instance;
} _Embedding_default_instance_;

namespace protobuf_qembedder_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding_NamedEmbedding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding_NamedEmbedding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding_NamedEmbedding, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding_NamedEmbedding, component_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, named_embedding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, successed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Embedding, cluster_size_),
  0,
  ~0u,
  ~0u,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(Embedding_NamedEmbedding)},
  { 9, 19, sizeof(Embedding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Embedding_NamedEmbedding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Embedding_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qembedder.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Embedding_NamedEmbedding_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Embedding_NamedEmbedding_default_instance_);_Embedding_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Embedding_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017qembedder.proto\022\014qembedder.pb\"\311\001\n\tEmbe"
      "dding\022\016\n\006length\030\001 \002(\005\022\017\n\007feature\030\002 \003(\002\022\?"
      "\n\017named_embedding\030\003 \003(\0132&.qembedder.pb.E"
      "mbedding.NamedEmbedding\022\021\n\tsuccessed\030\004 \001"
      "(\r\022\024\n\014cluster_size\030\005 \001(\r\0321\n\016NamedEmbeddi"
      "ng\022\014\n\004name\030\001 \001(\t\022\021\n\tcomponent\030\002 \003(\002B\013B\tQ"
      "Embedder"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qembedder.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_qembedder_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Embedding_NamedEmbedding::kNameFieldNumber;
const int Embedding_NamedEmbedding::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Embedding_NamedEmbedding::Embedding_NamedEmbedding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qembedder_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qembedder.pb.Embedding.NamedEmbedding)
}
Embedding_NamedEmbedding::Embedding_NamedEmbedding(const Embedding_NamedEmbedding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      component_(from.component_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:qembedder.pb.Embedding.NamedEmbedding)
}

void Embedding_NamedEmbedding::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Embedding_NamedEmbedding::~Embedding_NamedEmbedding() {
  // @@protoc_insertion_point(destructor:qembedder.pb.Embedding.NamedEmbedding)
  SharedDtor();
}

void Embedding_NamedEmbedding::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Embedding_NamedEmbedding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Embedding_NamedEmbedding::descriptor() {
  protobuf_qembedder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qembedder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Embedding_NamedEmbedding& Embedding_NamedEmbedding::default_instance() {
  protobuf_qembedder_2eproto::InitDefaults();
  return *internal_default_instance();
}

Embedding_NamedEmbedding* Embedding_NamedEmbedding::New(::google::protobuf::Arena* arena) const {
  Embedding_NamedEmbedding* n = new Embedding_NamedEmbedding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Embedding_NamedEmbedding::Clear() {
// @@protoc_insertion_point(message_clear_start:qembedder.pb.Embedding.NamedEmbedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Embedding_NamedEmbedding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qembedder.pb.Embedding.NamedEmbedding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "qembedder.pb.Embedding.NamedEmbedding.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float component = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_component())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_component())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qembedder.pb.Embedding.NamedEmbedding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qembedder.pb.Embedding.NamedEmbedding)
  return false;
#undef DO_
}

void Embedding_NamedEmbedding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qembedder.pb.Embedding.NamedEmbedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qembedder.pb.Embedding.NamedEmbedding.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated float component = 2;
  for (int i = 0, n = this->component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->component(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qembedder.pb.Embedding.NamedEmbedding)
}

::google::protobuf::uint8* Embedding_NamedEmbedding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qembedder.pb.Embedding.NamedEmbedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "qembedder.pb.Embedding.NamedEmbedding.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated float component = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->component_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qembedder.pb.Embedding.NamedEmbedding)
  return target;
}

size_t Embedding_NamedEmbedding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qembedder.pb.Embedding.NamedEmbedding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float component = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->component_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->component_size());
    total_size += data_size;
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Embedding_NamedEmbedding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qembedder.pb.Embedding.NamedEmbedding)
  GOOGLE_DCHECK_NE(&from, this);
  const Embedding_NamedEmbedding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Embedding_NamedEmbedding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qembedder.pb.Embedding.NamedEmbedding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qembedder.pb.Embedding.NamedEmbedding)
    MergeFrom(*source);
  }
}

void Embedding_NamedEmbedding::MergeFrom(const Embedding_NamedEmbedding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qembedder.pb.Embedding.NamedEmbedding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  component_.MergeFrom(from.component_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Embedding_NamedEmbedding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qembedder.pb.Embedding.NamedEmbedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Embedding_NamedEmbedding::CopyFrom(const Embedding_NamedEmbedding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qembedder.pb.Embedding.NamedEmbedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Embedding_NamedEmbedding::IsInitialized() const {
  return true;
}

void Embedding_NamedEmbedding::Swap(Embedding_NamedEmbedding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Embedding_NamedEmbedding::InternalSwap(Embedding_NamedEmbedding* other) {
  using std::swap;
  component_.InternalSwap(&other->component_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Embedding_NamedEmbedding::GetMetadata() const {
  protobuf_qembedder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qembedder_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Embedding_NamedEmbedding

// optional string name = 1;
bool Embedding_NamedEmbedding::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Embedding_NamedEmbedding::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Embedding_NamedEmbedding::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Embedding_NamedEmbedding::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Embedding_NamedEmbedding::name() const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.NamedEmbedding.name)
  return name_.GetNoArena();
}
void Embedding_NamedEmbedding::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.NamedEmbedding.name)
}
#if LANG_CXX11
void Embedding_NamedEmbedding::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qembedder.pb.Embedding.NamedEmbedding.name)
}
#endif
void Embedding_NamedEmbedding::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qembedder.pb.Embedding.NamedEmbedding.name)
}
void Embedding_NamedEmbedding::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qembedder.pb.Embedding.NamedEmbedding.name)
}
::std::string* Embedding_NamedEmbedding::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:qembedder.pb.Embedding.NamedEmbedding.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Embedding_NamedEmbedding::release_name() {
  // @@protoc_insertion_point(field_release:qembedder.pb.Embedding.NamedEmbedding.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Embedding_NamedEmbedding::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qembedder.pb.Embedding.NamedEmbedding.name)
}

// repeated float component = 2;
int Embedding_NamedEmbedding::component_size() const {
  return component_.size();
}
void Embedding_NamedEmbedding::clear_component() {
  component_.Clear();
}
float Embedding_NamedEmbedding::component(int index) const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.NamedEmbedding.component)
  return component_.Get(index);
}
void Embedding_NamedEmbedding::set_component(int index, float value) {
  component_.Set(index, value);
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.NamedEmbedding.component)
}
void Embedding_NamedEmbedding::add_component(float value) {
  component_.Add(value);
  // @@protoc_insertion_point(field_add:qembedder.pb.Embedding.NamedEmbedding.component)
}
const ::google::protobuf::RepeatedField< float >&
Embedding_NamedEmbedding::component() const {
  // @@protoc_insertion_point(field_list:qembedder.pb.Embedding.NamedEmbedding.component)
  return component_;
}
::google::protobuf::RepeatedField< float >*
Embedding_NamedEmbedding::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:qembedder.pb.Embedding.NamedEmbedding.component)
  return &component_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Embedding::kLengthFieldNumber;
const int Embedding::kFeatureFieldNumber;
const int Embedding::kNamedEmbeddingFieldNumber;
const int Embedding::kSuccessedFieldNumber;
const int Embedding::kClusterSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Embedding::Embedding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_qembedder_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qembedder.pb.Embedding)
}
Embedding::Embedding(const Embedding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      feature_(from.feature_),
      named_embedding_(from.named_embedding_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&cluster_size_) -
    reinterpret_cast<char*>(&length_)) + sizeof(cluster_size_));
  // @@protoc_insertion_point(copy_constructor:qembedder.pb.Embedding)
}

void Embedding::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_size_) -
      reinterpret_cast<char*>(&length_)) + sizeof(cluster_size_));
}

Embedding::~Embedding() {
  // @@protoc_insertion_point(destructor:qembedder.pb.Embedding)
  SharedDtor();
}

void Embedding::SharedDtor() {
}

void Embedding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Embedding::descriptor() {
  protobuf_qembedder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qembedder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Embedding& Embedding::default_instance() {
  protobuf_qembedder_2eproto::InitDefaults();
  return *internal_default_instance();
}

Embedding* Embedding::New(::google::protobuf::Arena* arena) const {
  Embedding* n = new Embedding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Embedding::Clear() {
// @@protoc_insertion_point(message_clear_start:qembedder.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feature_.Clear();
  named_embedding_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cluster_size_) -
        reinterpret_cast<char*>(&length_)) + sizeof(cluster_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Embedding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qembedder.pb.Embedding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float feature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_feature())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_feature())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qembedder.pb.Embedding.NamedEmbedding named_embedding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_named_embedding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 successed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_successed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &successed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cluster_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cluster_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cluster_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qembedder.pb.Embedding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qembedder.pb.Embedding)
  return false;
#undef DO_
}

void Embedding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qembedder.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 length = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // repeated float feature = 2;
  for (int i = 0, n = this->feature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->feature(i), output);
  }

  // repeated .qembedder.pb.Embedding.NamedEmbedding named_embedding = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->named_embedding_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->named_embedding(static_cast<int>(i)), output);
  }

  // optional uint32 successed = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->successed(), output);
  }

  // optional uint32 cluster_size = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cluster_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:qembedder.pb.Embedding)
}

::google::protobuf::uint8* Embedding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qembedder.pb.Embedding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // repeated float feature = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->feature_, target);

  // repeated .qembedder.pb.Embedding.NamedEmbedding named_embedding = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->named_embedding_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->named_embedding(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 successed = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->successed(), target);
  }

  // optional uint32 cluster_size = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cluster_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qembedder.pb.Embedding)
  return target;
}

size_t Embedding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qembedder.pb.Embedding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 length = 1;
  if (has_length()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }
  // repeated float feature = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->feature_size());
    total_size += data_size;
  }

  // repeated .qembedder.pb.Embedding.NamedEmbedding named_embedding = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->named_embedding_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->named_embedding(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional uint32 successed = 4;
    if (has_successed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->successed());
    }

    // optional uint32 cluster_size = 5;
    if (has_cluster_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cluster_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Embedding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qembedder.pb.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  const Embedding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Embedding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qembedder.pb.Embedding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qembedder.pb.Embedding)
    MergeFrom(*source);
  }
}

void Embedding::MergeFrom(const Embedding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qembedder.pb.Embedding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feature_.MergeFrom(from.feature_);
  named_embedding_.MergeFrom(from.named_embedding_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000002u) {
      successed_ = from.successed_;
    }
    if (cached_has_bits & 0x00000004u) {
      cluster_size_ = from.cluster_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Embedding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qembedder.pb.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Embedding::CopyFrom(const Embedding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qembedder.pb.Embedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Embedding::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Embedding::Swap(Embedding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Embedding::InternalSwap(Embedding* other) {
  using std::swap;
  feature_.InternalSwap(&other->feature_);
  named_embedding_.InternalSwap(&other->named_embedding_);
  swap(length_, other->length_);
  swap(successed_, other->successed_);
  swap(cluster_size_, other->cluster_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Embedding::GetMetadata() const {
  protobuf_qembedder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qembedder_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Embedding

// required int32 length = 1;
bool Embedding::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Embedding::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
void Embedding::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
void Embedding::clear_length() {
  length_ = 0;
  clear_has_length();
}
::google::protobuf::int32 Embedding::length() const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.length)
  return length_;
}
void Embedding::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.length)
}

// repeated float feature = 2;
int Embedding::feature_size() const {
  return feature_.size();
}
void Embedding::clear_feature() {
  feature_.Clear();
}
float Embedding::feature(int index) const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.feature)
  return feature_.Get(index);
}
void Embedding::set_feature(int index, float value) {
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.feature)
}
void Embedding::add_feature(float value) {
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:qembedder.pb.Embedding.feature)
}
const ::google::protobuf::RepeatedField< float >&
Embedding::feature() const {
  // @@protoc_insertion_point(field_list:qembedder.pb.Embedding.feature)
  return feature_;
}
::google::protobuf::RepeatedField< float >*
Embedding::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:qembedder.pb.Embedding.feature)
  return &feature_;
}

// repeated .qembedder.pb.Embedding.NamedEmbedding named_embedding = 3;
int Embedding::named_embedding_size() const {
  return named_embedding_.size();
}
void Embedding::clear_named_embedding() {
  named_embedding_.Clear();
}
const ::qembedder::pb::Embedding_NamedEmbedding& Embedding::named_embedding(int index) const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.named_embedding)
  return named_embedding_.Get(index);
}
::qembedder::pb::Embedding_NamedEmbedding* Embedding::mutable_named_embedding(int index) {
  // @@protoc_insertion_point(field_mutable:qembedder.pb.Embedding.named_embedding)
  return named_embedding_.Mutable(index);
}
::qembedder::pb::Embedding_NamedEmbedding* Embedding::add_named_embedding() {
  // @@protoc_insertion_point(field_add:qembedder.pb.Embedding.named_embedding)
  return named_embedding_.Add();
}
::google::protobuf::RepeatedPtrField< ::qembedder::pb::Embedding_NamedEmbedding >*
Embedding::mutable_named_embedding() {
  // @@protoc_insertion_point(field_mutable_list:qembedder.pb.Embedding.named_embedding)
  return &named_embedding_;
}
const ::google::protobuf::RepeatedPtrField< ::qembedder::pb::Embedding_NamedEmbedding >&
Embedding::named_embedding() const {
  // @@protoc_insertion_point(field_list:qembedder.pb.Embedding.named_embedding)
  return named_embedding_;
}

// optional uint32 successed = 4;
bool Embedding::has_successed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Embedding::set_has_successed() {
  _has_bits_[0] |= 0x00000002u;
}
void Embedding::clear_has_successed() {
  _has_bits_[0] &= ~0x00000002u;
}
void Embedding::clear_successed() {
  successed_ = 0u;
  clear_has_successed();
}
::google::protobuf::uint32 Embedding::successed() const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.successed)
  return successed_;
}
void Embedding::set_successed(::google::protobuf::uint32 value) {
  set_has_successed();
  successed_ = value;
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.successed)
}

// optional uint32 cluster_size = 5;
bool Embedding::has_cluster_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Embedding::set_has_cluster_size() {
  _has_bits_[0] |= 0x00000004u;
}
void Embedding::clear_has_cluster_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void Embedding::clear_cluster_size() {
  cluster_size_ = 0u;
  clear_has_cluster_size();
}
::google::protobuf::uint32 Embedding::cluster_size() const {
  // @@protoc_insertion_point(field_get:qembedder.pb.Embedding.cluster_size)
  return cluster_size_;
}
void Embedding::set_cluster_size(::google::protobuf::uint32 value) {
  set_has_cluster_size();
  cluster_size_ = value;
  // @@protoc_insertion_point(field_set:qembedder.pb.Embedding.cluster_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace qembedder

// @@protoc_insertion_point(global_scope)
