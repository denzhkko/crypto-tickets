// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qp_proxy_result.proto

#ifndef PROTOBUF_qp_5fproxy_5fresult_2eproto__INCLUDED
#define PROTOBUF_qp_5fproxy_5fresult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class HarvesterResult;
class HarvesterResultDefaultTypeInternal;
extern HarvesterResultDefaultTypeInternal _HarvesterResult_default_instance_;
class HarvesterResult_OldStats;
class HarvesterResult_OldStatsDefaultTypeInternal;
extern HarvesterResult_OldStatsDefaultTypeInternal _HarvesterResult_OldStats_default_instance_;
class QPResult;
class QPResultDefaultTypeInternal;
extern QPResultDefaultTypeInternal _QPResult_default_instance_;
class QPResult_LangResult;
class QPResult_LangResultDefaultTypeInternal;
extern QPResult_LangResultDefaultTypeInternal _QPResult_LangResult_default_instance_;
class QPResult_LangValue;
class QPResult_LangValueDefaultTypeInternal;
extern QPResult_LangValueDefaultTypeInternal _QPResult_LangValue_default_instance_;
}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {

namespace protobuf_qp_5fproxy_5fresult_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_qp_5fproxy_5fresult_2eproto

enum QPResult_Lang {
  QPResult_Lang_RU = 1,
  QPResult_Lang_EN = 2,
  QPResult_Lang_KZ = 3,
  QPResult_Lang_UA = 4,
  QPResult_Lang_BY = 5
};
bool QPResult_Lang_IsValid(int value);
const QPResult_Lang QPResult_Lang_Lang_MIN = QPResult_Lang_RU;
const QPResult_Lang QPResult_Lang_Lang_MAX = QPResult_Lang_BY;
const int QPResult_Lang_Lang_ARRAYSIZE = QPResult_Lang_Lang_MAX + 1;

const ::google::protobuf::EnumDescriptor* QPResult_Lang_descriptor();
inline const ::std::string& QPResult_Lang_Name(QPResult_Lang value) {
  return ::google::protobuf::internal::NameOfEnum(
    QPResult_Lang_descriptor(), value);
}
inline bool QPResult_Lang_Parse(
    const ::std::string& name, QPResult_Lang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QPResult_Lang>(
    QPResult_Lang_descriptor(), name, value);
}
// ===================================================================

class QPResult_LangValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.QPResult.LangValue) */ {
 public:
  QPResult_LangValue();
  virtual ~QPResult_LangValue();

  QPResult_LangValue(const QPResult_LangValue& from);

  inline QPResult_LangValue& operator=(const QPResult_LangValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QPResult_LangValue(QPResult_LangValue&& from) noexcept
    : QPResult_LangValue() {
    *this = ::std::move(from);
  }

  inline QPResult_LangValue& operator=(QPResult_LangValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QPResult_LangValue& default_instance();

  static inline const QPResult_LangValue* internal_default_instance() {
    return reinterpret_cast<const QPResult_LangValue*>(
               &_QPResult_LangValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QPResult_LangValue* other);
  friend void swap(QPResult_LangValue& a, QPResult_LangValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QPResult_LangValue* New() const PROTOBUF_FINAL { return New(NULL); }

  QPResult_LangValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QPResult_LangValue& from);
  void MergeFrom(const QPResult_LangValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QPResult_LangValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float probability = 2;
  bool has_probability() const;
  void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  float probability() const;
  void set_probability(float value);

  // required .ru.mail.go.webbase.blobs.QPResult.Lang language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  ::ru::mail::go::webbase::blobs::QPResult_Lang language() const;
  void set_language(::ru::mail::go::webbase::blobs::QPResult_Lang value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.QPResult.LangValue)
 private:
  void set_has_language();
  void clear_has_language();
  void set_has_probability();
  void clear_has_probability();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float probability_;
  int language_;
  friend struct protobuf_qp_5fproxy_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QPResult_LangResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.QPResult.LangResult) */ {
 public:
  QPResult_LangResult();
  virtual ~QPResult_LangResult();

  QPResult_LangResult(const QPResult_LangResult& from);

  inline QPResult_LangResult& operator=(const QPResult_LangResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QPResult_LangResult(QPResult_LangResult&& from) noexcept
    : QPResult_LangResult() {
    *this = ::std::move(from);
  }

  inline QPResult_LangResult& operator=(QPResult_LangResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QPResult_LangResult& default_instance();

  static inline const QPResult_LangResult* internal_default_instance() {
    return reinterpret_cast<const QPResult_LangResult*>(
               &_QPResult_LangResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(QPResult_LangResult* other);
  friend void swap(QPResult_LangResult& a, QPResult_LangResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QPResult_LangResult* New() const PROTOBUF_FINAL { return New(NULL); }

  QPResult_LangResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QPResult_LangResult& from);
  void MergeFrom(const QPResult_LangResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QPResult_LangResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.QPResult.LangValue languages = 1;
  int languages_size() const;
  void clear_languages();
  static const int kLanguagesFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::QPResult_LangValue& languages(int index) const;
  ::ru::mail::go::webbase::blobs::QPResult_LangValue* mutable_languages(int index);
  ::ru::mail::go::webbase::blobs::QPResult_LangValue* add_languages();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QPResult_LangValue >*
      mutable_languages();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QPResult_LangValue >&
      languages() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.QPResult.LangResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QPResult_LangValue > languages_;
  friend struct protobuf_qp_5fproxy_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QPResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.QPResult) */ {
 public:
  QPResult();
  virtual ~QPResult();

  QPResult(const QPResult& from);

  inline QPResult& operator=(const QPResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QPResult(QPResult&& from) noexcept
    : QPResult() {
    *this = ::std::move(from);
  }

  inline QPResult& operator=(QPResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QPResult& default_instance();

  static inline const QPResult* internal_default_instance() {
    return reinterpret_cast<const QPResult*>(
               &_QPResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(QPResult* other);
  friend void swap(QPResult& a, QPResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QPResult* New() const PROTOBUF_FINAL { return New(NULL); }

  QPResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QPResult& from);
  void MergeFrom(const QPResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QPResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QPResult_LangValue LangValue;
  typedef QPResult_LangResult LangResult;

  typedef QPResult_Lang Lang;
  static const Lang RU =
    QPResult_Lang_RU;
  static const Lang EN =
    QPResult_Lang_EN;
  static const Lang KZ =
    QPResult_Lang_KZ;
  static const Lang UA =
    QPResult_Lang_UA;
  static const Lang BY =
    QPResult_Lang_BY;
  static inline bool Lang_IsValid(int value) {
    return QPResult_Lang_IsValid(value);
  }
  static const Lang Lang_MIN =
    QPResult_Lang_Lang_MIN;
  static const Lang Lang_MAX =
    QPResult_Lang_Lang_MAX;
  static const int Lang_ARRAYSIZE =
    QPResult_Lang_Lang_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Lang_descriptor() {
    return QPResult_Lang_descriptor();
  }
  static inline const ::std::string& Lang_Name(Lang value) {
    return QPResult_Lang_Name(value);
  }
  static inline bool Lang_Parse(const ::std::string& name,
      Lang* value) {
    return QPResult_Lang_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ru.mail.go.webbase.blobs.QPResult.LangResult langResult = 3;
  bool has_langresult() const;
  void clear_langresult();
  static const int kLangResultFieldNumber = 3;
  const ::ru::mail::go::webbase::blobs::QPResult_LangResult& langresult() const;
  ::ru::mail::go::webbase::blobs::QPResult_LangResult* mutable_langresult();
  ::ru::mail::go::webbase::blobs::QPResult_LangResult* release_langresult();
  void set_allocated_langresult(::ru::mail::go::webbase::blobs::QPResult_LangResult* langresult);

  // optional sint32 geoRegion = 1;
  bool has_georegion() const;
  void clear_georegion();
  static const int kGeoRegionFieldNumber = 1;
  ::google::protobuf::int32 georegion() const;
  void set_georegion(::google::protobuf::int32 value);

  // optional sint32 navigRegion = 2;
  bool has_navigregion() const;
  void clear_navigregion();
  static const int kNavigRegionFieldNumber = 2;
  ::google::protobuf::int32 navigregion() const;
  void set_navigregion(::google::protobuf::int32 value);

  // optional bool isGeo = 4;
  bool has_isgeo() const;
  void clear_isgeo();
  static const int kIsGeoFieldNumber = 4;
  bool isgeo() const;
  void set_isgeo(bool value);

  // optional bool isNavig = 5;
  bool has_isnavig() const;
  void clear_isnavig();
  static const int kIsNavigFieldNumber = 5;
  bool isnavig() const;
  void set_isnavig(bool value);

  // optional bool isAnswer = 6;
  bool has_isanswer() const;
  void clear_isanswer();
  static const int kIsAnswerFieldNumber = 6;
  bool isanswer() const;
  void set_isanswer(bool value);

  // optional bool isGeoName = 8;
  bool has_isgeoname() const;
  void clear_isgeoname();
  static const int kIsGeoNameFieldNumber = 8;
  bool isgeoname() const;
  void set_isgeoname(bool value);

  // optional sint32 geoNameRegion = 7;
  bool has_geonameregion() const;
  void clear_geonameregion();
  static const int kGeoNameRegionFieldNumber = 7;
  ::google::protobuf::int32 geonameregion() const;
  void set_geonameregion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.QPResult)
 private:
  void set_has_georegion();
  void clear_has_georegion();
  void set_has_navigregion();
  void clear_has_navigregion();
  void set_has_langresult();
  void clear_has_langresult();
  void set_has_geonameregion();
  void clear_has_geonameregion();
  void set_has_isgeo();
  void clear_has_isgeo();
  void set_has_isnavig();
  void clear_has_isnavig();
  void set_has_isanswer();
  void clear_has_isanswer();
  void set_has_isgeoname();
  void clear_has_isgeoname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ru::mail::go::webbase::blobs::QPResult_LangResult* langresult_;
  ::google::protobuf::int32 georegion_;
  ::google::protobuf::int32 navigregion_;
  bool isgeo_;
  bool isnavig_;
  bool isanswer_;
  bool isgeoname_;
  ::google::protobuf::int32 geonameregion_;
  friend struct protobuf_qp_5fproxy_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HarvesterResult_OldStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.HarvesterResult.OldStats) */ {
 public:
  HarvesterResult_OldStats();
  virtual ~HarvesterResult_OldStats();

  HarvesterResult_OldStats(const HarvesterResult_OldStats& from);

  inline HarvesterResult_OldStats& operator=(const HarvesterResult_OldStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HarvesterResult_OldStats(HarvesterResult_OldStats&& from) noexcept
    : HarvesterResult_OldStats() {
    *this = ::std::move(from);
  }

  inline HarvesterResult_OldStats& operator=(HarvesterResult_OldStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarvesterResult_OldStats& default_instance();

  static inline const HarvesterResult_OldStats* internal_default_instance() {
    return reinterpret_cast<const HarvesterResult_OldStats*>(
               &_HarvesterResult_OldStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(HarvesterResult_OldStats* other);
  friend void swap(HarvesterResult_OldStats& a, HarvesterResult_OldStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HarvesterResult_OldStats* New() const PROTOBUF_FINAL { return New(NULL); }

  HarvesterResult_OldStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HarvesterResult_OldStats& from);
  void MergeFrom(const HarvesterResult_OldStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HarvesterResult_OldStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool wasExproted = 1;
  bool has_wasexproted() const;
  void clear_wasexproted();
  static const int kWasExprotedFieldNumber = 1;
  bool wasexproted() const;
  void set_wasexproted(bool value);

  // required bool wasGeo = 2;
  bool has_wasgeo() const;
  void clear_wasgeo();
  static const int kWasGeoFieldNumber = 2;
  bool wasgeo() const;
  void set_wasgeo(bool value);

  // required bool wasNavig = 3;
  bool has_wasnavig() const;
  void clear_wasnavig();
  static const int kWasNavigFieldNumber = 3;
  bool wasnavig() const;
  void set_wasnavig(bool value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.HarvesterResult.OldStats)
 private:
  void set_has_wasexproted();
  void clear_has_wasexproted();
  void set_has_wasgeo();
  void clear_has_wasgeo();
  void set_has_wasnavig();
  void clear_has_wasnavig();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool wasexproted_;
  bool wasgeo_;
  bool wasnavig_;
  friend struct protobuf_qp_5fproxy_5fresult_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HarvesterResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.HarvesterResult) */ {
 public:
  HarvesterResult();
  virtual ~HarvesterResult();

  HarvesterResult(const HarvesterResult& from);

  inline HarvesterResult& operator=(const HarvesterResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HarvesterResult(HarvesterResult&& from) noexcept
    : HarvesterResult() {
    *this = ::std::move(from);
  }

  inline HarvesterResult& operator=(HarvesterResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarvesterResult& default_instance();

  static inline const HarvesterResult* internal_default_instance() {
    return reinterpret_cast<const HarvesterResult*>(
               &_HarvesterResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(HarvesterResult* other);
  friend void swap(HarvesterResult& a, HarvesterResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HarvesterResult* New() const PROTOBUF_FINAL { return New(NULL); }

  HarvesterResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HarvesterResult& from);
  void MergeFrom(const HarvesterResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HarvesterResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HarvesterResult_OldStats OldStats;

  // accessors -------------------------------------------------------

  // required .ru.mail.go.webbase.blobs.QPResult qpProxyData = 1;
  bool has_qpproxydata() const;
  void clear_qpproxydata();
  static const int kQpProxyDataFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::QPResult& qpproxydata() const;
  ::ru::mail::go::webbase::blobs::QPResult* mutable_qpproxydata();
  ::ru::mail::go::webbase::blobs::QPResult* release_qpproxydata();
  void set_allocated_qpproxydata(::ru::mail::go::webbase::blobs::QPResult* qpproxydata);

  // optional .ru.mail.go.webbase.blobs.HarvesterResult.OldStats oldStatsData = 2;
  bool has_oldstatsdata() const;
  void clear_oldstatsdata();
  static const int kOldStatsDataFieldNumber = 2;
  const ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats& oldstatsdata() const;
  ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* mutable_oldstatsdata();
  ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* release_oldstatsdata();
  void set_allocated_oldstatsdata(::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* oldstatsdata);

  // optional bool isYandexGeo = 3;
  bool has_isyandexgeo() const;
  void clear_isyandexgeo();
  static const int kIsYandexGeoFieldNumber = 3;
  bool isyandexgeo() const;
  void set_isyandexgeo(bool value);

  // optional bool isNavig = 4;
  bool has_isnavig() const;
  void clear_isnavig();
  static const int kIsNavigFieldNumber = 4;
  bool isnavig() const;
  void set_isnavig(bool value);

  // optional bool wasExported = 5;
  bool has_wasexported() const;
  void clear_wasexported();
  static const int kWasExportedFieldNumber = 5;
  bool wasexported() const;
  void set_wasexported(bool value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.HarvesterResult)
 private:
  void set_has_qpproxydata();
  void clear_has_qpproxydata();
  void set_has_oldstatsdata();
  void clear_has_oldstatsdata();
  void set_has_isyandexgeo();
  void clear_has_isyandexgeo();
  void set_has_isnavig();
  void clear_has_isnavig();
  void set_has_wasexported();
  void clear_has_wasexported();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ru::mail::go::webbase::blobs::QPResult* qpproxydata_;
  ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* oldstatsdata_;
  bool isyandexgeo_;
  bool isnavig_;
  bool wasexported_;
  friend struct protobuf_qp_5fproxy_5fresult_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QPResult_LangValue

// required .ru.mail.go.webbase.blobs.QPResult.Lang language = 1;
inline bool QPResult_LangValue::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QPResult_LangValue::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QPResult_LangValue::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QPResult_LangValue::clear_language() {
  language_ = 1;
  clear_has_language();
}
inline ::ru::mail::go::webbase::blobs::QPResult_Lang QPResult_LangValue::language() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.LangValue.language)
  return static_cast< ::ru::mail::go::webbase::blobs::QPResult_Lang >(language_);
}
inline void QPResult_LangValue::set_language(::ru::mail::go::webbase::blobs::QPResult_Lang value) {
  assert(::ru::mail::go::webbase::blobs::QPResult_Lang_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.LangValue.language)
}

// required float probability = 2;
inline bool QPResult_LangValue::has_probability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QPResult_LangValue::set_has_probability() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QPResult_LangValue::clear_has_probability() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QPResult_LangValue::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline float QPResult_LangValue::probability() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.LangValue.probability)
  return probability_;
}
inline void QPResult_LangValue::set_probability(float value) {
  set_has_probability();
  probability_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.LangValue.probability)
}

// -------------------------------------------------------------------

// QPResult_LangResult

// repeated .ru.mail.go.webbase.blobs.QPResult.LangValue languages = 1;
inline int QPResult_LangResult::languages_size() const {
  return languages_.size();
}
inline void QPResult_LangResult::clear_languages() {
  languages_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::QPResult_LangValue& QPResult_LangResult::languages(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.LangResult.languages)
  return languages_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::QPResult_LangValue* QPResult_LangResult::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QPResult.LangResult.languages)
  return languages_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::QPResult_LangValue* QPResult_LangResult::add_languages() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.QPResult.LangResult.languages)
  return languages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QPResult_LangValue >*
QPResult_LangResult::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.QPResult.LangResult.languages)
  return &languages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::QPResult_LangValue >&
QPResult_LangResult::languages() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.QPResult.LangResult.languages)
  return languages_;
}

// -------------------------------------------------------------------

// QPResult

// optional sint32 geoRegion = 1;
inline bool QPResult::has_georegion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QPResult::set_has_georegion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QPResult::clear_has_georegion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QPResult::clear_georegion() {
  georegion_ = 0;
  clear_has_georegion();
}
inline ::google::protobuf::int32 QPResult::georegion() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.geoRegion)
  return georegion_;
}
inline void QPResult::set_georegion(::google::protobuf::int32 value) {
  set_has_georegion();
  georegion_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.geoRegion)
}

// optional sint32 navigRegion = 2;
inline bool QPResult::has_navigregion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QPResult::set_has_navigregion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QPResult::clear_has_navigregion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QPResult::clear_navigregion() {
  navigregion_ = 0;
  clear_has_navigregion();
}
inline ::google::protobuf::int32 QPResult::navigregion() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.navigRegion)
  return navigregion_;
}
inline void QPResult::set_navigregion(::google::protobuf::int32 value) {
  set_has_navigregion();
  navigregion_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.navigRegion)
}

// optional .ru.mail.go.webbase.blobs.QPResult.LangResult langResult = 3;
inline bool QPResult::has_langresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QPResult::set_has_langresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QPResult::clear_has_langresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QPResult::clear_langresult() {
  if (langresult_ != NULL) langresult_->::ru::mail::go::webbase::blobs::QPResult_LangResult::Clear();
  clear_has_langresult();
}
inline const ::ru::mail::go::webbase::blobs::QPResult_LangResult& QPResult::langresult() const {
  const ::ru::mail::go::webbase::blobs::QPResult_LangResult* p = langresult_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.langResult)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::QPResult_LangResult*>(
      &::ru::mail::go::webbase::blobs::_QPResult_LangResult_default_instance_);
}
inline ::ru::mail::go::webbase::blobs::QPResult_LangResult* QPResult::mutable_langresult() {
  set_has_langresult();
  if (langresult_ == NULL) {
    langresult_ = new ::ru::mail::go::webbase::blobs::QPResult_LangResult;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.QPResult.langResult)
  return langresult_;
}
inline ::ru::mail::go::webbase::blobs::QPResult_LangResult* QPResult::release_langresult() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.QPResult.langResult)
  clear_has_langresult();
  ::ru::mail::go::webbase::blobs::QPResult_LangResult* temp = langresult_;
  langresult_ = NULL;
  return temp;
}
inline void QPResult::set_allocated_langresult(::ru::mail::go::webbase::blobs::QPResult_LangResult* langresult) {
  delete langresult_;
  langresult_ = langresult;
  if (langresult) {
    set_has_langresult();
  } else {
    clear_has_langresult();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.QPResult.langResult)
}

// optional sint32 geoNameRegion = 7;
inline bool QPResult::has_geonameregion() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QPResult::set_has_geonameregion() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QPResult::clear_has_geonameregion() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QPResult::clear_geonameregion() {
  geonameregion_ = 0;
  clear_has_geonameregion();
}
inline ::google::protobuf::int32 QPResult::geonameregion() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.geoNameRegion)
  return geonameregion_;
}
inline void QPResult::set_geonameregion(::google::protobuf::int32 value) {
  set_has_geonameregion();
  geonameregion_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.geoNameRegion)
}

// optional bool isGeo = 4;
inline bool QPResult::has_isgeo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QPResult::set_has_isgeo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QPResult::clear_has_isgeo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QPResult::clear_isgeo() {
  isgeo_ = false;
  clear_has_isgeo();
}
inline bool QPResult::isgeo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.isGeo)
  return isgeo_;
}
inline void QPResult::set_isgeo(bool value) {
  set_has_isgeo();
  isgeo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.isGeo)
}

// optional bool isNavig = 5;
inline bool QPResult::has_isnavig() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QPResult::set_has_isnavig() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QPResult::clear_has_isnavig() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QPResult::clear_isnavig() {
  isnavig_ = false;
  clear_has_isnavig();
}
inline bool QPResult::isnavig() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.isNavig)
  return isnavig_;
}
inline void QPResult::set_isnavig(bool value) {
  set_has_isnavig();
  isnavig_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.isNavig)
}

// optional bool isAnswer = 6;
inline bool QPResult::has_isanswer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QPResult::set_has_isanswer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QPResult::clear_has_isanswer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QPResult::clear_isanswer() {
  isanswer_ = false;
  clear_has_isanswer();
}
inline bool QPResult::isanswer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.isAnswer)
  return isanswer_;
}
inline void QPResult::set_isanswer(bool value) {
  set_has_isanswer();
  isanswer_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.isAnswer)
}

// optional bool isGeoName = 8;
inline bool QPResult::has_isgeoname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QPResult::set_has_isgeoname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QPResult::clear_has_isgeoname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QPResult::clear_isgeoname() {
  isgeoname_ = false;
  clear_has_isgeoname();
}
inline bool QPResult::isgeoname() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.QPResult.isGeoName)
  return isgeoname_;
}
inline void QPResult::set_isgeoname(bool value) {
  set_has_isgeoname();
  isgeoname_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.QPResult.isGeoName)
}

// -------------------------------------------------------------------

// HarvesterResult_OldStats

// required bool wasExproted = 1;
inline bool HarvesterResult_OldStats::has_wasexproted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarvesterResult_OldStats::set_has_wasexproted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarvesterResult_OldStats::clear_has_wasexproted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarvesterResult_OldStats::clear_wasexproted() {
  wasexproted_ = false;
  clear_has_wasexproted();
}
inline bool HarvesterResult_OldStats::wasexproted() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasExproted)
  return wasexproted_;
}
inline void HarvesterResult_OldStats::set_wasexproted(bool value) {
  set_has_wasexproted();
  wasexproted_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasExproted)
}

// required bool wasGeo = 2;
inline bool HarvesterResult_OldStats::has_wasgeo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HarvesterResult_OldStats::set_has_wasgeo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HarvesterResult_OldStats::clear_has_wasgeo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HarvesterResult_OldStats::clear_wasgeo() {
  wasgeo_ = false;
  clear_has_wasgeo();
}
inline bool HarvesterResult_OldStats::wasgeo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasGeo)
  return wasgeo_;
}
inline void HarvesterResult_OldStats::set_wasgeo(bool value) {
  set_has_wasgeo();
  wasgeo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasGeo)
}

// required bool wasNavig = 3;
inline bool HarvesterResult_OldStats::has_wasnavig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HarvesterResult_OldStats::set_has_wasnavig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HarvesterResult_OldStats::clear_has_wasnavig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HarvesterResult_OldStats::clear_wasnavig() {
  wasnavig_ = false;
  clear_has_wasnavig();
}
inline bool HarvesterResult_OldStats::wasnavig() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasNavig)
  return wasnavig_;
}
inline void HarvesterResult_OldStats::set_wasnavig(bool value) {
  set_has_wasnavig();
  wasnavig_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.OldStats.wasNavig)
}

// -------------------------------------------------------------------

// HarvesterResult

// required .ru.mail.go.webbase.blobs.QPResult qpProxyData = 1;
inline bool HarvesterResult::has_qpproxydata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarvesterResult::set_has_qpproxydata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarvesterResult::clear_has_qpproxydata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarvesterResult::clear_qpproxydata() {
  if (qpproxydata_ != NULL) qpproxydata_->::ru::mail::go::webbase::blobs::QPResult::Clear();
  clear_has_qpproxydata();
}
inline const ::ru::mail::go::webbase::blobs::QPResult& HarvesterResult::qpproxydata() const {
  const ::ru::mail::go::webbase::blobs::QPResult* p = qpproxydata_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.qpProxyData)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::QPResult*>(
      &::ru::mail::go::webbase::blobs::_QPResult_default_instance_);
}
inline ::ru::mail::go::webbase::blobs::QPResult* HarvesterResult::mutable_qpproxydata() {
  set_has_qpproxydata();
  if (qpproxydata_ == NULL) {
    qpproxydata_ = new ::ru::mail::go::webbase::blobs::QPResult;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.HarvesterResult.qpProxyData)
  return qpproxydata_;
}
inline ::ru::mail::go::webbase::blobs::QPResult* HarvesterResult::release_qpproxydata() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.HarvesterResult.qpProxyData)
  clear_has_qpproxydata();
  ::ru::mail::go::webbase::blobs::QPResult* temp = qpproxydata_;
  qpproxydata_ = NULL;
  return temp;
}
inline void HarvesterResult::set_allocated_qpproxydata(::ru::mail::go::webbase::blobs::QPResult* qpproxydata) {
  delete qpproxydata_;
  qpproxydata_ = qpproxydata;
  if (qpproxydata) {
    set_has_qpproxydata();
  } else {
    clear_has_qpproxydata();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.HarvesterResult.qpProxyData)
}

// optional .ru.mail.go.webbase.blobs.HarvesterResult.OldStats oldStatsData = 2;
inline bool HarvesterResult::has_oldstatsdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HarvesterResult::set_has_oldstatsdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HarvesterResult::clear_has_oldstatsdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HarvesterResult::clear_oldstatsdata() {
  if (oldstatsdata_ != NULL) oldstatsdata_->::ru::mail::go::webbase::blobs::HarvesterResult_OldStats::Clear();
  clear_has_oldstatsdata();
}
inline const ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats& HarvesterResult::oldstatsdata() const {
  const ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* p = oldstatsdata_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.oldStatsData)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats*>(
      &::ru::mail::go::webbase::blobs::_HarvesterResult_OldStats_default_instance_);
}
inline ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* HarvesterResult::mutable_oldstatsdata() {
  set_has_oldstatsdata();
  if (oldstatsdata_ == NULL) {
    oldstatsdata_ = new ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.HarvesterResult.oldStatsData)
  return oldstatsdata_;
}
inline ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* HarvesterResult::release_oldstatsdata() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.HarvesterResult.oldStatsData)
  clear_has_oldstatsdata();
  ::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* temp = oldstatsdata_;
  oldstatsdata_ = NULL;
  return temp;
}
inline void HarvesterResult::set_allocated_oldstatsdata(::ru::mail::go::webbase::blobs::HarvesterResult_OldStats* oldstatsdata) {
  delete oldstatsdata_;
  oldstatsdata_ = oldstatsdata;
  if (oldstatsdata) {
    set_has_oldstatsdata();
  } else {
    clear_has_oldstatsdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.HarvesterResult.oldStatsData)
}

// optional bool isYandexGeo = 3;
inline bool HarvesterResult::has_isyandexgeo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HarvesterResult::set_has_isyandexgeo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HarvesterResult::clear_has_isyandexgeo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HarvesterResult::clear_isyandexgeo() {
  isyandexgeo_ = false;
  clear_has_isyandexgeo();
}
inline bool HarvesterResult::isyandexgeo() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.isYandexGeo)
  return isyandexgeo_;
}
inline void HarvesterResult::set_isyandexgeo(bool value) {
  set_has_isyandexgeo();
  isyandexgeo_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.isYandexGeo)
}

// optional bool isNavig = 4;
inline bool HarvesterResult::has_isnavig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HarvesterResult::set_has_isnavig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HarvesterResult::clear_has_isnavig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HarvesterResult::clear_isnavig() {
  isnavig_ = false;
  clear_has_isnavig();
}
inline bool HarvesterResult::isnavig() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.isNavig)
  return isnavig_;
}
inline void HarvesterResult::set_isnavig(bool value) {
  set_has_isnavig();
  isnavig_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.isNavig)
}

// optional bool wasExported = 5;
inline bool HarvesterResult::has_wasexported() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HarvesterResult::set_has_wasexported() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HarvesterResult::clear_has_wasexported() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HarvesterResult::clear_wasexported() {
  wasexported_ = false;
  clear_has_wasexported();
}
inline bool HarvesterResult::wasexported() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.HarvesterResult.wasExported)
  return wasexported_;
}
inline void HarvesterResult::set_wasexported(bool value) {
  set_has_wasexported();
  wasexported_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.HarvesterResult.wasExported)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ru::mail::go::webbase::blobs::QPResult_Lang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::blobs::QPResult_Lang>() {
  return ::ru::mail::go::webbase::blobs::QPResult_Lang_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_qp_5fproxy_5fresult_2eproto__INCLUDED
