// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rate_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rate_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gogo {
namespace rm {
class ReplicaMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReplicaMessage>
     _instance;
} _ReplicaMessage_default_instance_;
class BackendMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BackendMessage>
     _instance;
} _BackendMessage_default_instance_;
class ClusterMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClusterMessage>
     _instance;
} _ClusterMessage_default_instance_;
class RateMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RateMessage>
     _instance;
} _RateMessage_default_instance_;

namespace protobuf_rate_5fmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplicaMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplicaMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplicaMessage, rate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackendMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackendMessage, replica_message_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterMessage, backend_message_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateMessage, cluster_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(ReplicaMessage)},
  { 7, 13, sizeof(BackendMessage)},
  { 14, 20, sizeof(ClusterMessage)},
  { 21, 27, sizeof(RateMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReplicaMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BackendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RateMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rate_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ReplicaMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReplicaMessage_default_instance_);_BackendMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BackendMessage_default_instance_);_ClusterMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClusterMessage_default_instance_);_RateMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RateMessage_default_instance_);_RateMessage_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::gogo::rm::ClusterMessage*>(
      ::gogo::rm::ClusterMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022rate_message.proto\022\007gogo.rm\"\036\n\016Replica"
      "Message\022\014\n\004rate\030\001 \002(\001\"B\n\016BackendMessage\022"
      "0\n\017replica_message\030\001 \003(\0132\027.gogo.rm.Repli"
      "caMessage\"B\n\016ClusterMessage\0220\n\017backend_m"
      "essage\030\001 \003(\0132\027.gogo.rm.BackendMessage\"7\n"
      "\013RateMessage\022(\n\007cluster\030\001 \002(\0132\027.gogo.rm."
      "ClusterMessage"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 254);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rate_message.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_rate_5fmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplicaMessage::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplicaMessage::ReplicaMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rate_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gogo.rm.ReplicaMessage)
}
ReplicaMessage::ReplicaMessage(const ReplicaMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rate_ = from.rate_;
  // @@protoc_insertion_point(copy_constructor:gogo.rm.ReplicaMessage)
}

void ReplicaMessage::SharedCtor() {
  _cached_size_ = 0;
  rate_ = 0;
}

ReplicaMessage::~ReplicaMessage() {
  // @@protoc_insertion_point(destructor:gogo.rm.ReplicaMessage)
  SharedDtor();
}

void ReplicaMessage::SharedDtor() {
}

void ReplicaMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplicaMessage::descriptor() {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplicaMessage& ReplicaMessage::default_instance() {
  protobuf_rate_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReplicaMessage* ReplicaMessage::New(::google::protobuf::Arena* arena) const {
  ReplicaMessage* n = new ReplicaMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplicaMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:gogo.rm.ReplicaMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rate_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReplicaMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gogo.rm.ReplicaMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gogo.rm.ReplicaMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gogo.rm.ReplicaMessage)
  return false;
#undef DO_
}

void ReplicaMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gogo.rm.ReplicaMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double rate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gogo.rm.ReplicaMessage)
}

::google::protobuf::uint8* ReplicaMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gogo.rm.ReplicaMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double rate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gogo.rm.ReplicaMessage)
  return target;
}

size_t ReplicaMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gogo.rm.ReplicaMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required double rate = 1;
  if (has_rate()) {
    total_size += 1 + 8;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplicaMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gogo.rm.ReplicaMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplicaMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplicaMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gogo.rm.ReplicaMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gogo.rm.ReplicaMessage)
    MergeFrom(*source);
  }
}

void ReplicaMessage::MergeFrom(const ReplicaMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gogo.rm.ReplicaMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rate()) {
    set_rate(from.rate());
  }
}

void ReplicaMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gogo.rm.ReplicaMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplicaMessage::CopyFrom(const ReplicaMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gogo.rm.ReplicaMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicaMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ReplicaMessage::Swap(ReplicaMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplicaMessage::InternalSwap(ReplicaMessage* other) {
  using std::swap;
  swap(rate_, other->rate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplicaMessage::GetMetadata() const {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplicaMessage

// required double rate = 1;
bool ReplicaMessage::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReplicaMessage::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
void ReplicaMessage::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReplicaMessage::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
double ReplicaMessage::rate() const {
  // @@protoc_insertion_point(field_get:gogo.rm.ReplicaMessage.rate)
  return rate_;
}
void ReplicaMessage::set_rate(double value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:gogo.rm.ReplicaMessage.rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackendMessage::kReplicaMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackendMessage::BackendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rate_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gogo.rm.BackendMessage)
}
BackendMessage::BackendMessage(const BackendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      replica_message_(from.replica_message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gogo.rm.BackendMessage)
}

void BackendMessage::SharedCtor() {
  _cached_size_ = 0;
}

BackendMessage::~BackendMessage() {
  // @@protoc_insertion_point(destructor:gogo.rm.BackendMessage)
  SharedDtor();
}

void BackendMessage::SharedDtor() {
}

void BackendMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackendMessage::descriptor() {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackendMessage& BackendMessage::default_instance() {
  protobuf_rate_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

BackendMessage* BackendMessage::New(::google::protobuf::Arena* arena) const {
  BackendMessage* n = new BackendMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:gogo.rm.BackendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_message_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BackendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gogo.rm.BackendMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gogo.rm.ReplicaMessage replica_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replica_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gogo.rm.BackendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gogo.rm.BackendMessage)
  return false;
#undef DO_
}

void BackendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gogo.rm.BackendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gogo.rm.ReplicaMessage replica_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->replica_message(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gogo.rm.BackendMessage)
}

::google::protobuf::uint8* BackendMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gogo.rm.BackendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gogo.rm.ReplicaMessage replica_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->replica_message(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gogo.rm.BackendMessage)
  return target;
}

size_t BackendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gogo.rm.BackendMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .gogo.rm.ReplicaMessage replica_message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->replica_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->replica_message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gogo.rm.BackendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BackendMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackendMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gogo.rm.BackendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gogo.rm.BackendMessage)
    MergeFrom(*source);
  }
}

void BackendMessage::MergeFrom(const BackendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gogo.rm.BackendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_message_.MergeFrom(from.replica_message_);
}

void BackendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gogo.rm.BackendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackendMessage::CopyFrom(const BackendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gogo.rm.BackendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackendMessage::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->replica_message())) return false;
  return true;
}

void BackendMessage::Swap(BackendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackendMessage::InternalSwap(BackendMessage* other) {
  using std::swap;
  replica_message_.InternalSwap(&other->replica_message_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackendMessage::GetMetadata() const {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackendMessage

// repeated .gogo.rm.ReplicaMessage replica_message = 1;
int BackendMessage::replica_message_size() const {
  return replica_message_.size();
}
void BackendMessage::clear_replica_message() {
  replica_message_.Clear();
}
const ::gogo::rm::ReplicaMessage& BackendMessage::replica_message(int index) const {
  // @@protoc_insertion_point(field_get:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Get(index);
}
::gogo::rm::ReplicaMessage* BackendMessage::mutable_replica_message(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Mutable(index);
}
::gogo::rm::ReplicaMessage* BackendMessage::add_replica_message() {
  // @@protoc_insertion_point(field_add:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >*
BackendMessage::mutable_replica_message() {
  // @@protoc_insertion_point(field_mutable_list:gogo.rm.BackendMessage.replica_message)
  return &replica_message_;
}
const ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >&
BackendMessage::replica_message() const {
  // @@protoc_insertion_point(field_list:gogo.rm.BackendMessage.replica_message)
  return replica_message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterMessage::kBackendMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterMessage::ClusterMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rate_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gogo.rm.ClusterMessage)
}
ClusterMessage::ClusterMessage(const ClusterMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      backend_message_(from.backend_message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gogo.rm.ClusterMessage)
}

void ClusterMessage::SharedCtor() {
  _cached_size_ = 0;
}

ClusterMessage::~ClusterMessage() {
  // @@protoc_insertion_point(destructor:gogo.rm.ClusterMessage)
  SharedDtor();
}

void ClusterMessage::SharedDtor() {
}

void ClusterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterMessage::descriptor() {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterMessage& ClusterMessage::default_instance() {
  protobuf_rate_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterMessage* ClusterMessage::New(::google::protobuf::Arena* arena) const {
  ClusterMessage* n = new ClusterMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:gogo.rm.ClusterMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backend_message_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gogo.rm.ClusterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gogo.rm.BackendMessage backend_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_backend_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gogo.rm.ClusterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gogo.rm.ClusterMessage)
  return false;
#undef DO_
}

void ClusterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gogo.rm.ClusterMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gogo.rm.BackendMessage backend_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->backend_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->backend_message(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gogo.rm.ClusterMessage)
}

::google::protobuf::uint8* ClusterMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gogo.rm.ClusterMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gogo.rm.BackendMessage backend_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->backend_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->backend_message(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gogo.rm.ClusterMessage)
  return target;
}

size_t ClusterMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gogo.rm.ClusterMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .gogo.rm.BackendMessage backend_message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->backend_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->backend_message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gogo.rm.ClusterMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gogo.rm.ClusterMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gogo.rm.ClusterMessage)
    MergeFrom(*source);
  }
}

void ClusterMessage::MergeFrom(const ClusterMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gogo.rm.ClusterMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  backend_message_.MergeFrom(from.backend_message_);
}

void ClusterMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gogo.rm.ClusterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterMessage::CopyFrom(const ClusterMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gogo.rm.ClusterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterMessage::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->backend_message())) return false;
  return true;
}

void ClusterMessage::Swap(ClusterMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterMessage::InternalSwap(ClusterMessage* other) {
  using std::swap;
  backend_message_.InternalSwap(&other->backend_message_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterMessage::GetMetadata() const {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterMessage

// repeated .gogo.rm.BackendMessage backend_message = 1;
int ClusterMessage::backend_message_size() const {
  return backend_message_.size();
}
void ClusterMessage::clear_backend_message() {
  backend_message_.Clear();
}
const ::gogo::rm::BackendMessage& ClusterMessage::backend_message(int index) const {
  // @@protoc_insertion_point(field_get:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Get(index);
}
::gogo::rm::BackendMessage* ClusterMessage::mutable_backend_message(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Mutable(index);
}
::gogo::rm::BackendMessage* ClusterMessage::add_backend_message() {
  // @@protoc_insertion_point(field_add:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >*
ClusterMessage::mutable_backend_message() {
  // @@protoc_insertion_point(field_mutable_list:gogo.rm.ClusterMessage.backend_message)
  return &backend_message_;
}
const ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >&
ClusterMessage::backend_message() const {
  // @@protoc_insertion_point(field_list:gogo.rm.ClusterMessage.backend_message)
  return backend_message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RateMessage::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RateMessage::RateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rate_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gogo.rm.RateMessage)
}
RateMessage::RateMessage(const RateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cluster()) {
    cluster_ = new ::gogo::rm::ClusterMessage(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gogo.rm.RateMessage)
}

void RateMessage::SharedCtor() {
  _cached_size_ = 0;
  cluster_ = NULL;
}

RateMessage::~RateMessage() {
  // @@protoc_insertion_point(destructor:gogo.rm.RateMessage)
  SharedDtor();
}

void RateMessage::SharedDtor() {
  if (this != internal_default_instance()) delete cluster_;
}

void RateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RateMessage::descriptor() {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RateMessage& RateMessage::default_instance() {
  protobuf_rate_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

RateMessage* RateMessage::New(::google::protobuf::Arena* arena) const {
  RateMessage* n = new RateMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:gogo.rm.RateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_cluster()) {
    GOOGLE_DCHECK(cluster_ != NULL);
    cluster_->::gogo::rm::ClusterMessage::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gogo.rm.RateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gogo.rm.ClusterMessage cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gogo.rm.RateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gogo.rm.RateMessage)
  return false;
#undef DO_
}

void RateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gogo.rm.RateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gogo.rm.ClusterMessage cluster = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cluster_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gogo.rm.RateMessage)
}

::google::protobuf::uint8* RateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gogo.rm.RateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gogo.rm.ClusterMessage cluster = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cluster_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gogo.rm.RateMessage)
  return target;
}

size_t RateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gogo.rm.RateMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gogo.rm.ClusterMessage cluster = 1;
  if (has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gogo.rm.RateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gogo.rm.RateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gogo.rm.RateMessage)
    MergeFrom(*source);
  }
}

void RateMessage::MergeFrom(const RateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gogo.rm.RateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cluster()) {
    mutable_cluster()->::gogo::rm::ClusterMessage::MergeFrom(from.cluster());
  }
}

void RateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gogo.rm.RateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RateMessage::CopyFrom(const RateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gogo.rm.RateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_cluster()) {
    if (!this->cluster_->IsInitialized()) return false;
  }
  return true;
}

void RateMessage::Swap(RateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RateMessage::InternalSwap(RateMessage* other) {
  using std::swap;
  swap(cluster_, other->cluster_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RateMessage::GetMetadata() const {
  protobuf_rate_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rate_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RateMessage

// required .gogo.rm.ClusterMessage cluster = 1;
bool RateMessage::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RateMessage::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
void RateMessage::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
void RateMessage::clear_cluster() {
  if (cluster_ != NULL) cluster_->::gogo::rm::ClusterMessage::Clear();
  clear_has_cluster();
}
const ::gogo::rm::ClusterMessage& RateMessage::cluster() const {
  const ::gogo::rm::ClusterMessage* p = cluster_;
  // @@protoc_insertion_point(field_get:gogo.rm.RateMessage.cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::rm::ClusterMessage*>(
      &::gogo::rm::_ClusterMessage_default_instance_);
}
::gogo::rm::ClusterMessage* RateMessage::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::gogo::rm::ClusterMessage;
  }
  // @@protoc_insertion_point(field_mutable:gogo.rm.RateMessage.cluster)
  return cluster_;
}
::gogo::rm::ClusterMessage* RateMessage::release_cluster() {
  // @@protoc_insertion_point(field_release:gogo.rm.RateMessage.cluster)
  clear_has_cluster();
  ::gogo::rm::ClusterMessage* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void RateMessage::set_allocated_cluster(::gogo::rm::ClusterMessage* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.rm.RateMessage.cluster)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rm
}  // namespace gogo

// @@protoc_insertion_point(global_scope)
