// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rate_message.proto

#ifndef PROTOBUF_rate_5fmessage_2eproto__INCLUDED
#define PROTOBUF_rate_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gogo {
namespace rm {
class BackendMessage;
class BackendMessageDefaultTypeInternal;
extern BackendMessageDefaultTypeInternal _BackendMessage_default_instance_;
class ClusterMessage;
class ClusterMessageDefaultTypeInternal;
extern ClusterMessageDefaultTypeInternal _ClusterMessage_default_instance_;
class RateMessage;
class RateMessageDefaultTypeInternal;
extern RateMessageDefaultTypeInternal _RateMessage_default_instance_;
class ReplicaMessage;
class ReplicaMessageDefaultTypeInternal;
extern ReplicaMessageDefaultTypeInternal _ReplicaMessage_default_instance_;
}  // namespace rm
}  // namespace gogo

namespace gogo {
namespace rm {

namespace protobuf_rate_5fmessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rate_5fmessage_2eproto

// ===================================================================

class ReplicaMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.rm.ReplicaMessage) */ {
 public:
  ReplicaMessage();
  virtual ~ReplicaMessage();

  ReplicaMessage(const ReplicaMessage& from);

  inline ReplicaMessage& operator=(const ReplicaMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReplicaMessage(ReplicaMessage&& from) noexcept
    : ReplicaMessage() {
    *this = ::std::move(from);
  }

  inline ReplicaMessage& operator=(ReplicaMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplicaMessage& default_instance();

  static inline const ReplicaMessage* internal_default_instance() {
    return reinterpret_cast<const ReplicaMessage*>(
               &_ReplicaMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReplicaMessage* other);
  friend void swap(ReplicaMessage& a, ReplicaMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReplicaMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ReplicaMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReplicaMessage& from);
  void MergeFrom(const ReplicaMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReplicaMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double rate = 1;
  bool has_rate() const;
  void clear_rate();
  static const int kRateFieldNumber = 1;
  double rate() const;
  void set_rate(double value);

  // @@protoc_insertion_point(class_scope:gogo.rm.ReplicaMessage)
 private:
  void set_has_rate();
  void clear_has_rate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double rate_;
  friend struct protobuf_rate_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackendMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.rm.BackendMessage) */ {
 public:
  BackendMessage();
  virtual ~BackendMessage();

  BackendMessage(const BackendMessage& from);

  inline BackendMessage& operator=(const BackendMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackendMessage(BackendMessage&& from) noexcept
    : BackendMessage() {
    *this = ::std::move(from);
  }

  inline BackendMessage& operator=(BackendMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackendMessage& default_instance();

  static inline const BackendMessage* internal_default_instance() {
    return reinterpret_cast<const BackendMessage*>(
               &_BackendMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(BackendMessage* other);
  friend void swap(BackendMessage& a, BackendMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackendMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  BackendMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackendMessage& from);
  void MergeFrom(const BackendMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackendMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gogo.rm.ReplicaMessage replica_message = 1;
  int replica_message_size() const;
  void clear_replica_message();
  static const int kReplicaMessageFieldNumber = 1;
  const ::gogo::rm::ReplicaMessage& replica_message(int index) const;
  ::gogo::rm::ReplicaMessage* mutable_replica_message(int index);
  ::gogo::rm::ReplicaMessage* add_replica_message();
  ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >*
      mutable_replica_message();
  const ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >&
      replica_message() const;

  // @@protoc_insertion_point(class_scope:gogo.rm.BackendMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage > replica_message_;
  friend struct protobuf_rate_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.rm.ClusterMessage) */ {
 public:
  ClusterMessage();
  virtual ~ClusterMessage();

  ClusterMessage(const ClusterMessage& from);

  inline ClusterMessage& operator=(const ClusterMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterMessage(ClusterMessage&& from) noexcept
    : ClusterMessage() {
    *this = ::std::move(from);
  }

  inline ClusterMessage& operator=(ClusterMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterMessage& default_instance();

  static inline const ClusterMessage* internal_default_instance() {
    return reinterpret_cast<const ClusterMessage*>(
               &_ClusterMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ClusterMessage* other);
  friend void swap(ClusterMessage& a, ClusterMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterMessage& from);
  void MergeFrom(const ClusterMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gogo.rm.BackendMessage backend_message = 1;
  int backend_message_size() const;
  void clear_backend_message();
  static const int kBackendMessageFieldNumber = 1;
  const ::gogo::rm::BackendMessage& backend_message(int index) const;
  ::gogo::rm::BackendMessage* mutable_backend_message(int index);
  ::gogo::rm::BackendMessage* add_backend_message();
  ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >*
      mutable_backend_message();
  const ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >&
      backend_message() const;

  // @@protoc_insertion_point(class_scope:gogo.rm.ClusterMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage > backend_message_;
  friend struct protobuf_rate_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gogo.rm.RateMessage) */ {
 public:
  RateMessage();
  virtual ~RateMessage();

  RateMessage(const RateMessage& from);

  inline RateMessage& operator=(const RateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RateMessage(RateMessage&& from) noexcept
    : RateMessage() {
    *this = ::std::move(from);
  }

  inline RateMessage& operator=(RateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateMessage& default_instance();

  static inline const RateMessage* internal_default_instance() {
    return reinterpret_cast<const RateMessage*>(
               &_RateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RateMessage* other);
  friend void swap(RateMessage& a, RateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateMessage& from);
  void MergeFrom(const RateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gogo.rm.ClusterMessage cluster = 1;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 1;
  const ::gogo::rm::ClusterMessage& cluster() const;
  ::gogo::rm::ClusterMessage* mutable_cluster();
  ::gogo::rm::ClusterMessage* release_cluster();
  void set_allocated_cluster(::gogo::rm::ClusterMessage* cluster);

  // @@protoc_insertion_point(class_scope:gogo.rm.RateMessage)
 private:
  void set_has_cluster();
  void clear_has_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::gogo::rm::ClusterMessage* cluster_;
  friend struct protobuf_rate_5fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReplicaMessage

// required double rate = 1;
inline bool ReplicaMessage::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplicaMessage::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplicaMessage::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplicaMessage::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline double ReplicaMessage::rate() const {
  // @@protoc_insertion_point(field_get:gogo.rm.ReplicaMessage.rate)
  return rate_;
}
inline void ReplicaMessage::set_rate(double value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:gogo.rm.ReplicaMessage.rate)
}

// -------------------------------------------------------------------

// BackendMessage

// repeated .gogo.rm.ReplicaMessage replica_message = 1;
inline int BackendMessage::replica_message_size() const {
  return replica_message_.size();
}
inline void BackendMessage::clear_replica_message() {
  replica_message_.Clear();
}
inline const ::gogo::rm::ReplicaMessage& BackendMessage::replica_message(int index) const {
  // @@protoc_insertion_point(field_get:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Get(index);
}
inline ::gogo::rm::ReplicaMessage* BackendMessage::mutable_replica_message(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Mutable(index);
}
inline ::gogo::rm::ReplicaMessage* BackendMessage::add_replica_message() {
  // @@protoc_insertion_point(field_add:gogo.rm.BackendMessage.replica_message)
  return replica_message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >*
BackendMessage::mutable_replica_message() {
  // @@protoc_insertion_point(field_mutable_list:gogo.rm.BackendMessage.replica_message)
  return &replica_message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gogo::rm::ReplicaMessage >&
BackendMessage::replica_message() const {
  // @@protoc_insertion_point(field_list:gogo.rm.BackendMessage.replica_message)
  return replica_message_;
}

// -------------------------------------------------------------------

// ClusterMessage

// repeated .gogo.rm.BackendMessage backend_message = 1;
inline int ClusterMessage::backend_message_size() const {
  return backend_message_.size();
}
inline void ClusterMessage::clear_backend_message() {
  backend_message_.Clear();
}
inline const ::gogo::rm::BackendMessage& ClusterMessage::backend_message(int index) const {
  // @@protoc_insertion_point(field_get:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Get(index);
}
inline ::gogo::rm::BackendMessage* ClusterMessage::mutable_backend_message(int index) {
  // @@protoc_insertion_point(field_mutable:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Mutable(index);
}
inline ::gogo::rm::BackendMessage* ClusterMessage::add_backend_message() {
  // @@protoc_insertion_point(field_add:gogo.rm.ClusterMessage.backend_message)
  return backend_message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >*
ClusterMessage::mutable_backend_message() {
  // @@protoc_insertion_point(field_mutable_list:gogo.rm.ClusterMessage.backend_message)
  return &backend_message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gogo::rm::BackendMessage >&
ClusterMessage::backend_message() const {
  // @@protoc_insertion_point(field_list:gogo.rm.ClusterMessage.backend_message)
  return backend_message_;
}

// -------------------------------------------------------------------

// RateMessage

// required .gogo.rm.ClusterMessage cluster = 1;
inline bool RateMessage::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RateMessage::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RateMessage::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RateMessage::clear_cluster() {
  if (cluster_ != NULL) cluster_->::gogo::rm::ClusterMessage::Clear();
  clear_has_cluster();
}
inline const ::gogo::rm::ClusterMessage& RateMessage::cluster() const {
  const ::gogo::rm::ClusterMessage* p = cluster_;
  // @@protoc_insertion_point(field_get:gogo.rm.RateMessage.cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::gogo::rm::ClusterMessage*>(
      &::gogo::rm::_ClusterMessage_default_instance_);
}
inline ::gogo::rm::ClusterMessage* RateMessage::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::gogo::rm::ClusterMessage;
  }
  // @@protoc_insertion_point(field_mutable:gogo.rm.RateMessage.cluster)
  return cluster_;
}
inline ::gogo::rm::ClusterMessage* RateMessage::release_cluster() {
  // @@protoc_insertion_point(field_release:gogo.rm.RateMessage.cluster)
  clear_has_cluster();
  ::gogo::rm::ClusterMessage* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
inline void RateMessage::set_allocated_cluster(::gogo::rm::ClusterMessage* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:gogo.rm.RateMessage.cluster)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace rm
}  // namespace gogo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rate_5fmessage_2eproto__INCLUDED
