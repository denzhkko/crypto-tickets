// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recostorage_result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "recostorage_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DocDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Doc>
     _instance;
} _Doc_default_instance_;
class RecoStorageOutputDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RecoStorageOutput>
     _instance;
} _RecoStorageOutput_default_instance_;

namespace protobuf_recostorage_5fresult_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Doc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Doc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Doc, doc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Doc, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Doc, hash_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoStorageOutput, docs_),
  0,
  1,
  2,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(Doc)},
  { 11, 20, sizeof(RecoStorageOutput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Doc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecoStorageOutput_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "recostorage_result.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Doc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Doc_default_instance_);_RecoStorageOutput_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RecoStorageOutput_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030recostorage_result.proto\"0\n\003Doc\022\016\n\006doc"
      "_id\030\001 \001(\004\022\013\n\003gid\030\002 \001(\004\022\014\n\004hash\030\003 \001(\004\"R\n\021"
      "RecoStorageOutput\022\013\n\003uid\030\001 \002(\004\022\013\n\003cid\030\002 "
      "\002(\004\022\017\n\007version\030\003 \002(\r\022\022\n\004docs\030\004 \003(\0132\004.Doc"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "recostorage_result.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_recostorage_5fresult_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Doc::kDocIdFieldNumber;
const int Doc::kGidFieldNumber;
const int Doc::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Doc::Doc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recostorage_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Doc)
}
Doc::Doc(const Doc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&doc_id_, &from.doc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&doc_id_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:Doc)
}

void Doc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&doc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&doc_id_)) + sizeof(hash_));
}

Doc::~Doc() {
  // @@protoc_insertion_point(destructor:Doc)
  SharedDtor();
}

void Doc::SharedDtor() {
}

void Doc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Doc::descriptor() {
  protobuf_recostorage_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recostorage_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Doc& Doc::default_instance() {
  protobuf_recostorage_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

Doc* Doc::New(::google::protobuf::Arena* arena) const {
  Doc* n = new Doc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Doc::Clear() {
// @@protoc_insertion_point(message_clear_start:Doc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&doc_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hash_) -
        reinterpret_cast<char*>(&doc_id_)) + sizeof(hash_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Doc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Doc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 doc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_doc_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &doc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Doc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Doc)
  return false;
#undef DO_
}

void Doc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Doc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 doc_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->doc_id(), output);
  }

  // optional uint64 gid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gid(), output);
  }

  // optional uint64 hash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Doc)
}

::google::protobuf::uint8* Doc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Doc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 doc_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->doc_id(), target);
  }

  // optional uint64 gid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gid(), target);
  }

  // optional uint64 hash = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Doc)
  return target;
}

size_t Doc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Doc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 doc_id = 1;
    if (has_doc_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->doc_id());
    }

    // optional uint64 gid = 2;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gid());
    }

    // optional uint64 hash = 3;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hash());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Doc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Doc)
  GOOGLE_DCHECK_NE(&from, this);
  const Doc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Doc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Doc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Doc)
    MergeFrom(*source);
  }
}

void Doc::MergeFrom(const Doc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Doc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      doc_id_ = from.doc_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      gid_ = from.gid_;
    }
    if (cached_has_bits & 0x00000004u) {
      hash_ = from.hash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Doc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Doc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Doc::CopyFrom(const Doc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Doc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Doc::IsInitialized() const {
  return true;
}

void Doc::Swap(Doc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Doc::InternalSwap(Doc* other) {
  using std::swap;
  swap(doc_id_, other->doc_id_);
  swap(gid_, other->gid_);
  swap(hash_, other->hash_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Doc::GetMetadata() const {
  protobuf_recostorage_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recostorage_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Doc

// optional uint64 doc_id = 1;
bool Doc::has_doc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Doc::set_has_doc_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Doc::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Doc::clear_doc_id() {
  doc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_doc_id();
}
::google::protobuf::uint64 Doc::doc_id() const {
  // @@protoc_insertion_point(field_get:Doc.doc_id)
  return doc_id_;
}
void Doc::set_doc_id(::google::protobuf::uint64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:Doc.doc_id)
}

// optional uint64 gid = 2;
bool Doc::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Doc::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
void Doc::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Doc::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
::google::protobuf::uint64 Doc::gid() const {
  // @@protoc_insertion_point(field_get:Doc.gid)
  return gid_;
}
void Doc::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Doc.gid)
}

// optional uint64 hash = 3;
bool Doc::has_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Doc::set_has_hash() {
  _has_bits_[0] |= 0x00000004u;
}
void Doc::clear_has_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
void Doc::clear_hash() {
  hash_ = GOOGLE_ULONGLONG(0);
  clear_has_hash();
}
::google::protobuf::uint64 Doc::hash() const {
  // @@protoc_insertion_point(field_get:Doc.hash)
  return hash_;
}
void Doc::set_hash(::google::protobuf::uint64 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:Doc.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoStorageOutput::kUidFieldNumber;
const int RecoStorageOutput::kCidFieldNumber;
const int RecoStorageOutput::kVersionFieldNumber;
const int RecoStorageOutput::kDocsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoStorageOutput::RecoStorageOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recostorage_5fresult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecoStorageOutput)
}
RecoStorageOutput::RecoStorageOutput(const RecoStorageOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      docs_(from.docs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:RecoStorageOutput)
}

void RecoStorageOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(version_));
}

RecoStorageOutput::~RecoStorageOutput() {
  // @@protoc_insertion_point(destructor:RecoStorageOutput)
  SharedDtor();
}

void RecoStorageOutput::SharedDtor() {
}

void RecoStorageOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoStorageOutput::descriptor() {
  protobuf_recostorage_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recostorage_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoStorageOutput& RecoStorageOutput::default_instance() {
  protobuf_recostorage_5fresult_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecoStorageOutput* RecoStorageOutput::New(::google::protobuf::Arena* arena) const {
  RecoStorageOutput* n = new RecoStorageOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecoStorageOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:RecoStorageOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecoStorageOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecoStorageOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 cid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Doc docs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_docs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecoStorageOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecoStorageOutput)
  return false;
#undef DO_
}

void RecoStorageOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecoStorageOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint64 cid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cid(), output);
  }

  // required uint32 version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  // repeated .Doc docs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->docs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->docs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RecoStorageOutput)
}

::google::protobuf::uint8* RecoStorageOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecoStorageOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint64 cid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cid(), target);
  }

  // required uint32 version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  // repeated .Doc docs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->docs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->docs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecoStorageOutput)
  return target;
}

size_t RecoStorageOutput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RecoStorageOutput)
  size_t total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_cid()) {
    // required uint64 cid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());
  }

  if (has_version()) {
    // required uint32 version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  return total_size;
}
size_t RecoStorageOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecoStorageOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required uint64 cid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());

    // required uint32 version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Doc docs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->docs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->docs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoStorageOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecoStorageOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoStorageOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoStorageOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecoStorageOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecoStorageOutput)
    MergeFrom(*source);
  }
}

void RecoStorageOutput::MergeFrom(const RecoStorageOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecoStorageOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docs_.MergeFrom(from.docs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cid_ = from.cid_;
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RecoStorageOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecoStorageOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoStorageOutput::CopyFrom(const RecoStorageOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecoStorageOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoStorageOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void RecoStorageOutput::Swap(RecoStorageOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoStorageOutput::InternalSwap(RecoStorageOutput* other) {
  using std::swap;
  docs_.InternalSwap(&other->docs_);
  swap(uid_, other->uid_);
  swap(cid_, other->cid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecoStorageOutput::GetMetadata() const {
  protobuf_recostorage_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recostorage_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecoStorageOutput

// required uint64 uid = 1;
bool RecoStorageOutput::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecoStorageOutput::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void RecoStorageOutput::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecoStorageOutput::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 RecoStorageOutput::uid() const {
  // @@protoc_insertion_point(field_get:RecoStorageOutput.uid)
  return uid_;
}
void RecoStorageOutput::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:RecoStorageOutput.uid)
}

// required uint64 cid = 2;
bool RecoStorageOutput::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecoStorageOutput::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
void RecoStorageOutput::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RecoStorageOutput::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
::google::protobuf::uint64 RecoStorageOutput::cid() const {
  // @@protoc_insertion_point(field_get:RecoStorageOutput.cid)
  return cid_;
}
void RecoStorageOutput::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:RecoStorageOutput.cid)
}

// required uint32 version = 3;
bool RecoStorageOutput::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RecoStorageOutput::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
void RecoStorageOutput::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void RecoStorageOutput::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 RecoStorageOutput::version() const {
  // @@protoc_insertion_point(field_get:RecoStorageOutput.version)
  return version_;
}
void RecoStorageOutput::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:RecoStorageOutput.version)
}

// repeated .Doc docs = 4;
int RecoStorageOutput::docs_size() const {
  return docs_.size();
}
void RecoStorageOutput::clear_docs() {
  docs_.Clear();
}
const ::Doc& RecoStorageOutput::docs(int index) const {
  // @@protoc_insertion_point(field_get:RecoStorageOutput.docs)
  return docs_.Get(index);
}
::Doc* RecoStorageOutput::mutable_docs(int index) {
  // @@protoc_insertion_point(field_mutable:RecoStorageOutput.docs)
  return docs_.Mutable(index);
}
::Doc* RecoStorageOutput::add_docs() {
  // @@protoc_insertion_point(field_add:RecoStorageOutput.docs)
  return docs_.Add();
}
::google::protobuf::RepeatedPtrField< ::Doc >*
RecoStorageOutput::mutable_docs() {
  // @@protoc_insertion_point(field_mutable_list:RecoStorageOutput.docs)
  return &docs_;
}
const ::google::protobuf::RepeatedPtrField< ::Doc >&
RecoStorageOutput::docs() const {
  // @@protoc_insertion_point(field_list:RecoStorageOutput.docs)
  return docs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
