// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
class BBContainerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BBContainer>
     _instance;
} _BBContainer_default_instance_;
class BBResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BBResult>
     _instance;
} _BBResult_default_instance_;
class ComputedValues_RecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ComputedValues_Record>
     _instance;
} _ComputedValues_Record_default_instance_;
class ComputedValuesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ComputedValues>
     _instance;
} _ComputedValues_default_instance_;

namespace protobuf_result_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBContainer, headervalues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBContainer, ranks_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBResult, headervalues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBResult, urlvalues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBResult, navigationurl_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues_Record, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues_Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues_Record, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues_Record, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues, entryresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputedValues, site_entry_),
  0,
  ~0u,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(BBContainer)},
  { 9, 17, sizeof(BBResult)},
  { 20, 27, sizeof(ComputedValues_Record)},
  { 29, 37, sizeof(ComputedValues)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BBContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BBResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComputedValues_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComputedValues_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "result.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BBContainer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BBContainer_default_instance_);_BBResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BBResult_default_instance_);_ComputedValues_Record_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ComputedValues_Record_default_instance_);_ComputedValues_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ComputedValues_default_instance_);_BBContainer_default_instance_._instance.get_mutable()->headervalues_ = const_cast< ::ru::mail::go::webbase::ComputedValues*>(
      ::ru::mail::go::webbase::ComputedValues::internal_default_instance());
  _BBResult_default_instance_._instance.get_mutable()->headervalues_ = const_cast< ::ru::mail::go::webbase::ComputedValues*>(
      ::ru::mail::go::webbase::ComputedValues::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014result.proto\022\022ru.mail.go.webbase\"t\n\013BB"
      "Container\0228\n\014headerValues\030\001 \002(\0132\".ru.mai"
      "l.go.webbase.ComputedValues\022+\n\005ranks\030\002 \003"
      "(\0132\034.ru.mail.go.webbase.BBResult\"\222\001\n\010BBR"
      "esult\0228\n\014headerValues\030\001 \002(\0132\".ru.mail.go"
      ".webbase.ComputedValues\0225\n\turlValues\030\002 \003"
      "(\0132\".ru.mail.go.webbase.ComputedValues\022\025"
      "\n\rnavigationUrl\030\003 \001(\t\"\237\001\n\016ComputedValues"
      "\022\014\n\004name\030\001 \002(\t\022>\n\013entryResult\030\002 \003(\0132).ru"
      ".mail.go.webbase.ComputedValues.Record\022\031"
      "\n\nsite_entry\030\003 \001(\010:\005false\032$\n\006Record\022\013\n\003k"
      "ey\030\001 \002(\t\022\r\n\005value\030\002 \002(\002B\014B\nRankResult"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 477);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "result.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_result_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BBContainer::kHeaderValuesFieldNumber;
const int BBContainer::kRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BBContainer::BBContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_result_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.BBContainer)
}
BBContainer::BBContainer(const BBContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ranks_(from.ranks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_headervalues()) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues(*from.headervalues_);
  } else {
    headervalues_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.BBContainer)
}

void BBContainer::SharedCtor() {
  _cached_size_ = 0;
  headervalues_ = NULL;
}

BBContainer::~BBContainer() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.BBContainer)
  SharedDtor();
}

void BBContainer::SharedDtor() {
  if (this != internal_default_instance()) delete headervalues_;
}

void BBContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BBContainer::descriptor() {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BBContainer& BBContainer::default_instance() {
  protobuf_result_2eproto::InitDefaults();
  return *internal_default_instance();
}

BBContainer* BBContainer::New(::google::protobuf::Arena* arena) const {
  BBContainer* n = new BBContainer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BBContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.BBContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranks_.Clear();
  if (has_headervalues()) {
    GOOGLE_DCHECK(headervalues_ != NULL);
    headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BBContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.BBContainer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headervalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.BBResult ranks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ranks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.BBContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.BBContainer)
  return false;
#undef DO_
}

void BBContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.BBContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headervalues_, output);
  }

  // repeated .ru.mail.go.webbase.BBResult ranks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ranks(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.BBContainer)
}

::google::protobuf::uint8* BBContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.BBContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headervalues_, deterministic, target);
  }

  // repeated .ru.mail.go.webbase.BBResult ranks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ranks(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.BBContainer)
  return target;
}

size_t BBContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.BBContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (has_headervalues()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headervalues_);
  }
  // repeated .ru.mail.go.webbase.BBResult ranks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ranks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ranks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BBContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.BBContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const BBContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BBContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.BBContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.BBContainer)
    MergeFrom(*source);
  }
}

void BBContainer::MergeFrom(const BBContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.BBContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranks_.MergeFrom(from.ranks_);
  if (from.has_headervalues()) {
    mutable_headervalues()->::ru::mail::go::webbase::ComputedValues::MergeFrom(from.headervalues());
  }
}

void BBContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.BBContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BBContainer::CopyFrom(const BBContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.BBContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BBContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ranks())) return false;
  if (has_headervalues()) {
    if (!this->headervalues_->IsInitialized()) return false;
  }
  return true;
}

void BBContainer::Swap(BBContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BBContainer::InternalSwap(BBContainer* other) {
  using std::swap;
  ranks_.InternalSwap(&other->ranks_);
  swap(headervalues_, other->headervalues_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BBContainer::GetMetadata() const {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BBContainer

// required .ru.mail.go.webbase.ComputedValues headerValues = 1;
bool BBContainer::has_headervalues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BBContainer::set_has_headervalues() {
  _has_bits_[0] |= 0x00000001u;
}
void BBContainer::clear_has_headervalues() {
  _has_bits_[0] &= ~0x00000001u;
}
void BBContainer::clear_headervalues() {
  if (headervalues_ != NULL) headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
  clear_has_headervalues();
}
const ::ru::mail::go::webbase::ComputedValues& BBContainer::headervalues() const {
  const ::ru::mail::go::webbase::ComputedValues* p = headervalues_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBContainer.headerValues)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::ComputedValues*>(
      &::ru::mail::go::webbase::_ComputedValues_default_instance_);
}
::ru::mail::go::webbase::ComputedValues* BBContainer::mutable_headervalues() {
  set_has_headervalues();
  if (headervalues_ == NULL) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBContainer.headerValues)
  return headervalues_;
}
::ru::mail::go::webbase::ComputedValues* BBContainer::release_headervalues() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBContainer.headerValues)
  clear_has_headervalues();
  ::ru::mail::go::webbase::ComputedValues* temp = headervalues_;
  headervalues_ = NULL;
  return temp;
}
void BBContainer::set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues) {
  delete headervalues_;
  headervalues_ = headervalues;
  if (headervalues) {
    set_has_headervalues();
  } else {
    clear_has_headervalues();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBContainer.headerValues)
}

// repeated .ru.mail.go.webbase.BBResult ranks = 2;
int BBContainer::ranks_size() const {
  return ranks_.size();
}
void BBContainer::clear_ranks() {
  ranks_.Clear();
}
const ::ru::mail::go::webbase::BBResult& BBContainer::ranks(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Get(index);
}
::ru::mail::go::webbase::BBResult* BBContainer::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Mutable(index);
}
::ru::mail::go::webbase::BBResult* BBContainer::add_ranks() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >*
BBContainer::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.BBContainer.ranks)
  return &ranks_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::BBResult >&
BBContainer::ranks() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.BBContainer.ranks)
  return ranks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BBResult::kHeaderValuesFieldNumber;
const int BBResult::kUrlValuesFieldNumber;
const int BBResult::kNavigationUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BBResult::BBResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_result_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.BBResult)
}
BBResult::BBResult(const BBResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      urlvalues_(from.urlvalues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  navigationurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_navigationurl()) {
    navigationurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.navigationurl_);
  }
  if (from.has_headervalues()) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues(*from.headervalues_);
  } else {
    headervalues_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.BBResult)
}

void BBResult::SharedCtor() {
  _cached_size_ = 0;
  navigationurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headervalues_ = NULL;
}

BBResult::~BBResult() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.BBResult)
  SharedDtor();
}

void BBResult::SharedDtor() {
  navigationurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete headervalues_;
}

void BBResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BBResult::descriptor() {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BBResult& BBResult::default_instance() {
  protobuf_result_2eproto::InitDefaults();
  return *internal_default_instance();
}

BBResult* BBResult::New(::google::protobuf::Arena* arena) const {
  BBResult* n = new BBResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BBResult::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.BBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  urlvalues_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!navigationurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*navigationurl_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(headervalues_ != NULL);
      headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BBResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.BBResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headervalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_urlvalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string navigationUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_navigationurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->navigationurl().data(), static_cast<int>(this->navigationurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.BBResult.navigationUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.BBResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.BBResult)
  return false;
#undef DO_
}

void BBResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.BBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->headervalues_, output);
  }

  // repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->urlvalues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->urlvalues(static_cast<int>(i)), output);
  }

  // optional string navigationUrl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->navigationurl().data(), static_cast<int>(this->navigationurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.BBResult.navigationUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->navigationurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.BBResult)
}

::google::protobuf::uint8* BBResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.BBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->headervalues_, deterministic, target);
  }

  // repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->urlvalues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->urlvalues(static_cast<int>(i)), deterministic, target);
  }

  // optional string navigationUrl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->navigationurl().data(), static_cast<int>(this->navigationurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.BBResult.navigationUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->navigationurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.BBResult)
  return target;
}

size_t BBResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.BBResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ru.mail.go.webbase.ComputedValues headerValues = 1;
  if (has_headervalues()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headervalues_);
  }
  // repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->urlvalues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->urlvalues(static_cast<int>(i)));
    }
  }

  // optional string navigationUrl = 3;
  if (has_navigationurl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->navigationurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BBResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.BBResult)
  GOOGLE_DCHECK_NE(&from, this);
  const BBResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BBResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.BBResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.BBResult)
    MergeFrom(*source);
  }
}

void BBResult::MergeFrom(const BBResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.BBResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  urlvalues_.MergeFrom(from.urlvalues_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_navigationurl();
      navigationurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.navigationurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_headervalues()->::ru::mail::go::webbase::ComputedValues::MergeFrom(from.headervalues());
    }
  }
}

void BBResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.BBResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BBResult::CopyFrom(const BBResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.BBResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BBResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->urlvalues())) return false;
  if (has_headervalues()) {
    if (!this->headervalues_->IsInitialized()) return false;
  }
  return true;
}

void BBResult::Swap(BBResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BBResult::InternalSwap(BBResult* other) {
  using std::swap;
  urlvalues_.InternalSwap(&other->urlvalues_);
  navigationurl_.Swap(&other->navigationurl_);
  swap(headervalues_, other->headervalues_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BBResult::GetMetadata() const {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BBResult

// required .ru.mail.go.webbase.ComputedValues headerValues = 1;
bool BBResult::has_headervalues() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BBResult::set_has_headervalues() {
  _has_bits_[0] |= 0x00000002u;
}
void BBResult::clear_has_headervalues() {
  _has_bits_[0] &= ~0x00000002u;
}
void BBResult::clear_headervalues() {
  if (headervalues_ != NULL) headervalues_->::ru::mail::go::webbase::ComputedValues::Clear();
  clear_has_headervalues();
}
const ::ru::mail::go::webbase::ComputedValues& BBResult::headervalues() const {
  const ::ru::mail::go::webbase::ComputedValues* p = headervalues_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.headerValues)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::ComputedValues*>(
      &::ru::mail::go::webbase::_ComputedValues_default_instance_);
}
::ru::mail::go::webbase::ComputedValues* BBResult::mutable_headervalues() {
  set_has_headervalues();
  if (headervalues_ == NULL) {
    headervalues_ = new ::ru::mail::go::webbase::ComputedValues;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.headerValues)
  return headervalues_;
}
::ru::mail::go::webbase::ComputedValues* BBResult::release_headervalues() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBResult.headerValues)
  clear_has_headervalues();
  ::ru::mail::go::webbase::ComputedValues* temp = headervalues_;
  headervalues_ = NULL;
  return temp;
}
void BBResult::set_allocated_headervalues(::ru::mail::go::webbase::ComputedValues* headervalues) {
  delete headervalues_;
  headervalues_ = headervalues;
  if (headervalues) {
    set_has_headervalues();
  } else {
    clear_has_headervalues();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBResult.headerValues)
}

// repeated .ru.mail.go.webbase.ComputedValues urlValues = 2;
int BBResult::urlvalues_size() const {
  return urlvalues_.size();
}
void BBResult::clear_urlvalues() {
  urlvalues_.Clear();
}
const ::ru::mail::go::webbase::ComputedValues& BBResult::urlvalues(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Get(index);
}
::ru::mail::go::webbase::ComputedValues* BBResult::mutable_urlvalues(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Mutable(index);
}
::ru::mail::go::webbase::ComputedValues* BBResult::add_urlvalues() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >*
BBResult::mutable_urlvalues() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.BBResult.urlValues)
  return &urlvalues_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues >&
BBResult::urlvalues() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.BBResult.urlValues)
  return urlvalues_;
}

// optional string navigationUrl = 3;
bool BBResult::has_navigationurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BBResult::set_has_navigationurl() {
  _has_bits_[0] |= 0x00000001u;
}
void BBResult::clear_has_navigationurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void BBResult::clear_navigationurl() {
  navigationurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_navigationurl();
}
const ::std::string& BBResult::navigationurl() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.BBResult.navigationUrl)
  return navigationurl_.GetNoArena();
}
void BBResult::set_navigationurl(const ::std::string& value) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.BBResult.navigationUrl)
}
#if LANG_CXX11
void BBResult::set_navigationurl(::std::string&& value) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.BBResult.navigationUrl)
}
#endif
void BBResult::set_navigationurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.BBResult.navigationUrl)
}
void BBResult::set_navigationurl(const char* value, size_t size) {
  set_has_navigationurl();
  navigationurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.BBResult.navigationUrl)
}
::std::string* BBResult::mutable_navigationurl() {
  set_has_navigationurl();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.BBResult.navigationUrl)
  return navigationurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BBResult::release_navigationurl() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.BBResult.navigationUrl)
  clear_has_navigationurl();
  return navigationurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BBResult::set_allocated_navigationurl(::std::string* navigationurl) {
  if (navigationurl != NULL) {
    set_has_navigationurl();
  } else {
    clear_has_navigationurl();
  }
  navigationurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), navigationurl);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.BBResult.navigationUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputedValues_Record::kKeyFieldNumber;
const int ComputedValues_Record::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputedValues_Record::ComputedValues_Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_result_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.ComputedValues.Record)
}
ComputedValues_Record::ComputedValues_Record(const ComputedValues_Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.ComputedValues.Record)
}

void ComputedValues_Record::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

ComputedValues_Record::~ComputedValues_Record() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.ComputedValues.Record)
  SharedDtor();
}

void ComputedValues_Record::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputedValues_Record::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputedValues_Record::descriptor() {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputedValues_Record& ComputedValues_Record::default_instance() {
  protobuf_result_2eproto::InitDefaults();
  return *internal_default_instance();
}

ComputedValues_Record* ComputedValues_Record::New(::google::protobuf::Arena* arena) const {
  ComputedValues_Record* n = new ComputedValues_Record;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputedValues_Record::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.ComputedValues.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_key()) {
    GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_.UnsafeRawStringPointer())->clear();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComputedValues_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.ComputedValues.Record)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.ComputedValues.Record.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.ComputedValues.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.ComputedValues.Record)
  return false;
#undef DO_
}

void ComputedValues_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.ComputedValues.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.ComputedValues.Record.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required float value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.ComputedValues.Record)
}

::google::protobuf::uint8* ComputedValues_Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.ComputedValues.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.ComputedValues.Record.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required float value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.ComputedValues.Record)
  return target;
}

size_t ComputedValues_Record::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.ComputedValues.Record)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required float value = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ComputedValues_Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.ComputedValues.Record)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required float value = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputedValues_Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.ComputedValues.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputedValues_Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputedValues_Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.ComputedValues.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.ComputedValues.Record)
    MergeFrom(*source);
  }
}

void ComputedValues_Record::MergeFrom(const ComputedValues_Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.ComputedValues.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ComputedValues_Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.ComputedValues.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputedValues_Record::CopyFrom(const ComputedValues_Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.ComputedValues.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputedValues_Record::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ComputedValues_Record::Swap(ComputedValues_Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputedValues_Record::InternalSwap(ComputedValues_Record* other) {
  using std::swap;
  key_.Swap(&other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputedValues_Record::GetMetadata() const {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputedValues_Record

// required string key = 1;
bool ComputedValues_Record::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ComputedValues_Record::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void ComputedValues_Record::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void ComputedValues_Record::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& ComputedValues_Record::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.Record.key)
  return key_.GetNoArena();
}
void ComputedValues_Record::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.Record.key)
}
#if LANG_CXX11
void ComputedValues_Record::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.ComputedValues.Record.key)
}
#endif
void ComputedValues_Record::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.ComputedValues.Record.key)
}
void ComputedValues_Record::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.ComputedValues.Record.key)
}
::std::string* ComputedValues_Record::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.Record.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputedValues_Record::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.ComputedValues.Record.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputedValues_Record::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.ComputedValues.Record.key)
}

// required float value = 2;
bool ComputedValues_Record::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ComputedValues_Record::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void ComputedValues_Record::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void ComputedValues_Record::clear_value() {
  value_ = 0;
  clear_has_value();
}
float ComputedValues_Record::value() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.Record.value)
  return value_;
}
void ComputedValues_Record::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.Record.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputedValues::kNameFieldNumber;
const int ComputedValues::kEntryResultFieldNumber;
const int ComputedValues::kSiteEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputedValues::ComputedValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_result_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.ComputedValues)
}
ComputedValues::ComputedValues(const ComputedValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entryresult_(from.entryresult_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  site_entry_ = from.site_entry_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.ComputedValues)
}

void ComputedValues::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  site_entry_ = false;
}

ComputedValues::~ComputedValues() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.ComputedValues)
  SharedDtor();
}

void ComputedValues::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComputedValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputedValues::descriptor() {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputedValues& ComputedValues::default_instance() {
  protobuf_result_2eproto::InitDefaults();
  return *internal_default_instance();
}

ComputedValues* ComputedValues::New(::google::protobuf::Arena* arena) const {
  ComputedValues* n = new ComputedValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputedValues::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.ComputedValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entryresult_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  site_entry_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComputedValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.ComputedValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.ComputedValues.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entryresult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool site_entry = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_site_entry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &site_entry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.ComputedValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.ComputedValues)
  return false;
#undef DO_
}

void ComputedValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.ComputedValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.ComputedValues.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entryresult_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entryresult(static_cast<int>(i)), output);
  }

  // optional bool site_entry = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->site_entry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.ComputedValues)
}

::google::protobuf::uint8* ComputedValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.ComputedValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.ComputedValues.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entryresult_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->entryresult(static_cast<int>(i)), deterministic, target);
  }

  // optional bool site_entry = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->site_entry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.ComputedValues)
  return target;
}

size_t ComputedValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.ComputedValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entryresult_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entryresult(static_cast<int>(i)));
    }
  }

  // optional bool site_entry = 3 [default = false];
  if (has_site_entry()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputedValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.ComputedValues)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputedValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputedValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.ComputedValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.ComputedValues)
    MergeFrom(*source);
  }
}

void ComputedValues::MergeFrom(const ComputedValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.ComputedValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entryresult_.MergeFrom(from.entryresult_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      site_entry_ = from.site_entry_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ComputedValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.ComputedValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputedValues::CopyFrom(const ComputedValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.ComputedValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputedValues::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entryresult())) return false;
  return true;
}

void ComputedValues::Swap(ComputedValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputedValues::InternalSwap(ComputedValues* other) {
  using std::swap;
  entryresult_.InternalSwap(&other->entryresult_);
  name_.Swap(&other->name_);
  swap(site_entry_, other->site_entry_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputedValues::GetMetadata() const {
  protobuf_result_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_result_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputedValues

// required string name = 1;
bool ComputedValues::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ComputedValues::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ComputedValues::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ComputedValues::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ComputedValues::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.name)
  return name_.GetNoArena();
}
void ComputedValues::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.name)
}
#if LANG_CXX11
void ComputedValues::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.ComputedValues.name)
}
#endif
void ComputedValues::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.ComputedValues.name)
}
void ComputedValues::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.ComputedValues.name)
}
::std::string* ComputedValues::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComputedValues::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.ComputedValues.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComputedValues::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.ComputedValues.name)
}

// repeated .ru.mail.go.webbase.ComputedValues.Record entryResult = 2;
int ComputedValues::entryresult_size() const {
  return entryresult_.size();
}
void ComputedValues::clear_entryresult() {
  entryresult_.Clear();
}
const ::ru::mail::go::webbase::ComputedValues_Record& ComputedValues::entryresult(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Get(index);
}
::ru::mail::go::webbase::ComputedValues_Record* ComputedValues::mutable_entryresult(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Mutable(index);
}
::ru::mail::go::webbase::ComputedValues_Record* ComputedValues::add_entryresult() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >*
ComputedValues::mutable_entryresult() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.ComputedValues.entryResult)
  return &entryresult_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::ComputedValues_Record >&
ComputedValues::entryresult() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.ComputedValues.entryResult)
  return entryresult_;
}

// optional bool site_entry = 3 [default = false];
bool ComputedValues::has_site_entry() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ComputedValues::set_has_site_entry() {
  _has_bits_[0] |= 0x00000002u;
}
void ComputedValues::clear_has_site_entry() {
  _has_bits_[0] &= ~0x00000002u;
}
void ComputedValues::clear_site_entry() {
  site_entry_ = false;
  clear_has_site_entry();
}
bool ComputedValues::site_entry() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.ComputedValues.site_entry)
  return site_entry_;
}
void ComputedValues::set_site_entry(bool value) {
  set_has_site_entry();
  site_entry_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.ComputedValues.site_entry)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
