// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sekitei.proto

#ifndef PROTOBUF_sekitei_2eproto__INCLUDED
#define PROTOBUF_sekitei_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "doc_parser.pb.h"
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace sekitei {
class FilterStats;
class FilterStatsDefaultTypeInternal;
extern FilterStatsDefaultTypeInternal _FilterStats_default_instance_;
class Segment;
class SegmentDefaultTypeInternal;
extern SegmentDefaultTypeInternal _Segment_default_instance_;
class Segment_i;
class Segment_iDefaultTypeInternal;
extern Segment_iDefaultTypeInternal _Segment_i_default_instance_;
class Segment_l;
class Segment_lDefaultTypeInternal;
extern Segment_lDefaultTypeInternal _Segment_l_default_instance_;
class Segment_m;
class Segment_mDefaultTypeInternal;
extern Segment_mDefaultTypeInternal _Segment_m_default_instance_;
class Segment_r;
class Segment_rDefaultTypeInternal;
extern Segment_rDefaultTypeInternal _Segment_r_default_instance_;
class Segment_r_ImageDiscoverySegmentInfo;
class Segment_r_ImageDiscoverySegmentInfoDefaultTypeInternal;
extern Segment_r_ImageDiscoverySegmentInfoDefaultTypeInternal _Segment_r_ImageDiscoverySegmentInfo_default_instance_;
class Segment_s;
class Segment_sDefaultTypeInternal;
extern Segment_sDefaultTypeInternal _Segment_s_default_instance_;
class Segment_s_ImageDiscoverySegmentStat;
class Segment_s_ImageDiscoverySegmentStatDefaultTypeInternal;
extern Segment_s_ImageDiscoverySegmentStatDefaultTypeInternal _Segment_s_ImageDiscoverySegmentStat_default_instance_;
class Sekitei;
class SekiteiDefaultTypeInternal;
extern SekiteiDefaultTypeInternal _Sekitei_default_instance_;
class Sekitei_i;
class Sekitei_iDefaultTypeInternal;
extern Sekitei_iDefaultTypeInternal _Sekitei_i_default_instance_;
class Sekitei_l;
class Sekitei_lDefaultTypeInternal;
extern Sekitei_lDefaultTypeInternal _Sekitei_l_default_instance_;
class Sekitei_m;
class Sekitei_mDefaultTypeInternal;
extern Sekitei_mDefaultTypeInternal _Sekitei_m_default_instance_;
class Sekitei_r;
class Sekitei_rDefaultTypeInternal;
extern Sekitei_rDefaultTypeInternal _Sekitei_r_default_instance_;
class Sekitei_s;
class Sekitei_sDefaultTypeInternal;
extern Sekitei_sDefaultTypeInternal _Sekitei_s_default_instance_;
class SelectedFeature;
class SelectedFeatureDefaultTypeInternal;
extern SelectedFeatureDefaultTypeInternal _SelectedFeature_default_instance_;
class StatusInfo;
class StatusInfoDefaultTypeInternal;
extern StatusInfoDefaultTypeInternal _StatusInfo_default_instance_;
}  // namespace sekitei
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace sekitei {

namespace protobuf_sekitei_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sekitei_2eproto

enum Segment_r_d_lang {
  Segment_r_d_lang_lang_empty = 0,
  Segment_r_d_lang_lang_unknown = 1,
  Segment_r_d_lang_lang_ru = 2,
  Segment_r_d_lang_lang_uk = 3,
  Segment_r_d_lang_lang_kz = 4,
  Segment_r_d_lang_lang_bg = 5,
  Segment_r_d_lang_lang_be = 6,
  Segment_r_d_lang_lang_en = 7
};
bool Segment_r_d_lang_IsValid(int value);
const Segment_r_d_lang Segment_r_d_lang_d_lang_MIN = Segment_r_d_lang_lang_empty;
const Segment_r_d_lang Segment_r_d_lang_d_lang_MAX = Segment_r_d_lang_lang_en;
const int Segment_r_d_lang_d_lang_ARRAYSIZE = Segment_r_d_lang_d_lang_MAX + 1;

const ::google::protobuf::EnumDescriptor* Segment_r_d_lang_descriptor();
inline const ::std::string& Segment_r_d_lang_Name(Segment_r_d_lang value) {
  return ::google::protobuf::internal::NameOfEnum(
    Segment_r_d_lang_descriptor(), value);
}
inline bool Segment_r_d_lang_Parse(
    const ::std::string& name, Segment_r_d_lang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Segment_r_d_lang>(
    Segment_r_d_lang_descriptor(), name, value);
}
enum StatusInfo_stateTypes {
  StatusInfo_stateTypes_ST_NEW = 0,
  StatusInfo_stateTypes_ST_FETCHED = 1,
  StatusInfo_stateTypes_ST_FAILURE = 2,
  StatusInfo_stateTypes_ST_REMOVED = 3,
  StatusInfo_stateTypes_ST_REDIRECT = 4,
  StatusInfo_stateTypes_ST_DISABLED = 5,
  StatusInfo_stateTypes_ST_OVER3WEEKS = 6,
  StatusInfo_stateTypes_QLINKS = 7,
  StatusInfo_stateTypes_RANKS = 8
};
bool StatusInfo_stateTypes_IsValid(int value);
const StatusInfo_stateTypes StatusInfo_stateTypes_stateTypes_MIN = StatusInfo_stateTypes_ST_NEW;
const StatusInfo_stateTypes StatusInfo_stateTypes_stateTypes_MAX = StatusInfo_stateTypes_RANKS;
const int StatusInfo_stateTypes_stateTypes_ARRAYSIZE = StatusInfo_stateTypes_stateTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusInfo_stateTypes_descriptor();
inline const ::std::string& StatusInfo_stateTypes_Name(StatusInfo_stateTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusInfo_stateTypes_descriptor(), value);
}
inline bool StatusInfo_stateTypes_Parse(
    const ::std::string& name, StatusInfo_stateTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusInfo_stateTypes>(
    StatusInfo_stateTypes_descriptor(), name, value);
}
// ===================================================================

class Sekitei : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei) */ {
 public:
  Sekitei();
  virtual ~Sekitei();

  Sekitei(const Sekitei& from);

  inline Sekitei& operator=(const Sekitei& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei(Sekitei&& from) noexcept
    : Sekitei() {
    *this = ::std::move(from);
  }

  inline Sekitei& operator=(Sekitei&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei& default_instance();

  static inline const Sekitei* internal_default_instance() {
    return reinterpret_cast<const Sekitei*>(
               &_Sekitei_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Sekitei* other);
  friend void swap(Sekitei& a, Sekitei& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei& from);
  void MergeFrom(const Sekitei& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment segments = 2;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 2;
  const ::ru::mail::go::webbase::sekitei::Segment& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment >&
      segments() const;

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature features = 3;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 3;
  const ::ru::mail::go::webbase::sekitei::SelectedFeature& features(int index) const;
  ::ru::mail::go::webbase::sekitei::SelectedFeature* mutable_features(int index);
  ::ru::mail::go::webbase::sekitei::SelectedFeature* add_features();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >&
      features() const;

  // required int64 total_url_num = 1;
  bool has_total_url_num() const;
  void clear_total_url_num();
  static const int kTotalUrlNumFieldNumber = 1;
  ::google::protobuf::int64 total_url_num() const;
  void set_total_url_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei)
 private:
  void set_has_total_url_num();
  void clear_has_total_url_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment > segments_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature > features_;
  ::google::protobuf::int64 total_url_num_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sekitei_m : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_m) */ {
 public:
  Sekitei_m();
  virtual ~Sekitei_m();

  Sekitei_m(const Sekitei_m& from);

  inline Sekitei_m& operator=(const Sekitei_m& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_m(Sekitei_m&& from) noexcept
    : Sekitei_m() {
    *this = ::std::move(from);
  }

  inline Sekitei_m& operator=(Sekitei_m&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_m& default_instance();

  static inline const Sekitei_m* internal_default_instance() {
    return reinterpret_cast<const Sekitei_m*>(
               &_Sekitei_m_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Sekitei_m* other);
  friend void swap(Sekitei_m& a, Sekitei_m& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_m* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_m* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_m& from);
  void MergeFrom(const Sekitei_m& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_m* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_m segments = 2;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 2;
  const ::ru::mail::go::webbase::sekitei::Segment_m& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_m* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_m* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_m >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_m >&
      segments() const;

  // required int64 total_url_num = 1;
  bool has_total_url_num() const;
  void clear_total_url_num();
  static const int kTotalUrlNumFieldNumber = 1;
  ::google::protobuf::int64 total_url_num() const;
  void set_total_url_num(::google::protobuf::int64 value);

  // required int64 used_urls = 3;
  bool has_used_urls() const;
  void clear_used_urls();
  static const int kUsedUrlsFieldNumber = 3;
  ::google::protobuf::int64 used_urls() const;
  void set_used_urls(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_m)
 private:
  void set_has_total_url_num();
  void clear_has_total_url_num();
  void set_has_used_urls();
  void clear_has_used_urls();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_m > segments_;
  ::google::protobuf::int64 total_url_num_;
  ::google::protobuf::int64 used_urls_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sekitei_r : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_r) */ {
 public:
  Sekitei_r();
  virtual ~Sekitei_r();

  Sekitei_r(const Sekitei_r& from);

  inline Sekitei_r& operator=(const Sekitei_r& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_r(Sekitei_r&& from) noexcept
    : Sekitei_r() {
    *this = ::std::move(from);
  }

  inline Sekitei_r& operator=(Sekitei_r&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_r& default_instance();

  static inline const Sekitei_r* internal_default_instance() {
    return reinterpret_cast<const Sekitei_r*>(
               &_Sekitei_r_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Sekitei_r* other);
  friend void swap(Sekitei_r& a, Sekitei_r& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_r* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_r* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_r& from);
  void MergeFrom(const Sekitei_r& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_r* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_r segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::ru::mail::go::webbase::sekitei::Segment_r& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_r* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_r* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_r >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_r >&
      segments() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_r)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_r > segments_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sekitei_l : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_l) */ {
 public:
  Sekitei_l();
  virtual ~Sekitei_l();

  Sekitei_l(const Sekitei_l& from);

  inline Sekitei_l& operator=(const Sekitei_l& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_l(Sekitei_l&& from) noexcept
    : Sekitei_l() {
    *this = ::std::move(from);
  }

  inline Sekitei_l& operator=(Sekitei_l&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_l& default_instance();

  static inline const Sekitei_l* internal_default_instance() {
    return reinterpret_cast<const Sekitei_l*>(
               &_Sekitei_l_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Sekitei_l* other);
  friend void swap(Sekitei_l& a, Sekitei_l& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_l* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_l* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_l& from);
  void MergeFrom(const Sekitei_l& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_l* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_l segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::ru::mail::go::webbase::sekitei::Segment_l& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_l* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_l* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_l >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_l >&
      segments() const;

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature features = 2;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 2;
  const ::ru::mail::go::webbase::sekitei::SelectedFeature& features(int index) const;
  ::ru::mail::go::webbase::sekitei::SelectedFeature* mutable_features(int index);
  ::ru::mail::go::webbase::sekitei::SelectedFeature* add_features();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >&
      features() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_l)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_l > segments_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature > features_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sekitei_s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_s) */ {
 public:
  Sekitei_s();
  virtual ~Sekitei_s();

  Sekitei_s(const Sekitei_s& from);

  inline Sekitei_s& operator=(const Sekitei_s& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_s(Sekitei_s&& from) noexcept
    : Sekitei_s() {
    *this = ::std::move(from);
  }

  inline Sekitei_s& operator=(Sekitei_s&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_s& default_instance();

  static inline const Sekitei_s* internal_default_instance() {
    return reinterpret_cast<const Sekitei_s*>(
               &_Sekitei_s_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Sekitei_s* other);
  friend void swap(Sekitei_s& a, Sekitei_s& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_s* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_s& from);
  void MergeFrom(const Sekitei_s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_s segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::ru::mail::go::webbase::sekitei::Segment_s& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_s* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_s* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_s >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_s >&
      segments() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_s > segments_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sekitei_i : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Sekitei_i) */ {
 public:
  Sekitei_i();
  virtual ~Sekitei_i();

  Sekitei_i(const Sekitei_i& from);

  inline Sekitei_i& operator=(const Sekitei_i& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sekitei_i(Sekitei_i&& from) noexcept
    : Sekitei_i() {
    *this = ::std::move(from);
  }

  inline Sekitei_i& operator=(Sekitei_i&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sekitei_i& default_instance();

  static inline const Sekitei_i* internal_default_instance() {
    return reinterpret_cast<const Sekitei_i*>(
               &_Sekitei_i_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Sekitei_i* other);
  friend void swap(Sekitei_i& a, Sekitei_i& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sekitei_i* New() const PROTOBUF_FINAL { return New(NULL); }

  Sekitei_i* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sekitei_i& from);
  void MergeFrom(const Sekitei_i& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sekitei_i* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.Segment_i segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::ru::mail::go::webbase::sekitei::Segment_i& segments(int index) const;
  ::ru::mail::go::webbase::sekitei::Segment_i* mutable_segments(int index);
  ::ru::mail::go::webbase::sekitei::Segment_i* add_segments();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_i >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_i >&
      segments() const;

  // optional int32 totalMarkersCount = 2;
  bool has_totalmarkerscount() const;
  void clear_totalmarkerscount();
  static const int kTotalMarkersCountFieldNumber = 2;
  ::google::protobuf::int32 totalmarkerscount() const;
  void set_totalmarkerscount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Sekitei_i)
 private:
  void set_has_totalmarkerscount();
  void clear_has_totalmarkerscount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_i > segments_;
  ::google::protobuf::int32 totalmarkerscount_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment) */ {
 public:
  Segment();
  virtual ~Segment();

  Segment(const Segment& from);

  inline Segment& operator=(const Segment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment(Segment&& from) noexcept
    : Segment() {
    *this = ::std::move(from);
  }

  inline Segment& operator=(Segment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment& default_instance();

  static inline const Segment* internal_default_instance() {
    return reinterpret_cast<const Segment*>(
               &_Segment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Segment* other);
  friend void swap(Segment& a, Segment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment& from);
  void MergeFrom(const Segment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string samples = 4;
  int samples_size() const;
  void clear_samples();
  static const int kSamplesFieldNumber = 4;
  const ::std::string& samples(int index) const;
  ::std::string* mutable_samples(int index);
  void set_samples(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_samples(int index, ::std::string&& value);
  #endif
  void set_samples(int index, const char* value);
  void set_samples(int index, const char* value, size_t size);
  ::std::string* add_samples();
  void add_samples(const ::std::string& value);
  #if LANG_CXX11
  void add_samples(::std::string&& value);
  #endif
  void add_samples(const char* value);
  void add_samples(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& samples() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_samples();

  // required string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // required int32 part = 2;
  bool has_part() const;
  void clear_part();
  static const int kPartFieldNumber = 2;
  ::google::protobuf::int32 part() const;
  void set_part(::google::protobuf::int32 value);

  // optional double wp = 6 [default = 0];
  bool has_wp() const;
  void clear_wp();
  static const int kWpFieldNumber = 6;
  double wp() const;
  void set_wp(double value);

  // optional bool specialSegment = 5 [default = false];
  bool has_specialsegment() const;
  void clear_specialsegment();
  static const int kSpecialSegmentFieldNumber = 5;
  bool specialsegment() const;
  void set_specialsegment(bool value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_part();
  void clear_has_part();
  void set_has_description();
  void clear_has_description();
  void set_has_specialsegment();
  void clear_has_specialsegment();
  void set_has_wp();
  void clear_has_wp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> samples_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 segment_num_;
  ::google::protobuf::int32 part_;
  double wp_;
  bool specialsegment_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_m : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_m) */ {
 public:
  Segment_m();
  virtual ~Segment_m();

  Segment_m(const Segment_m& from);

  inline Segment_m& operator=(const Segment_m& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_m(Segment_m&& from) noexcept
    : Segment_m() {
    *this = ::std::move(from);
  }

  inline Segment_m& operator=(Segment_m&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_m& default_instance();

  static inline const Segment_m* internal_default_instance() {
    return reinterpret_cast<const Segment_m*>(
               &_Segment_m_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Segment_m* other);
  friend void swap(Segment_m& a, Segment_m& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_m* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_m* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_m& from);
  void MergeFrom(const Segment_m& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_m* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.sekitei.StatusInfo statuses = 5;
  int statuses_size() const;
  void clear_statuses();
  static const int kStatusesFieldNumber = 5;
  const ::ru::mail::go::webbase::sekitei::StatusInfo& statuses(int index) const;
  ::ru::mail::go::webbase::sekitei::StatusInfo* mutable_statuses(int index);
  ::ru::mail::go::webbase::sekitei::StatusInfo* add_statuses();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::StatusInfo >*
      mutable_statuses();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::StatusInfo >&
      statuses() const;

  // required string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // required int32 part = 2;
  bool has_part() const;
  void clear_part();
  static const int kPartFieldNumber = 2;
  ::google::protobuf::int32 part() const;
  void set_part(::google::protobuf::int32 value);

  // optional double wp = 4 [default = 0];
  bool has_wp() const;
  void clear_wp();
  static const int kWpFieldNumber = 4;
  double wp() const;
  void set_wp(double value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_m)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_part();
  void clear_has_part();
  void set_has_description();
  void clear_has_description();
  void set_has_wp();
  void clear_has_wp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::StatusInfo > statuses_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 segment_num_;
  ::google::protobuf::int32 part_;
  double wp_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_r_ImageDiscoverySegmentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo) */ {
 public:
  Segment_r_ImageDiscoverySegmentInfo();
  virtual ~Segment_r_ImageDiscoverySegmentInfo();

  Segment_r_ImageDiscoverySegmentInfo(const Segment_r_ImageDiscoverySegmentInfo& from);

  inline Segment_r_ImageDiscoverySegmentInfo& operator=(const Segment_r_ImageDiscoverySegmentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_r_ImageDiscoverySegmentInfo(Segment_r_ImageDiscoverySegmentInfo&& from) noexcept
    : Segment_r_ImageDiscoverySegmentInfo() {
    *this = ::std::move(from);
  }

  inline Segment_r_ImageDiscoverySegmentInfo& operator=(Segment_r_ImageDiscoverySegmentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_r_ImageDiscoverySegmentInfo& default_instance();

  static inline const Segment_r_ImageDiscoverySegmentInfo* internal_default_instance() {
    return reinterpret_cast<const Segment_r_ImageDiscoverySegmentInfo*>(
               &_Segment_r_ImageDiscoverySegmentInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Segment_r_ImageDiscoverySegmentInfo* other);
  friend void swap(Segment_r_ImageDiscoverySegmentInfo& a, Segment_r_ImageDiscoverySegmentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_r_ImageDiscoverySegmentInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_r_ImageDiscoverySegmentInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_r_ImageDiscoverySegmentInfo& from);
  void MergeFrom(const Segment_r_ImageDiscoverySegmentInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_r_ImageDiscoverySegmentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usualImagesCount = 1 [default = 0];
  bool has_usualimagescount() const;
  void clear_usualimagescount();
  static const int kUsualImagesCountFieldNumber = 1;
  ::google::protobuf::int32 usualimagescount() const;
  void set_usualimagescount(::google::protobuf::int32 value);

  // optional int32 markerImagesCount = 2 [default = 0];
  bool has_markerimagescount() const;
  void clear_markerimagescount();
  static const int kMarkerImagesCountFieldNumber = 2;
  ::google::protobuf::int32 markerimagescount() const;
  void set_markerimagescount(::google::protobuf::int32 value);

  // optional int32 quota = 3 [default = 0];
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 3;
  ::google::protobuf::int32 quota() const;
  void set_quota(::google::protobuf::int32 value);

  // optional int32 trashQuota = 4 [default = 0];
  bool has_trashquota() const;
  void clear_trashquota();
  static const int kTrashQuotaFieldNumber = 4;
  ::google::protobuf::int32 trashquota() const;
  void set_trashquota(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo)
 private:
  void set_has_usualimagescount();
  void clear_has_usualimagescount();
  void set_has_markerimagescount();
  void clear_has_markerimagescount();
  void set_has_quota();
  void clear_has_quota();
  void set_has_trashquota();
  void clear_has_trashquota();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 usualimagescount_;
  ::google::protobuf::int32 markerimagescount_;
  ::google::protobuf::int32 quota_;
  ::google::protobuf::int32 trashquota_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_r : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_r) */ {
 public:
  Segment_r();
  virtual ~Segment_r();

  Segment_r(const Segment_r& from);

  inline Segment_r& operator=(const Segment_r& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_r(Segment_r&& from) noexcept
    : Segment_r() {
    *this = ::std::move(from);
  }

  inline Segment_r& operator=(Segment_r&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_r& default_instance();

  static inline const Segment_r* internal_default_instance() {
    return reinterpret_cast<const Segment_r*>(
               &_Segment_r_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Segment_r* other);
  friend void swap(Segment_r& a, Segment_r& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_r* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_r* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_r& from);
  void MergeFrom(const Segment_r& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_r* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Segment_r_ImageDiscoverySegmentInfo ImageDiscoverySegmentInfo;

  typedef Segment_r_d_lang d_lang;
  static const d_lang lang_empty =
    Segment_r_d_lang_lang_empty;
  static const d_lang lang_unknown =
    Segment_r_d_lang_lang_unknown;
  static const d_lang lang_ru =
    Segment_r_d_lang_lang_ru;
  static const d_lang lang_uk =
    Segment_r_d_lang_lang_uk;
  static const d_lang lang_kz =
    Segment_r_d_lang_lang_kz;
  static const d_lang lang_bg =
    Segment_r_d_lang_lang_bg;
  static const d_lang lang_be =
    Segment_r_d_lang_lang_be;
  static const d_lang lang_en =
    Segment_r_d_lang_lang_en;
  static inline bool d_lang_IsValid(int value) {
    return Segment_r_d_lang_IsValid(value);
  }
  static const d_lang d_lang_MIN =
    Segment_r_d_lang_d_lang_MIN;
  static const d_lang d_lang_MAX =
    Segment_r_d_lang_d_lang_MAX;
  static const int d_lang_ARRAYSIZE =
    Segment_r_d_lang_d_lang_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  d_lang_descriptor() {
    return Segment_r_d_lang_descriptor();
  }
  static inline const ::std::string& d_lang_Name(d_lang value) {
    return Segment_r_d_lang_Name(value);
  }
  static inline bool d_lang_Parse(const ::std::string& name,
      d_lang* value) {
    return Segment_r_d_lang_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ru.mail.go.webbase.sekitei.FilterStats stats = 6;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 6;
  const ::ru::mail::go::webbase::sekitei::FilterStats& stats() const;
  ::ru::mail::go::webbase::sekitei::FilterStats* mutable_stats();
  ::ru::mail::go::webbase::sekitei::FilterStats* release_stats();
  void set_allocated_stats(::ru::mail::go::webbase::sekitei::FilterStats* stats);

  // optional .ru.mail.go.webbase.blobs.SiteLanguageArray languageArray = 11;
  bool has_languagearray() const;
  void clear_languagearray();
  static const int kLanguageArrayFieldNumber = 11;
  const ::ru::mail::go::webbase::blobs::SiteLanguageArray& languagearray() const;
  ::ru::mail::go::webbase::blobs::SiteLanguageArray* mutable_languagearray();
  ::ru::mail::go::webbase::blobs::SiteLanguageArray* release_languagearray();
  void set_allocated_languagearray(::ru::mail::go::webbase::blobs::SiteLanguageArray* languagearray);

  // optional .ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo imageDiscoverySegmentInfo = 18;
  bool has_imagediscoverysegmentinfo() const;
  void clear_imagediscoverysegmentinfo();
  static const int kImageDiscoverySegmentInfoFieldNumber = 18;
  const ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo& imagediscoverysegmentinfo() const;
  ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* mutable_imagediscoverysegmentinfo();
  ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* release_imagediscoverysegmentinfo();
  void set_allocated_imagediscoverysegmentinfo(::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* imagediscoverysegmentinfo);

  // optional double qlinks = 2 [default = 0];
  bool has_qlinks() const;
  void clear_qlinks();
  static const int kQlinksFieldNumber = 2;
  double qlinks() const;
  void set_qlinks(double value);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // optional int32 qlinks_count = 3 [default = 0];
  bool has_qlinks_count() const;
  void clear_qlinks_count();
  static const int kQlinksCountFieldNumber = 3;
  ::google::protobuf::int32 qlinks_count() const;
  void set_qlinks_count(::google::protobuf::int32 value);

  // optional double discovery = 4 [default = 0];
  bool has_discovery() const;
  void clear_discovery();
  static const int kDiscoveryFieldNumber = 4;
  double discovery() const;
  void set_discovery(double value);

  // optional int32 discovery_count = 5 [default = 0];
  bool has_discovery_count() const;
  void clear_discovery_count();
  static const int kDiscoveryCountFieldNumber = 5;
  ::google::protobuf::int32 discovery_count() const;
  void set_discovery_count(::google::protobuf::int32 value);

  // optional bool specialSegment = 7 [default = false];
  bool has_specialsegment() const;
  void clear_specialsegment();
  static const int kSpecialSegmentFieldNumber = 7;
  bool specialsegment() const;
  void set_specialsegment(bool value);

  // optional int64 custra_count = 9 [default = 0];
  bool has_custra_count() const;
  void clear_custra_count();
  static const int kCustraCountFieldNumber = 9;
  ::google::protobuf::int64 custra_count() const;
  void set_custra_count(::google::protobuf::int64 value);

  // optional int64 custrahave_count = 10 [default = 0];
  bool has_custrahave_count() const;
  void clear_custrahave_count();
  static const int kCustrahaveCountFieldNumber = 10;
  ::google::protobuf::int64 custrahave_count() const;
  void set_custrahave_count(::google::protobuf::int64 value);

  // optional int64 spamUrls = 12;
  bool has_spamurls() const;
  void clear_spamurls();
  static const int kSpamUrlsFieldNumber = 12;
  ::google::protobuf::int64 spamurls() const;
  void set_spamurls(::google::protobuf::int64 value);

  // optional int64 pornUrls = 13;
  bool has_pornurls() const;
  void clear_pornurls();
  static const int kPornUrlsFieldNumber = 13;
  ::google::protobuf::int64 pornurls() const;
  void set_pornurls(::google::protobuf::int64 value);

  // optional int64 crawledUrls = 14;
  bool has_crawledurls() const;
  void clear_crawledurls();
  static const int kCrawledUrlsFieldNumber = 14;
  ::google::protobuf::int64 crawledurls() const;
  void set_crawledurls(::google::protobuf::int64 value);

  // optional int64 failureUrls = 15;
  bool has_failureurls() const;
  void clear_failureurls();
  static const int kFailureUrlsFieldNumber = 15;
  ::google::protobuf::int64 failureurls() const;
  void set_failureurls(::google::protobuf::int64 value);

  // optional int64 deadUrls = 16;
  bool has_deadurls() const;
  void clear_deadurls();
  static const int kDeadUrlsFieldNumber = 16;
  ::google::protobuf::int64 deadurls() const;
  void set_deadurls(::google::protobuf::int64 value);

  // optional int64 deadUrlsMinTs = 17;
  bool has_deadurlsmints() const;
  void clear_deadurlsmints();
  static const int kDeadUrlsMinTsFieldNumber = 17;
  ::google::protobuf::int64 deadurlsmints() const;
  void set_deadurlsmints(::google::protobuf::int64 value);

  // optional .ru.mail.go.webbase.sekitei.Segment_r.d_lang language = 8 [default = lang_unknown];
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 8;
  ::ru::mail::go::webbase::sekitei::Segment_r_d_lang language() const;
  void set_language(::ru::mail::go::webbase::sekitei::Segment_r_d_lang value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_r)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_qlinks();
  void clear_has_qlinks();
  void set_has_qlinks_count();
  void clear_has_qlinks_count();
  void set_has_discovery();
  void clear_has_discovery();
  void set_has_discovery_count();
  void clear_has_discovery_count();
  void set_has_stats();
  void clear_has_stats();
  void set_has_specialsegment();
  void clear_has_specialsegment();
  void set_has_language();
  void clear_has_language();
  void set_has_custra_count();
  void clear_has_custra_count();
  void set_has_custrahave_count();
  void clear_has_custrahave_count();
  void set_has_languagearray();
  void clear_has_languagearray();
  void set_has_spamurls();
  void clear_has_spamurls();
  void set_has_pornurls();
  void clear_has_pornurls();
  void set_has_crawledurls();
  void clear_has_crawledurls();
  void set_has_failureurls();
  void clear_has_failureurls();
  void set_has_deadurls();
  void clear_has_deadurls();
  void set_has_deadurlsmints();
  void clear_has_deadurlsmints();
  void set_has_imagediscoverysegmentinfo();
  void clear_has_imagediscoverysegmentinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ru::mail::go::webbase::sekitei::FilterStats* stats_;
  ::ru::mail::go::webbase::blobs::SiteLanguageArray* languagearray_;
  ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* imagediscoverysegmentinfo_;
  double qlinks_;
  ::google::protobuf::int32 segment_num_;
  ::google::protobuf::int32 qlinks_count_;
  double discovery_;
  ::google::protobuf::int32 discovery_count_;
  bool specialsegment_;
  ::google::protobuf::int64 custra_count_;
  ::google::protobuf::int64 custrahave_count_;
  ::google::protobuf::int64 spamurls_;
  ::google::protobuf::int64 pornurls_;
  ::google::protobuf::int64 crawledurls_;
  ::google::protobuf::int64 failureurls_;
  ::google::protobuf::int64 deadurls_;
  ::google::protobuf::int64 deadurlsmints_;
  int language_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_l : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_l) */ {
 public:
  Segment_l();
  virtual ~Segment_l();

  Segment_l(const Segment_l& from);

  inline Segment_l& operator=(const Segment_l& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_l(Segment_l&& from) noexcept
    : Segment_l() {
    *this = ::std::move(from);
  }

  inline Segment_l& operator=(Segment_l&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_l& default_instance();

  static inline const Segment_l* internal_default_instance() {
    return reinterpret_cast<const Segment_l*>(
               &_Segment_l_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Segment_l* other);
  friend void swap(Segment_l& a, Segment_l& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_l* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_l* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_l& from);
  void MergeFrom(const Segment_l& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_l* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string samples = 2;
  int samples_size() const;
  void clear_samples();
  static const int kSamplesFieldNumber = 2;
  const ::std::string& samples(int index) const;
  ::std::string* mutable_samples(int index);
  void set_samples(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_samples(int index, ::std::string&& value);
  #endif
  void set_samples(int index, const char* value);
  void set_samples(int index, const char* value, size_t size);
  ::std::string* add_samples();
  void add_samples(const ::std::string& value);
  #if LANG_CXX11
  void add_samples(::std::string&& value);
  #endif
  void add_samples(const char* value);
  void add_samples(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& samples() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_samples();

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_l)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> samples_;
  ::google::protobuf::int32 segment_num_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_s_ImageDiscoverySegmentStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat) */ {
 public:
  Segment_s_ImageDiscoverySegmentStat();
  virtual ~Segment_s_ImageDiscoverySegmentStat();

  Segment_s_ImageDiscoverySegmentStat(const Segment_s_ImageDiscoverySegmentStat& from);

  inline Segment_s_ImageDiscoverySegmentStat& operator=(const Segment_s_ImageDiscoverySegmentStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_s_ImageDiscoverySegmentStat(Segment_s_ImageDiscoverySegmentStat&& from) noexcept
    : Segment_s_ImageDiscoverySegmentStat() {
    *this = ::std::move(from);
  }

  inline Segment_s_ImageDiscoverySegmentStat& operator=(Segment_s_ImageDiscoverySegmentStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_s_ImageDiscoverySegmentStat& default_instance();

  static inline const Segment_s_ImageDiscoverySegmentStat* internal_default_instance() {
    return reinterpret_cast<const Segment_s_ImageDiscoverySegmentStat*>(
               &_Segment_s_ImageDiscoverySegmentStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Segment_s_ImageDiscoverySegmentStat* other);
  friend void swap(Segment_s_ImageDiscoverySegmentStat& a, Segment_s_ImageDiscoverySegmentStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_s_ImageDiscoverySegmentStat* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_s_ImageDiscoverySegmentStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_s_ImageDiscoverySegmentStat& from);
  void MergeFrom(const Segment_s_ImageDiscoverySegmentStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_s_ImageDiscoverySegmentStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 totalQuota = 1 [default = 0];
  bool has_totalquota() const;
  void clear_totalquota();
  static const int kTotalQuotaFieldNumber = 1;
  ::google::protobuf::int32 totalquota() const;
  void set_totalquota(::google::protobuf::int32 value);

  // optional int32 markerQuota = 2 [default = 0];
  bool has_markerquota() const;
  void clear_markerquota();
  static const int kMarkerQuotaFieldNumber = 2;
  ::google::protobuf::int32 markerquota() const;
  void set_markerquota(::google::protobuf::int32 value);

  // optional int32 usualQuota = 3 [default = 0];
  bool has_usualquota() const;
  void clear_usualquota();
  static const int kUsualQuotaFieldNumber = 3;
  ::google::protobuf::int32 usualquota() const;
  void set_usualquota(::google::protobuf::int32 value);

  // optional int32 quotaUsed = 4 [default = 0];
  bool has_quotaused() const;
  void clear_quotaused();
  static const int kQuotaUsedFieldNumber = 4;
  ::google::protobuf::int32 quotaused() const;
  void set_quotaused(::google::protobuf::int32 value);

  // optional int32 needed = 5 [default = 0];
  bool has_needed() const;
  void clear_needed();
  static const int kNeededFieldNumber = 5;
  ::google::protobuf::int32 needed() const;
  void set_needed(::google::protobuf::int32 value);

  // optional int32 skipped = 6 [default = 0];
  bool has_skipped() const;
  void clear_skipped();
  static const int kSkippedFieldNumber = 6;
  ::google::protobuf::int32 skipped() const;
  void set_skipped(::google::protobuf::int32 value);

  // optional int32 trashQuota = 7 [default = 0];
  bool has_trashquota() const;
  void clear_trashquota();
  static const int kTrashQuotaFieldNumber = 7;
  ::google::protobuf::int32 trashquota() const;
  void set_trashquota(::google::protobuf::int32 value);

  // optional int32 trashQuotaUsed = 8 [default = 0];
  bool has_trashquotaused() const;
  void clear_trashquotaused();
  static const int kTrashQuotaUsedFieldNumber = 8;
  ::google::protobuf::int32 trashquotaused() const;
  void set_trashquotaused(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat)
 private:
  void set_has_totalquota();
  void clear_has_totalquota();
  void set_has_markerquota();
  void clear_has_markerquota();
  void set_has_usualquota();
  void clear_has_usualquota();
  void set_has_quotaused();
  void clear_has_quotaused();
  void set_has_needed();
  void clear_has_needed();
  void set_has_skipped();
  void clear_has_skipped();
  void set_has_trashquota();
  void clear_has_trashquota();
  void set_has_trashquotaused();
  void clear_has_trashquotaused();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 totalquota_;
  ::google::protobuf::int32 markerquota_;
  ::google::protobuf::int32 usualquota_;
  ::google::protobuf::int32 quotaused_;
  ::google::protobuf::int32 needed_;
  ::google::protobuf::int32 skipped_;
  ::google::protobuf::int32 trashquota_;
  ::google::protobuf::int32 trashquotaused_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_s) */ {
 public:
  Segment_s();
  virtual ~Segment_s();

  Segment_s(const Segment_s& from);

  inline Segment_s& operator=(const Segment_s& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_s(Segment_s&& from) noexcept
    : Segment_s() {
    *this = ::std::move(from);
  }

  inline Segment_s& operator=(Segment_s&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_s& default_instance();

  static inline const Segment_s* internal_default_instance() {
    return reinterpret_cast<const Segment_s*>(
               &_Segment_s_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Segment_s* other);
  friend void swap(Segment_s& a, Segment_s& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_s* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_s& from);
  void MergeFrom(const Segment_s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Segment_s_ImageDiscoverySegmentStat ImageDiscoverySegmentStat;

  // accessors -------------------------------------------------------

  // optional string description = 13;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 13;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional .ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat imageDiscoveryStat = 12;
  bool has_imagediscoverystat() const;
  void clear_imagediscoverystat();
  static const int kImageDiscoveryStatFieldNumber = 12;
  const ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat& imagediscoverystat() const;
  ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* mutable_imagediscoverystat();
  ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* release_imagediscoverystat();
  void set_allocated_imagediscoverystat(::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* imagediscoverystat);

  // optional int64 max_quota = 2 [default = 0];
  bool has_max_quota() const;
  void clear_max_quota();
  static const int kMaxQuotaFieldNumber = 2;
  ::google::protobuf::int64 max_quota() const;
  void set_max_quota(::google::protobuf::int64 value);

  // optional int64 fair_quota = 3 [default = 0];
  bool has_fair_quota() const;
  void clear_fair_quota();
  static const int kFairQuotaFieldNumber = 3;
  ::google::protobuf::int64 fair_quota() const;
  void set_fair_quota(::google::protobuf::int64 value);

  // optional int64 real_quota = 4 [default = 0];
  bool has_real_quota() const;
  void clear_real_quota();
  static const int kRealQuotaFieldNumber = 4;
  ::google::protobuf::int64 real_quota() const;
  void set_real_quota(::google::protobuf::int64 value);

  // optional int64 urls = 5 [default = 0];
  bool has_urls() const;
  void clear_urls();
  static const int kUrlsFieldNumber = 5;
  ::google::protobuf::int64 urls() const;
  void set_urls(::google::protobuf::int64 value);

  // optional int64 urls_rejected = 6 [default = 0];
  bool has_urls_rejected() const;
  void clear_urls_rejected();
  static const int kUrlsRejectedFieldNumber = 6;
  ::google::protobuf::int64 urls_rejected() const;
  void set_urls_rejected(::google::protobuf::int64 value);

  // optional int64 urls_skipped = 7 [default = 0];
  bool has_urls_skipped() const;
  void clear_urls_skipped();
  static const int kUrlsSkippedFieldNumber = 7;
  ::google::protobuf::int64 urls_skipped() const;
  void set_urls_skipped(::google::protobuf::int64 value);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // optional int32 extra_stones_bonus = 14;
  bool has_extra_stones_bonus() const;
  void clear_extra_stones_bonus();
  static const int kExtraStonesBonusFieldNumber = 14;
  ::google::protobuf::int32 extra_stones_bonus() const;
  void set_extra_stones_bonus(::google::protobuf::int32 value);

  // optional int64 trash_urls = 8 [default = 0];
  bool has_trash_urls() const;
  void clear_trash_urls();
  static const int kTrashUrlsFieldNumber = 8;
  ::google::protobuf::int64 trash_urls() const;
  void set_trash_urls(::google::protobuf::int64 value);

  // optional int64 current_batched = 9 [default = 0];
  bool has_current_batched() const;
  void clear_current_batched();
  static const int kCurrentBatchedFieldNumber = 9;
  ::google::protobuf::int64 current_batched() const;
  void set_current_batched(::google::protobuf::int64 value);

  // optional int64 backup_urls = 10 [default = 0];
  bool has_backup_urls() const;
  void clear_backup_urls();
  static const int kBackupUrlsFieldNumber = 10;
  ::google::protobuf::int64 backup_urls() const;
  void set_backup_urls(::google::protobuf::int64 value);

  // optional int64 deleted_urls = 11 [default = 0];
  bool has_deleted_urls() const;
  void clear_deleted_urls();
  static const int kDeletedUrlsFieldNumber = 11;
  ::google::protobuf::int64 deleted_urls() const;
  void set_deleted_urls(::google::protobuf::int64 value);

  // optional int32 extra_stones_bonus_used = 15;
  bool has_extra_stones_bonus_used() const;
  void clear_extra_stones_bonus_used();
  static const int kExtraStonesBonusUsedFieldNumber = 15;
  ::google::protobuf::int32 extra_stones_bonus_used() const;
  void set_extra_stones_bonus_used(::google::protobuf::int32 value);

  // optional bool splitted_scheduling = 16;
  bool has_splitted_scheduling() const;
  void clear_splitted_scheduling();
  static const int kSplittedSchedulingFieldNumber = 16;
  bool splitted_scheduling() const;
  void set_splitted_scheduling(bool value);

  // optional int64 super_urls = 18;
  bool has_super_urls() const;
  void clear_super_urls();
  static const int kSuperUrlsFieldNumber = 18;
  ::google::protobuf::int64 super_urls() const;
  void set_super_urls(::google::protobuf::int64 value);

  // optional int64 qlinks_urls = 19;
  bool has_qlinks_urls() const;
  void clear_qlinks_urls();
  static const int kQlinksUrlsFieldNumber = 19;
  ::google::protobuf::int64 qlinks_urls() const;
  void set_qlinks_urls(::google::protobuf::int64 value);

  // optional int64 uruq_urls = 20;
  bool has_uruq_urls() const;
  void clear_uruq_urls();
  static const int kUruqUrlsFieldNumber = 20;
  ::google::protobuf::int64 uruq_urls() const;
  void set_uruq_urls(::google::protobuf::int64 value);

  // optional int64 liru_urls = 21;
  bool has_liru_urls() const;
  void clear_liru_urls();
  static const int kLiruUrlsFieldNumber = 21;
  ::google::protobuf::int64 liru_urls() const;
  void set_liru_urls(::google::protobuf::int64 value);

  // optional int64 top_urls = 22;
  bool has_top_urls() const;
  void clear_top_urls();
  static const int kTopUrlsFieldNumber = 22;
  ::google::protobuf::int64 top_urls() const;
  void set_top_urls(::google::protobuf::int64 value);

  // optional int64 vk_away_urls = 23;
  bool has_vk_away_urls() const;
  void clear_vk_away_urls();
  static const int kVkAwayUrlsFieldNumber = 23;
  ::google::protobuf::int64 vk_away_urls() const;
  void set_vk_away_urls(::google::protobuf::int64 value);

  // optional int64 vk_shares_urls = 24;
  bool has_vk_shares_urls() const;
  void clear_vk_shares_urls();
  static const int kVkSharesUrlsFieldNumber = 24;
  ::google::protobuf::int64 vk_shares_urls() const;
  void set_vk_shares_urls(::google::protobuf::int64 value);

  // optional int64 weak_qlinks_urls = 25;
  bool has_weak_qlinks_urls() const;
  void clear_weak_qlinks_urls();
  static const int kWeakQlinksUrlsFieldNumber = 25;
  ::google::protobuf::int64 weak_qlinks_urls() const;
  void set_weak_qlinks_urls(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_s)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_max_quota();
  void clear_has_max_quota();
  void set_has_fair_quota();
  void clear_has_fair_quota();
  void set_has_real_quota();
  void clear_has_real_quota();
  void set_has_urls();
  void clear_has_urls();
  void set_has_urls_rejected();
  void clear_has_urls_rejected();
  void set_has_urls_skipped();
  void clear_has_urls_skipped();
  void set_has_trash_urls();
  void clear_has_trash_urls();
  void set_has_current_batched();
  void clear_has_current_batched();
  void set_has_backup_urls();
  void clear_has_backup_urls();
  void set_has_deleted_urls();
  void clear_has_deleted_urls();
  void set_has_imagediscoverystat();
  void clear_has_imagediscoverystat();
  void set_has_description();
  void clear_has_description();
  void set_has_extra_stones_bonus();
  void clear_has_extra_stones_bonus();
  void set_has_extra_stones_bonus_used();
  void clear_has_extra_stones_bonus_used();
  void set_has_splitted_scheduling();
  void clear_has_splitted_scheduling();
  void set_has_super_urls();
  void clear_has_super_urls();
  void set_has_qlinks_urls();
  void clear_has_qlinks_urls();
  void set_has_uruq_urls();
  void clear_has_uruq_urls();
  void set_has_liru_urls();
  void clear_has_liru_urls();
  void set_has_top_urls();
  void clear_has_top_urls();
  void set_has_vk_away_urls();
  void clear_has_vk_away_urls();
  void set_has_vk_shares_urls();
  void clear_has_vk_shares_urls();
  void set_has_weak_qlinks_urls();
  void clear_has_weak_qlinks_urls();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* imagediscoverystat_;
  ::google::protobuf::int64 max_quota_;
  ::google::protobuf::int64 fair_quota_;
  ::google::protobuf::int64 real_quota_;
  ::google::protobuf::int64 urls_;
  ::google::protobuf::int64 urls_rejected_;
  ::google::protobuf::int64 urls_skipped_;
  ::google::protobuf::int32 segment_num_;
  ::google::protobuf::int32 extra_stones_bonus_;
  ::google::protobuf::int64 trash_urls_;
  ::google::protobuf::int64 current_batched_;
  ::google::protobuf::int64 backup_urls_;
  ::google::protobuf::int64 deleted_urls_;
  ::google::protobuf::int32 extra_stones_bonus_used_;
  bool splitted_scheduling_;
  ::google::protobuf::int64 super_urls_;
  ::google::protobuf::int64 qlinks_urls_;
  ::google::protobuf::int64 uruq_urls_;
  ::google::protobuf::int64 liru_urls_;
  ::google::protobuf::int64 top_urls_;
  ::google::protobuf::int64 vk_away_urls_;
  ::google::protobuf::int64 vk_shares_urls_;
  ::google::protobuf::int64 weak_qlinks_urls_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment_i : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.Segment_i) */ {
 public:
  Segment_i();
  virtual ~Segment_i();

  Segment_i(const Segment_i& from);

  inline Segment_i& operator=(const Segment_i& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Segment_i(Segment_i&& from) noexcept
    : Segment_i() {
    *this = ::std::move(from);
  }

  inline Segment_i& operator=(Segment_i&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment_i& default_instance();

  static inline const Segment_i* internal_default_instance() {
    return reinterpret_cast<const Segment_i*>(
               &_Segment_i_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Segment_i* other);
  friend void swap(Segment_i& a, Segment_i& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Segment_i* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment_i* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment_i& from);
  void MergeFrom(const Segment_i& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment_i* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double markersCountRatio = 2;
  bool has_markerscountratio() const;
  void clear_markerscountratio();
  static const int kMarkersCountRatioFieldNumber = 2;
  double markerscountratio() const;
  void set_markerscountratio(double value);

  // required int32 segment_num = 1;
  bool has_segment_num() const;
  void clear_segment_num();
  static const int kSegmentNumFieldNumber = 1;
  ::google::protobuf::int32 segment_num() const;
  void set_segment_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.Segment_i)
 private:
  void set_has_segment_num();
  void clear_has_segment_num();
  void set_has_markerscountratio();
  void clear_has_markerscountratio();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double markerscountratio_;
  ::google::protobuf::int32 segment_num_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectedFeature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.SelectedFeature) */ {
 public:
  SelectedFeature();
  virtual ~SelectedFeature();

  SelectedFeature(const SelectedFeature& from);

  inline SelectedFeature& operator=(const SelectedFeature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectedFeature(SelectedFeature&& from) noexcept
    : SelectedFeature() {
    *this = ::std::move(from);
  }

  inline SelectedFeature& operator=(SelectedFeature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectedFeature& default_instance();

  static inline const SelectedFeature* internal_default_instance() {
    return reinterpret_cast<const SelectedFeature*>(
               &_SelectedFeature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SelectedFeature* other);
  friend void swap(SelectedFeature& a, SelectedFeature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectedFeature* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectedFeature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectedFeature& from);
  void MergeFrom(const SelectedFeature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectedFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // required int32 quote = 2;
  bool has_quote() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 2;
  ::google::protobuf::int32 quote() const;
  void set_quote(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.SelectedFeature)
 private:
  void set_has_idx();
  void clear_has_idx();
  void set_has_quote();
  void clear_has_quote();
  void set_has_key();
  void clear_has_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 quote_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.StatusInfo) */ {
 public:
  StatusInfo();
  virtual ~StatusInfo();

  StatusInfo(const StatusInfo& from);

  inline StatusInfo& operator=(const StatusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusInfo(StatusInfo&& from) noexcept
    : StatusInfo() {
    *this = ::std::move(from);
  }

  inline StatusInfo& operator=(StatusInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusInfo& default_instance();

  static inline const StatusInfo* internal_default_instance() {
    return reinterpret_cast<const StatusInfo*>(
               &_StatusInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(StatusInfo* other);
  friend void swap(StatusInfo& a, StatusInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StatusInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatusInfo& from);
  void MergeFrom(const StatusInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatusInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StatusInfo_stateTypes stateTypes;
  static const stateTypes ST_NEW =
    StatusInfo_stateTypes_ST_NEW;
  static const stateTypes ST_FETCHED =
    StatusInfo_stateTypes_ST_FETCHED;
  static const stateTypes ST_FAILURE =
    StatusInfo_stateTypes_ST_FAILURE;
  static const stateTypes ST_REMOVED =
    StatusInfo_stateTypes_ST_REMOVED;
  static const stateTypes ST_REDIRECT =
    StatusInfo_stateTypes_ST_REDIRECT;
  static const stateTypes ST_DISABLED =
    StatusInfo_stateTypes_ST_DISABLED;
  static const stateTypes ST_OVER3WEEKS =
    StatusInfo_stateTypes_ST_OVER3WEEKS;
  static const stateTypes QLINKS =
    StatusInfo_stateTypes_QLINKS;
  static const stateTypes RANKS =
    StatusInfo_stateTypes_RANKS;
  static inline bool stateTypes_IsValid(int value) {
    return StatusInfo_stateTypes_IsValid(value);
  }
  static const stateTypes stateTypes_MIN =
    StatusInfo_stateTypes_stateTypes_MIN;
  static const stateTypes stateTypes_MAX =
    StatusInfo_stateTypes_stateTypes_MAX;
  static const int stateTypes_ARRAYSIZE =
    StatusInfo_stateTypes_stateTypes_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  stateTypes_descriptor() {
    return StatusInfo_stateTypes_descriptor();
  }
  static inline const ::std::string& stateTypes_Name(stateTypes value) {
    return StatusInfo_stateTypes_Name(value);
  }
  static inline bool stateTypes_Parse(const ::std::string& name,
      stateTypes* value) {
    return StatusInfo_stateTypes_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ru.mail.go.webbase.sekitei.StatusInfo.stateTypes state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes state() const;
  void set_state(::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes value);

  // required int32 num = 2;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.StatusInfo)
 private:
  void set_has_state();
  void clear_has_state();
  void set_has_num();
  void clear_has_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int state_;
  ::google::protobuf::int32 num_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilterStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.sekitei.FilterStats) */ {
 public:
  FilterStats();
  virtual ~FilterStats();

  FilterStats(const FilterStats& from);

  inline FilterStats& operator=(const FilterStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FilterStats(FilterStats&& from) noexcept
    : FilterStats() {
    *this = ::std::move(from);
  }

  inline FilterStats& operator=(FilterStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilterStats& default_instance();

  static inline const FilterStats* internal_default_instance() {
    return reinterpret_cast<const FilterStats*>(
               &_FilterStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(FilterStats* other);
  friend void swap(FilterStats& a, FilterStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FilterStats* New() const PROTOBUF_FINAL { return New(NULL); }

  FilterStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FilterStats& from);
  void MergeFrom(const FilterStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FilterStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 passed = 1;
  bool has_passed() const;
  void clear_passed();
  static const int kPassedFieldNumber = 1;
  ::google::protobuf::int32 passed() const;
  void set_passed(::google::protobuf::int32 value);

  // optional int32 robots_disabled = 2;
  bool has_robots_disabled() const;
  void clear_robots_disabled();
  static const int kRobotsDisabledFieldNumber = 2;
  ::google::protobuf::int32 robots_disabled() const;
  void set_robots_disabled(::google::protobuf::int32 value);

  // optional int32 blacklist_disabled = 3;
  bool has_blacklist_disabled() const;
  void clear_blacklist_disabled();
  static const int kBlacklistDisabledFieldNumber = 3;
  ::google::protobuf::int32 blacklist_disabled() const;
  void set_blacklist_disabled(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.sekitei.FilterStats)
 private:
  void set_has_passed();
  void clear_has_passed();
  void set_has_robots_disabled();
  void clear_has_robots_disabled();
  void set_has_blacklist_disabled();
  void clear_has_blacklist_disabled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 passed_;
  ::google::protobuf::int32 robots_disabled_;
  ::google::protobuf::int32 blacklist_disabled_;
  friend struct protobuf_sekitei_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Sekitei

// required int64 total_url_num = 1;
inline bool Sekitei::has_total_url_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sekitei::set_has_total_url_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sekitei::clear_has_total_url_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sekitei::clear_total_url_num() {
  total_url_num_ = GOOGLE_LONGLONG(0);
  clear_has_total_url_num();
}
inline ::google::protobuf::int64 Sekitei::total_url_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei.total_url_num)
  return total_url_num_;
}
inline void Sekitei::set_total_url_num(::google::protobuf::int64 value) {
  set_has_total_url_num();
  total_url_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei.total_url_num)
}

// repeated .ru.mail.go.webbase.sekitei.Segment segments = 2;
inline int Sekitei::segments_size() const {
  return segments_.size();
}
inline void Sekitei::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment& Sekitei::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment* Sekitei::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment* Sekitei::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment >*
Sekitei::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment >&
Sekitei::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei.segments)
  return segments_;
}

// repeated .ru.mail.go.webbase.sekitei.SelectedFeature features = 3;
inline int Sekitei::features_size() const {
  return features_.size();
}
inline void Sekitei::clear_features() {
  features_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::SelectedFeature& Sekitei::features(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei.features)
  return features_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature* Sekitei::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei.features)
  return features_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature* Sekitei::add_features() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >*
Sekitei::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >&
Sekitei::features() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei.features)
  return features_;
}

// -------------------------------------------------------------------

// Sekitei_m

// required int64 total_url_num = 1;
inline bool Sekitei_m::has_total_url_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sekitei_m::set_has_total_url_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sekitei_m::clear_has_total_url_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sekitei_m::clear_total_url_num() {
  total_url_num_ = GOOGLE_LONGLONG(0);
  clear_has_total_url_num();
}
inline ::google::protobuf::int64 Sekitei_m::total_url_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_m.total_url_num)
  return total_url_num_;
}
inline void Sekitei_m::set_total_url_num(::google::protobuf::int64 value) {
  set_has_total_url_num();
  total_url_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_m.total_url_num)
}

// repeated .ru.mail.go.webbase.sekitei.Segment_m segments = 2;
inline int Sekitei_m::segments_size() const {
  return segments_.size();
}
inline void Sekitei_m::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_m& Sekitei_m::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_m.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_m* Sekitei_m::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_m.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_m* Sekitei_m::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_m.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_m >*
Sekitei_m::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_m.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_m >&
Sekitei_m::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_m.segments)
  return segments_;
}

// required int64 used_urls = 3;
inline bool Sekitei_m::has_used_urls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sekitei_m::set_has_used_urls() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sekitei_m::clear_has_used_urls() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sekitei_m::clear_used_urls() {
  used_urls_ = GOOGLE_LONGLONG(0);
  clear_has_used_urls();
}
inline ::google::protobuf::int64 Sekitei_m::used_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_m.used_urls)
  return used_urls_;
}
inline void Sekitei_m::set_used_urls(::google::protobuf::int64 value) {
  set_has_used_urls();
  used_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_m.used_urls)
}

// -------------------------------------------------------------------

// Sekitei_r

// repeated .ru.mail.go.webbase.sekitei.Segment_r segments = 1;
inline int Sekitei_r::segments_size() const {
  return segments_.size();
}
inline void Sekitei_r::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_r& Sekitei_r::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_r.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_r* Sekitei_r::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_r.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_r* Sekitei_r::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_r.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_r >*
Sekitei_r::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_r.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_r >&
Sekitei_r::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_r.segments)
  return segments_;
}

// -------------------------------------------------------------------

// Sekitei_l

// repeated .ru.mail.go.webbase.sekitei.Segment_l segments = 1;
inline int Sekitei_l::segments_size() const {
  return segments_.size();
}
inline void Sekitei_l::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_l& Sekitei_l::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_l.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_l* Sekitei_l::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_l.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_l* Sekitei_l::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_l.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_l >*
Sekitei_l::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_l.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_l >&
Sekitei_l::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_l.segments)
  return segments_;
}

// repeated .ru.mail.go.webbase.sekitei.SelectedFeature features = 2;
inline int Sekitei_l::features_size() const {
  return features_.size();
}
inline void Sekitei_l::clear_features() {
  features_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::SelectedFeature& Sekitei_l::features(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_l.features)
  return features_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature* Sekitei_l::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_l.features)
  return features_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::SelectedFeature* Sekitei_l::add_features() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_l.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >*
Sekitei_l::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_l.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature >&
Sekitei_l::features() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_l.features)
  return features_;
}

// -------------------------------------------------------------------

// Sekitei_s

// repeated .ru.mail.go.webbase.sekitei.Segment_s segments = 1;
inline int Sekitei_s::segments_size() const {
  return segments_.size();
}
inline void Sekitei_s::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_s& Sekitei_s::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_s.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_s* Sekitei_s::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_s.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_s* Sekitei_s::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_s.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_s >*
Sekitei_s::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_s.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_s >&
Sekitei_s::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_s.segments)
  return segments_;
}

// -------------------------------------------------------------------

// Sekitei_i

// repeated .ru.mail.go.webbase.sekitei.Segment_i segments = 1;
inline int Sekitei_i::segments_size() const {
  return segments_.size();
}
inline void Sekitei_i::clear_segments() {
  segments_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_i& Sekitei_i::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_i.segments)
  return segments_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_i* Sekitei_i::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_i.segments)
  return segments_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::Segment_i* Sekitei_i::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_i.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_i >*
Sekitei_i::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_i.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_i >&
Sekitei_i::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_i.segments)
  return segments_;
}

// optional int32 totalMarkersCount = 2;
inline bool Sekitei_i::has_totalmarkerscount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sekitei_i::set_has_totalmarkerscount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sekitei_i::clear_has_totalmarkerscount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sekitei_i::clear_totalmarkerscount() {
  totalmarkerscount_ = 0;
  clear_has_totalmarkerscount();
}
inline ::google::protobuf::int32 Sekitei_i::totalmarkerscount() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_i.totalMarkersCount)
  return totalmarkerscount_;
}
inline void Sekitei_i::set_totalmarkerscount(::google::protobuf::int32 value) {
  set_has_totalmarkerscount();
  totalmarkerscount_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_i.totalMarkersCount)
}

// -------------------------------------------------------------------

// Segment

// required int32 segment_num = 1;
inline bool Segment::has_segment_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment::set_has_segment_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.segment_num)
  return segment_num_;
}
inline void Segment::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.segment_num)
}

// required int32 part = 2;
inline bool Segment::has_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment::set_has_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment::clear_has_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 Segment::part() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.part)
  return part_;
}
inline void Segment::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.part)
}

// required string description = 3;
inline bool Segment::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Segment::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.description)
  return description_.GetNoArena();
}
inline void Segment::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.description)
}
#if LANG_CXX11
inline void Segment::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment.description)
}
#endif
inline void Segment::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment.description)
}
inline void Segment::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment.description)
}
inline ::std::string* Segment::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment.description)
}

// repeated string samples = 4;
inline int Segment::samples_size() const {
  return samples_.size();
}
inline void Segment::clear_samples() {
  samples_.Clear();
}
inline const ::std::string& Segment::samples(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.samples)
  return samples_.Get(index);
}
inline ::std::string* Segment::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment.samples)
  return samples_.Mutable(index);
}
inline void Segment::set_samples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.samples)
  samples_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Segment::set_samples(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.samples)
  samples_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Segment::set_samples(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment.samples)
}
inline void Segment::set_samples(int index, const char* value, size_t size) {
  samples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment.samples)
}
inline ::std::string* Segment::add_samples() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.sekitei.Segment.samples)
  return samples_.Add();
}
inline void Segment::add_samples(const ::std::string& value) {
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment.samples)
}
#if LANG_CXX11
inline void Segment::add_samples(::std::string&& value) {
  samples_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment.samples)
}
#endif
inline void Segment::add_samples(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.sekitei.Segment.samples)
}
inline void Segment::add_samples(const char* value, size_t size) {
  samples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.sekitei.Segment.samples)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Segment::samples() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Segment.samples)
  return samples_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Segment::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Segment.samples)
  return &samples_;
}

// optional bool specialSegment = 5 [default = false];
inline bool Segment::has_specialsegment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Segment::set_has_specialsegment() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Segment::clear_has_specialsegment() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Segment::clear_specialsegment() {
  specialsegment_ = false;
  clear_has_specialsegment();
}
inline bool Segment::specialsegment() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.specialSegment)
  return specialsegment_;
}
inline void Segment::set_specialsegment(bool value) {
  set_has_specialsegment();
  specialsegment_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.specialSegment)
}

// optional double wp = 6 [default = 0];
inline bool Segment::has_wp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment::set_has_wp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment::clear_has_wp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment::clear_wp() {
  wp_ = 0;
  clear_has_wp();
}
inline double Segment::wp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment.wp)
  return wp_;
}
inline void Segment::set_wp(double value) {
  set_has_wp();
  wp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment.wp)
}

// -------------------------------------------------------------------

// Segment_m

// required int32 segment_num = 1;
inline bool Segment_m::has_segment_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_m::set_has_segment_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_m::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_m::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_m::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_m.segment_num)
  return segment_num_;
}
inline void Segment_m::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_m.segment_num)
}

// required int32 part = 2;
inline bool Segment_m::has_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_m::set_has_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_m::clear_has_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_m::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 Segment_m::part() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_m.part)
  return part_;
}
inline void Segment_m::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_m.part)
}

// required string description = 3;
inline bool Segment_m::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_m::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_m::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_m::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Segment_m::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_m.description)
  return description_.GetNoArena();
}
inline void Segment_m::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_m.description)
}
#if LANG_CXX11
inline void Segment_m::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_m.description)
}
#endif
inline void Segment_m::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_m.description)
}
inline void Segment_m::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_m.description)
}
inline ::std::string* Segment_m::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_m.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment_m::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_m.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment_m::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_m.description)
}

// optional double wp = 4 [default = 0];
inline bool Segment_m::has_wp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_m::set_has_wp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_m::clear_has_wp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_m::clear_wp() {
  wp_ = 0;
  clear_has_wp();
}
inline double Segment_m::wp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_m.wp)
  return wp_;
}
inline void Segment_m::set_wp(double value) {
  set_has_wp();
  wp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_m.wp)
}

// repeated .ru.mail.go.webbase.sekitei.StatusInfo statuses = 5;
inline int Segment_m::statuses_size() const {
  return statuses_.size();
}
inline void Segment_m::clear_statuses() {
  statuses_.Clear();
}
inline const ::ru::mail::go::webbase::sekitei::StatusInfo& Segment_m::statuses(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_m.statuses)
  return statuses_.Get(index);
}
inline ::ru::mail::go::webbase::sekitei::StatusInfo* Segment_m::mutable_statuses(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_m.statuses)
  return statuses_.Mutable(index);
}
inline ::ru::mail::go::webbase::sekitei::StatusInfo* Segment_m::add_statuses() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_m.statuses)
  return statuses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::StatusInfo >*
Segment_m::mutable_statuses() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Segment_m.statuses)
  return &statuses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::StatusInfo >&
Segment_m::statuses() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Segment_m.statuses)
  return statuses_;
}

// -------------------------------------------------------------------

// Segment_r_ImageDiscoverySegmentInfo

// optional int32 usualImagesCount = 1 [default = 0];
inline bool Segment_r_ImageDiscoverySegmentInfo::has_usualimagescount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_has_usualimagescount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_has_usualimagescount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_usualimagescount() {
  usualimagescount_ = 0;
  clear_has_usualimagescount();
}
inline ::google::protobuf::int32 Segment_r_ImageDiscoverySegmentInfo::usualimagescount() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.usualImagesCount)
  return usualimagescount_;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_usualimagescount(::google::protobuf::int32 value) {
  set_has_usualimagescount();
  usualimagescount_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.usualImagesCount)
}

// optional int32 markerImagesCount = 2 [default = 0];
inline bool Segment_r_ImageDiscoverySegmentInfo::has_markerimagescount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_has_markerimagescount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_has_markerimagescount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_markerimagescount() {
  markerimagescount_ = 0;
  clear_has_markerimagescount();
}
inline ::google::protobuf::int32 Segment_r_ImageDiscoverySegmentInfo::markerimagescount() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.markerImagesCount)
  return markerimagescount_;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_markerimagescount(::google::protobuf::int32 value) {
  set_has_markerimagescount();
  markerimagescount_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.markerImagesCount)
}

// optional int32 quota = 3 [default = 0];
inline bool Segment_r_ImageDiscoverySegmentInfo::has_quota() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_has_quota() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_has_quota() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_quota() {
  quota_ = 0;
  clear_has_quota();
}
inline ::google::protobuf::int32 Segment_r_ImageDiscoverySegmentInfo::quota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.quota)
  return quota_;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_quota(::google::protobuf::int32 value) {
  set_has_quota();
  quota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.quota)
}

// optional int32 trashQuota = 4 [default = 0];
inline bool Segment_r_ImageDiscoverySegmentInfo::has_trashquota() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_has_trashquota() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_has_trashquota() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_r_ImageDiscoverySegmentInfo::clear_trashquota() {
  trashquota_ = 0;
  clear_has_trashquota();
}
inline ::google::protobuf::int32 Segment_r_ImageDiscoverySegmentInfo::trashquota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.trashQuota)
  return trashquota_;
}
inline void Segment_r_ImageDiscoverySegmentInfo::set_trashquota(::google::protobuf::int32 value) {
  set_has_trashquota();
  trashquota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo.trashQuota)
}

// -------------------------------------------------------------------

// Segment_r

// required int32 segment_num = 1;
inline bool Segment_r::has_segment_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Segment_r::set_has_segment_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Segment_r::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Segment_r::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_r::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.segment_num)
  return segment_num_;
}
inline void Segment_r::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.segment_num)
}

// optional double qlinks = 2 [default = 0];
inline bool Segment_r::has_qlinks() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_r::set_has_qlinks() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_r::clear_has_qlinks() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_r::clear_qlinks() {
  qlinks_ = 0;
  clear_has_qlinks();
}
inline double Segment_r::qlinks() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.qlinks)
  return qlinks_;
}
inline void Segment_r::set_qlinks(double value) {
  set_has_qlinks();
  qlinks_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.qlinks)
}

// optional int32 qlinks_count = 3 [default = 0];
inline bool Segment_r::has_qlinks_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Segment_r::set_has_qlinks_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Segment_r::clear_has_qlinks_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Segment_r::clear_qlinks_count() {
  qlinks_count_ = 0;
  clear_has_qlinks_count();
}
inline ::google::protobuf::int32 Segment_r::qlinks_count() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.qlinks_count)
  return qlinks_count_;
}
inline void Segment_r::set_qlinks_count(::google::protobuf::int32 value) {
  set_has_qlinks_count();
  qlinks_count_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.qlinks_count)
}

// optional double discovery = 4 [default = 0];
inline bool Segment_r::has_discovery() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Segment_r::set_has_discovery() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Segment_r::clear_has_discovery() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Segment_r::clear_discovery() {
  discovery_ = 0;
  clear_has_discovery();
}
inline double Segment_r::discovery() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.discovery)
  return discovery_;
}
inline void Segment_r::set_discovery(double value) {
  set_has_discovery();
  discovery_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.discovery)
}

// optional int32 discovery_count = 5 [default = 0];
inline bool Segment_r::has_discovery_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Segment_r::set_has_discovery_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Segment_r::clear_has_discovery_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Segment_r::clear_discovery_count() {
  discovery_count_ = 0;
  clear_has_discovery_count();
}
inline ::google::protobuf::int32 Segment_r::discovery_count() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.discovery_count)
  return discovery_count_;
}
inline void Segment_r::set_discovery_count(::google::protobuf::int32 value) {
  set_has_discovery_count();
  discovery_count_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.discovery_count)
}

// optional .ru.mail.go.webbase.sekitei.FilterStats stats = 6;
inline bool Segment_r::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_r::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_r::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_r::clear_stats() {
  if (stats_ != NULL) stats_->::ru::mail::go::webbase::sekitei::FilterStats::Clear();
  clear_has_stats();
}
inline const ::ru::mail::go::webbase::sekitei::FilterStats& Segment_r::stats() const {
  const ::ru::mail::go::webbase::sekitei::FilterStats* p = stats_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.stats)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::sekitei::FilterStats*>(
      &::ru::mail::go::webbase::sekitei::_FilterStats_default_instance_);
}
inline ::ru::mail::go::webbase::sekitei::FilterStats* Segment_r::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::ru::mail::go::webbase::sekitei::FilterStats;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_r.stats)
  return stats_;
}
inline ::ru::mail::go::webbase::sekitei::FilterStats* Segment_r::release_stats() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_r.stats)
  clear_has_stats();
  ::ru::mail::go::webbase::sekitei::FilterStats* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void Segment_r::set_allocated_stats(::ru::mail::go::webbase::sekitei::FilterStats* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_r.stats)
}

// optional bool specialSegment = 7 [default = false];
inline bool Segment_r::has_specialsegment() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Segment_r::set_has_specialsegment() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Segment_r::clear_has_specialsegment() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Segment_r::clear_specialsegment() {
  specialsegment_ = false;
  clear_has_specialsegment();
}
inline bool Segment_r::specialsegment() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.specialSegment)
  return specialsegment_;
}
inline void Segment_r::set_specialsegment(bool value) {
  set_has_specialsegment();
  specialsegment_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.specialSegment)
}

// optional .ru.mail.go.webbase.sekitei.Segment_r.d_lang language = 8 [default = lang_unknown];
inline bool Segment_r::has_language() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Segment_r::set_has_language() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Segment_r::clear_has_language() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Segment_r::clear_language() {
  language_ = 1;
  clear_has_language();
}
inline ::ru::mail::go::webbase::sekitei::Segment_r_d_lang Segment_r::language() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.language)
  return static_cast< ::ru::mail::go::webbase::sekitei::Segment_r_d_lang >(language_);
}
inline void Segment_r::set_language(::ru::mail::go::webbase::sekitei::Segment_r_d_lang value) {
  assert(::ru::mail::go::webbase::sekitei::Segment_r_d_lang_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.language)
}

// optional int64 custra_count = 9 [default = 0];
inline bool Segment_r::has_custra_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Segment_r::set_has_custra_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Segment_r::clear_has_custra_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Segment_r::clear_custra_count() {
  custra_count_ = GOOGLE_LONGLONG(0);
  clear_has_custra_count();
}
inline ::google::protobuf::int64 Segment_r::custra_count() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.custra_count)
  return custra_count_;
}
inline void Segment_r::set_custra_count(::google::protobuf::int64 value) {
  set_has_custra_count();
  custra_count_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.custra_count)
}

// optional int64 custrahave_count = 10 [default = 0];
inline bool Segment_r::has_custrahave_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Segment_r::set_has_custrahave_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Segment_r::clear_has_custrahave_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Segment_r::clear_custrahave_count() {
  custrahave_count_ = GOOGLE_LONGLONG(0);
  clear_has_custrahave_count();
}
inline ::google::protobuf::int64 Segment_r::custrahave_count() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.custrahave_count)
  return custrahave_count_;
}
inline void Segment_r::set_custrahave_count(::google::protobuf::int64 value) {
  set_has_custrahave_count();
  custrahave_count_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.custrahave_count)
}

// optional .ru.mail.go.webbase.blobs.SiteLanguageArray languageArray = 11;
inline bool Segment_r::has_languagearray() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_r::set_has_languagearray() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_r::clear_has_languagearray() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_r::clear_languagearray() {
  if (languagearray_ != NULL) languagearray_->::ru::mail::go::webbase::blobs::SiteLanguageArray::Clear();
  clear_has_languagearray();
}
inline const ::ru::mail::go::webbase::blobs::SiteLanguageArray& Segment_r::languagearray() const {
  const ::ru::mail::go::webbase::blobs::SiteLanguageArray* p = languagearray_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.languageArray)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::SiteLanguageArray*>(
      &::ru::mail::go::webbase::blobs::_SiteLanguageArray_default_instance_);
}
inline ::ru::mail::go::webbase::blobs::SiteLanguageArray* Segment_r::mutable_languagearray() {
  set_has_languagearray();
  if (languagearray_ == NULL) {
    languagearray_ = new ::ru::mail::go::webbase::blobs::SiteLanguageArray;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_r.languageArray)
  return languagearray_;
}
inline ::ru::mail::go::webbase::blobs::SiteLanguageArray* Segment_r::release_languagearray() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_r.languageArray)
  clear_has_languagearray();
  ::ru::mail::go::webbase::blobs::SiteLanguageArray* temp = languagearray_;
  languagearray_ = NULL;
  return temp;
}
inline void Segment_r::set_allocated_languagearray(::ru::mail::go::webbase::blobs::SiteLanguageArray* languagearray) {
  delete languagearray_;
  languagearray_ = languagearray;
  if (languagearray) {
    set_has_languagearray();
  } else {
    clear_has_languagearray();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_r.languageArray)
}

// optional int64 spamUrls = 12;
inline bool Segment_r::has_spamurls() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Segment_r::set_has_spamurls() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Segment_r::clear_has_spamurls() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Segment_r::clear_spamurls() {
  spamurls_ = GOOGLE_LONGLONG(0);
  clear_has_spamurls();
}
inline ::google::protobuf::int64 Segment_r::spamurls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.spamUrls)
  return spamurls_;
}
inline void Segment_r::set_spamurls(::google::protobuf::int64 value) {
  set_has_spamurls();
  spamurls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.spamUrls)
}

// optional int64 pornUrls = 13;
inline bool Segment_r::has_pornurls() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Segment_r::set_has_pornurls() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Segment_r::clear_has_pornurls() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Segment_r::clear_pornurls() {
  pornurls_ = GOOGLE_LONGLONG(0);
  clear_has_pornurls();
}
inline ::google::protobuf::int64 Segment_r::pornurls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.pornUrls)
  return pornurls_;
}
inline void Segment_r::set_pornurls(::google::protobuf::int64 value) {
  set_has_pornurls();
  pornurls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.pornUrls)
}

// optional int64 crawledUrls = 14;
inline bool Segment_r::has_crawledurls() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Segment_r::set_has_crawledurls() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Segment_r::clear_has_crawledurls() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Segment_r::clear_crawledurls() {
  crawledurls_ = GOOGLE_LONGLONG(0);
  clear_has_crawledurls();
}
inline ::google::protobuf::int64 Segment_r::crawledurls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.crawledUrls)
  return crawledurls_;
}
inline void Segment_r::set_crawledurls(::google::protobuf::int64 value) {
  set_has_crawledurls();
  crawledurls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.crawledUrls)
}

// optional int64 failureUrls = 15;
inline bool Segment_r::has_failureurls() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Segment_r::set_has_failureurls() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Segment_r::clear_has_failureurls() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Segment_r::clear_failureurls() {
  failureurls_ = GOOGLE_LONGLONG(0);
  clear_has_failureurls();
}
inline ::google::protobuf::int64 Segment_r::failureurls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.failureUrls)
  return failureurls_;
}
inline void Segment_r::set_failureurls(::google::protobuf::int64 value) {
  set_has_failureurls();
  failureurls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.failureUrls)
}

// optional int64 deadUrls = 16;
inline bool Segment_r::has_deadurls() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Segment_r::set_has_deadurls() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Segment_r::clear_has_deadurls() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Segment_r::clear_deadurls() {
  deadurls_ = GOOGLE_LONGLONG(0);
  clear_has_deadurls();
}
inline ::google::protobuf::int64 Segment_r::deadurls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.deadUrls)
  return deadurls_;
}
inline void Segment_r::set_deadurls(::google::protobuf::int64 value) {
  set_has_deadurls();
  deadurls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.deadUrls)
}

// optional int64 deadUrlsMinTs = 17;
inline bool Segment_r::has_deadurlsmints() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Segment_r::set_has_deadurlsmints() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Segment_r::clear_has_deadurlsmints() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Segment_r::clear_deadurlsmints() {
  deadurlsmints_ = GOOGLE_LONGLONG(0);
  clear_has_deadurlsmints();
}
inline ::google::protobuf::int64 Segment_r::deadurlsmints() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.deadUrlsMinTs)
  return deadurlsmints_;
}
inline void Segment_r::set_deadurlsmints(::google::protobuf::int64 value) {
  set_has_deadurlsmints();
  deadurlsmints_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_r.deadUrlsMinTs)
}

// optional .ru.mail.go.webbase.sekitei.Segment_r.ImageDiscoverySegmentInfo imageDiscoverySegmentInfo = 18;
inline bool Segment_r::has_imagediscoverysegmentinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_r::set_has_imagediscoverysegmentinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_r::clear_has_imagediscoverysegmentinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_r::clear_imagediscoverysegmentinfo() {
  if (imagediscoverysegmentinfo_ != NULL) imagediscoverysegmentinfo_->::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo::Clear();
  clear_has_imagediscoverysegmentinfo();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo& Segment_r::imagediscoverysegmentinfo() const {
  const ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* p = imagediscoverysegmentinfo_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_r.imageDiscoverySegmentInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo*>(
      &::ru::mail::go::webbase::sekitei::_Segment_r_ImageDiscoverySegmentInfo_default_instance_);
}
inline ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* Segment_r::mutable_imagediscoverysegmentinfo() {
  set_has_imagediscoverysegmentinfo();
  if (imagediscoverysegmentinfo_ == NULL) {
    imagediscoverysegmentinfo_ = new ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_r.imageDiscoverySegmentInfo)
  return imagediscoverysegmentinfo_;
}
inline ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* Segment_r::release_imagediscoverysegmentinfo() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_r.imageDiscoverySegmentInfo)
  clear_has_imagediscoverysegmentinfo();
  ::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* temp = imagediscoverysegmentinfo_;
  imagediscoverysegmentinfo_ = NULL;
  return temp;
}
inline void Segment_r::set_allocated_imagediscoverysegmentinfo(::ru::mail::go::webbase::sekitei::Segment_r_ImageDiscoverySegmentInfo* imagediscoverysegmentinfo) {
  delete imagediscoverysegmentinfo_;
  imagediscoverysegmentinfo_ = imagediscoverysegmentinfo;
  if (imagediscoverysegmentinfo) {
    set_has_imagediscoverysegmentinfo();
  } else {
    clear_has_imagediscoverysegmentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_r.imageDiscoverySegmentInfo)
}

// -------------------------------------------------------------------

// Segment_l

// required int32 segment_num = 1;
inline bool Segment_l::has_segment_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_l::set_has_segment_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_l::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_l::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_l::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_l.segment_num)
  return segment_num_;
}
inline void Segment_l::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_l.segment_num)
}

// repeated string samples = 2;
inline int Segment_l::samples_size() const {
  return samples_.size();
}
inline void Segment_l::clear_samples() {
  samples_.Clear();
}
inline const ::std::string& Segment_l::samples(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_l.samples)
  return samples_.Get(index);
}
inline ::std::string* Segment_l::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_l.samples)
  return samples_.Mutable(index);
}
inline void Segment_l::set_samples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_l.samples)
  samples_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Segment_l::set_samples(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_l.samples)
  samples_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Segment_l::set_samples(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
inline void Segment_l::set_samples(int index, const char* value, size_t size) {
  samples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
inline ::std::string* Segment_l::add_samples() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.sekitei.Segment_l.samples)
  return samples_.Add();
}
inline void Segment_l::add_samples(const ::std::string& value) {
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
#if LANG_CXX11
inline void Segment_l::add_samples(::std::string&& value) {
  samples_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
#endif
inline void Segment_l::add_samples(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
inline void Segment_l::add_samples(const char* value, size_t size) {
  samples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.sekitei.Segment_l.samples)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Segment_l::samples() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Segment_l.samples)
  return samples_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Segment_l::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Segment_l.samples)
  return &samples_;
}

// -------------------------------------------------------------------

// Segment_s_ImageDiscoverySegmentStat

// optional int32 totalQuota = 1 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_totalquota() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_totalquota() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_totalquota() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_totalquota() {
  totalquota_ = 0;
  clear_has_totalquota();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::totalquota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.totalQuota)
  return totalquota_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_totalquota(::google::protobuf::int32 value) {
  set_has_totalquota();
  totalquota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.totalQuota)
}

// optional int32 markerQuota = 2 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_markerquota() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_markerquota() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_markerquota() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_markerquota() {
  markerquota_ = 0;
  clear_has_markerquota();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::markerquota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.markerQuota)
  return markerquota_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_markerquota(::google::protobuf::int32 value) {
  set_has_markerquota();
  markerquota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.markerQuota)
}

// optional int32 usualQuota = 3 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_usualquota() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_usualquota() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_usualquota() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_usualquota() {
  usualquota_ = 0;
  clear_has_usualquota();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::usualquota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.usualQuota)
  return usualquota_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_usualquota(::google::protobuf::int32 value) {
  set_has_usualquota();
  usualquota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.usualQuota)
}

// optional int32 quotaUsed = 4 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_quotaused() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_quotaused() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_quotaused() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_quotaused() {
  quotaused_ = 0;
  clear_has_quotaused();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::quotaused() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.quotaUsed)
  return quotaused_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_quotaused(::google::protobuf::int32 value) {
  set_has_quotaused();
  quotaused_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.quotaUsed)
}

// optional int32 needed = 5 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_needed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_needed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_needed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_needed() {
  needed_ = 0;
  clear_has_needed();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::needed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.needed)
  return needed_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_needed(::google::protobuf::int32 value) {
  set_has_needed();
  needed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.needed)
}

// optional int32 skipped = 6 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_skipped() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_skipped() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_skipped() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_skipped() {
  skipped_ = 0;
  clear_has_skipped();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.skipped)
  return skipped_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_skipped(::google::protobuf::int32 value) {
  set_has_skipped();
  skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.skipped)
}

// optional int32 trashQuota = 7 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_trashquota() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_trashquota() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_trashquota() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_trashquota() {
  trashquota_ = 0;
  clear_has_trashquota();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::trashquota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.trashQuota)
  return trashquota_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_trashquota(::google::protobuf::int32 value) {
  set_has_trashquota();
  trashquota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.trashQuota)
}

// optional int32 trashQuotaUsed = 8 [default = 0];
inline bool Segment_s_ImageDiscoverySegmentStat::has_trashquotaused() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_has_trashquotaused() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_has_trashquotaused() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Segment_s_ImageDiscoverySegmentStat::clear_trashquotaused() {
  trashquotaused_ = 0;
  clear_has_trashquotaused();
}
inline ::google::protobuf::int32 Segment_s_ImageDiscoverySegmentStat::trashquotaused() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.trashQuotaUsed)
  return trashquotaused_;
}
inline void Segment_s_ImageDiscoverySegmentStat::set_trashquotaused(::google::protobuf::int32 value) {
  set_has_trashquotaused();
  trashquotaused_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat.trashQuotaUsed)
}

// -------------------------------------------------------------------

// Segment_s

// required int32 segment_num = 1;
inline bool Segment_s::has_segment_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Segment_s::set_has_segment_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Segment_s::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Segment_s::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_s::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.segment_num)
  return segment_num_;
}
inline void Segment_s::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.segment_num)
}

// optional int64 max_quota = 2 [default = 0];
inline bool Segment_s::has_max_quota() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Segment_s::set_has_max_quota() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Segment_s::clear_has_max_quota() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Segment_s::clear_max_quota() {
  max_quota_ = GOOGLE_LONGLONG(0);
  clear_has_max_quota();
}
inline ::google::protobuf::int64 Segment_s::max_quota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.max_quota)
  return max_quota_;
}
inline void Segment_s::set_max_quota(::google::protobuf::int64 value) {
  set_has_max_quota();
  max_quota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.max_quota)
}

// optional int64 fair_quota = 3 [default = 0];
inline bool Segment_s::has_fair_quota() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Segment_s::set_has_fair_quota() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Segment_s::clear_has_fair_quota() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Segment_s::clear_fair_quota() {
  fair_quota_ = GOOGLE_LONGLONG(0);
  clear_has_fair_quota();
}
inline ::google::protobuf::int64 Segment_s::fair_quota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.fair_quota)
  return fair_quota_;
}
inline void Segment_s::set_fair_quota(::google::protobuf::int64 value) {
  set_has_fair_quota();
  fair_quota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.fair_quota)
}

// optional int64 real_quota = 4 [default = 0];
inline bool Segment_s::has_real_quota() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Segment_s::set_has_real_quota() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Segment_s::clear_has_real_quota() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Segment_s::clear_real_quota() {
  real_quota_ = GOOGLE_LONGLONG(0);
  clear_has_real_quota();
}
inline ::google::protobuf::int64 Segment_s::real_quota() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.real_quota)
  return real_quota_;
}
inline void Segment_s::set_real_quota(::google::protobuf::int64 value) {
  set_has_real_quota();
  real_quota_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.real_quota)
}

// optional int64 urls = 5 [default = 0];
inline bool Segment_s::has_urls() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Segment_s::set_has_urls() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Segment_s::clear_has_urls() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Segment_s::clear_urls() {
  urls_ = GOOGLE_LONGLONG(0);
  clear_has_urls();
}
inline ::google::protobuf::int64 Segment_s::urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.urls)
  return urls_;
}
inline void Segment_s::set_urls(::google::protobuf::int64 value) {
  set_has_urls();
  urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.urls)
}

// optional int64 urls_rejected = 6 [default = 0];
inline bool Segment_s::has_urls_rejected() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Segment_s::set_has_urls_rejected() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Segment_s::clear_has_urls_rejected() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Segment_s::clear_urls_rejected() {
  urls_rejected_ = GOOGLE_LONGLONG(0);
  clear_has_urls_rejected();
}
inline ::google::protobuf::int64 Segment_s::urls_rejected() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.urls_rejected)
  return urls_rejected_;
}
inline void Segment_s::set_urls_rejected(::google::protobuf::int64 value) {
  set_has_urls_rejected();
  urls_rejected_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.urls_rejected)
}

// optional int64 urls_skipped = 7 [default = 0];
inline bool Segment_s::has_urls_skipped() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Segment_s::set_has_urls_skipped() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Segment_s::clear_has_urls_skipped() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Segment_s::clear_urls_skipped() {
  urls_skipped_ = GOOGLE_LONGLONG(0);
  clear_has_urls_skipped();
}
inline ::google::protobuf::int64 Segment_s::urls_skipped() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.urls_skipped)
  return urls_skipped_;
}
inline void Segment_s::set_urls_skipped(::google::protobuf::int64 value) {
  set_has_urls_skipped();
  urls_skipped_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.urls_skipped)
}

// optional int64 trash_urls = 8 [default = 0];
inline bool Segment_s::has_trash_urls() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Segment_s::set_has_trash_urls() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Segment_s::clear_has_trash_urls() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Segment_s::clear_trash_urls() {
  trash_urls_ = GOOGLE_LONGLONG(0);
  clear_has_trash_urls();
}
inline ::google::protobuf::int64 Segment_s::trash_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.trash_urls)
  return trash_urls_;
}
inline void Segment_s::set_trash_urls(::google::protobuf::int64 value) {
  set_has_trash_urls();
  trash_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.trash_urls)
}

// optional int64 current_batched = 9 [default = 0];
inline bool Segment_s::has_current_batched() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Segment_s::set_has_current_batched() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Segment_s::clear_has_current_batched() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Segment_s::clear_current_batched() {
  current_batched_ = GOOGLE_LONGLONG(0);
  clear_has_current_batched();
}
inline ::google::protobuf::int64 Segment_s::current_batched() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.current_batched)
  return current_batched_;
}
inline void Segment_s::set_current_batched(::google::protobuf::int64 value) {
  set_has_current_batched();
  current_batched_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.current_batched)
}

// optional int64 backup_urls = 10 [default = 0];
inline bool Segment_s::has_backup_urls() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Segment_s::set_has_backup_urls() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Segment_s::clear_has_backup_urls() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Segment_s::clear_backup_urls() {
  backup_urls_ = GOOGLE_LONGLONG(0);
  clear_has_backup_urls();
}
inline ::google::protobuf::int64 Segment_s::backup_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.backup_urls)
  return backup_urls_;
}
inline void Segment_s::set_backup_urls(::google::protobuf::int64 value) {
  set_has_backup_urls();
  backup_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.backup_urls)
}

// optional int64 deleted_urls = 11 [default = 0];
inline bool Segment_s::has_deleted_urls() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Segment_s::set_has_deleted_urls() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Segment_s::clear_has_deleted_urls() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Segment_s::clear_deleted_urls() {
  deleted_urls_ = GOOGLE_LONGLONG(0);
  clear_has_deleted_urls();
}
inline ::google::protobuf::int64 Segment_s::deleted_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.deleted_urls)
  return deleted_urls_;
}
inline void Segment_s::set_deleted_urls(::google::protobuf::int64 value) {
  set_has_deleted_urls();
  deleted_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.deleted_urls)
}

// optional .ru.mail.go.webbase.sekitei.Segment_s.ImageDiscoverySegmentStat imageDiscoveryStat = 12;
inline bool Segment_s::has_imagediscoverystat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_s::set_has_imagediscoverystat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_s::clear_has_imagediscoverystat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_s::clear_imagediscoverystat() {
  if (imagediscoverystat_ != NULL) imagediscoverystat_->::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat::Clear();
  clear_has_imagediscoverystat();
}
inline const ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat& Segment_s::imagediscoverystat() const {
  const ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* p = imagediscoverystat_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.imageDiscoveryStat)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat*>(
      &::ru::mail::go::webbase::sekitei::_Segment_s_ImageDiscoverySegmentStat_default_instance_);
}
inline ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* Segment_s::mutable_imagediscoverystat() {
  set_has_imagediscoverystat();
  if (imagediscoverystat_ == NULL) {
    imagediscoverystat_ = new ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_s.imageDiscoveryStat)
  return imagediscoverystat_;
}
inline ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* Segment_s::release_imagediscoverystat() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_s.imageDiscoveryStat)
  clear_has_imagediscoverystat();
  ::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* temp = imagediscoverystat_;
  imagediscoverystat_ = NULL;
  return temp;
}
inline void Segment_s::set_allocated_imagediscoverystat(::ru::mail::go::webbase::sekitei::Segment_s_ImageDiscoverySegmentStat* imagediscoverystat) {
  delete imagediscoverystat_;
  imagediscoverystat_ = imagediscoverystat;
  if (imagediscoverystat) {
    set_has_imagediscoverystat();
  } else {
    clear_has_imagediscoverystat();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_s.imageDiscoveryStat)
}

// optional string description = 13;
inline bool Segment_s::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_s::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_s::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_s::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Segment_s::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.description)
  return description_.GetNoArena();
}
inline void Segment_s::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.description)
}
#if LANG_CXX11
inline void Segment_s::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_s.description)
}
#endif
inline void Segment_s::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_s.description)
}
inline void Segment_s::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_s.description)
}
inline ::std::string* Segment_s::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_s.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Segment_s::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_s.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Segment_s::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_s.description)
}

// optional int32 extra_stones_bonus = 14;
inline bool Segment_s::has_extra_stones_bonus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Segment_s::set_has_extra_stones_bonus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Segment_s::clear_has_extra_stones_bonus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Segment_s::clear_extra_stones_bonus() {
  extra_stones_bonus_ = 0;
  clear_has_extra_stones_bonus();
}
inline ::google::protobuf::int32 Segment_s::extra_stones_bonus() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.extra_stones_bonus)
  return extra_stones_bonus_;
}
inline void Segment_s::set_extra_stones_bonus(::google::protobuf::int32 value) {
  set_has_extra_stones_bonus();
  extra_stones_bonus_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.extra_stones_bonus)
}

// optional int32 extra_stones_bonus_used = 15;
inline bool Segment_s::has_extra_stones_bonus_used() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Segment_s::set_has_extra_stones_bonus_used() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Segment_s::clear_has_extra_stones_bonus_used() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Segment_s::clear_extra_stones_bonus_used() {
  extra_stones_bonus_used_ = 0;
  clear_has_extra_stones_bonus_used();
}
inline ::google::protobuf::int32 Segment_s::extra_stones_bonus_used() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.extra_stones_bonus_used)
  return extra_stones_bonus_used_;
}
inline void Segment_s::set_extra_stones_bonus_used(::google::protobuf::int32 value) {
  set_has_extra_stones_bonus_used();
  extra_stones_bonus_used_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.extra_stones_bonus_used)
}

// optional bool splitted_scheduling = 16;
inline bool Segment_s::has_splitted_scheduling() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Segment_s::set_has_splitted_scheduling() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Segment_s::clear_has_splitted_scheduling() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Segment_s::clear_splitted_scheduling() {
  splitted_scheduling_ = false;
  clear_has_splitted_scheduling();
}
inline bool Segment_s::splitted_scheduling() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.splitted_scheduling)
  return splitted_scheduling_;
}
inline void Segment_s::set_splitted_scheduling(bool value) {
  set_has_splitted_scheduling();
  splitted_scheduling_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.splitted_scheduling)
}

// optional int64 super_urls = 18;
inline bool Segment_s::has_super_urls() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Segment_s::set_has_super_urls() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Segment_s::clear_has_super_urls() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Segment_s::clear_super_urls() {
  super_urls_ = GOOGLE_LONGLONG(0);
  clear_has_super_urls();
}
inline ::google::protobuf::int64 Segment_s::super_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.super_urls)
  return super_urls_;
}
inline void Segment_s::set_super_urls(::google::protobuf::int64 value) {
  set_has_super_urls();
  super_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.super_urls)
}

// optional int64 qlinks_urls = 19;
inline bool Segment_s::has_qlinks_urls() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Segment_s::set_has_qlinks_urls() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Segment_s::clear_has_qlinks_urls() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Segment_s::clear_qlinks_urls() {
  qlinks_urls_ = GOOGLE_LONGLONG(0);
  clear_has_qlinks_urls();
}
inline ::google::protobuf::int64 Segment_s::qlinks_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.qlinks_urls)
  return qlinks_urls_;
}
inline void Segment_s::set_qlinks_urls(::google::protobuf::int64 value) {
  set_has_qlinks_urls();
  qlinks_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.qlinks_urls)
}

// optional int64 uruq_urls = 20;
inline bool Segment_s::has_uruq_urls() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Segment_s::set_has_uruq_urls() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Segment_s::clear_has_uruq_urls() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Segment_s::clear_uruq_urls() {
  uruq_urls_ = GOOGLE_LONGLONG(0);
  clear_has_uruq_urls();
}
inline ::google::protobuf::int64 Segment_s::uruq_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.uruq_urls)
  return uruq_urls_;
}
inline void Segment_s::set_uruq_urls(::google::protobuf::int64 value) {
  set_has_uruq_urls();
  uruq_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.uruq_urls)
}

// optional int64 liru_urls = 21;
inline bool Segment_s::has_liru_urls() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Segment_s::set_has_liru_urls() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Segment_s::clear_has_liru_urls() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Segment_s::clear_liru_urls() {
  liru_urls_ = GOOGLE_LONGLONG(0);
  clear_has_liru_urls();
}
inline ::google::protobuf::int64 Segment_s::liru_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.liru_urls)
  return liru_urls_;
}
inline void Segment_s::set_liru_urls(::google::protobuf::int64 value) {
  set_has_liru_urls();
  liru_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.liru_urls)
}

// optional int64 top_urls = 22;
inline bool Segment_s::has_top_urls() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Segment_s::set_has_top_urls() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Segment_s::clear_has_top_urls() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Segment_s::clear_top_urls() {
  top_urls_ = GOOGLE_LONGLONG(0);
  clear_has_top_urls();
}
inline ::google::protobuf::int64 Segment_s::top_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.top_urls)
  return top_urls_;
}
inline void Segment_s::set_top_urls(::google::protobuf::int64 value) {
  set_has_top_urls();
  top_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.top_urls)
}

// optional int64 vk_away_urls = 23;
inline bool Segment_s::has_vk_away_urls() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Segment_s::set_has_vk_away_urls() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Segment_s::clear_has_vk_away_urls() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Segment_s::clear_vk_away_urls() {
  vk_away_urls_ = GOOGLE_LONGLONG(0);
  clear_has_vk_away_urls();
}
inline ::google::protobuf::int64 Segment_s::vk_away_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.vk_away_urls)
  return vk_away_urls_;
}
inline void Segment_s::set_vk_away_urls(::google::protobuf::int64 value) {
  set_has_vk_away_urls();
  vk_away_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.vk_away_urls)
}

// optional int64 vk_shares_urls = 24;
inline bool Segment_s::has_vk_shares_urls() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Segment_s::set_has_vk_shares_urls() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Segment_s::clear_has_vk_shares_urls() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Segment_s::clear_vk_shares_urls() {
  vk_shares_urls_ = GOOGLE_LONGLONG(0);
  clear_has_vk_shares_urls();
}
inline ::google::protobuf::int64 Segment_s::vk_shares_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.vk_shares_urls)
  return vk_shares_urls_;
}
inline void Segment_s::set_vk_shares_urls(::google::protobuf::int64 value) {
  set_has_vk_shares_urls();
  vk_shares_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.vk_shares_urls)
}

// optional int64 weak_qlinks_urls = 25;
inline bool Segment_s::has_weak_qlinks_urls() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Segment_s::set_has_weak_qlinks_urls() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Segment_s::clear_has_weak_qlinks_urls() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Segment_s::clear_weak_qlinks_urls() {
  weak_qlinks_urls_ = GOOGLE_LONGLONG(0);
  clear_has_weak_qlinks_urls();
}
inline ::google::protobuf::int64 Segment_s::weak_qlinks_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_s.weak_qlinks_urls)
  return weak_qlinks_urls_;
}
inline void Segment_s::set_weak_qlinks_urls(::google::protobuf::int64 value) {
  set_has_weak_qlinks_urls();
  weak_qlinks_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_s.weak_qlinks_urls)
}

// -------------------------------------------------------------------

// Segment_i

// required int32 segment_num = 1;
inline bool Segment_i::has_segment_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment_i::set_has_segment_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment_i::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment_i::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
inline ::google::protobuf::int32 Segment_i::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_i.segment_num)
  return segment_num_;
}
inline void Segment_i::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_i.segment_num)
}

// optional double markersCountRatio = 2;
inline bool Segment_i::has_markerscountratio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment_i::set_has_markerscountratio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment_i::clear_has_markerscountratio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment_i::clear_markerscountratio() {
  markerscountratio_ = 0;
  clear_has_markerscountratio();
}
inline double Segment_i::markerscountratio() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_i.markersCountRatio)
  return markerscountratio_;
}
inline void Segment_i::set_markerscountratio(double value) {
  set_has_markerscountratio();
  markerscountratio_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_i.markersCountRatio)
}

// -------------------------------------------------------------------

// SelectedFeature

// required int32 idx = 1;
inline bool SelectedFeature::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectedFeature::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectedFeature::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectedFeature::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 SelectedFeature::idx() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature.idx)
  return idx_;
}
inline void SelectedFeature::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature.idx)
}

// required int32 quote = 2;
inline bool SelectedFeature::has_quote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectedFeature::set_has_quote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectedFeature::clear_has_quote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectedFeature::clear_quote() {
  quote_ = 0;
  clear_has_quote();
}
inline ::google::protobuf::int32 SelectedFeature::quote() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature.quote)
  return quote_;
}
inline void SelectedFeature::set_quote(::google::protobuf::int32 value) {
  set_has_quote();
  quote_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature.quote)
}

// required string key = 3;
inline bool SelectedFeature::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectedFeature::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectedFeature::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectedFeature::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& SelectedFeature::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature.key)
  return key_.GetNoArena();
}
inline void SelectedFeature::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature.key)
}
#if LANG_CXX11
inline void SelectedFeature::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.SelectedFeature.key)
}
#endif
inline void SelectedFeature::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.SelectedFeature.key)
}
inline void SelectedFeature::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.SelectedFeature.key)
}
inline ::std::string* SelectedFeature::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.SelectedFeature.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectedFeature::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.SelectedFeature.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectedFeature::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.SelectedFeature.key)
}

// -------------------------------------------------------------------

// StatusInfo

// required .ru.mail.go.webbase.sekitei.StatusInfo.stateTypes state = 1;
inline bool StatusInfo::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusInfo::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes StatusInfo::state() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.StatusInfo.state)
  return static_cast< ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes >(state_);
}
inline void StatusInfo::set_state(::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes value) {
  assert(::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.StatusInfo.state)
}

// required int32 num = 2;
inline bool StatusInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 StatusInfo::num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.StatusInfo.num)
  return num_;
}
inline void StatusInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.StatusInfo.num)
}

// -------------------------------------------------------------------

// FilterStats

// optional int32 passed = 1;
inline bool FilterStats::has_passed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FilterStats::set_has_passed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FilterStats::clear_has_passed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FilterStats::clear_passed() {
  passed_ = 0;
  clear_has_passed();
}
inline ::google::protobuf::int32 FilterStats::passed() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.FilterStats.passed)
  return passed_;
}
inline void FilterStats::set_passed(::google::protobuf::int32 value) {
  set_has_passed();
  passed_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.FilterStats.passed)
}

// optional int32 robots_disabled = 2;
inline bool FilterStats::has_robots_disabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FilterStats::set_has_robots_disabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FilterStats::clear_has_robots_disabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FilterStats::clear_robots_disabled() {
  robots_disabled_ = 0;
  clear_has_robots_disabled();
}
inline ::google::protobuf::int32 FilterStats::robots_disabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.FilterStats.robots_disabled)
  return robots_disabled_;
}
inline void FilterStats::set_robots_disabled(::google::protobuf::int32 value) {
  set_has_robots_disabled();
  robots_disabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.FilterStats.robots_disabled)
}

// optional int32 blacklist_disabled = 3;
inline bool FilterStats::has_blacklist_disabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FilterStats::set_has_blacklist_disabled() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FilterStats::clear_has_blacklist_disabled() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FilterStats::clear_blacklist_disabled() {
  blacklist_disabled_ = 0;
  clear_has_blacklist_disabled();
}
inline ::google::protobuf::int32 FilterStats::blacklist_disabled() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.FilterStats.blacklist_disabled)
  return blacklist_disabled_;
}
inline void FilterStats::set_blacklist_disabled(::google::protobuf::int32 value) {
  set_has_blacklist_disabled();
  blacklist_disabled_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.FilterStats.blacklist_disabled)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sekitei
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ru::mail::go::webbase::sekitei::Segment_r_d_lang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::sekitei::Segment_r_d_lang>() {
  return ::ru::mail::go::webbase::sekitei::Segment_r_d_lang_descriptor();
}
template <> struct is_proto_enum< ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes>() {
  return ::ru::mail::go::webbase::sekitei::StatusInfo_stateTypes_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sekitei_2eproto__INCLUDED
