// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sekitei_experimental.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sekitei_experimental.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace sekitei {
class Sekitei_eDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Sekitei_e>
     _instance;
} _Sekitei_e_default_instance_;
class Segment_eDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Segment_e>
     _instance;
} _Segment_e_default_instance_;
class SelectedFeature_eDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectedFeature_e>
     _instance;
} _SelectedFeature_e_default_instance_;
class OptBlockDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OptBlock>
     _instance;
} _OptBlock_default_instance_;

namespace protobuf_sekitei_5fexperimental_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, total_url_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, bad_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, normal_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, good_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, segments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sekitei_e, segmentsorder_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, segment_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, segment_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, wp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, bayes_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, bayes_g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, bad_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, normal_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, good_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_e, samples_),
  2,
  0,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectedFeature_e, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectedFeature_e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectedFeature_e, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectedFeature_e, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectedFeature_e, key_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptBlock, current_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptBlock, child_list_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(Sekitei_e)},
  { 21, 37, sizeof(Segment_e)},
  { 48, 56, sizeof(SelectedFeature_e)},
  { 59, 66, sizeof(OptBlock)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Sekitei_e_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Segment_e_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectedFeature_e_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OptBlock_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sekitei_experimental.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Sekitei_e_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Sekitei_e_default_instance_);_Segment_e_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Segment_e_default_instance_);_SelectedFeature_e_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectedFeature_e_default_instance_);_OptBlock_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OptBlock_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032sekitei_experimental.proto\022\032ru.mail.go"
      ".webbase.sekitei\"\246\002\n\tSekitei_e\022\021\n\thost_n"
      "ame\030\001 \002(\t\022\025\n\rtotal_url_num\030\002 \002(\003\022\020\n\010bad_"
      "urls\030\003 \001(\003\022\023\n\013normal_urls\030\004 \001(\003\022\021\n\tgood_"
      "urls\030\005 \001(\003\0227\n\010segments\030\006 \003(\0132%.ru.mail.g"
      "o.webbase.sekitei.Segment_e\022\?\n\010features\030"
      "\007 \003(\0132-.ru.mail.go.webbase.sekitei.Selec"
      "tedFeature_e\022;\n\rsegmentsOrder\030\010 \003(\0132$.ru"
      ".mail.go.webbase.sekitei.OptBlock\"\322\001\n\tSe"
      "gment_e\022\023\n\013segment_num\030\001 \002(\005\022\024\n\014segment_"
      "name\030\002 \001(\t\022\014\n\004part\030\003 \001(\005\022\n\n\002wp\030\004 \001(\001\022\017\n\007"
      "bayes_n\030\005 \001(\001\022\017\n\007bayes_g\030\006 \001(\001\022\020\n\010bad_ur"
      "ls\030\007 \001(\005\022\023\n\013normal_urls\030\010 \001(\005\022\021\n\tgood_ur"
      "ls\030\t \001(\005\022\023\n\013description\030\n \001(\t\022\017\n\007samples"
      "\030\013 \003(\t\"<\n\021SelectedFeature_e\022\013\n\003idx\030\001 \002(\005"
      "\022\r\n\005quote\030\002 \002(\005\022\013\n\003key\030\003 \002(\t\"3\n\010OptBlock"
      "\022\023\n\013current_num\030\001 \002(\005\022\022\n\nchild_list\030\002 \003("
      "\005B\021B\017SekiteiExpBlobs"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 700);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sekitei_experimental.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sekitei_5fexperimental_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sekitei_e::kHostNameFieldNumber;
const int Sekitei_e::kTotalUrlNumFieldNumber;
const int Sekitei_e::kBadUrlsFieldNumber;
const int Sekitei_e::kNormalUrlsFieldNumber;
const int Sekitei_e::kGoodUrlsFieldNumber;
const int Sekitei_e::kSegmentsFieldNumber;
const int Sekitei_e::kFeaturesFieldNumber;
const int Sekitei_e::kSegmentsOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sekitei_e::Sekitei_e()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.sekitei.Sekitei_e)
}
Sekitei_e::Sekitei_e(const Sekitei_e& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      segments_(from.segments_),
      features_(from.features_),
      segmentsorder_(from.segmentsorder_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&total_url_num_, &from.total_url_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&good_urls_) -
    reinterpret_cast<char*>(&total_url_num_)) + sizeof(good_urls_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.sekitei.Sekitei_e)
}

void Sekitei_e::SharedCtor() {
  _cached_size_ = 0;
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_url_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&good_urls_) -
      reinterpret_cast<char*>(&total_url_num_)) + sizeof(good_urls_));
}

Sekitei_e::~Sekitei_e() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.sekitei.Sekitei_e)
  SharedDtor();
}

void Sekitei_e::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Sekitei_e::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sekitei_e::descriptor() {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sekitei_e& Sekitei_e::default_instance() {
  protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  return *internal_default_instance();
}

Sekitei_e* Sekitei_e::New(::google::protobuf::Arena* arena) const {
  Sekitei_e* n = new Sekitei_e;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Sekitei_e::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segments_.Clear();
  features_.Clear();
  segmentsorder_.Clear();
  if (has_host_name()) {
    GOOGLE_DCHECK(!host_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*host_name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 30u) {
    ::memset(&total_url_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&good_urls_) -
        reinterpret_cast<char*>(&total_url_num_)) + sizeof(good_urls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Sekitei_e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string host_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.sekitei.Sekitei_e.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 total_url_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_url_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_url_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bad_urls = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bad_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bad_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 normal_urls = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_normal_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &normal_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 good_urls = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_good_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &good_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_segments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_segmentsorder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.sekitei.Sekitei_e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.sekitei.Sekitei_e)
  return false;
#undef DO_
}

void Sekitei_e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Sekitei_e.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_name(), output);
  }

  // required int64 total_url_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->total_url_num(), output);
  }

  // optional int64 bad_urls = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->bad_urls(), output);
  }

  // optional int64 normal_urls = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->normal_urls(), output);
  }

  // optional int64 good_urls = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->good_urls(), output);
  }

  // repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->segments(static_cast<int>(i)), output);
  }

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->features(static_cast<int>(i)), output);
  }

  // repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segmentsorder_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->segmentsorder(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.sekitei.Sekitei_e)
}

::google::protobuf::uint8* Sekitei_e::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Sekitei_e.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_name(), target);
  }

  // required int64 total_url_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->total_url_num(), target);
  }

  // optional int64 bad_urls = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->bad_urls(), target);
  }

  // optional int64 normal_urls = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->normal_urls(), target);
  }

  // optional int64 good_urls = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->good_urls(), target);
  }

  // repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->segments(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->features(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segmentsorder_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->segmentsorder(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.sekitei.Sekitei_e)
  return target;
}

size_t Sekitei_e::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  size_t total_size = 0;

  if (has_host_name()) {
    // required string host_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  if (has_total_url_num()) {
    // required int64 total_url_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_url_num());
  }

  return total_size;
}
size_t Sekitei_e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string host_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());

    // required int64 total_url_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_url_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->segments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->segments(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->features(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->segmentsorder_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->segmentsorder(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 28u) {
    // optional int64 bad_urls = 3;
    if (has_bad_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bad_urls());
    }

    // optional int64 normal_urls = 4;
    if (has_normal_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->normal_urls());
    }

    // optional int64 good_urls = 5;
    if (has_good_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->good_urls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sekitei_e::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  GOOGLE_DCHECK_NE(&from, this);
  const Sekitei_e* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sekitei_e>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.sekitei.Sekitei_e)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.sekitei.Sekitei_e)
    MergeFrom(*source);
  }
}

void Sekitei_e::MergeFrom(const Sekitei_e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  segments_.MergeFrom(from.segments_);
  features_.MergeFrom(from.features_);
  segmentsorder_.MergeFrom(from.segmentsorder_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      total_url_num_ = from.total_url_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      bad_urls_ = from.bad_urls_;
    }
    if (cached_has_bits & 0x00000008u) {
      normal_urls_ = from.normal_urls_;
    }
    if (cached_has_bits & 0x00000010u) {
      good_urls_ = from.good_urls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Sekitei_e::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sekitei_e::CopyFrom(const Sekitei_e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.sekitei.Sekitei_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sekitei_e::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->segments())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->features())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->segmentsorder())) return false;
  return true;
}

void Sekitei_e::Swap(Sekitei_e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sekitei_e::InternalSwap(Sekitei_e* other) {
  using std::swap;
  segments_.InternalSwap(&other->segments_);
  features_.InternalSwap(&other->features_);
  segmentsorder_.InternalSwap(&other->segmentsorder_);
  host_name_.Swap(&other->host_name_);
  swap(total_url_num_, other->total_url_num_);
  swap(bad_urls_, other->bad_urls_);
  swap(normal_urls_, other->normal_urls_);
  swap(good_urls_, other->good_urls_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Sekitei_e::GetMetadata() const {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Sekitei_e

// required string host_name = 1;
bool Sekitei_e::has_host_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Sekitei_e::set_has_host_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Sekitei_e::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Sekitei_e::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_name();
}
const ::std::string& Sekitei_e::host_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  return host_name_.GetNoArena();
}
void Sekitei_e::set_host_name(const ::std::string& value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
#if LANG_CXX11
void Sekitei_e::set_host_name(::std::string&& value) {
  set_has_host_name();
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
#endif
void Sekitei_e::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
void Sekitei_e::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}
::std::string* Sekitei_e::mutable_host_name() {
  set_has_host_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Sekitei_e::release_host_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
  clear_has_host_name();
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Sekitei_e::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    set_has_host_name();
  } else {
    clear_has_host_name();
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Sekitei_e.host_name)
}

// required int64 total_url_num = 2;
bool Sekitei_e::has_total_url_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Sekitei_e::set_has_total_url_num() {
  _has_bits_[0] |= 0x00000002u;
}
void Sekitei_e::clear_has_total_url_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void Sekitei_e::clear_total_url_num() {
  total_url_num_ = GOOGLE_LONGLONG(0);
  clear_has_total_url_num();
}
::google::protobuf::int64 Sekitei_e::total_url_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.total_url_num)
  return total_url_num_;
}
void Sekitei_e::set_total_url_num(::google::protobuf::int64 value) {
  set_has_total_url_num();
  total_url_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.total_url_num)
}

// optional int64 bad_urls = 3;
bool Sekitei_e::has_bad_urls() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Sekitei_e::set_has_bad_urls() {
  _has_bits_[0] |= 0x00000004u;
}
void Sekitei_e::clear_has_bad_urls() {
  _has_bits_[0] &= ~0x00000004u;
}
void Sekitei_e::clear_bad_urls() {
  bad_urls_ = GOOGLE_LONGLONG(0);
  clear_has_bad_urls();
}
::google::protobuf::int64 Sekitei_e::bad_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.bad_urls)
  return bad_urls_;
}
void Sekitei_e::set_bad_urls(::google::protobuf::int64 value) {
  set_has_bad_urls();
  bad_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.bad_urls)
}

// optional int64 normal_urls = 4;
bool Sekitei_e::has_normal_urls() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Sekitei_e::set_has_normal_urls() {
  _has_bits_[0] |= 0x00000008u;
}
void Sekitei_e::clear_has_normal_urls() {
  _has_bits_[0] &= ~0x00000008u;
}
void Sekitei_e::clear_normal_urls() {
  normal_urls_ = GOOGLE_LONGLONG(0);
  clear_has_normal_urls();
}
::google::protobuf::int64 Sekitei_e::normal_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.normal_urls)
  return normal_urls_;
}
void Sekitei_e::set_normal_urls(::google::protobuf::int64 value) {
  set_has_normal_urls();
  normal_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.normal_urls)
}

// optional int64 good_urls = 5;
bool Sekitei_e::has_good_urls() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Sekitei_e::set_has_good_urls() {
  _has_bits_[0] |= 0x00000010u;
}
void Sekitei_e::clear_has_good_urls() {
  _has_bits_[0] &= ~0x00000010u;
}
void Sekitei_e::clear_good_urls() {
  good_urls_ = GOOGLE_LONGLONG(0);
  clear_has_good_urls();
}
::google::protobuf::int64 Sekitei_e::good_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.good_urls)
  return good_urls_;
}
void Sekitei_e::set_good_urls(::google::protobuf::int64 value) {
  set_has_good_urls();
  good_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Sekitei_e.good_urls)
}

// repeated .ru.mail.go.webbase.sekitei.Segment_e segments = 6;
int Sekitei_e::segments_size() const {
  return segments_.size();
}
void Sekitei_e::clear_segments() {
  segments_.Clear();
}
const ::ru::mail::go::webbase::sekitei::Segment_e& Sekitei_e::segments(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Get(index);
}
::ru::mail::go::webbase::sekitei::Segment_e* Sekitei_e::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Mutable(index);
}
::ru::mail::go::webbase::sekitei::Segment_e* Sekitei_e::add_segments() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >*
Sekitei_e::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return &segments_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::Segment_e >&
Sekitei_e::segments() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.segments)
  return segments_;
}

// repeated .ru.mail.go.webbase.sekitei.SelectedFeature_e features = 7;
int Sekitei_e::features_size() const {
  return features_.size();
}
void Sekitei_e::clear_features() {
  features_.Clear();
}
const ::ru::mail::go::webbase::sekitei::SelectedFeature_e& Sekitei_e::features(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Get(index);
}
::ru::mail::go::webbase::sekitei::SelectedFeature_e* Sekitei_e::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Mutable(index);
}
::ru::mail::go::webbase::sekitei::SelectedFeature_e* Sekitei_e::add_features() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >*
Sekitei_e::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return &features_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::SelectedFeature_e >&
Sekitei_e::features() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.features)
  return features_;
}

// repeated .ru.mail.go.webbase.sekitei.OptBlock segmentsOrder = 8;
int Sekitei_e::segmentsorder_size() const {
  return segmentsorder_.size();
}
void Sekitei_e::clear_segmentsorder() {
  segmentsorder_.Clear();
}
const ::ru::mail::go::webbase::sekitei::OptBlock& Sekitei_e::segmentsorder(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Get(index);
}
::ru::mail::go::webbase::sekitei::OptBlock* Sekitei_e::mutable_segmentsorder(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Mutable(index);
}
::ru::mail::go::webbase::sekitei::OptBlock* Sekitei_e::add_segmentsorder() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >*
Sekitei_e::mutable_segmentsorder() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return &segmentsorder_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::sekitei::OptBlock >&
Sekitei_e::segmentsorder() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Sekitei_e.segmentsOrder)
  return segmentsorder_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment_e::kSegmentNumFieldNumber;
const int Segment_e::kSegmentNameFieldNumber;
const int Segment_e::kPartFieldNumber;
const int Segment_e::kWpFieldNumber;
const int Segment_e::kBayesNFieldNumber;
const int Segment_e::kBayesGFieldNumber;
const int Segment_e::kBadUrlsFieldNumber;
const int Segment_e::kNormalUrlsFieldNumber;
const int Segment_e::kGoodUrlsFieldNumber;
const int Segment_e::kDescriptionFieldNumber;
const int Segment_e::kSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment_e::Segment_e()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.sekitei.Segment_e)
}
Segment_e::Segment_e(const Segment_e& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      samples_(from.samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  segment_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_segment_name()) {
    segment_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segment_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&segment_num_, &from.segment_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&good_urls_) -
    reinterpret_cast<char*>(&segment_num_)) + sizeof(good_urls_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.sekitei.Segment_e)
}

void Segment_e::SharedCtor() {
  _cached_size_ = 0;
  segment_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&good_urls_) -
      reinterpret_cast<char*>(&segment_num_)) + sizeof(good_urls_));
}

Segment_e::~Segment_e() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.sekitei.Segment_e)
  SharedDtor();
}

void Segment_e::SharedDtor() {
  segment_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Segment_e::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Segment_e::descriptor() {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Segment_e& Segment_e::default_instance() {
  protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  return *internal_default_instance();
}

Segment_e* Segment_e::New(::google::protobuf::Arena* arena) const {
  Segment_e* n = new Segment_e;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Segment_e::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.sekitei.Segment_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  samples_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!segment_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*segment_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&segment_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bad_urls_) -
        reinterpret_cast<char*>(&segment_num_)) + sizeof(bad_urls_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&normal_urls_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&good_urls_) -
        reinterpret_cast<char*>(&normal_urls_)) + sizeof(good_urls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment_e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.sekitei.Segment_e)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 segment_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_segment_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string segment_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segment_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->segment_name().data(), static_cast<int>(this->segment_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.sekitei.Segment_e.segment_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 part = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_part();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double wp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_wp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bayes_n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_bayes_n();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bayes_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bayes_g = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_bayes_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bayes_g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bad_urls = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bad_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bad_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 normal_urls = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_normal_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &normal_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 good_urls = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_good_urls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &good_urls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.sekitei.Segment_e.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string samples = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_samples()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->samples(this->samples_size() - 1).data(),
            static_cast<int>(this->samples(this->samples_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.sekitei.Segment_e.samples");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.sekitei.Segment_e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.sekitei.Segment_e)
  return false;
#undef DO_
}

void Segment_e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.sekitei.Segment_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 segment_num = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->segment_num(), output);
  }

  // optional string segment_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->segment_name().data(), static_cast<int>(this->segment_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.segment_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->segment_name(), output);
  }

  // optional int32 part = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->part(), output);
  }

  // optional double wp = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->wp(), output);
  }

  // optional double bayes_n = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bayes_n(), output);
  }

  // optional double bayes_g = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bayes_g(), output);
  }

  // optional int32 bad_urls = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bad_urls(), output);
  }

  // optional int32 normal_urls = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->normal_urls(), output);
  }

  // optional int32 good_urls = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->good_urls(), output);
  }

  // optional string description = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->description(), output);
  }

  // repeated string samples = 11;
  for (int i = 0, n = this->samples_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->samples(i).data(), static_cast<int>(this->samples(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.samples");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->samples(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.sekitei.Segment_e)
}

::google::protobuf::uint8* Segment_e::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.sekitei.Segment_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 segment_num = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->segment_num(), target);
  }

  // optional string segment_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->segment_name().data(), static_cast<int>(this->segment_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.segment_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->segment_name(), target);
  }

  // optional int32 part = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->part(), target);
  }

  // optional double wp = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->wp(), target);
  }

  // optional double bayes_n = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bayes_n(), target);
  }

  // optional double bayes_g = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bayes_g(), target);
  }

  // optional int32 bad_urls = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bad_urls(), target);
  }

  // optional int32 normal_urls = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->normal_urls(), target);
  }

  // optional int32 good_urls = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->good_urls(), target);
  }

  // optional string description = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->description(), target);
  }

  // repeated string samples = 11;
  for (int i = 0, n = this->samples_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->samples(i).data(), static_cast<int>(this->samples(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.Segment_e.samples");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->samples(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.sekitei.Segment_e)
  return target;
}

size_t Segment_e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.sekitei.Segment_e)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 segment_num = 1;
  if (has_segment_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment_num());
  }
  // repeated string samples = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->samples_size());
  for (int i = 0, n = this->samples_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->samples(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string segment_name = 2;
    if (has_segment_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->segment_name());
    }

    // optional string description = 10;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional int32 part = 3;
    if (has_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part());
    }

    // optional double wp = 4;
    if (has_wp()) {
      total_size += 1 + 8;
    }

    // optional double bayes_n = 5;
    if (has_bayes_n()) {
      total_size += 1 + 8;
    }

    // optional double bayes_g = 6;
    if (has_bayes_g()) {
      total_size += 1 + 8;
    }

    // optional int32 bad_urls = 7;
    if (has_bad_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bad_urls());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 normal_urls = 8;
    if (has_normal_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->normal_urls());
    }

    // optional int32 good_urls = 9;
    if (has_good_urls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->good_urls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Segment_e::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.sekitei.Segment_e)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment_e* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment_e>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.sekitei.Segment_e)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.sekitei.Segment_e)
    MergeFrom(*source);
  }
}

void Segment_e::MergeFrom(const Segment_e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.sekitei.Segment_e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samples_.MergeFrom(from.samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_segment_name();
      segment_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segment_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      segment_num_ = from.segment_num_;
    }
    if (cached_has_bits & 0x00000008u) {
      part_ = from.part_;
    }
    if (cached_has_bits & 0x00000010u) {
      wp_ = from.wp_;
    }
    if (cached_has_bits & 0x00000020u) {
      bayes_n_ = from.bayes_n_;
    }
    if (cached_has_bits & 0x00000040u) {
      bayes_g_ = from.bayes_g_;
    }
    if (cached_has_bits & 0x00000080u) {
      bad_urls_ = from.bad_urls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      normal_urls_ = from.normal_urls_;
    }
    if (cached_has_bits & 0x00000200u) {
      good_urls_ = from.good_urls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Segment_e::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.sekitei.Segment_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment_e::CopyFrom(const Segment_e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.sekitei.Segment_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment_e::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void Segment_e::Swap(Segment_e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment_e::InternalSwap(Segment_e* other) {
  using std::swap;
  samples_.InternalSwap(&other->samples_);
  segment_name_.Swap(&other->segment_name_);
  description_.Swap(&other->description_);
  swap(segment_num_, other->segment_num_);
  swap(part_, other->part_);
  swap(wp_, other->wp_);
  swap(bayes_n_, other->bayes_n_);
  swap(bayes_g_, other->bayes_g_);
  swap(bad_urls_, other->bad_urls_);
  swap(normal_urls_, other->normal_urls_);
  swap(good_urls_, other->good_urls_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Segment_e::GetMetadata() const {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Segment_e

// required int32 segment_num = 1;
bool Segment_e::has_segment_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Segment_e::set_has_segment_num() {
  _has_bits_[0] |= 0x00000004u;
}
void Segment_e::clear_has_segment_num() {
  _has_bits_[0] &= ~0x00000004u;
}
void Segment_e::clear_segment_num() {
  segment_num_ = 0;
  clear_has_segment_num();
}
::google::protobuf::int32 Segment_e::segment_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.segment_num)
  return segment_num_;
}
void Segment_e::set_segment_num(::google::protobuf::int32 value) {
  set_has_segment_num();
  segment_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.segment_num)
}

// optional string segment_name = 2;
bool Segment_e::has_segment_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Segment_e::set_has_segment_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Segment_e::clear_has_segment_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Segment_e::clear_segment_name() {
  segment_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_segment_name();
}
const ::std::string& Segment_e::segment_name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  return segment_name_.GetNoArena();
}
void Segment_e::set_segment_name(const ::std::string& value) {
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
#if LANG_CXX11
void Segment_e::set_segment_name(::std::string&& value) {
  set_has_segment_name();
  segment_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
#endif
void Segment_e::set_segment_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
void Segment_e::set_segment_name(const char* value, size_t size) {
  set_has_segment_name();
  segment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}
::std::string* Segment_e::mutable_segment_name() {
  set_has_segment_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  return segment_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Segment_e::release_segment_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
  clear_has_segment_name();
  return segment_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Segment_e::set_allocated_segment_name(::std::string* segment_name) {
  if (segment_name != NULL) {
    set_has_segment_name();
  } else {
    clear_has_segment_name();
  }
  segment_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segment_name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_e.segment_name)
}

// optional int32 part = 3;
bool Segment_e::has_part() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Segment_e::set_has_part() {
  _has_bits_[0] |= 0x00000008u;
}
void Segment_e::clear_has_part() {
  _has_bits_[0] &= ~0x00000008u;
}
void Segment_e::clear_part() {
  part_ = 0;
  clear_has_part();
}
::google::protobuf::int32 Segment_e::part() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.part)
  return part_;
}
void Segment_e::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.part)
}

// optional double wp = 4;
bool Segment_e::has_wp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Segment_e::set_has_wp() {
  _has_bits_[0] |= 0x00000010u;
}
void Segment_e::clear_has_wp() {
  _has_bits_[0] &= ~0x00000010u;
}
void Segment_e::clear_wp() {
  wp_ = 0;
  clear_has_wp();
}
double Segment_e::wp() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.wp)
  return wp_;
}
void Segment_e::set_wp(double value) {
  set_has_wp();
  wp_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.wp)
}

// optional double bayes_n = 5;
bool Segment_e::has_bayes_n() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Segment_e::set_has_bayes_n() {
  _has_bits_[0] |= 0x00000020u;
}
void Segment_e::clear_has_bayes_n() {
  _has_bits_[0] &= ~0x00000020u;
}
void Segment_e::clear_bayes_n() {
  bayes_n_ = 0;
  clear_has_bayes_n();
}
double Segment_e::bayes_n() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bayes_n)
  return bayes_n_;
}
void Segment_e::set_bayes_n(double value) {
  set_has_bayes_n();
  bayes_n_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bayes_n)
}

// optional double bayes_g = 6;
bool Segment_e::has_bayes_g() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Segment_e::set_has_bayes_g() {
  _has_bits_[0] |= 0x00000040u;
}
void Segment_e::clear_has_bayes_g() {
  _has_bits_[0] &= ~0x00000040u;
}
void Segment_e::clear_bayes_g() {
  bayes_g_ = 0;
  clear_has_bayes_g();
}
double Segment_e::bayes_g() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bayes_g)
  return bayes_g_;
}
void Segment_e::set_bayes_g(double value) {
  set_has_bayes_g();
  bayes_g_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bayes_g)
}

// optional int32 bad_urls = 7;
bool Segment_e::has_bad_urls() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Segment_e::set_has_bad_urls() {
  _has_bits_[0] |= 0x00000080u;
}
void Segment_e::clear_has_bad_urls() {
  _has_bits_[0] &= ~0x00000080u;
}
void Segment_e::clear_bad_urls() {
  bad_urls_ = 0;
  clear_has_bad_urls();
}
::google::protobuf::int32 Segment_e::bad_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.bad_urls)
  return bad_urls_;
}
void Segment_e::set_bad_urls(::google::protobuf::int32 value) {
  set_has_bad_urls();
  bad_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.bad_urls)
}

// optional int32 normal_urls = 8;
bool Segment_e::has_normal_urls() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Segment_e::set_has_normal_urls() {
  _has_bits_[0] |= 0x00000100u;
}
void Segment_e::clear_has_normal_urls() {
  _has_bits_[0] &= ~0x00000100u;
}
void Segment_e::clear_normal_urls() {
  normal_urls_ = 0;
  clear_has_normal_urls();
}
::google::protobuf::int32 Segment_e::normal_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.normal_urls)
  return normal_urls_;
}
void Segment_e::set_normal_urls(::google::protobuf::int32 value) {
  set_has_normal_urls();
  normal_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.normal_urls)
}

// optional int32 good_urls = 9;
bool Segment_e::has_good_urls() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Segment_e::set_has_good_urls() {
  _has_bits_[0] |= 0x00000200u;
}
void Segment_e::clear_has_good_urls() {
  _has_bits_[0] &= ~0x00000200u;
}
void Segment_e::clear_good_urls() {
  good_urls_ = 0;
  clear_has_good_urls();
}
::google::protobuf::int32 Segment_e::good_urls() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.good_urls)
  return good_urls_;
}
void Segment_e::set_good_urls(::google::protobuf::int32 value) {
  set_has_good_urls();
  good_urls_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.good_urls)
}

// optional string description = 10;
bool Segment_e::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Segment_e::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
void Segment_e::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
void Segment_e::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& Segment_e::description() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.description)
  return description_.GetNoArena();
}
void Segment_e::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.description)
}
#if LANG_CXX11
void Segment_e::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.Segment_e.description)
}
#endif
void Segment_e::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.description)
}
void Segment_e::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.description)
}
::std::string* Segment_e::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Segment_e::release_description() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.Segment_e.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Segment_e::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.Segment_e.description)
}

// repeated string samples = 11;
int Segment_e::samples_size() const {
  return samples_.size();
}
void Segment_e::clear_samples() {
  samples_.Clear();
}
const ::std::string& Segment_e::samples(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Get(index);
}
::std::string* Segment_e::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Mutable(index);
}
void Segment_e::set_samples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.samples)
  samples_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Segment_e::set_samples(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.Segment_e.samples)
  samples_.Mutable(index)->assign(std::move(value));
}
#endif
void Segment_e::set_samples(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
void Segment_e::set_samples(int index, const char* value, size_t size) {
  samples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
::std::string* Segment_e::add_samples() {
  // @@protoc_insertion_point(field_add_mutable:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_.Add();
}
void Segment_e::add_samples(const ::std::string& value) {
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
#if LANG_CXX11
void Segment_e::add_samples(::std::string&& value) {
  samples_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
#endif
void Segment_e::add_samples(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  samples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
void Segment_e::add_samples(const char* value, size_t size) {
  samples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ru.mail.go.webbase.sekitei.Segment_e.samples)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Segment_e::samples() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return samples_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Segment_e::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.Segment_e.samples)
  return &samples_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectedFeature_e::kIdxFieldNumber;
const int SelectedFeature_e::kQuoteFieldNumber;
const int SelectedFeature_e::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectedFeature_e::SelectedFeature_e()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.sekitei.SelectedFeature_e)
}
SelectedFeature_e::SelectedFeature_e(const SelectedFeature_e& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&idx_, &from.idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&quote_) -
    reinterpret_cast<char*>(&idx_)) + sizeof(quote_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.sekitei.SelectedFeature_e)
}

void SelectedFeature_e::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quote_) -
      reinterpret_cast<char*>(&idx_)) + sizeof(quote_));
}

SelectedFeature_e::~SelectedFeature_e() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  SharedDtor();
}

void SelectedFeature_e::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectedFeature_e::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectedFeature_e::descriptor() {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectedFeature_e& SelectedFeature_e::default_instance() {
  protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectedFeature_e* SelectedFeature_e::New(::google::protobuf::Arena* arena) const {
  SelectedFeature_e* n = new SelectedFeature_e;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectedFeature_e::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_key()) {
    GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quote_) -
        reinterpret_cast<char*>(&idx_)) + sizeof(quote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectedFeature_e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 quote = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.webbase.sekitei.SelectedFeature_e.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  return false;
#undef DO_
}

void SelectedFeature_e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 idx = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(), output);
  }

  // required int32 quote = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quote(), output);
  }

  // required string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.SelectedFeature_e.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.sekitei.SelectedFeature_e)
}

::google::protobuf::uint8* SelectedFeature_e::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 idx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idx(), target);
  }

  // required int32 quote = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quote(), target);
  }

  // required string key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.webbase.sekitei.SelectedFeature_e.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  return target;
}

size_t SelectedFeature_e::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_idx()) {
    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  if (has_quote()) {
    // required int32 quote = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quote());
  }

  return total_size;
}
size_t SelectedFeature_e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());

    // required int32 quote = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quote());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectedFeature_e::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectedFeature_e* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectedFeature_e>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.sekitei.SelectedFeature_e)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.sekitei.SelectedFeature_e)
    MergeFrom(*source);
  }
}

void SelectedFeature_e::MergeFrom(const SelectedFeature_e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      idx_ = from.idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      quote_ = from.quote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SelectedFeature_e::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectedFeature_e::CopyFrom(const SelectedFeature_e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.sekitei.SelectedFeature_e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectedFeature_e::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void SelectedFeature_e::Swap(SelectedFeature_e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectedFeature_e::InternalSwap(SelectedFeature_e* other) {
  using std::swap;
  key_.Swap(&other->key_);
  swap(idx_, other->idx_);
  swap(quote_, other->quote_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectedFeature_e::GetMetadata() const {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectedFeature_e

// required int32 idx = 1;
bool SelectedFeature_e::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SelectedFeature_e::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
void SelectedFeature_e::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
void SelectedFeature_e::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
::google::protobuf::int32 SelectedFeature_e::idx() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.idx)
  return idx_;
}
void SelectedFeature_e::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.idx)
}

// required int32 quote = 2;
bool SelectedFeature_e::has_quote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SelectedFeature_e::set_has_quote() {
  _has_bits_[0] |= 0x00000004u;
}
void SelectedFeature_e::clear_has_quote() {
  _has_bits_[0] &= ~0x00000004u;
}
void SelectedFeature_e::clear_quote() {
  quote_ = 0;
  clear_has_quote();
}
::google::protobuf::int32 SelectedFeature_e::quote() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.quote)
  return quote_;
}
void SelectedFeature_e::set_quote(::google::protobuf::int32 value) {
  set_has_quote();
  quote_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.quote)
}

// required string key = 3;
bool SelectedFeature_e::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectedFeature_e::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectedFeature_e::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectedFeature_e::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& SelectedFeature_e::key() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  return key_.GetNoArena();
}
void SelectedFeature_e::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
#if LANG_CXX11
void SelectedFeature_e::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
#endif
void SelectedFeature_e::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
void SelectedFeature_e::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}
::std::string* SelectedFeature_e::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectedFeature_e::release_key() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectedFeature_e::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.sekitei.SelectedFeature_e.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptBlock::kCurrentNumFieldNumber;
const int OptBlock::kChildListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptBlock::OptBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.webbase.sekitei.OptBlock)
}
OptBlock::OptBlock(const OptBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      child_list_(from.child_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_num_ = from.current_num_;
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.webbase.sekitei.OptBlock)
}

void OptBlock::SharedCtor() {
  _cached_size_ = 0;
  current_num_ = 0;
}

OptBlock::~OptBlock() {
  // @@protoc_insertion_point(destructor:ru.mail.go.webbase.sekitei.OptBlock)
  SharedDtor();
}

void OptBlock::SharedDtor() {
}

void OptBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptBlock::descriptor() {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptBlock& OptBlock::default_instance() {
  protobuf_sekitei_5fexperimental_2eproto::InitDefaults();
  return *internal_default_instance();
}

OptBlock* OptBlock::New(::google::protobuf::Arena* arena) const {
  OptBlock* n = new OptBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.webbase.sekitei.OptBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_list_.Clear();
  current_num_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.webbase.sekitei.OptBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 current_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_current_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 child_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_child_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_child_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.webbase.sekitei.OptBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.webbase.sekitei.OptBlock)
  return false;
#undef DO_
}

void OptBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.webbase.sekitei.OptBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 current_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->current_num(), output);
  }

  // repeated int32 child_list = 2;
  for (int i = 0, n = this->child_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->child_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.webbase.sekitei.OptBlock)
}

::google::protobuf::uint8* OptBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.webbase.sekitei.OptBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 current_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->current_num(), target);
  }

  // repeated int32 child_list = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->child_list_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.webbase.sekitei.OptBlock)
  return target;
}

size_t OptBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.webbase.sekitei.OptBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 current_num = 1;
  if (has_current_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_num());
  }
  // repeated int32 child_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->child_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->child_list_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.webbase.sekitei.OptBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const OptBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.webbase.sekitei.OptBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.webbase.sekitei.OptBlock)
    MergeFrom(*source);
  }
}

void OptBlock::MergeFrom(const OptBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.webbase.sekitei.OptBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_list_.MergeFrom(from.child_list_);
  if (from.has_current_num()) {
    set_current_num(from.current_num());
  }
}

void OptBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.webbase.sekitei.OptBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptBlock::CopyFrom(const OptBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.webbase.sekitei.OptBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OptBlock::Swap(OptBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptBlock::InternalSwap(OptBlock* other) {
  using std::swap;
  child_list_.InternalSwap(&other->child_list_);
  swap(current_num_, other->current_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptBlock::GetMetadata() const {
  protobuf_sekitei_5fexperimental_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sekitei_5fexperimental_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptBlock

// required int32 current_num = 1;
bool OptBlock::has_current_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OptBlock::set_has_current_num() {
  _has_bits_[0] |= 0x00000001u;
}
void OptBlock::clear_has_current_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void OptBlock::clear_current_num() {
  current_num_ = 0;
  clear_has_current_num();
}
::google::protobuf::int32 OptBlock::current_num() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.OptBlock.current_num)
  return current_num_;
}
void OptBlock::set_current_num(::google::protobuf::int32 value) {
  set_has_current_num();
  current_num_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.OptBlock.current_num)
}

// repeated int32 child_list = 2;
int OptBlock::child_list_size() const {
  return child_list_.size();
}
void OptBlock::clear_child_list() {
  child_list_.Clear();
}
::google::protobuf::int32 OptBlock::child_list(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return child_list_.Get(index);
}
void OptBlock::set_child_list(int index, ::google::protobuf::int32 value) {
  child_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.sekitei.OptBlock.child_list)
}
void OptBlock::add_child_list(::google::protobuf::int32 value) {
  child_list_.Add(value);
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.sekitei.OptBlock.child_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OptBlock::child_list() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return child_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OptBlock::mutable_child_list() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.sekitei.OptBlock.child_list)
  return &child_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sekitei
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
