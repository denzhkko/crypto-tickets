// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spritzedata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "spritzedata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ru {
namespace mail {
namespace go {
namespace spritzedata {
class ValueSimpleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValueSimple>
     _instance;
} _ValueSimple_default_instance_;
class ValueCompositeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValueComposite>
     _instance;
} _ValueComposite_default_instance_;
class ValueVectorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValueVector>
     _instance;
} _ValueVector_default_instance_;
class ParamSimpleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParamSimple>
     _instance;
} _ParamSimple_default_instance_;
class ParamCompositeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParamComposite>
     _instance;
} _ParamComposite_default_instance_;
class ParamVectorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParamVector>
     _instance;
} _ParamVector_default_instance_;
class SiteLinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SiteLink>
     _instance;
} _SiteLink_default_instance_;
class SiteLinksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SiteLinks>
     _instance;
} _SiteLinks_default_instance_;

namespace protobuf_spritzedata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSimple, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSimple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSimple, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSimple, value_integer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSimple, value_string_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueComposite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueComposite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueComposite, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueComposite, composite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueComposite, vector_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueVector, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueVector, item_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSimple, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSimple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSimple, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSimple, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamComposite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamComposite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamComposite, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamComposite, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamVector, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamVector, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamVector, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLink, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLink, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLink, title_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLinks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLinks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLinks, site_link_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(ValueSimple)},
  { 11, 19, sizeof(ValueComposite)},
  { 22, 28, sizeof(ValueVector)},
  { 29, 36, sizeof(ParamSimple)},
  { 38, 45, sizeof(ParamComposite)},
  { 47, 54, sizeof(ParamVector)},
  { 56, 63, sizeof(SiteLink)},
  { 65, 71, sizeof(SiteLinks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValueSimple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValueComposite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValueVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamSimple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamComposite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLinks_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "spritzedata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ValueSimple_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValueSimple_default_instance_);_ValueComposite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValueComposite_default_instance_);_ValueVector_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValueVector_default_instance_);_ParamSimple_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParamSimple_default_instance_);_ParamComposite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParamComposite_default_instance_);_ParamVector_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParamVector_default_instance_);_SiteLink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SiteLink_default_instance_);_SiteLinks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SiteLinks_default_instance_);_ParamSimple_default_instance_._instance.get_mutable()->value_ = const_cast< ::ru::mail::go::spritzedata::ValueSimple*>(
      ::ru::mail::go::spritzedata::ValueSimple::internal_default_instance());
  _ParamComposite_default_instance_._instance.get_mutable()->value_ = const_cast< ::ru::mail::go::spritzedata::ValueComposite*>(
      ::ru::mail::go::spritzedata::ValueComposite::internal_default_instance());
  _ParamVector_default_instance_._instance.get_mutable()->value_ = const_cast< ::ru::mail::go::spritzedata::ValueVector*>(
      ::ru::mail::go::spritzedata::ValueVector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021spritzedata.proto\022\026ru.mail.go.spritzed"
      "ata\"\223\001\n\013ValueSimple\0226\n\004type\030\001 \002(\0162(.ru.m"
      "ail.go.spritzedata.ValueSimple.Type\022\025\n\rv"
      "alue_integer\030\002 \001(\003\022\024\n\014value_string\030\003 \001(\t"
      "\"\037\n\004Type\022\013\n\007INTEGER\020\000\022\n\n\006STRING\020\001\"\264\001\n\016Va"
      "lueComposite\0222\n\005param\030\001 \003(\0132#.ru.mail.go"
      ".spritzedata.ParamSimple\0229\n\tcomposite\030\002 "
      "\003(\0132&.ru.mail.go.spritzedata.ParamCompos"
      "ite\0223\n\006vector\030\003 \003(\0132#.ru.mail.go.spritze"
      "data.ParamVector\"C\n\013ValueVector\0224\n\004item\030"
      "\001 \003(\0132&.ru.mail.go.spritzedata.ValueComp"
      "osite\"O\n\013ParamSimple\022\014\n\004name\030\001 \002(\t\0222\n\005va"
      "lue\030\002 \002(\0132#.ru.mail.go.spritzedata.Value"
      "Simple\"U\n\016ParamComposite\022\014\n\004name\030\001 \002(\t\0225"
      "\n\005value\030\002 \002(\0132&.ru.mail.go.spritzedata.V"
      "alueComposite\"O\n\013ParamVector\022\014\n\004name\030\001 \002"
      "(\t\0222\n\005value\030\002 \002(\0132#.ru.mail.go.spritzeda"
      "ta.ValueVector\"&\n\010SiteLink\022\013\n\003url\030\001 \002(\t\022"
      "\r\n\005title\030\002 \002(\t\"@\n\tSiteLinks\0223\n\tsite_link"
      "\030\001 \003(\0132 .ru.mail.go.spritzedata.SiteLink"
      "B\rB\013SpritzeData"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 815);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "spritzedata.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_spritzedata_2eproto

const ::google::protobuf::EnumDescriptor* ValueSimple_Type_descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_enum_descriptors[0];
}
bool ValueSimple_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ValueSimple_Type ValueSimple::INTEGER;
const ValueSimple_Type ValueSimple::STRING;
const ValueSimple_Type ValueSimple::Type_MIN;
const ValueSimple_Type ValueSimple::Type_MAX;
const int ValueSimple::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueSimple::kTypeFieldNumber;
const int ValueSimple::kValueIntegerFieldNumber;
const int ValueSimple::kValueStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueSimple::ValueSimple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ValueSimple)
}
ValueSimple::ValueSimple(const ValueSimple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value_string()) {
    value_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string_);
  }
  ::memcpy(&value_integer_, &from.value_integer_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_integer_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ValueSimple)
}

void ValueSimple::SharedCtor() {
  _cached_size_ = 0;
  value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_integer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_integer_)) + sizeof(type_));
}

ValueSimple::~ValueSimple() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ValueSimple)
  SharedDtor();
}

void ValueSimple::SharedDtor() {
  value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValueSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueSimple::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueSimple& ValueSimple::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueSimple* ValueSimple::New(::google::protobuf::Arena* arena) const {
  ValueSimple* n = new ValueSimple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueSimple::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ValueSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_value_string()) {
    GOOGLE_DCHECK(!value_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_string_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&value_integer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&value_integer_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueSimple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ValueSimple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ru.mail.go.spritzedata.ValueSimple.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ru::mail::go::spritzedata::ValueSimple_Type_IsValid(value)) {
            set_type(static_cast< ::ru::mail::go::spritzedata::ValueSimple_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value_integer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value_integer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_integer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value_string().data(), static_cast<int>(this->value_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.ValueSimple.value_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ValueSimple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ValueSimple)
  return false;
#undef DO_
}

void ValueSimple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ValueSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.spritzedata.ValueSimple.Type type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 value_integer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value_integer(), output);
  }

  // optional string value_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ValueSimple.value_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ValueSimple)
}

::google::protobuf::uint8* ValueSimple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ValueSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ru.mail.go.spritzedata.ValueSimple.Type type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 value_integer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value_integer(), target);
  }

  // optional string value_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ValueSimple.value_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ValueSimple)
  return target;
}

size_t ValueSimple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ValueSimple)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ru.mail.go.spritzedata.ValueSimple.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string value_string = 3;
    if (has_value_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
    }

    // optional int64 value_integer = 2;
    if (has_value_integer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value_integer());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueSimple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ValueSimple)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueSimple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueSimple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ValueSimple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ValueSimple)
    MergeFrom(*source);
  }
}

void ValueSimple::MergeFrom(const ValueSimple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ValueSimple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value_string();
      value_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_integer_ = from.value_integer_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ValueSimple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ValueSimple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueSimple::CopyFrom(const ValueSimple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ValueSimple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueSimple::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ValueSimple::Swap(ValueSimple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueSimple::InternalSwap(ValueSimple* other) {
  using std::swap;
  value_string_.Swap(&other->value_string_);
  swap(value_integer_, other->value_integer_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueSimple::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueSimple

// required .ru.mail.go.spritzedata.ValueSimple.Type type = 1;
bool ValueSimple::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ValueSimple::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ValueSimple::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ValueSimple::clear_type() {
  type_ = 0;
  clear_has_type();
}
::ru::mail::go::spritzedata::ValueSimple_Type ValueSimple::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueSimple.type)
  return static_cast< ::ru::mail::go::spritzedata::ValueSimple_Type >(type_);
}
void ValueSimple::set_type(::ru::mail::go::spritzedata::ValueSimple_Type value) {
  assert(::ru::mail::go::spritzedata::ValueSimple_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ValueSimple.type)
}

// optional int64 value_integer = 2;
bool ValueSimple::has_value_integer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ValueSimple::set_has_value_integer() {
  _has_bits_[0] |= 0x00000002u;
}
void ValueSimple::clear_has_value_integer() {
  _has_bits_[0] &= ~0x00000002u;
}
void ValueSimple::clear_value_integer() {
  value_integer_ = GOOGLE_LONGLONG(0);
  clear_has_value_integer();
}
::google::protobuf::int64 ValueSimple::value_integer() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueSimple.value_integer)
  return value_integer_;
}
void ValueSimple::set_value_integer(::google::protobuf::int64 value) {
  set_has_value_integer();
  value_integer_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ValueSimple.value_integer)
}

// optional string value_string = 3;
bool ValueSimple::has_value_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ValueSimple::set_has_value_string() {
  _has_bits_[0] |= 0x00000001u;
}
void ValueSimple::clear_has_value_string() {
  _has_bits_[0] &= ~0x00000001u;
}
void ValueSimple::clear_value_string() {
  value_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value_string();
}
const ::std::string& ValueSimple::value_string() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueSimple.value_string)
  return value_string_.GetNoArena();
}
void ValueSimple::set_value_string(const ::std::string& value) {
  set_has_value_string();
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ValueSimple.value_string)
}
#if LANG_CXX11
void ValueSimple::set_value_string(::std::string&& value) {
  set_has_value_string();
  value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.ValueSimple.value_string)
}
#endif
void ValueSimple::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value_string();
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.ValueSimple.value_string)
}
void ValueSimple::set_value_string(const char* value, size_t size) {
  set_has_value_string();
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.ValueSimple.value_string)
}
::std::string* ValueSimple::mutable_value_string() {
  set_has_value_string();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ValueSimple.value_string)
  return value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ValueSimple::release_value_string() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ValueSimple.value_string)
  clear_has_value_string();
  return value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ValueSimple::set_allocated_value_string(::std::string* value_string) {
  if (value_string != NULL) {
    set_has_value_string();
  } else {
    clear_has_value_string();
  }
  value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_string);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ValueSimple.value_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueComposite::kParamFieldNumber;
const int ValueComposite::kCompositeFieldNumber;
const int ValueComposite::kVectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueComposite::ValueComposite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ValueComposite)
}
ValueComposite::ValueComposite(const ValueComposite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      param_(from.param_),
      composite_(from.composite_),
      vector_(from.vector_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ValueComposite)
}

void ValueComposite::SharedCtor() {
  _cached_size_ = 0;
}

ValueComposite::~ValueComposite() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ValueComposite)
  SharedDtor();
}

void ValueComposite::SharedDtor() {
}

void ValueComposite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueComposite::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueComposite& ValueComposite::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueComposite* ValueComposite::New(::google::protobuf::Arena* arena) const {
  ValueComposite* n = new ValueComposite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueComposite::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ValueComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.Clear();
  composite_.Clear();
  vector_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueComposite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ValueComposite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.spritzedata.ParamSimple param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.spritzedata.ParamComposite composite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_composite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ru.mail.go.spritzedata.ParamVector vector = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vector()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ValueComposite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ValueComposite)
  return false;
#undef DO_
}

void ValueComposite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ValueComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.ParamSimple param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->param(static_cast<int>(i)), output);
  }

  // repeated .ru.mail.go.spritzedata.ParamComposite composite = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->composite_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->composite(static_cast<int>(i)), output);
  }

  // repeated .ru.mail.go.spritzedata.ParamVector vector = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->vector(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ValueComposite)
}

::google::protobuf::uint8* ValueComposite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ValueComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.ParamSimple param = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->param(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ru.mail.go.spritzedata.ParamComposite composite = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->composite_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->composite(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ru.mail.go.spritzedata.ParamVector vector = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->vector(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ValueComposite)
  return target;
}

size_t ValueComposite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ValueComposite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.spritzedata.ParamSimple param = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->param(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.spritzedata.ParamComposite composite = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->composite_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->composite(static_cast<int>(i)));
    }
  }

  // repeated .ru.mail.go.spritzedata.ParamVector vector = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vector_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vector(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueComposite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ValueComposite)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueComposite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueComposite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ValueComposite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ValueComposite)
    MergeFrom(*source);
  }
}

void ValueComposite::MergeFrom(const ValueComposite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ValueComposite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_.MergeFrom(from.param_);
  composite_.MergeFrom(from.composite_);
  vector_.MergeFrom(from.vector_);
}

void ValueComposite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ValueComposite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueComposite::CopyFrom(const ValueComposite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ValueComposite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueComposite::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->param())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->composite())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vector())) return false;
  return true;
}

void ValueComposite::Swap(ValueComposite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueComposite::InternalSwap(ValueComposite* other) {
  using std::swap;
  param_.InternalSwap(&other->param_);
  composite_.InternalSwap(&other->composite_);
  vector_.InternalSwap(&other->vector_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueComposite::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueComposite

// repeated .ru.mail.go.spritzedata.ParamSimple param = 1;
int ValueComposite::param_size() const {
  return param_.size();
}
void ValueComposite::clear_param() {
  param_.Clear();
}
const ::ru::mail::go::spritzedata::ParamSimple& ValueComposite::param(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueComposite.param)
  return param_.Get(index);
}
::ru::mail::go::spritzedata::ParamSimple* ValueComposite::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ValueComposite.param)
  return param_.Mutable(index);
}
::ru::mail::go::spritzedata::ParamSimple* ValueComposite::add_param() {
  // @@protoc_insertion_point(field_add:ru.mail.go.spritzedata.ValueComposite.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamSimple >*
ValueComposite::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.spritzedata.ValueComposite.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamSimple >&
ValueComposite::param() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.spritzedata.ValueComposite.param)
  return param_;
}

// repeated .ru.mail.go.spritzedata.ParamComposite composite = 2;
int ValueComposite::composite_size() const {
  return composite_.size();
}
void ValueComposite::clear_composite() {
  composite_.Clear();
}
const ::ru::mail::go::spritzedata::ParamComposite& ValueComposite::composite(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueComposite.composite)
  return composite_.Get(index);
}
::ru::mail::go::spritzedata::ParamComposite* ValueComposite::mutable_composite(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ValueComposite.composite)
  return composite_.Mutable(index);
}
::ru::mail::go::spritzedata::ParamComposite* ValueComposite::add_composite() {
  // @@protoc_insertion_point(field_add:ru.mail.go.spritzedata.ValueComposite.composite)
  return composite_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamComposite >*
ValueComposite::mutable_composite() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.spritzedata.ValueComposite.composite)
  return &composite_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamComposite >&
ValueComposite::composite() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.spritzedata.ValueComposite.composite)
  return composite_;
}

// repeated .ru.mail.go.spritzedata.ParamVector vector = 3;
int ValueComposite::vector_size() const {
  return vector_.size();
}
void ValueComposite::clear_vector() {
  vector_.Clear();
}
const ::ru::mail::go::spritzedata::ParamVector& ValueComposite::vector(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueComposite.vector)
  return vector_.Get(index);
}
::ru::mail::go::spritzedata::ParamVector* ValueComposite::mutable_vector(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ValueComposite.vector)
  return vector_.Mutable(index);
}
::ru::mail::go::spritzedata::ParamVector* ValueComposite::add_vector() {
  // @@protoc_insertion_point(field_add:ru.mail.go.spritzedata.ValueComposite.vector)
  return vector_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamVector >*
ValueComposite::mutable_vector() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.spritzedata.ValueComposite.vector)
  return &vector_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ParamVector >&
ValueComposite::vector() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.spritzedata.ValueComposite.vector)
  return vector_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueVector::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueVector::ValueVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ValueVector)
}
ValueVector::ValueVector(const ValueVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ValueVector)
}

void ValueVector::SharedCtor() {
  _cached_size_ = 0;
}

ValueVector::~ValueVector() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ValueVector)
  SharedDtor();
}

void ValueVector::SharedDtor() {
}

void ValueVector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueVector::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueVector& ValueVector::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueVector* ValueVector::New(::google::protobuf::Arena* arena) const {
  ValueVector* n = new ValueVector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueVector::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ValueVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ValueVector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.spritzedata.ValueComposite item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ValueVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ValueVector)
  return false;
#undef DO_
}

void ValueVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ValueVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.ValueComposite item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ValueVector)
}

::google::protobuf::uint8* ValueVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ValueVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.ValueComposite item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ValueVector)
  return target;
}

size_t ValueVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ValueVector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.spritzedata.ValueComposite item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ValueVector)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ValueVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ValueVector)
    MergeFrom(*source);
  }
}

void ValueVector::MergeFrom(const ValueVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ValueVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void ValueVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ValueVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueVector::CopyFrom(const ValueVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ValueVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueVector::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  return true;
}

void ValueVector::Swap(ValueVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueVector::InternalSwap(ValueVector* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueVector::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueVector

// repeated .ru.mail.go.spritzedata.ValueComposite item = 1;
int ValueVector::item_size() const {
  return item_.size();
}
void ValueVector::clear_item() {
  item_.Clear();
}
const ::ru::mail::go::spritzedata::ValueComposite& ValueVector::item(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ValueVector.item)
  return item_.Get(index);
}
::ru::mail::go::spritzedata::ValueComposite* ValueVector::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ValueVector.item)
  return item_.Mutable(index);
}
::ru::mail::go::spritzedata::ValueComposite* ValueVector::add_item() {
  // @@protoc_insertion_point(field_add:ru.mail.go.spritzedata.ValueVector.item)
  return item_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ValueComposite >*
ValueVector::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.spritzedata.ValueVector.item)
  return &item_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::ValueComposite >&
ValueVector::item() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.spritzedata.ValueVector.item)
  return item_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamSimple::kNameFieldNumber;
const int ParamSimple::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamSimple::ParamSimple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ParamSimple)
}
ParamSimple::ParamSimple(const ParamSimple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::ru::mail::go::spritzedata::ValueSimple(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ParamSimple)
}

void ParamSimple::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

ParamSimple::~ParamSimple() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ParamSimple)
  SharedDtor();
}

void ParamSimple::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void ParamSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamSimple::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamSimple& ParamSimple::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamSimple* ParamSimple::New(::google::protobuf::Arena* arena) const {
  ParamSimple* n = new ParamSimple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamSimple::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ParamSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::ru::mail::go::spritzedata::ValueSimple::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParamSimple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ParamSimple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.ParamSimple.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.spritzedata.ValueSimple value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ParamSimple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ParamSimple)
  return false;
#undef DO_
}

void ParamSimple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ParamSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamSimple.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .ru.mail.go.spritzedata.ValueSimple value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ParamSimple)
}

::google::protobuf::uint8* ParamSimple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ParamSimple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamSimple.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .ru.mail.go.spritzedata.ValueSimple value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ParamSimple)
  return target;
}

size_t ParamSimple::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.spritzedata.ParamSimple)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required .ru.mail.go.spritzedata.ValueSimple value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  return total_size;
}
size_t ParamSimple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ParamSimple)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .ru.mail.go.spritzedata.ValueSimple value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamSimple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ParamSimple)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamSimple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamSimple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ParamSimple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ParamSimple)
    MergeFrom(*source);
  }
}

void ParamSimple::MergeFrom(const ParamSimple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ParamSimple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::ru::mail::go::spritzedata::ValueSimple::MergeFrom(from.value());
    }
  }
}

void ParamSimple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ParamSimple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamSimple::CopyFrom(const ParamSimple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ParamSimple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamSimple::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void ParamSimple::Swap(ParamSimple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamSimple::InternalSwap(ParamSimple* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamSimple::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamSimple

// required string name = 1;
bool ParamSimple::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParamSimple::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ParamSimple::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParamSimple::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ParamSimple::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamSimple.name)
  return name_.GetNoArena();
}
void ParamSimple::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ParamSimple.name)
}
#if LANG_CXX11
void ParamSimple::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.ParamSimple.name)
}
#endif
void ParamSimple::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.ParamSimple.name)
}
void ParamSimple::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.ParamSimple.name)
}
::std::string* ParamSimple::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamSimple.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSimple::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamSimple.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSimple::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamSimple.name)
}

// required .ru.mail.go.spritzedata.ValueSimple value = 2;
bool ParamSimple::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParamSimple::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void ParamSimple::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParamSimple::clear_value() {
  if (value_ != NULL) value_->::ru::mail::go::spritzedata::ValueSimple::Clear();
  clear_has_value();
}
const ::ru::mail::go::spritzedata::ValueSimple& ParamSimple::value() const {
  const ::ru::mail::go::spritzedata::ValueSimple* p = value_;
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamSimple.value)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::spritzedata::ValueSimple*>(
      &::ru::mail::go::spritzedata::_ValueSimple_default_instance_);
}
::ru::mail::go::spritzedata::ValueSimple* ParamSimple::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::ru::mail::go::spritzedata::ValueSimple;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamSimple.value)
  return value_;
}
::ru::mail::go::spritzedata::ValueSimple* ParamSimple::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamSimple.value)
  clear_has_value();
  ::ru::mail::go::spritzedata::ValueSimple* temp = value_;
  value_ = NULL;
  return temp;
}
void ParamSimple::set_allocated_value(::ru::mail::go::spritzedata::ValueSimple* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamSimple.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamComposite::kNameFieldNumber;
const int ParamComposite::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamComposite::ParamComposite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ParamComposite)
}
ParamComposite::ParamComposite(const ParamComposite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::ru::mail::go::spritzedata::ValueComposite(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ParamComposite)
}

void ParamComposite::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

ParamComposite::~ParamComposite() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ParamComposite)
  SharedDtor();
}

void ParamComposite::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void ParamComposite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamComposite::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamComposite& ParamComposite::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamComposite* ParamComposite::New(::google::protobuf::Arena* arena) const {
  ParamComposite* n = new ParamComposite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamComposite::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ParamComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::ru::mail::go::spritzedata::ValueComposite::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParamComposite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ParamComposite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.ParamComposite.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.spritzedata.ValueComposite value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ParamComposite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ParamComposite)
  return false;
#undef DO_
}

void ParamComposite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ParamComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamComposite.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .ru.mail.go.spritzedata.ValueComposite value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ParamComposite)
}

::google::protobuf::uint8* ParamComposite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ParamComposite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamComposite.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .ru.mail.go.spritzedata.ValueComposite value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ParamComposite)
  return target;
}

size_t ParamComposite::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.spritzedata.ParamComposite)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required .ru.mail.go.spritzedata.ValueComposite value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  return total_size;
}
size_t ParamComposite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ParamComposite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .ru.mail.go.spritzedata.ValueComposite value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamComposite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ParamComposite)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamComposite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamComposite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ParamComposite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ParamComposite)
    MergeFrom(*source);
  }
}

void ParamComposite::MergeFrom(const ParamComposite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ParamComposite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::ru::mail::go::spritzedata::ValueComposite::MergeFrom(from.value());
    }
  }
}

void ParamComposite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ParamComposite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamComposite::CopyFrom(const ParamComposite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ParamComposite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamComposite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void ParamComposite::Swap(ParamComposite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamComposite::InternalSwap(ParamComposite* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamComposite::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamComposite

// required string name = 1;
bool ParamComposite::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParamComposite::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ParamComposite::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParamComposite::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ParamComposite::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamComposite.name)
  return name_.GetNoArena();
}
void ParamComposite::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ParamComposite.name)
}
#if LANG_CXX11
void ParamComposite::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.ParamComposite.name)
}
#endif
void ParamComposite::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.ParamComposite.name)
}
void ParamComposite::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.ParamComposite.name)
}
::std::string* ParamComposite::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamComposite.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamComposite::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamComposite.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamComposite::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamComposite.name)
}

// required .ru.mail.go.spritzedata.ValueComposite value = 2;
bool ParamComposite::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParamComposite::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void ParamComposite::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParamComposite::clear_value() {
  if (value_ != NULL) value_->::ru::mail::go::spritzedata::ValueComposite::Clear();
  clear_has_value();
}
const ::ru::mail::go::spritzedata::ValueComposite& ParamComposite::value() const {
  const ::ru::mail::go::spritzedata::ValueComposite* p = value_;
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamComposite.value)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::spritzedata::ValueComposite*>(
      &::ru::mail::go::spritzedata::_ValueComposite_default_instance_);
}
::ru::mail::go::spritzedata::ValueComposite* ParamComposite::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::ru::mail::go::spritzedata::ValueComposite;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamComposite.value)
  return value_;
}
::ru::mail::go::spritzedata::ValueComposite* ParamComposite::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamComposite.value)
  clear_has_value();
  ::ru::mail::go::spritzedata::ValueComposite* temp = value_;
  value_ = NULL;
  return temp;
}
void ParamComposite::set_allocated_value(::ru::mail::go::spritzedata::ValueComposite* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamComposite.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamVector::kNameFieldNumber;
const int ParamVector::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamVector::ParamVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.ParamVector)
}
ParamVector::ParamVector(const ParamVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::ru::mail::go::spritzedata::ValueVector(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.ParamVector)
}

void ParamVector::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

ParamVector::~ParamVector() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.ParamVector)
  SharedDtor();
}

void ParamVector::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void ParamVector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamVector::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamVector& ParamVector::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamVector* ParamVector::New(::google::protobuf::Arena* arena) const {
  ParamVector* n = new ParamVector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamVector::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.ParamVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::ru::mail::go::spritzedata::ValueVector::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParamVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.ParamVector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.ParamVector.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ru.mail.go.spritzedata.ValueVector value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.ParamVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.ParamVector)
  return false;
#undef DO_
}

void ParamVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.ParamVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamVector.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .ru.mail.go.spritzedata.ValueVector value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.ParamVector)
}

::google::protobuf::uint8* ParamVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.ParamVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.ParamVector.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .ru.mail.go.spritzedata.ValueVector value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.ParamVector)
  return target;
}

size_t ParamVector::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.spritzedata.ParamVector)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required .ru.mail.go.spritzedata.ValueVector value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  return total_size;
}
size_t ParamVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.ParamVector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .ru.mail.go.spritzedata.ValueVector value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.ParamVector)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.ParamVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.ParamVector)
    MergeFrom(*source);
  }
}

void ParamVector::MergeFrom(const ParamVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.ParamVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::ru::mail::go::spritzedata::ValueVector::MergeFrom(from.value());
    }
  }
}

void ParamVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.ParamVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamVector::CopyFrom(const ParamVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.ParamVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamVector::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void ParamVector::Swap(ParamVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamVector::InternalSwap(ParamVector* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamVector::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamVector

// required string name = 1;
bool ParamVector::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParamVector::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ParamVector::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParamVector::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ParamVector::name() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamVector.name)
  return name_.GetNoArena();
}
void ParamVector::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.ParamVector.name)
}
#if LANG_CXX11
void ParamVector::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.ParamVector.name)
}
#endif
void ParamVector::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.ParamVector.name)
}
void ParamVector::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.ParamVector.name)
}
::std::string* ParamVector::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamVector.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamVector::release_name() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamVector.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamVector::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamVector.name)
}

// required .ru.mail.go.spritzedata.ValueVector value = 2;
bool ParamVector::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParamVector::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void ParamVector::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParamVector::clear_value() {
  if (value_ != NULL) value_->::ru::mail::go::spritzedata::ValueVector::Clear();
  clear_has_value();
}
const ::ru::mail::go::spritzedata::ValueVector& ParamVector::value() const {
  const ::ru::mail::go::spritzedata::ValueVector* p = value_;
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.ParamVector.value)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::spritzedata::ValueVector*>(
      &::ru::mail::go::spritzedata::_ValueVector_default_instance_);
}
::ru::mail::go::spritzedata::ValueVector* ParamVector::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::ru::mail::go::spritzedata::ValueVector;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.ParamVector.value)
  return value_;
}
::ru::mail::go::spritzedata::ValueVector* ParamVector::release_value() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.ParamVector.value)
  clear_has_value();
  ::ru::mail::go::spritzedata::ValueVector* temp = value_;
  value_ = NULL;
  return temp;
}
void ParamVector::set_allocated_value(::ru::mail::go::spritzedata::ValueVector* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.ParamVector.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLink::kUrlFieldNumber;
const int SiteLink::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLink::SiteLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.SiteLink)
}
SiteLink::SiteLink(const SiteLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.SiteLink)
}

void SiteLink::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SiteLink::~SiteLink() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.SiteLink)
  SharedDtor();
}

void SiteLink::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLink::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLink& SiteLink::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLink* SiteLink::New(::google::protobuf::Arena* arena) const {
  SiteLink* n = new SiteLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLink::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.SiteLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SiteLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.SiteLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.SiteLink.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ru.mail.go.spritzedata.SiteLink.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.SiteLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.SiteLink)
  return false;
#undef DO_
}

void SiteLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.SiteLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.SiteLink.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.SiteLink.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.SiteLink)
}

::google::protobuf::uint8* SiteLink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.SiteLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.SiteLink.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ru.mail.go.spritzedata.SiteLink.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.SiteLink)
  return target;
}

size_t SiteLink::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ru.mail.go.spritzedata.SiteLink)
  size_t total_size = 0;

  if (has_url()) {
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (has_title()) {
    // required string title = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  return total_size;
}
size_t SiteLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.SiteLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());

    // required string title = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.SiteLink)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.SiteLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.SiteLink)
    MergeFrom(*source);
  }
}

void SiteLink::MergeFrom(const SiteLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.SiteLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
  }
}

void SiteLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.SiteLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLink::CopyFrom(const SiteLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.SiteLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLink::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SiteLink::Swap(SiteLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLink::InternalSwap(SiteLink* other) {
  using std::swap;
  url_.Swap(&other->url_);
  title_.Swap(&other->title_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLink::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLink

// required string url = 1;
bool SiteLink::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SiteLink::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void SiteLink::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void SiteLink::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& SiteLink::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.SiteLink.url)
  return url_.GetNoArena();
}
void SiteLink::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.SiteLink.url)
}
#if LANG_CXX11
void SiteLink::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.SiteLink.url)
}
#endif
void SiteLink::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.SiteLink.url)
}
void SiteLink::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.SiteLink.url)
}
::std::string* SiteLink::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.SiteLink.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLink::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.SiteLink.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLink::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.SiteLink.url)
}

// required string title = 2;
bool SiteLink::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SiteLink::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void SiteLink::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void SiteLink::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& SiteLink::title() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.SiteLink.title)
  return title_.GetNoArena();
}
void SiteLink::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.spritzedata.SiteLink.title)
}
#if LANG_CXX11
void SiteLink::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.spritzedata.SiteLink.title)
}
#endif
void SiteLink::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.spritzedata.SiteLink.title)
}
void SiteLink::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.spritzedata.SiteLink.title)
}
::std::string* SiteLink::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.SiteLink.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLink::release_title() {
  // @@protoc_insertion_point(field_release:ru.mail.go.spritzedata.SiteLink.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLink::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.spritzedata.SiteLink.title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLinks::kSiteLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLinks::SiteLinks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spritzedata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ru.mail.go.spritzedata.SiteLinks)
}
SiteLinks::SiteLinks(const SiteLinks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      site_link_(from.site_link_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ru.mail.go.spritzedata.SiteLinks)
}

void SiteLinks::SharedCtor() {
  _cached_size_ = 0;
}

SiteLinks::~SiteLinks() {
  // @@protoc_insertion_point(destructor:ru.mail.go.spritzedata.SiteLinks)
  SharedDtor();
}

void SiteLinks::SharedDtor() {
}

void SiteLinks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLinks::descriptor() {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLinks& SiteLinks::default_instance() {
  protobuf_spritzedata_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLinks* SiteLinks::New(::google::protobuf::Arena* arena) const {
  SiteLinks* n = new SiteLinks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:ru.mail.go.spritzedata.SiteLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  site_link_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SiteLinks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ru.mail.go.spritzedata.SiteLinks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ru.mail.go.spritzedata.SiteLink site_link = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_site_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ru.mail.go.spritzedata.SiteLinks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ru.mail.go.spritzedata.SiteLinks)
  return false;
#undef DO_
}

void SiteLinks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ru.mail.go.spritzedata.SiteLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.SiteLink site_link = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->site_link_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->site_link(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ru.mail.go.spritzedata.SiteLinks)
}

::google::protobuf::uint8* SiteLinks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ru.mail.go.spritzedata.SiteLinks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ru.mail.go.spritzedata.SiteLink site_link = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->site_link_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->site_link(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ru.mail.go.spritzedata.SiteLinks)
  return target;
}

size_t SiteLinks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ru.mail.go.spritzedata.SiteLinks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ru.mail.go.spritzedata.SiteLink site_link = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->site_link_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->site_link(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLinks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ru.mail.go.spritzedata.SiteLinks)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLinks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLinks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ru.mail.go.spritzedata.SiteLinks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ru.mail.go.spritzedata.SiteLinks)
    MergeFrom(*source);
  }
}

void SiteLinks::MergeFrom(const SiteLinks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ru.mail.go.spritzedata.SiteLinks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  site_link_.MergeFrom(from.site_link_);
}

void SiteLinks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ru.mail.go.spritzedata.SiteLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLinks::CopyFrom(const SiteLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ru.mail.go.spritzedata.SiteLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLinks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->site_link())) return false;
  return true;
}

void SiteLinks::Swap(SiteLinks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLinks::InternalSwap(SiteLinks* other) {
  using std::swap;
  site_link_.InternalSwap(&other->site_link_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLinks::GetMetadata() const {
  protobuf_spritzedata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spritzedata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLinks

// repeated .ru.mail.go.spritzedata.SiteLink site_link = 1;
int SiteLinks::site_link_size() const {
  return site_link_.size();
}
void SiteLinks::clear_site_link() {
  site_link_.Clear();
}
const ::ru::mail::go::spritzedata::SiteLink& SiteLinks::site_link(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.spritzedata.SiteLinks.site_link)
  return site_link_.Get(index);
}
::ru::mail::go::spritzedata::SiteLink* SiteLinks::mutable_site_link(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.spritzedata.SiteLinks.site_link)
  return site_link_.Mutable(index);
}
::ru::mail::go::spritzedata::SiteLink* SiteLinks::add_site_link() {
  // @@protoc_insertion_point(field_add:ru.mail.go.spritzedata.SiteLinks.site_link)
  return site_link_.Add();
}
::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::SiteLink >*
SiteLinks::mutable_site_link() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.spritzedata.SiteLinks.site_link)
  return &site_link_;
}
const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::spritzedata::SiteLink >&
SiteLinks::site_link() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.spritzedata.SiteLinks.site_link)
  return site_link_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace spritzedata
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)
