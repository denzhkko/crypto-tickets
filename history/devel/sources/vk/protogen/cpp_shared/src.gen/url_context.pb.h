// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: url_context.proto

#ifndef PROTOBUF_url_5fcontext_2eproto__INCLUDED
#define PROTOBUF_url_5fcontext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ns_mailru_spider {
class url_context;
class url_contextDefaultTypeInternal;
extern url_contextDefaultTypeInternal _url_context_default_instance_;
}  // namespace ns_mailru_spider

namespace ns_mailru_spider {

namespace protobuf_url_5fcontext_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_url_5fcontext_2eproto

enum url_context_state_t {
  url_context_state_t_us_new = 0,
  url_context_state_t_us_ok = 2,
  url_context_state_t_us_bad = 3,
  url_context_state_t_us_disabled = 4,
  url_context_state_t_us_removed = 5,
  url_context_state_t_us_duplicate = 6,
  url_context_state_t_us_failure = 7,
  url_context_state_t_us_reload = 8,
  url_context_state_t_us_shingle_dup = 9,
  url_context_state_t_us_redirect = 10
};
bool url_context_state_t_IsValid(int value);
const url_context_state_t url_context_state_t_state_t_MIN = url_context_state_t_us_new;
const url_context_state_t url_context_state_t_state_t_MAX = url_context_state_t_us_redirect;
const int url_context_state_t_state_t_ARRAYSIZE = url_context_state_t_state_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* url_context_state_t_descriptor();
inline const ::std::string& url_context_state_t_Name(url_context_state_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    url_context_state_t_descriptor(), value);
}
inline bool url_context_state_t_Parse(
    const ::std::string& name, url_context_state_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<url_context_state_t>(
    url_context_state_t_descriptor(), name, value);
}
enum url_context_language_t {
  url_context_language_t_lang_unknown = 0,
  url_context_language_t_lang_russian = 1,
  url_context_language_t_lang_cyrillic = 2,
  url_context_language_t_lang_bolgarian = 3,
  url_context_language_t_lang_ukrainian = 4
};
bool url_context_language_t_IsValid(int value);
const url_context_language_t url_context_language_t_language_t_MIN = url_context_language_t_lang_unknown;
const url_context_language_t url_context_language_t_language_t_MAX = url_context_language_t_lang_ukrainian;
const int url_context_language_t_language_t_ARRAYSIZE = url_context_language_t_language_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* url_context_language_t_descriptor();
inline const ::std::string& url_context_language_t_Name(url_context_language_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    url_context_language_t_descriptor(), value);
}
inline bool url_context_language_t_Parse(
    const ::std::string& name, url_context_language_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<url_context_language_t>(
    url_context_language_t_descriptor(), name, value);
}
// ===================================================================

class url_context : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ns_mailru_spider.url_context) */ {
 public:
  url_context();
  virtual ~url_context();

  url_context(const url_context& from);

  inline url_context& operator=(const url_context& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  url_context(url_context&& from) noexcept
    : url_context() {
    *this = ::std::move(from);
  }

  inline url_context& operator=(url_context&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const url_context& default_instance();

  static inline const url_context* internal_default_instance() {
    return reinterpret_cast<const url_context*>(
               &_url_context_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(url_context* other);
  friend void swap(url_context& a, url_context& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline url_context* New() const PROTOBUF_FINAL { return New(NULL); }

  url_context* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const url_context& from);
  void MergeFrom(const url_context& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(url_context* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef url_context_state_t state_t;
  static const state_t us_new =
    url_context_state_t_us_new;
  static const state_t us_ok =
    url_context_state_t_us_ok;
  static const state_t us_bad =
    url_context_state_t_us_bad;
  static const state_t us_disabled =
    url_context_state_t_us_disabled;
  static const state_t us_removed =
    url_context_state_t_us_removed;
  static const state_t us_duplicate =
    url_context_state_t_us_duplicate;
  static const state_t us_failure =
    url_context_state_t_us_failure;
  static const state_t us_reload =
    url_context_state_t_us_reload;
  static const state_t us_shingle_dup =
    url_context_state_t_us_shingle_dup;
  static const state_t us_redirect =
    url_context_state_t_us_redirect;
  static inline bool state_t_IsValid(int value) {
    return url_context_state_t_IsValid(value);
  }
  static const state_t state_t_MIN =
    url_context_state_t_state_t_MIN;
  static const state_t state_t_MAX =
    url_context_state_t_state_t_MAX;
  static const int state_t_ARRAYSIZE =
    url_context_state_t_state_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  state_t_descriptor() {
    return url_context_state_t_descriptor();
  }
  static inline const ::std::string& state_t_Name(state_t value) {
    return url_context_state_t_Name(value);
  }
  static inline bool state_t_Parse(const ::std::string& name,
      state_t* value) {
    return url_context_state_t_Parse(name, value);
  }

  typedef url_context_language_t language_t;
  static const language_t lang_unknown =
    url_context_language_t_lang_unknown;
  static const language_t lang_russian =
    url_context_language_t_lang_russian;
  static const language_t lang_cyrillic =
    url_context_language_t_lang_cyrillic;
  static const language_t lang_bolgarian =
    url_context_language_t_lang_bolgarian;
  static const language_t lang_ukrainian =
    url_context_language_t_lang_ukrainian;
  static inline bool language_t_IsValid(int value) {
    return url_context_language_t_IsValid(value);
  }
  static const language_t language_t_MIN =
    url_context_language_t_language_t_MIN;
  static const language_t language_t_MAX =
    url_context_language_t_language_t_MAX;
  static const int language_t_ARRAYSIZE =
    url_context_language_t_language_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  language_t_descriptor() {
    return url_context_language_t_descriptor();
  }
  static inline const ::std::string& language_t_Name(language_t value) {
    return url_context_language_t_Name(value);
  }
  static inline bool language_t_Parse(const ::std::string& name,
      language_t* value) {
    return url_context_language_t_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required int64 last_modified = 2;
  bool has_last_modified() const;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 2;
  ::google::protobuf::int64 last_modified() const;
  void set_last_modified(::google::protobuf::int64 value);

  // required .ns_mailru_spider.url_context.state_t state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::ns_mailru_spider::url_context_state_t state() const;
  void set_state(::ns_mailru_spider::url_context_state_t value);

  // required uint32 state_duration = 4;
  bool has_state_duration() const;
  void clear_state_duration();
  static const int kStateDurationFieldNumber = 4;
  ::google::protobuf::uint32 state_duration() const;
  void set_state_duration(::google::protobuf::uint32 value);

  // required uint32 depth = 5;
  bool has_depth() const;
  void clear_depth();
  static const int kDepthFieldNumber = 5;
  ::google::protobuf::uint32 depth() const;
  void set_depth(::google::protobuf::uint32 value);

  // optional .ns_mailru_spider.url_context.language_t language = 6;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 6;
  ::ns_mailru_spider::url_context_language_t language() const;
  void set_language(::ns_mailru_spider::url_context_language_t value);

  // optional bool fetch_forced = 7;
  bool has_fetch_forced() const;
  void clear_fetch_forced();
  static const int kFetchForcedFieldNumber = 7;
  bool fetch_forced() const;
  void set_fetch_forced(bool value);

  // optional bool indexed = 8;
  bool has_indexed() const;
  void clear_indexed();
  static const int kIndexedFieldNumber = 8;
  bool indexed() const;
  void set_indexed(bool value);

  // optional uint32 browse_rank = 9;
  bool has_browse_rank() const;
  void clear_browse_rank();
  static const int kBrowseRankFieldNumber = 9;
  ::google::protobuf::uint32 browse_rank() const;
  void set_browse_rank(::google::protobuf::uint32 value);

  // optional int64 browse_rank_ts = 10;
  bool has_browse_rank_ts() const;
  void clear_browse_rank_ts();
  static const int kBrowseRankTsFieldNumber = 10;
  ::google::protobuf::int64 browse_rank_ts() const;
  void set_browse_rank_ts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ns_mailru_spider.url_context)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_last_modified();
  void clear_has_last_modified();
  void set_has_state();
  void clear_has_state();
  void set_has_state_duration();
  void clear_has_state_duration();
  void set_has_depth();
  void clear_has_depth();
  void set_has_language();
  void clear_has_language();
  void set_has_fetch_forced();
  void clear_has_fetch_forced();
  void set_has_indexed();
  void clear_has_indexed();
  void set_has_browse_rank();
  void clear_has_browse_rank();
  void set_has_browse_rank_ts();
  void clear_has_browse_rank_ts();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int64 last_modified_;
  int state_;
  ::google::protobuf::uint32 state_duration_;
  ::google::protobuf::uint32 depth_;
  int language_;
  bool fetch_forced_;
  bool indexed_;
  ::google::protobuf::uint32 browse_rank_;
  ::google::protobuf::int64 browse_rank_ts_;
  friend struct protobuf_url_5fcontext_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// url_context

// required string url = 1;
inline bool url_context::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void url_context::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void url_context::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void url_context::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& url_context::url() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.url)
  return url_.GetNoArena();
}
inline void url_context::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.url)
}
#if LANG_CXX11
inline void url_context::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ns_mailru_spider.url_context.url)
}
#endif
inline void url_context::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ns_mailru_spider.url_context.url)
}
inline void url_context::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ns_mailru_spider.url_context.url)
}
inline ::std::string* url_context::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ns_mailru_spider.url_context.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* url_context::release_url() {
  // @@protoc_insertion_point(field_release:ns_mailru_spider.url_context.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void url_context::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ns_mailru_spider.url_context.url)
}

// required int64 last_modified = 2;
inline bool url_context::has_last_modified() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void url_context::set_has_last_modified() {
  _has_bits_[0] |= 0x00000002u;
}
inline void url_context::clear_has_last_modified() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void url_context::clear_last_modified() {
  last_modified_ = GOOGLE_LONGLONG(0);
  clear_has_last_modified();
}
inline ::google::protobuf::int64 url_context::last_modified() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.last_modified)
  return last_modified_;
}
inline void url_context::set_last_modified(::google::protobuf::int64 value) {
  set_has_last_modified();
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.last_modified)
}

// required .ns_mailru_spider.url_context.state_t state = 3;
inline bool url_context::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void url_context::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void url_context::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void url_context::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::ns_mailru_spider::url_context_state_t url_context::state() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.state)
  return static_cast< ::ns_mailru_spider::url_context_state_t >(state_);
}
inline void url_context::set_state(::ns_mailru_spider::url_context_state_t value) {
  assert(::ns_mailru_spider::url_context_state_t_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.state)
}

// required uint32 state_duration = 4;
inline bool url_context::has_state_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void url_context::set_has_state_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void url_context::clear_has_state_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void url_context::clear_state_duration() {
  state_duration_ = 0u;
  clear_has_state_duration();
}
inline ::google::protobuf::uint32 url_context::state_duration() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.state_duration)
  return state_duration_;
}
inline void url_context::set_state_duration(::google::protobuf::uint32 value) {
  set_has_state_duration();
  state_duration_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.state_duration)
}

// required uint32 depth = 5;
inline bool url_context::has_depth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void url_context::set_has_depth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void url_context::clear_has_depth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void url_context::clear_depth() {
  depth_ = 0u;
  clear_has_depth();
}
inline ::google::protobuf::uint32 url_context::depth() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.depth)
  return depth_;
}
inline void url_context::set_depth(::google::protobuf::uint32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.depth)
}

// optional .ns_mailru_spider.url_context.language_t language = 6;
inline bool url_context::has_language() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void url_context::set_has_language() {
  _has_bits_[0] |= 0x00000020u;
}
inline void url_context::clear_has_language() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void url_context::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::ns_mailru_spider::url_context_language_t url_context::language() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.language)
  return static_cast< ::ns_mailru_spider::url_context_language_t >(language_);
}
inline void url_context::set_language(::ns_mailru_spider::url_context_language_t value) {
  assert(::ns_mailru_spider::url_context_language_t_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.language)
}

// optional bool fetch_forced = 7;
inline bool url_context::has_fetch_forced() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void url_context::set_has_fetch_forced() {
  _has_bits_[0] |= 0x00000040u;
}
inline void url_context::clear_has_fetch_forced() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void url_context::clear_fetch_forced() {
  fetch_forced_ = false;
  clear_has_fetch_forced();
}
inline bool url_context::fetch_forced() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.fetch_forced)
  return fetch_forced_;
}
inline void url_context::set_fetch_forced(bool value) {
  set_has_fetch_forced();
  fetch_forced_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.fetch_forced)
}

// optional bool indexed = 8;
inline bool url_context::has_indexed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void url_context::set_has_indexed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void url_context::clear_has_indexed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void url_context::clear_indexed() {
  indexed_ = false;
  clear_has_indexed();
}
inline bool url_context::indexed() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.indexed)
  return indexed_;
}
inline void url_context::set_indexed(bool value) {
  set_has_indexed();
  indexed_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.indexed)
}

// optional uint32 browse_rank = 9;
inline bool url_context::has_browse_rank() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void url_context::set_has_browse_rank() {
  _has_bits_[0] |= 0x00000100u;
}
inline void url_context::clear_has_browse_rank() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void url_context::clear_browse_rank() {
  browse_rank_ = 0u;
  clear_has_browse_rank();
}
inline ::google::protobuf::uint32 url_context::browse_rank() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.browse_rank)
  return browse_rank_;
}
inline void url_context::set_browse_rank(::google::protobuf::uint32 value) {
  set_has_browse_rank();
  browse_rank_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.browse_rank)
}

// optional int64 browse_rank_ts = 10;
inline bool url_context::has_browse_rank_ts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void url_context::set_has_browse_rank_ts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void url_context::clear_has_browse_rank_ts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void url_context::clear_browse_rank_ts() {
  browse_rank_ts_ = GOOGLE_LONGLONG(0);
  clear_has_browse_rank_ts();
}
inline ::google::protobuf::int64 url_context::browse_rank_ts() const {
  // @@protoc_insertion_point(field_get:ns_mailru_spider.url_context.browse_rank_ts)
  return browse_rank_ts_;
}
inline void url_context::set_browse_rank_ts(::google::protobuf::int64 value) {
  set_has_browse_rank_ts();
  browse_rank_ts_ = value;
  // @@protoc_insertion_point(field_set:ns_mailru_spider.url_context.browse_rank_ts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace ns_mailru_spider

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ns_mailru_spider::url_context_state_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ns_mailru_spider::url_context_state_t>() {
  return ::ns_mailru_spider::url_context_state_t_descriptor();
}
template <> struct is_proto_enum< ::ns_mailru_spider::url_context_language_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ns_mailru_spider::url_context_language_t>() {
  return ::ns_mailru_spider::url_context_language_t_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_url_5fcontext_2eproto__INCLUDED
