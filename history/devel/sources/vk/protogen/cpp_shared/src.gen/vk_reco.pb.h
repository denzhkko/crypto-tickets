// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vk_reco.proto

#ifndef PROTOBUF_vk_5freco_2eproto__INCLUDED
#define PROTOBUF_vk_5freco_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "document_enums.pb.h"
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {
class VkRecoContainer;
class VkRecoContainerDefaultTypeInternal;
extern VkRecoContainerDefaultTypeInternal _VkRecoContainer_default_instance_;
class VkRecoItem;
class VkRecoItemDefaultTypeInternal;
extern VkRecoItemDefaultTypeInternal _VkRecoItem_default_instance_;
class VkRecoItemMetadata;
class VkRecoItemMetadataDefaultTypeInternal;
extern VkRecoItemMetadataDefaultTypeInternal _VkRecoItemMetadata_default_instance_;
}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace blobs {

namespace protobuf_vk_5freco_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_vk_5freco_2eproto

// ===================================================================

class VkRecoContainer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.VkRecoContainer) */ {
 public:
  VkRecoContainer();
  virtual ~VkRecoContainer();

  VkRecoContainer(const VkRecoContainer& from);

  inline VkRecoContainer& operator=(const VkRecoContainer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VkRecoContainer(VkRecoContainer&& from) noexcept
    : VkRecoContainer() {
    *this = ::std::move(from);
  }

  inline VkRecoContainer& operator=(VkRecoContainer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VkRecoContainer& default_instance();

  static inline const VkRecoContainer* internal_default_instance() {
    return reinterpret_cast<const VkRecoContainer*>(
               &_VkRecoContainer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VkRecoContainer* other);
  friend void swap(VkRecoContainer& a, VkRecoContainer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VkRecoContainer* New() const PROTOBUF_FINAL { return New(NULL); }

  VkRecoContainer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VkRecoContainer& from);
  void MergeFrom(const VkRecoContainer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VkRecoContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ru.mail.go.webbase.blobs.VkRecoItem common = 1;
  int common_size() const;
  void clear_common();
  static const int kCommonFieldNumber = 1;
  const ::ru::mail::go::webbase::blobs::VkRecoItem& common(int index) const;
  ::ru::mail::go::webbase::blobs::VkRecoItem* mutable_common(int index);
  ::ru::mail::go::webbase::blobs::VkRecoItem* add_common();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >*
      mutable_common();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >&
      common() const;

  // repeated .ru.mail.go.webbase.blobs.VkRecoItem highly_recommended = 2;
  int highly_recommended_size() const;
  void clear_highly_recommended();
  static const int kHighlyRecommendedFieldNumber = 2;
  const ::ru::mail::go::webbase::blobs::VkRecoItem& highly_recommended(int index) const;
  ::ru::mail::go::webbase::blobs::VkRecoItem* mutable_highly_recommended(int index);
  ::ru::mail::go::webbase::blobs::VkRecoItem* add_highly_recommended();
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >*
      mutable_highly_recommended();
  const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >&
      highly_recommended() const;

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.VkRecoContainer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem > common_;
  ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem > highly_recommended_;
  friend struct protobuf_vk_5freco_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VkRecoItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.VkRecoItem) */ {
 public:
  VkRecoItem();
  virtual ~VkRecoItem();

  VkRecoItem(const VkRecoItem& from);

  inline VkRecoItem& operator=(const VkRecoItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VkRecoItem(VkRecoItem&& from) noexcept
    : VkRecoItem() {
    *this = ::std::move(from);
  }

  inline VkRecoItem& operator=(VkRecoItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VkRecoItem& default_instance();

  static inline const VkRecoItem* internal_default_instance() {
    return reinterpret_cast<const VkRecoItem*>(
               &_VkRecoItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VkRecoItem* other);
  friend void swap(VkRecoItem& a, VkRecoItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VkRecoItem* New() const PROTOBUF_FINAL { return New(NULL); }

  VkRecoItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VkRecoItem& from);
  void MergeFrom(const VkRecoItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VkRecoItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ru.mail.go.webbase.blobs.VkRecoItemMetadata metadata = 4;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::ru::mail::go::webbase::blobs::VkRecoItemMetadata& metadata() const;
  ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* mutable_metadata();
  ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* release_metadata();
  void set_allocated_metadata(::ru::mail::go::webbase::blobs::VkRecoItemMetadata* metadata);

  // required int64 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // required int64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::int64 item_id() const;
  void set_item_id(::google::protobuf::int64 value);

  // optional int64 num_encountered = 3;
  bool has_num_encountered() const;
  void clear_num_encountered();
  static const int kNumEncounteredFieldNumber = 3;
  ::google::protobuf::int64 num_encountered() const;
  void set_num_encountered(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.VkRecoItem)
 private:
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_num_encountered();
  void clear_has_num_encountered();
  void set_has_metadata();
  void clear_has_metadata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* metadata_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 num_encountered_;
  friend struct protobuf_vk_5freco_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VkRecoItemMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.blobs.VkRecoItemMetadata) */ {
 public:
  VkRecoItemMetadata();
  virtual ~VkRecoItemMetadata();

  VkRecoItemMetadata(const VkRecoItemMetadata& from);

  inline VkRecoItemMetadata& operator=(const VkRecoItemMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VkRecoItemMetadata(VkRecoItemMetadata&& from) noexcept
    : VkRecoItemMetadata() {
    *this = ::std::move(from);
  }

  inline VkRecoItemMetadata& operator=(VkRecoItemMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VkRecoItemMetadata& default_instance();

  static inline const VkRecoItemMetadata* internal_default_instance() {
    return reinterpret_cast<const VkRecoItemMetadata*>(
               &_VkRecoItemMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VkRecoItemMetadata* other);
  friend void swap(VkRecoItemMetadata& a, VkRecoItemMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VkRecoItemMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  VkRecoItemMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VkRecoItemMetadata& from);
  void MergeFrom(const VkRecoItemMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VkRecoItemMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 statViews = 2;
  bool has_statviews() const;
  void clear_statviews();
  static const int kStatViewsFieldNumber = 2;
  ::google::protobuf::int64 statviews() const;
  void set_statviews(::google::protobuf::int64 value);

  // optional int32 duration = 1;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional bool official = 3;
  bool has_official() const;
  void clear_official();
  static const int kOfficialFieldNumber = 3;
  bool official() const;
  void set_official(bool value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.VkRecoItemMetadata)
 private:
  void set_has_duration();
  void clear_has_duration();
  void set_has_statviews();
  void clear_has_statviews();
  void set_has_official();
  void clear_has_official();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 statviews_;
  ::google::protobuf::int32 duration_;
  bool official_;
  friend struct protobuf_vk_5freco_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VkRecoContainer

// repeated .ru.mail.go.webbase.blobs.VkRecoItem common = 1;
inline int VkRecoContainer::common_size() const {
  return common_.size();
}
inline void VkRecoContainer::clear_common() {
  common_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::VkRecoItem& VkRecoContainer::common(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoContainer.common)
  return common_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::VkRecoItem* VkRecoContainer::mutable_common(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.VkRecoContainer.common)
  return common_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::VkRecoItem* VkRecoContainer::add_common() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.VkRecoContainer.common)
  return common_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >*
VkRecoContainer::mutable_common() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.VkRecoContainer.common)
  return &common_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >&
VkRecoContainer::common() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.VkRecoContainer.common)
  return common_;
}

// repeated .ru.mail.go.webbase.blobs.VkRecoItem highly_recommended = 2;
inline int VkRecoContainer::highly_recommended_size() const {
  return highly_recommended_.size();
}
inline void VkRecoContainer::clear_highly_recommended() {
  highly_recommended_.Clear();
}
inline const ::ru::mail::go::webbase::blobs::VkRecoItem& VkRecoContainer::highly_recommended(int index) const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoContainer.highly_recommended)
  return highly_recommended_.Get(index);
}
inline ::ru::mail::go::webbase::blobs::VkRecoItem* VkRecoContainer::mutable_highly_recommended(int index) {
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.VkRecoContainer.highly_recommended)
  return highly_recommended_.Mutable(index);
}
inline ::ru::mail::go::webbase::blobs::VkRecoItem* VkRecoContainer::add_highly_recommended() {
  // @@protoc_insertion_point(field_add:ru.mail.go.webbase.blobs.VkRecoContainer.highly_recommended)
  return highly_recommended_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >*
VkRecoContainer::mutable_highly_recommended() {
  // @@protoc_insertion_point(field_mutable_list:ru.mail.go.webbase.blobs.VkRecoContainer.highly_recommended)
  return &highly_recommended_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ru::mail::go::webbase::blobs::VkRecoItem >&
VkRecoContainer::highly_recommended() const {
  // @@protoc_insertion_point(field_list:ru.mail.go.webbase.blobs.VkRecoContainer.highly_recommended)
  return highly_recommended_;
}

// -------------------------------------------------------------------

// VkRecoItem

// required int64 user_id = 1;
inline bool VkRecoItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VkRecoItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VkRecoItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VkRecoItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 VkRecoItem::user_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItem.user_id)
  return user_id_;
}
inline void VkRecoItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItem.user_id)
}

// required int64 item_id = 2;
inline bool VkRecoItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VkRecoItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VkRecoItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VkRecoItem::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 VkRecoItem::item_id() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItem.item_id)
  return item_id_;
}
inline void VkRecoItem::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItem.item_id)
}

// optional int64 num_encountered = 3;
inline bool VkRecoItem::has_num_encountered() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VkRecoItem::set_has_num_encountered() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VkRecoItem::clear_has_num_encountered() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VkRecoItem::clear_num_encountered() {
  num_encountered_ = GOOGLE_LONGLONG(0);
  clear_has_num_encountered();
}
inline ::google::protobuf::int64 VkRecoItem::num_encountered() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItem.num_encountered)
  return num_encountered_;
}
inline void VkRecoItem::set_num_encountered(::google::protobuf::int64 value) {
  set_has_num_encountered();
  num_encountered_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItem.num_encountered)
}

// optional .ru.mail.go.webbase.blobs.VkRecoItemMetadata metadata = 4;
inline bool VkRecoItem::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VkRecoItem::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VkRecoItem::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VkRecoItem::clear_metadata() {
  if (metadata_ != NULL) metadata_->::ru::mail::go::webbase::blobs::VkRecoItemMetadata::Clear();
  clear_has_metadata();
}
inline const ::ru::mail::go::webbase::blobs::VkRecoItemMetadata& VkRecoItem::metadata() const {
  const ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItem.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::ru::mail::go::webbase::blobs::VkRecoItemMetadata*>(
      &::ru::mail::go::webbase::blobs::_VkRecoItemMetadata_default_instance_);
}
inline ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* VkRecoItem::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::ru::mail::go::webbase::blobs::VkRecoItemMetadata;
  }
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.blobs.VkRecoItem.metadata)
  return metadata_;
}
inline ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* VkRecoItem::release_metadata() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.blobs.VkRecoItem.metadata)
  clear_has_metadata();
  ::ru::mail::go::webbase::blobs::VkRecoItemMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void VkRecoItem::set_allocated_metadata(::ru::mail::go::webbase::blobs::VkRecoItemMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.blobs.VkRecoItem.metadata)
}

// -------------------------------------------------------------------

// VkRecoItemMetadata

// optional int32 duration = 1;
inline bool VkRecoItemMetadata::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VkRecoItemMetadata::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VkRecoItemMetadata::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VkRecoItemMetadata::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 VkRecoItemMetadata::duration() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItemMetadata.duration)
  return duration_;
}
inline void VkRecoItemMetadata::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItemMetadata.duration)
}

// optional int64 statViews = 2;
inline bool VkRecoItemMetadata::has_statviews() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VkRecoItemMetadata::set_has_statviews() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VkRecoItemMetadata::clear_has_statviews() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VkRecoItemMetadata::clear_statviews() {
  statviews_ = GOOGLE_LONGLONG(0);
  clear_has_statviews();
}
inline ::google::protobuf::int64 VkRecoItemMetadata::statviews() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItemMetadata.statViews)
  return statviews_;
}
inline void VkRecoItemMetadata::set_statviews(::google::protobuf::int64 value) {
  set_has_statviews();
  statviews_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItemMetadata.statViews)
}

// optional bool official = 3;
inline bool VkRecoItemMetadata::has_official() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VkRecoItemMetadata::set_has_official() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VkRecoItemMetadata::clear_has_official() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VkRecoItemMetadata::clear_official() {
  official_ = false;
  clear_has_official();
}
inline bool VkRecoItemMetadata::official() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.blobs.VkRecoItemMetadata.official)
  return official_;
}
inline void VkRecoItemMetadata::set_official(bool value) {
  set_has_official();
  official_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.blobs.VkRecoItemMetadata.official)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace blobs
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vk_5freco_2eproto__INCLUDED
