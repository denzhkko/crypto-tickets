// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex_news_document.proto

#ifndef PROTOBUF_yandex_5fnews_5fdocument_2eproto__INCLUDED
#define PROTOBUF_yandex_5fnews_5fdocument_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace yandex_news {
class YandexNewsDocumentPutRequest;
class YandexNewsDocumentPutRequestDefaultTypeInternal;
extern YandexNewsDocumentPutRequestDefaultTypeInternal _YandexNewsDocumentPutRequest_default_instance_;
}  // namespace yandex_news
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace ru {
namespace mail {
namespace go {
namespace webbase {
namespace yandex_news {

namespace protobuf_yandex_5fnews_5fdocument_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_yandex_5fnews_5fdocument_2eproto

enum RequestType {
  add = 0,
  remove = 1
};
bool RequestType_IsValid(int value);
const RequestType RequestType_MIN = add;
const RequestType RequestType_MAX = remove;
const int RequestType_ARRAYSIZE = RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestType_descriptor();
inline const ::std::string& RequestType_Name(RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestType_descriptor(), value);
}
inline bool RequestType_Parse(
    const ::std::string& name, RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestType>(
    RequestType_descriptor(), name, value);
}
// ===================================================================

class YandexNewsDocumentPutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest) */ {
 public:
  YandexNewsDocumentPutRequest();
  virtual ~YandexNewsDocumentPutRequest();

  YandexNewsDocumentPutRequest(const YandexNewsDocumentPutRequest& from);

  inline YandexNewsDocumentPutRequest& operator=(const YandexNewsDocumentPutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YandexNewsDocumentPutRequest(YandexNewsDocumentPutRequest&& from) noexcept
    : YandexNewsDocumentPutRequest() {
    *this = ::std::move(from);
  }

  inline YandexNewsDocumentPutRequest& operator=(YandexNewsDocumentPutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YandexNewsDocumentPutRequest& default_instance();

  static inline const YandexNewsDocumentPutRequest* internal_default_instance() {
    return reinterpret_cast<const YandexNewsDocumentPutRequest*>(
               &_YandexNewsDocumentPutRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(YandexNewsDocumentPutRequest* other);
  friend void swap(YandexNewsDocumentPutRequest& a, YandexNewsDocumentPutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YandexNewsDocumentPutRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  YandexNewsDocumentPutRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YandexNewsDocumentPutRequest& from);
  void MergeFrom(const YandexNewsDocumentPutRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YandexNewsDocumentPutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string document_json = 4;
  bool has_document_json() const;
  void clear_document_json();
  static const int kDocumentJsonFieldNumber = 4;
  const ::std::string& document_json() const;
  void set_document_json(const ::std::string& value);
  #if LANG_CXX11
  void set_document_json(::std::string&& value);
  #endif
  void set_document_json(const char* value);
  void set_document_json(const char* value, size_t size);
  ::std::string* mutable_document_json();
  ::std::string* release_document_json();
  void set_allocated_document_json(::std::string* document_json);

  // optional string group_info_json = 7;
  bool has_group_info_json() const;
  void clear_group_info_json();
  static const int kGroupInfoJsonFieldNumber = 7;
  const ::std::string& group_info_json() const;
  void set_group_info_json(const ::std::string& value);
  #if LANG_CXX11
  void set_group_info_json(::std::string&& value);
  #endif
  void set_group_info_json(const char* value);
  void set_group_info_json(const char* value, size_t size);
  ::std::string* mutable_group_info_json();
  ::std::string* release_group_info_json();
  void set_allocated_group_info_json(::std::string* group_info_json);

  // optional string agency_info_json = 8;
  bool has_agency_info_json() const;
  void clear_agency_info_json();
  static const int kAgencyInfoJsonFieldNumber = 8;
  const ::std::string& agency_info_json() const;
  void set_agency_info_json(const ::std::string& value);
  #if LANG_CXX11
  void set_agency_info_json(::std::string&& value);
  #endif
  void set_agency_info_json(const char* value);
  void set_agency_info_json(const char* value, size_t size);
  ::std::string* mutable_agency_info_json();
  ::std::string* release_agency_info_json();
  void set_allocated_agency_info_json(::std::string* agency_info_json);

  // required int64 rcv_time = 3;
  bool has_rcv_time() const;
  void clear_rcv_time();
  static const int kRcvTimeFieldNumber = 3;
  ::google::protobuf::int64 rcv_time() const;
  void set_rcv_time(::google::protobuf::int64 value);

  // required .ru.mail.go.webbase.yandex_news.RequestType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ru::mail::go::webbase::yandex_news::RequestType type() const;
  void set_type(::ru::mail::go::webbase::yandex_news::RequestType value);

  // optional int32 pub_ts = 5;
  bool has_pub_ts() const;
  void clear_pub_ts();
  static const int kPubTsFieldNumber = 5;
  ::google::protobuf::int32 pub_ts() const;
  void set_pub_ts(::google::protobuf::int32 value);

  // optional int64 info_time = 6;
  bool has_info_time() const;
  void clear_info_time();
  static const int kInfoTimeFieldNumber = 6;
  ::google::protobuf::int64 info_time() const;
  void set_info_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_type();
  void clear_has_type();
  void set_has_rcv_time();
  void clear_has_rcv_time();
  void set_has_document_json();
  void clear_has_document_json();
  void set_has_pub_ts();
  void clear_has_pub_ts();
  void set_has_info_time();
  void clear_has_info_time();
  void set_has_group_info_json();
  void clear_has_group_info_json();
  void set_has_agency_info_json();
  void clear_has_agency_info_json();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr document_json_;
  ::google::protobuf::internal::ArenaStringPtr group_info_json_;
  ::google::protobuf::internal::ArenaStringPtr agency_info_json_;
  ::google::protobuf::int64 rcv_time_;
  int type_;
  ::google::protobuf::int32 pub_ts_;
  ::google::protobuf::int64 info_time_;
  friend struct protobuf_yandex_5fnews_5fdocument_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// YandexNewsDocumentPutRequest

// required string url = 1;
inline bool YandexNewsDocumentPutRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YandexNewsDocumentPutRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YandexNewsDocumentPutRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& YandexNewsDocumentPutRequest::url() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
  return url_.GetNoArena();
}
inline void YandexNewsDocumentPutRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
}
#if LANG_CXX11
inline void YandexNewsDocumentPutRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
}
#endif
inline void YandexNewsDocumentPutRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
}
inline void YandexNewsDocumentPutRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
}
inline ::std::string* YandexNewsDocumentPutRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YandexNewsDocumentPutRequest::release_url() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YandexNewsDocumentPutRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.url)
}

// required .ru.mail.go.webbase.yandex_news.RequestType type = 2;
inline bool YandexNewsDocumentPutRequest::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YandexNewsDocumentPutRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YandexNewsDocumentPutRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ru::mail::go::webbase::yandex_news::RequestType YandexNewsDocumentPutRequest::type() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.type)
  return static_cast< ::ru::mail::go::webbase::yandex_news::RequestType >(type_);
}
inline void YandexNewsDocumentPutRequest::set_type(::ru::mail::go::webbase::yandex_news::RequestType value) {
  assert(::ru::mail::go::webbase::yandex_news::RequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.type)
}

// required int64 rcv_time = 3;
inline bool YandexNewsDocumentPutRequest::has_rcv_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_rcv_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YandexNewsDocumentPutRequest::clear_has_rcv_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YandexNewsDocumentPutRequest::clear_rcv_time() {
  rcv_time_ = GOOGLE_LONGLONG(0);
  clear_has_rcv_time();
}
inline ::google::protobuf::int64 YandexNewsDocumentPutRequest::rcv_time() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.rcv_time)
  return rcv_time_;
}
inline void YandexNewsDocumentPutRequest::set_rcv_time(::google::protobuf::int64 value) {
  set_has_rcv_time();
  rcv_time_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.rcv_time)
}

// optional string document_json = 4;
inline bool YandexNewsDocumentPutRequest::has_document_json() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_document_json() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YandexNewsDocumentPutRequest::clear_has_document_json() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YandexNewsDocumentPutRequest::clear_document_json() {
  document_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_document_json();
}
inline const ::std::string& YandexNewsDocumentPutRequest::document_json() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
  return document_json_.GetNoArena();
}
inline void YandexNewsDocumentPutRequest::set_document_json(const ::std::string& value) {
  set_has_document_json();
  document_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
}
#if LANG_CXX11
inline void YandexNewsDocumentPutRequest::set_document_json(::std::string&& value) {
  set_has_document_json();
  document_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
}
#endif
inline void YandexNewsDocumentPutRequest::set_document_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_document_json();
  document_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
}
inline void YandexNewsDocumentPutRequest::set_document_json(const char* value, size_t size) {
  set_has_document_json();
  document_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
}
inline ::std::string* YandexNewsDocumentPutRequest::mutable_document_json() {
  set_has_document_json();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
  return document_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YandexNewsDocumentPutRequest::release_document_json() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
  clear_has_document_json();
  return document_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YandexNewsDocumentPutRequest::set_allocated_document_json(::std::string* document_json) {
  if (document_json != NULL) {
    set_has_document_json();
  } else {
    clear_has_document_json();
  }
  document_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), document_json);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.document_json)
}

// optional int32 pub_ts = 5;
inline bool YandexNewsDocumentPutRequest::has_pub_ts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_pub_ts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YandexNewsDocumentPutRequest::clear_has_pub_ts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YandexNewsDocumentPutRequest::clear_pub_ts() {
  pub_ts_ = 0;
  clear_has_pub_ts();
}
inline ::google::protobuf::int32 YandexNewsDocumentPutRequest::pub_ts() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.pub_ts)
  return pub_ts_;
}
inline void YandexNewsDocumentPutRequest::set_pub_ts(::google::protobuf::int32 value) {
  set_has_pub_ts();
  pub_ts_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.pub_ts)
}

// optional int64 info_time = 6;
inline bool YandexNewsDocumentPutRequest::has_info_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_info_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void YandexNewsDocumentPutRequest::clear_has_info_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void YandexNewsDocumentPutRequest::clear_info_time() {
  info_time_ = GOOGLE_LONGLONG(0);
  clear_has_info_time();
}
inline ::google::protobuf::int64 YandexNewsDocumentPutRequest::info_time() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.info_time)
  return info_time_;
}
inline void YandexNewsDocumentPutRequest::set_info_time(::google::protobuf::int64 value) {
  set_has_info_time();
  info_time_ = value;
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.info_time)
}

// optional string group_info_json = 7;
inline bool YandexNewsDocumentPutRequest::has_group_info_json() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_group_info_json() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YandexNewsDocumentPutRequest::clear_has_group_info_json() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YandexNewsDocumentPutRequest::clear_group_info_json() {
  group_info_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_group_info_json();
}
inline const ::std::string& YandexNewsDocumentPutRequest::group_info_json() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
  return group_info_json_.GetNoArena();
}
inline void YandexNewsDocumentPutRequest::set_group_info_json(const ::std::string& value) {
  set_has_group_info_json();
  group_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
}
#if LANG_CXX11
inline void YandexNewsDocumentPutRequest::set_group_info_json(::std::string&& value) {
  set_has_group_info_json();
  group_info_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
}
#endif
inline void YandexNewsDocumentPutRequest::set_group_info_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_group_info_json();
  group_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
}
inline void YandexNewsDocumentPutRequest::set_group_info_json(const char* value, size_t size) {
  set_has_group_info_json();
  group_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
}
inline ::std::string* YandexNewsDocumentPutRequest::mutable_group_info_json() {
  set_has_group_info_json();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
  return group_info_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YandexNewsDocumentPutRequest::release_group_info_json() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
  clear_has_group_info_json();
  return group_info_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YandexNewsDocumentPutRequest::set_allocated_group_info_json(::std::string* group_info_json) {
  if (group_info_json != NULL) {
    set_has_group_info_json();
  } else {
    clear_has_group_info_json();
  }
  group_info_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_info_json);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.group_info_json)
}

// optional string agency_info_json = 8;
inline bool YandexNewsDocumentPutRequest::has_agency_info_json() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YandexNewsDocumentPutRequest::set_has_agency_info_json() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YandexNewsDocumentPutRequest::clear_has_agency_info_json() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YandexNewsDocumentPutRequest::clear_agency_info_json() {
  agency_info_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agency_info_json();
}
inline const ::std::string& YandexNewsDocumentPutRequest::agency_info_json() const {
  // @@protoc_insertion_point(field_get:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
  return agency_info_json_.GetNoArena();
}
inline void YandexNewsDocumentPutRequest::set_agency_info_json(const ::std::string& value) {
  set_has_agency_info_json();
  agency_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
}
#if LANG_CXX11
inline void YandexNewsDocumentPutRequest::set_agency_info_json(::std::string&& value) {
  set_has_agency_info_json();
  agency_info_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
}
#endif
inline void YandexNewsDocumentPutRequest::set_agency_info_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_agency_info_json();
  agency_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
}
inline void YandexNewsDocumentPutRequest::set_agency_info_json(const char* value, size_t size) {
  set_has_agency_info_json();
  agency_info_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
}
inline ::std::string* YandexNewsDocumentPutRequest::mutable_agency_info_json() {
  set_has_agency_info_json();
  // @@protoc_insertion_point(field_mutable:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
  return agency_info_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YandexNewsDocumentPutRequest::release_agency_info_json() {
  // @@protoc_insertion_point(field_release:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
  clear_has_agency_info_json();
  return agency_info_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YandexNewsDocumentPutRequest::set_allocated_agency_info_json(::std::string* agency_info_json) {
  if (agency_info_json != NULL) {
    set_has_agency_info_json();
  } else {
    clear_has_agency_info_json();
  }
  agency_info_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agency_info_json);
  // @@protoc_insertion_point(field_set_allocated:ru.mail.go.webbase.yandex_news.YandexNewsDocumentPutRequest.agency_info_json)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace yandex_news
}  // namespace webbase
}  // namespace go
}  // namespace mail
}  // namespace ru

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ru::mail::go::webbase::yandex_news::RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ru::mail::go::webbase::yandex_news::RequestType>() {
  return ::ru::mail::go::webbase::yandex_news::RequestType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_yandex_5fnews_5fdocument_2eproto__INCLUDED
