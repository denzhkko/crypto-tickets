// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: document_enums.proto

package ru.mail.go.webbase.blobs;

public final class DocEnums {
  private DocEnums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.Language}
   */
  public enum Language
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>lang_unknown = 0;</code>
     */
    lang_unknown(0, 0),
    /**
     * <code>lang_russian = 1;</code>
     */
    lang_russian(1, 1),
    /**
     * <code>lang_cyrillic = 2;</code>
     */
    lang_cyrillic(2, 2),
    /**
     * <code>lang_bolgarian = 3;</code>
     */
    lang_bolgarian(3, 3),
    /**
     * <code>lang_ukrainian = 4;</code>
     */
    lang_ukrainian(4, 4),
    /**
     * <code>lang_byelorussian = 5;</code>
     */
    lang_byelorussian(5, 5),
    /**
     * <code>lang_kazakh = 6;</code>
     */
    lang_kazakh(6, 6),
    /**
     * <code>lang_english = 7;</code>
     */
    lang_english(7, 7),
    /**
     * <code>lang_error = 8;</code>
     */
    lang_error(8, 8),
    /**
     * <code>lang_not_enough_info = 9;</code>
     */
    lang_not_enough_info(9, 9),
    /**
     * <code>lang_german = 10;</code>
     */
    lang_german(10, 10),
    /**
     * <code>lang_french = 11;</code>
     */
    lang_french(11, 11),
    /**
     * <code>lang_spanish = 12;</code>
     */
    lang_spanish(12, 12),
    /**
     * <code>lang_finnish = 13;</code>
     */
    lang_finnish(13, 13),
    /**
     * <code>lang_czech = 14;</code>
     */
    lang_czech(14, 14),
    /**
     * <code>lang_hungarian = 15;</code>
     */
    lang_hungarian(15, 15),
    /**
     * <code>lang_italian = 16;</code>
     */
    lang_italian(16, 16),
    /**
     * <code>lang_dutch = 17;</code>
     */
    lang_dutch(17, 17),
    /**
     * <code>lang_norwegian = 18;</code>
     */
    lang_norwegian(18, 18),
    /**
     * <code>lang_polish = 19;</code>
     */
    lang_polish(19, 19),
    /**
     * <code>lang_portuguese = 20;</code>
     */
    lang_portuguese(20, 20),
    /**
     * <code>lang_romanian = 21;</code>
     */
    lang_romanian(21, 21),
    /**
     * <code>lang_swedish = 22;</code>
     */
    lang_swedish(22, 22),
    /**
     * <code>lang_turkish = 23;</code>
     */
    lang_turkish(23, 23),
    /**
     * <code>lang_rutranslit = 24;</code>
     */
    lang_rutranslit(24, 24),
    ;

    /**
     * <code>lang_unknown = 0;</code>
     */
    public static final int lang_unknown_VALUE = 0;
    /**
     * <code>lang_russian = 1;</code>
     */
    public static final int lang_russian_VALUE = 1;
    /**
     * <code>lang_cyrillic = 2;</code>
     */
    public static final int lang_cyrillic_VALUE = 2;
    /**
     * <code>lang_bolgarian = 3;</code>
     */
    public static final int lang_bolgarian_VALUE = 3;
    /**
     * <code>lang_ukrainian = 4;</code>
     */
    public static final int lang_ukrainian_VALUE = 4;
    /**
     * <code>lang_byelorussian = 5;</code>
     */
    public static final int lang_byelorussian_VALUE = 5;
    /**
     * <code>lang_kazakh = 6;</code>
     */
    public static final int lang_kazakh_VALUE = 6;
    /**
     * <code>lang_english = 7;</code>
     */
    public static final int lang_english_VALUE = 7;
    /**
     * <code>lang_error = 8;</code>
     */
    public static final int lang_error_VALUE = 8;
    /**
     * <code>lang_not_enough_info = 9;</code>
     */
    public static final int lang_not_enough_info_VALUE = 9;
    /**
     * <code>lang_german = 10;</code>
     */
    public static final int lang_german_VALUE = 10;
    /**
     * <code>lang_french = 11;</code>
     */
    public static final int lang_french_VALUE = 11;
    /**
     * <code>lang_spanish = 12;</code>
     */
    public static final int lang_spanish_VALUE = 12;
    /**
     * <code>lang_finnish = 13;</code>
     */
    public static final int lang_finnish_VALUE = 13;
    /**
     * <code>lang_czech = 14;</code>
     */
    public static final int lang_czech_VALUE = 14;
    /**
     * <code>lang_hungarian = 15;</code>
     */
    public static final int lang_hungarian_VALUE = 15;
    /**
     * <code>lang_italian = 16;</code>
     */
    public static final int lang_italian_VALUE = 16;
    /**
     * <code>lang_dutch = 17;</code>
     */
    public static final int lang_dutch_VALUE = 17;
    /**
     * <code>lang_norwegian = 18;</code>
     */
    public static final int lang_norwegian_VALUE = 18;
    /**
     * <code>lang_polish = 19;</code>
     */
    public static final int lang_polish_VALUE = 19;
    /**
     * <code>lang_portuguese = 20;</code>
     */
    public static final int lang_portuguese_VALUE = 20;
    /**
     * <code>lang_romanian = 21;</code>
     */
    public static final int lang_romanian_VALUE = 21;
    /**
     * <code>lang_swedish = 22;</code>
     */
    public static final int lang_swedish_VALUE = 22;
    /**
     * <code>lang_turkish = 23;</code>
     */
    public static final int lang_turkish_VALUE = 23;
    /**
     * <code>lang_rutranslit = 24;</code>
     */
    public static final int lang_rutranslit_VALUE = 24;


    public final int getNumber() { return value; }

    public static Language valueOf(int value) {
      switch (value) {
        case 0: return lang_unknown;
        case 1: return lang_russian;
        case 2: return lang_cyrillic;
        case 3: return lang_bolgarian;
        case 4: return lang_ukrainian;
        case 5: return lang_byelorussian;
        case 6: return lang_kazakh;
        case 7: return lang_english;
        case 8: return lang_error;
        case 9: return lang_not_enough_info;
        case 10: return lang_german;
        case 11: return lang_french;
        case 12: return lang_spanish;
        case 13: return lang_finnish;
        case 14: return lang_czech;
        case 15: return lang_hungarian;
        case 16: return lang_italian;
        case 17: return lang_dutch;
        case 18: return lang_norwegian;
        case 19: return lang_polish;
        case 20: return lang_portuguese;
        case 21: return lang_romanian;
        case 22: return lang_swedish;
        case 23: return lang_turkish;
        case 24: return lang_rutranslit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Language>() {
            public Language findValueByNumber(int number) {
              return Language.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(0);
    }

    private static final Language[] VALUES = values();

    public static Language valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Language(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.Language)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.Encoding}
   */
  public enum Encoding
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>enc_unknown = 0;</code>
     *
     * <pre>
     * Found some encoding - but this is not one of our list
     * </pre>
     */
    enc_unknown(0, 0),
    /**
     * <code>enc_utf_8 = 1;</code>
     */
    enc_utf_8(1, 1),
    /**
     * <code>enc_cp1251 = 2;</code>
     */
    enc_cp1251(2, 2),
    /**
     * <code>enc_koi8_r = 3;</code>
     */
    enc_koi8_r(3, 3),
    /**
     * <code>enc_us_ascii = 4;</code>
     *
     * <pre>
     * there default ends - now begins copy-paste from iconv
     * </pre>
     */
    enc_us_ascii(4, 4),
    /**
     * <code>enc_iso_8859_1 = 5;</code>
     */
    enc_iso_8859_1(5, 5),
    /**
     * <code>enc_iso_8859_2 = 6;</code>
     */
    enc_iso_8859_2(6, 6),
    /**
     * <code>enc_iso_8859_3 = 7;</code>
     */
    enc_iso_8859_3(7, 7),
    /**
     * <code>enc_iso_8859_4 = 8;</code>
     */
    enc_iso_8859_4(8, 8),
    /**
     * <code>enc_iso_8859_5 = 9;</code>
     */
    enc_iso_8859_5(9, 9),
    /**
     * <code>enc_iso_8859_7 = 10;</code>
     */
    enc_iso_8859_7(10, 10),
    /**
     * <code>enc_iso_8859_9 = 11;</code>
     */
    enc_iso_8859_9(11, 11),
    /**
     * <code>enc_iso_8859_10 = 12;</code>
     */
    enc_iso_8859_10(12, 12),
    /**
     * <code>enc_iso_8859_13 = 13;</code>
     */
    enc_iso_8859_13(13, 13),
    /**
     * <code>enc_iso_8859_14 = 14;</code>
     */
    enc_iso_8859_14(14, 14),
    /**
     * <code>enc_iso_8859_15 = 15;</code>
     */
    enc_iso_8859_15(15, 15),
    /**
     * <code>enc_iso_8859_16 = 16;</code>
     */
    enc_iso_8859_16(16, 16),
    /**
     * <code>enc_koi8_u = 17;</code>
     */
    enc_koi8_u(17, 17),
    /**
     * <code>enc_cp1250 = 18;</code>
     */
    enc_cp1250(18, 18),
    /**
     * <code>enc_cp1252 = 19;</code>
     */
    enc_cp1252(19, 19),
    /**
     * <code>enc_cp1253 = 20;</code>
     */
    enc_cp1253(20, 20),
    /**
     * <code>enc_cp1254 = 21;</code>
     */
    enc_cp1254(21, 21),
    /**
     * <code>enc_cp1257 = 22;</code>
     */
    enc_cp1257(22, 22),
    /**
     * <code>enc_cp850 = 23;</code>
     */
    enc_cp850(23, 23),
    /**
     * <code>enc_cp866 = 24;</code>
     */
    enc_cp866(24, 24),
    /**
     * <code>enc_cp1131 = 25;</code>
     */
    enc_cp1131(25, 25),
    /**
     * <code>enc_macroman = 26;</code>
     */
    enc_macroman(26, 26),
    /**
     * <code>enc_maccentraleurope = 27;</code>
     */
    enc_maccentraleurope(27, 27),
    /**
     * <code>enc_maciceland = 28;</code>
     */
    enc_maciceland(28, 28),
    /**
     * <code>enc_maccroatian = 29;</code>
     */
    enc_maccroatian(29, 29),
    /**
     * <code>enc_macromania = 30;</code>
     */
    enc_macromania(30, 30),
    /**
     * <code>enc_maccyrillic = 31;</code>
     */
    enc_maccyrillic(31, 31),
    /**
     * <code>enc_macukraine = 32;</code>
     */
    enc_macukraine(32, 32),
    /**
     * <code>enc_macgreek = 33;</code>
     */
    enc_macgreek(33, 33),
    /**
     * <code>enc_macturkish = 34;</code>
     */
    enc_macturkish(34, 34),
    /**
     * <code>enc_macintosh = 35;</code>
     */
    enc_macintosh(35, 35),
    /**
     * <code>enc_iso_8859_6 = 36;</code>
     */
    enc_iso_8859_6(36, 36),
    /**
     * <code>enc_iso_8859_8 = 37;</code>
     */
    enc_iso_8859_8(37, 37),
    /**
     * <code>enc_cp1255 = 38;</code>
     */
    enc_cp1255(38, 38),
    /**
     * <code>enc_cp1256 = 39;</code>
     */
    enc_cp1256(39, 39),
    /**
     * <code>enc_cp862 = 40;</code>
     */
    enc_cp862(40, 40),
    /**
     * <code>enc_machebrew = 41;</code>
     */
    enc_machebrew(41, 41),
    /**
     * <code>enc_macarabic = 42;</code>
     */
    enc_macarabic(42, 42),
    /**
     * <code>enc_euc_jp = 43;</code>
     */
    enc_euc_jp(43, 43),
    /**
     * <code>enc_shift_jis = 44;</code>
     */
    enc_shift_jis(44, 44),
    /**
     * <code>enc_cp932 = 45;</code>
     */
    enc_cp932(45, 45),
    /**
     * <code>enc_iso_2022_jp = 46;</code>
     */
    enc_iso_2022_jp(46, 46),
    /**
     * <code>enc_iso_2022_jp_2 = 47;</code>
     */
    enc_iso_2022_jp_2(47, 47),
    /**
     * <code>enc_iso_2022_jp_1 = 48;</code>
     */
    enc_iso_2022_jp_1(48, 48),
    /**
     * <code>enc_euc_cn = 49;</code>
     */
    enc_euc_cn(49, 49),
    /**
     * <code>enc_hz = 50;</code>
     */
    enc_hz(50, 50),
    /**
     * <code>enc_gbk = 51;</code>
     */
    enc_gbk(51, 51),
    /**
     * <code>enc_cp936 = 52;</code>
     */
    enc_cp936(52, 52),
    /**
     * <code>enc_gb18030 = 53;</code>
     */
    enc_gb18030(53, 53),
    /**
     * <code>enc_euc_tw = 54;</code>
     */
    enc_euc_tw(54, 54),
    /**
     * <code>enc_big5 = 55;</code>
     */
    enc_big5(55, 55),
    /**
     * <code>enc_cp950 = 56;</code>
     */
    enc_cp950(56, 56),
    /**
     * <code>enc_big5_hkscs = 57;</code>
     */
    enc_big5_hkscs(57, 57),
    /**
     * <code>enc_iso_2022_cn = 58;</code>
     */
    enc_iso_2022_cn(58, 58),
    /**
     * <code>enc_iso_2022_cn_ext = 59;</code>
     */
    enc_iso_2022_cn_ext(59, 59),
    /**
     * <code>enc_euc_kr = 60;</code>
     */
    enc_euc_kr(60, 60),
    /**
     * <code>enc_cp949 = 61;</code>
     */
    enc_cp949(61, 61),
    /**
     * <code>enc_iso_2022_kr = 62;</code>
     */
    enc_iso_2022_kr(62, 62),
    /**
     * <code>enc_johab = 63;</code>
     */
    enc_johab(63, 63),
    /**
     * <code>enc_armscii_8 = 64;</code>
     */
    enc_armscii_8(64, 64),
    /**
     * <code>enc_georgian_academy = 65;</code>
     */
    enc_georgian_academy(65, 65),
    /**
     * <code>enc_georgian_ps = 66;</code>
     */
    enc_georgian_ps(66, 66),
    /**
     * <code>enc_koi8_t = 67;</code>
     */
    enc_koi8_t(67, 67),
    /**
     * <code>enc_pt154 = 68;</code>
     */
    enc_pt154(68, 68),
    /**
     * <code>enc_rk1048 = 69;</code>
     */
    enc_rk1048(69, 69),
    /**
     * <code>enc_iso_8859_11 = 70;</code>
     */
    enc_iso_8859_11(70, 70),
    /**
     * <code>enc_tis_620 = 71;</code>
     */
    enc_tis_620(71, 71),
    /**
     * <code>enc_cp874 = 72;</code>
     */
    enc_cp874(72, 72),
    /**
     * <code>enc_macthai = 73;</code>
     */
    enc_macthai(73, 73),
    /**
     * <code>enc_mulelao_1 = 74;</code>
     */
    enc_mulelao_1(74, 74),
    /**
     * <code>enc_cp1133 = 75;</code>
     */
    enc_cp1133(75, 75),
    /**
     * <code>enc_viscii = 76;</code>
     */
    enc_viscii(76, 76),
    /**
     * <code>enc_tcvn = 77;</code>
     */
    enc_tcvn(77, 77),
    /**
     * <code>enc_cp1258 = 78;</code>
     */
    enc_cp1258(78, 78),
    /**
     * <code>enc_hp_roman8 = 79;</code>
     */
    enc_hp_roman8(79, 79),
    /**
     * <code>enc_nextstep = 80;</code>
     */
    enc_nextstep(80, 80),
    /**
     * <code>enc_ucs_2 = 81;</code>
     */
    enc_ucs_2(81, 81),
    /**
     * <code>enc_ucs_2be = 82;</code>
     */
    enc_ucs_2be(82, 82),
    /**
     * <code>enc_ucs_2le = 83;</code>
     */
    enc_ucs_2le(83, 83),
    /**
     * <code>enc_ucs_4 = 84;</code>
     */
    enc_ucs_4(84, 84),
    /**
     * <code>enc_ucs_4be = 85;</code>
     */
    enc_ucs_4be(85, 85),
    /**
     * <code>enc_ucs_4le = 86;</code>
     */
    enc_ucs_4le(86, 86),
    /**
     * <code>enc_utf_16 = 87;</code>
     */
    enc_utf_16(87, 87),
    /**
     * <code>enc_utf_16be = 88;</code>
     */
    enc_utf_16be(88, 88),
    /**
     * <code>enc_utf_16le = 89;</code>
     */
    enc_utf_16le(89, 89),
    /**
     * <code>enc_utf_32 = 90;</code>
     */
    enc_utf_32(90, 90),
    /**
     * <code>enc_utf_32be = 91;</code>
     */
    enc_utf_32be(91, 91),
    /**
     * <code>enc_utf_32le = 92;</code>
     */
    enc_utf_32le(92, 92),
    /**
     * <code>enc_utf_7 = 93;</code>
     */
    enc_utf_7(93, 93),
    /**
     * <code>enc_c99 = 94;</code>
     */
    enc_c99(94, 94),
    /**
     * <code>enc_java = 95;</code>
     */
    enc_java(95, 95),
    /**
     * <code>enc_ucs_2_internal = 96;</code>
     */
    enc_ucs_2_internal(96, 96),
    /**
     * <code>enc_ucs_4_internal = 97;</code>
     */
    enc_ucs_4_internal(97, 97),
    /**
     * <code>enc_undefined = 99;</code>
     *
     * <pre>
     * 99 is two bytes as string
     * </pre>
     */
    enc_undefined(98, 99),
    ;

    /**
     * <code>enc_unknown = 0;</code>
     *
     * <pre>
     * Found some encoding - but this is not one of our list
     * </pre>
     */
    public static final int enc_unknown_VALUE = 0;
    /**
     * <code>enc_utf_8 = 1;</code>
     */
    public static final int enc_utf_8_VALUE = 1;
    /**
     * <code>enc_cp1251 = 2;</code>
     */
    public static final int enc_cp1251_VALUE = 2;
    /**
     * <code>enc_koi8_r = 3;</code>
     */
    public static final int enc_koi8_r_VALUE = 3;
    /**
     * <code>enc_us_ascii = 4;</code>
     *
     * <pre>
     * there default ends - now begins copy-paste from iconv
     * </pre>
     */
    public static final int enc_us_ascii_VALUE = 4;
    /**
     * <code>enc_iso_8859_1 = 5;</code>
     */
    public static final int enc_iso_8859_1_VALUE = 5;
    /**
     * <code>enc_iso_8859_2 = 6;</code>
     */
    public static final int enc_iso_8859_2_VALUE = 6;
    /**
     * <code>enc_iso_8859_3 = 7;</code>
     */
    public static final int enc_iso_8859_3_VALUE = 7;
    /**
     * <code>enc_iso_8859_4 = 8;</code>
     */
    public static final int enc_iso_8859_4_VALUE = 8;
    /**
     * <code>enc_iso_8859_5 = 9;</code>
     */
    public static final int enc_iso_8859_5_VALUE = 9;
    /**
     * <code>enc_iso_8859_7 = 10;</code>
     */
    public static final int enc_iso_8859_7_VALUE = 10;
    /**
     * <code>enc_iso_8859_9 = 11;</code>
     */
    public static final int enc_iso_8859_9_VALUE = 11;
    /**
     * <code>enc_iso_8859_10 = 12;</code>
     */
    public static final int enc_iso_8859_10_VALUE = 12;
    /**
     * <code>enc_iso_8859_13 = 13;</code>
     */
    public static final int enc_iso_8859_13_VALUE = 13;
    /**
     * <code>enc_iso_8859_14 = 14;</code>
     */
    public static final int enc_iso_8859_14_VALUE = 14;
    /**
     * <code>enc_iso_8859_15 = 15;</code>
     */
    public static final int enc_iso_8859_15_VALUE = 15;
    /**
     * <code>enc_iso_8859_16 = 16;</code>
     */
    public static final int enc_iso_8859_16_VALUE = 16;
    /**
     * <code>enc_koi8_u = 17;</code>
     */
    public static final int enc_koi8_u_VALUE = 17;
    /**
     * <code>enc_cp1250 = 18;</code>
     */
    public static final int enc_cp1250_VALUE = 18;
    /**
     * <code>enc_cp1252 = 19;</code>
     */
    public static final int enc_cp1252_VALUE = 19;
    /**
     * <code>enc_cp1253 = 20;</code>
     */
    public static final int enc_cp1253_VALUE = 20;
    /**
     * <code>enc_cp1254 = 21;</code>
     */
    public static final int enc_cp1254_VALUE = 21;
    /**
     * <code>enc_cp1257 = 22;</code>
     */
    public static final int enc_cp1257_VALUE = 22;
    /**
     * <code>enc_cp850 = 23;</code>
     */
    public static final int enc_cp850_VALUE = 23;
    /**
     * <code>enc_cp866 = 24;</code>
     */
    public static final int enc_cp866_VALUE = 24;
    /**
     * <code>enc_cp1131 = 25;</code>
     */
    public static final int enc_cp1131_VALUE = 25;
    /**
     * <code>enc_macroman = 26;</code>
     */
    public static final int enc_macroman_VALUE = 26;
    /**
     * <code>enc_maccentraleurope = 27;</code>
     */
    public static final int enc_maccentraleurope_VALUE = 27;
    /**
     * <code>enc_maciceland = 28;</code>
     */
    public static final int enc_maciceland_VALUE = 28;
    /**
     * <code>enc_maccroatian = 29;</code>
     */
    public static final int enc_maccroatian_VALUE = 29;
    /**
     * <code>enc_macromania = 30;</code>
     */
    public static final int enc_macromania_VALUE = 30;
    /**
     * <code>enc_maccyrillic = 31;</code>
     */
    public static final int enc_maccyrillic_VALUE = 31;
    /**
     * <code>enc_macukraine = 32;</code>
     */
    public static final int enc_macukraine_VALUE = 32;
    /**
     * <code>enc_macgreek = 33;</code>
     */
    public static final int enc_macgreek_VALUE = 33;
    /**
     * <code>enc_macturkish = 34;</code>
     */
    public static final int enc_macturkish_VALUE = 34;
    /**
     * <code>enc_macintosh = 35;</code>
     */
    public static final int enc_macintosh_VALUE = 35;
    /**
     * <code>enc_iso_8859_6 = 36;</code>
     */
    public static final int enc_iso_8859_6_VALUE = 36;
    /**
     * <code>enc_iso_8859_8 = 37;</code>
     */
    public static final int enc_iso_8859_8_VALUE = 37;
    /**
     * <code>enc_cp1255 = 38;</code>
     */
    public static final int enc_cp1255_VALUE = 38;
    /**
     * <code>enc_cp1256 = 39;</code>
     */
    public static final int enc_cp1256_VALUE = 39;
    /**
     * <code>enc_cp862 = 40;</code>
     */
    public static final int enc_cp862_VALUE = 40;
    /**
     * <code>enc_machebrew = 41;</code>
     */
    public static final int enc_machebrew_VALUE = 41;
    /**
     * <code>enc_macarabic = 42;</code>
     */
    public static final int enc_macarabic_VALUE = 42;
    /**
     * <code>enc_euc_jp = 43;</code>
     */
    public static final int enc_euc_jp_VALUE = 43;
    /**
     * <code>enc_shift_jis = 44;</code>
     */
    public static final int enc_shift_jis_VALUE = 44;
    /**
     * <code>enc_cp932 = 45;</code>
     */
    public static final int enc_cp932_VALUE = 45;
    /**
     * <code>enc_iso_2022_jp = 46;</code>
     */
    public static final int enc_iso_2022_jp_VALUE = 46;
    /**
     * <code>enc_iso_2022_jp_2 = 47;</code>
     */
    public static final int enc_iso_2022_jp_2_VALUE = 47;
    /**
     * <code>enc_iso_2022_jp_1 = 48;</code>
     */
    public static final int enc_iso_2022_jp_1_VALUE = 48;
    /**
     * <code>enc_euc_cn = 49;</code>
     */
    public static final int enc_euc_cn_VALUE = 49;
    /**
     * <code>enc_hz = 50;</code>
     */
    public static final int enc_hz_VALUE = 50;
    /**
     * <code>enc_gbk = 51;</code>
     */
    public static final int enc_gbk_VALUE = 51;
    /**
     * <code>enc_cp936 = 52;</code>
     */
    public static final int enc_cp936_VALUE = 52;
    /**
     * <code>enc_gb18030 = 53;</code>
     */
    public static final int enc_gb18030_VALUE = 53;
    /**
     * <code>enc_euc_tw = 54;</code>
     */
    public static final int enc_euc_tw_VALUE = 54;
    /**
     * <code>enc_big5 = 55;</code>
     */
    public static final int enc_big5_VALUE = 55;
    /**
     * <code>enc_cp950 = 56;</code>
     */
    public static final int enc_cp950_VALUE = 56;
    /**
     * <code>enc_big5_hkscs = 57;</code>
     */
    public static final int enc_big5_hkscs_VALUE = 57;
    /**
     * <code>enc_iso_2022_cn = 58;</code>
     */
    public static final int enc_iso_2022_cn_VALUE = 58;
    /**
     * <code>enc_iso_2022_cn_ext = 59;</code>
     */
    public static final int enc_iso_2022_cn_ext_VALUE = 59;
    /**
     * <code>enc_euc_kr = 60;</code>
     */
    public static final int enc_euc_kr_VALUE = 60;
    /**
     * <code>enc_cp949 = 61;</code>
     */
    public static final int enc_cp949_VALUE = 61;
    /**
     * <code>enc_iso_2022_kr = 62;</code>
     */
    public static final int enc_iso_2022_kr_VALUE = 62;
    /**
     * <code>enc_johab = 63;</code>
     */
    public static final int enc_johab_VALUE = 63;
    /**
     * <code>enc_armscii_8 = 64;</code>
     */
    public static final int enc_armscii_8_VALUE = 64;
    /**
     * <code>enc_georgian_academy = 65;</code>
     */
    public static final int enc_georgian_academy_VALUE = 65;
    /**
     * <code>enc_georgian_ps = 66;</code>
     */
    public static final int enc_georgian_ps_VALUE = 66;
    /**
     * <code>enc_koi8_t = 67;</code>
     */
    public static final int enc_koi8_t_VALUE = 67;
    /**
     * <code>enc_pt154 = 68;</code>
     */
    public static final int enc_pt154_VALUE = 68;
    /**
     * <code>enc_rk1048 = 69;</code>
     */
    public static final int enc_rk1048_VALUE = 69;
    /**
     * <code>enc_iso_8859_11 = 70;</code>
     */
    public static final int enc_iso_8859_11_VALUE = 70;
    /**
     * <code>enc_tis_620 = 71;</code>
     */
    public static final int enc_tis_620_VALUE = 71;
    /**
     * <code>enc_cp874 = 72;</code>
     */
    public static final int enc_cp874_VALUE = 72;
    /**
     * <code>enc_macthai = 73;</code>
     */
    public static final int enc_macthai_VALUE = 73;
    /**
     * <code>enc_mulelao_1 = 74;</code>
     */
    public static final int enc_mulelao_1_VALUE = 74;
    /**
     * <code>enc_cp1133 = 75;</code>
     */
    public static final int enc_cp1133_VALUE = 75;
    /**
     * <code>enc_viscii = 76;</code>
     */
    public static final int enc_viscii_VALUE = 76;
    /**
     * <code>enc_tcvn = 77;</code>
     */
    public static final int enc_tcvn_VALUE = 77;
    /**
     * <code>enc_cp1258 = 78;</code>
     */
    public static final int enc_cp1258_VALUE = 78;
    /**
     * <code>enc_hp_roman8 = 79;</code>
     */
    public static final int enc_hp_roman8_VALUE = 79;
    /**
     * <code>enc_nextstep = 80;</code>
     */
    public static final int enc_nextstep_VALUE = 80;
    /**
     * <code>enc_ucs_2 = 81;</code>
     */
    public static final int enc_ucs_2_VALUE = 81;
    /**
     * <code>enc_ucs_2be = 82;</code>
     */
    public static final int enc_ucs_2be_VALUE = 82;
    /**
     * <code>enc_ucs_2le = 83;</code>
     */
    public static final int enc_ucs_2le_VALUE = 83;
    /**
     * <code>enc_ucs_4 = 84;</code>
     */
    public static final int enc_ucs_4_VALUE = 84;
    /**
     * <code>enc_ucs_4be = 85;</code>
     */
    public static final int enc_ucs_4be_VALUE = 85;
    /**
     * <code>enc_ucs_4le = 86;</code>
     */
    public static final int enc_ucs_4le_VALUE = 86;
    /**
     * <code>enc_utf_16 = 87;</code>
     */
    public static final int enc_utf_16_VALUE = 87;
    /**
     * <code>enc_utf_16be = 88;</code>
     */
    public static final int enc_utf_16be_VALUE = 88;
    /**
     * <code>enc_utf_16le = 89;</code>
     */
    public static final int enc_utf_16le_VALUE = 89;
    /**
     * <code>enc_utf_32 = 90;</code>
     */
    public static final int enc_utf_32_VALUE = 90;
    /**
     * <code>enc_utf_32be = 91;</code>
     */
    public static final int enc_utf_32be_VALUE = 91;
    /**
     * <code>enc_utf_32le = 92;</code>
     */
    public static final int enc_utf_32le_VALUE = 92;
    /**
     * <code>enc_utf_7 = 93;</code>
     */
    public static final int enc_utf_7_VALUE = 93;
    /**
     * <code>enc_c99 = 94;</code>
     */
    public static final int enc_c99_VALUE = 94;
    /**
     * <code>enc_java = 95;</code>
     */
    public static final int enc_java_VALUE = 95;
    /**
     * <code>enc_ucs_2_internal = 96;</code>
     */
    public static final int enc_ucs_2_internal_VALUE = 96;
    /**
     * <code>enc_ucs_4_internal = 97;</code>
     */
    public static final int enc_ucs_4_internal_VALUE = 97;
    /**
     * <code>enc_undefined = 99;</code>
     *
     * <pre>
     * 99 is two bytes as string
     * </pre>
     */
    public static final int enc_undefined_VALUE = 99;


    public final int getNumber() { return value; }

    public static Encoding valueOf(int value) {
      switch (value) {
        case 0: return enc_unknown;
        case 1: return enc_utf_8;
        case 2: return enc_cp1251;
        case 3: return enc_koi8_r;
        case 4: return enc_us_ascii;
        case 5: return enc_iso_8859_1;
        case 6: return enc_iso_8859_2;
        case 7: return enc_iso_8859_3;
        case 8: return enc_iso_8859_4;
        case 9: return enc_iso_8859_5;
        case 10: return enc_iso_8859_7;
        case 11: return enc_iso_8859_9;
        case 12: return enc_iso_8859_10;
        case 13: return enc_iso_8859_13;
        case 14: return enc_iso_8859_14;
        case 15: return enc_iso_8859_15;
        case 16: return enc_iso_8859_16;
        case 17: return enc_koi8_u;
        case 18: return enc_cp1250;
        case 19: return enc_cp1252;
        case 20: return enc_cp1253;
        case 21: return enc_cp1254;
        case 22: return enc_cp1257;
        case 23: return enc_cp850;
        case 24: return enc_cp866;
        case 25: return enc_cp1131;
        case 26: return enc_macroman;
        case 27: return enc_maccentraleurope;
        case 28: return enc_maciceland;
        case 29: return enc_maccroatian;
        case 30: return enc_macromania;
        case 31: return enc_maccyrillic;
        case 32: return enc_macukraine;
        case 33: return enc_macgreek;
        case 34: return enc_macturkish;
        case 35: return enc_macintosh;
        case 36: return enc_iso_8859_6;
        case 37: return enc_iso_8859_8;
        case 38: return enc_cp1255;
        case 39: return enc_cp1256;
        case 40: return enc_cp862;
        case 41: return enc_machebrew;
        case 42: return enc_macarabic;
        case 43: return enc_euc_jp;
        case 44: return enc_shift_jis;
        case 45: return enc_cp932;
        case 46: return enc_iso_2022_jp;
        case 47: return enc_iso_2022_jp_2;
        case 48: return enc_iso_2022_jp_1;
        case 49: return enc_euc_cn;
        case 50: return enc_hz;
        case 51: return enc_gbk;
        case 52: return enc_cp936;
        case 53: return enc_gb18030;
        case 54: return enc_euc_tw;
        case 55: return enc_big5;
        case 56: return enc_cp950;
        case 57: return enc_big5_hkscs;
        case 58: return enc_iso_2022_cn;
        case 59: return enc_iso_2022_cn_ext;
        case 60: return enc_euc_kr;
        case 61: return enc_cp949;
        case 62: return enc_iso_2022_kr;
        case 63: return enc_johab;
        case 64: return enc_armscii_8;
        case 65: return enc_georgian_academy;
        case 66: return enc_georgian_ps;
        case 67: return enc_koi8_t;
        case 68: return enc_pt154;
        case 69: return enc_rk1048;
        case 70: return enc_iso_8859_11;
        case 71: return enc_tis_620;
        case 72: return enc_cp874;
        case 73: return enc_macthai;
        case 74: return enc_mulelao_1;
        case 75: return enc_cp1133;
        case 76: return enc_viscii;
        case 77: return enc_tcvn;
        case 78: return enc_cp1258;
        case 79: return enc_hp_roman8;
        case 80: return enc_nextstep;
        case 81: return enc_ucs_2;
        case 82: return enc_ucs_2be;
        case 83: return enc_ucs_2le;
        case 84: return enc_ucs_4;
        case 85: return enc_ucs_4be;
        case 86: return enc_ucs_4le;
        case 87: return enc_utf_16;
        case 88: return enc_utf_16be;
        case 89: return enc_utf_16le;
        case 90: return enc_utf_32;
        case 91: return enc_utf_32be;
        case 92: return enc_utf_32le;
        case 93: return enc_utf_7;
        case 94: return enc_c99;
        case 95: return enc_java;
        case 96: return enc_ucs_2_internal;
        case 97: return enc_ucs_4_internal;
        case 99: return enc_undefined;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Encoding>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Encoding>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Encoding>() {
            public Encoding findValueByNumber(int number) {
              return Encoding.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(1);
    }

    private static final Encoding[] VALUES = values();

    public static Encoding valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Encoding(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.Encoding)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.ContentType}
   */
  public enum ContentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>type_unknown = 0;</code>
     */
    type_unknown(0, 0),
    /**
     * <code>type_html = 1;</code>
     */
    type_html(1, 1),
    /**
     * <code>type_jpeg = 2;</code>
     */
    type_jpeg(2, 2),
    /**
     * <code>type_gif = 3;</code>
     */
    type_gif(3, 3),
    /**
     * <code>type_png = 4;</code>
     */
    type_png(4, 4),
    /**
     * <code>type_pdf = 5;</code>
     */
    type_pdf(5, 5),
    /**
     * <code>type_doc = 6;</code>
     */
    type_doc(6, 6),
    /**
     * <code>type_docx = 7;</code>
     */
    type_docx(7, 7),
    /**
     * <code>type_rtf = 8;</code>
     */
    type_rtf(8, 8),
    /**
     * <code>type_ppt = 9;</code>
     */
    type_ppt(9, 9),
    /**
     * <code>type_pptx = 10;</code>
     */
    type_pptx(10, 10),
    /**
     * <code>type_xls = 11;</code>
     */
    type_xls(11, 11),
    /**
     * <code>type_xlsx = 12;</code>
     */
    type_xlsx(12, 12),
    /**
     * <code>type_txt = 13;</code>
     *
     * <pre>
     * plain text
     * </pre>
     */
    type_txt(13, 13),
    /**
     * <code>type_xml = 14;</code>
     */
    type_xml(14, 14),
    /**
     * <code>type_ps = 15;</code>
     *
     * <pre>
     * Adobe Postscript
     * </pre>
     */
    type_ps(15, 15),
    /**
     * <code>type_wml = 16;</code>
     */
    type_wml(16, 16),
    /**
     * <code>type_atom = 17;</code>
     */
    type_atom(17, 17),
    /**
     * <code>type_sitemap = 18;</code>
     */
    type_sitemap(18, 18),
    /**
     * <code>type_rss = 19;</code>
     */
    type_rss(19, 19),
    /**
     * <code>type_json = 20;</code>
     */
    type_json(20, 20),
    /**
     * <code>type_riff_webp = 21;</code>
     */
    type_riff_webp(21, 21),
    ;

    /**
     * <code>type_unknown = 0;</code>
     */
    public static final int type_unknown_VALUE = 0;
    /**
     * <code>type_html = 1;</code>
     */
    public static final int type_html_VALUE = 1;
    /**
     * <code>type_jpeg = 2;</code>
     */
    public static final int type_jpeg_VALUE = 2;
    /**
     * <code>type_gif = 3;</code>
     */
    public static final int type_gif_VALUE = 3;
    /**
     * <code>type_png = 4;</code>
     */
    public static final int type_png_VALUE = 4;
    /**
     * <code>type_pdf = 5;</code>
     */
    public static final int type_pdf_VALUE = 5;
    /**
     * <code>type_doc = 6;</code>
     */
    public static final int type_doc_VALUE = 6;
    /**
     * <code>type_docx = 7;</code>
     */
    public static final int type_docx_VALUE = 7;
    /**
     * <code>type_rtf = 8;</code>
     */
    public static final int type_rtf_VALUE = 8;
    /**
     * <code>type_ppt = 9;</code>
     */
    public static final int type_ppt_VALUE = 9;
    /**
     * <code>type_pptx = 10;</code>
     */
    public static final int type_pptx_VALUE = 10;
    /**
     * <code>type_xls = 11;</code>
     */
    public static final int type_xls_VALUE = 11;
    /**
     * <code>type_xlsx = 12;</code>
     */
    public static final int type_xlsx_VALUE = 12;
    /**
     * <code>type_txt = 13;</code>
     *
     * <pre>
     * plain text
     * </pre>
     */
    public static final int type_txt_VALUE = 13;
    /**
     * <code>type_xml = 14;</code>
     */
    public static final int type_xml_VALUE = 14;
    /**
     * <code>type_ps = 15;</code>
     *
     * <pre>
     * Adobe Postscript
     * </pre>
     */
    public static final int type_ps_VALUE = 15;
    /**
     * <code>type_wml = 16;</code>
     */
    public static final int type_wml_VALUE = 16;
    /**
     * <code>type_atom = 17;</code>
     */
    public static final int type_atom_VALUE = 17;
    /**
     * <code>type_sitemap = 18;</code>
     */
    public static final int type_sitemap_VALUE = 18;
    /**
     * <code>type_rss = 19;</code>
     */
    public static final int type_rss_VALUE = 19;
    /**
     * <code>type_json = 20;</code>
     */
    public static final int type_json_VALUE = 20;
    /**
     * <code>type_riff_webp = 21;</code>
     */
    public static final int type_riff_webp_VALUE = 21;


    public final int getNumber() { return value; }

    public static ContentType valueOf(int value) {
      switch (value) {
        case 0: return type_unknown;
        case 1: return type_html;
        case 2: return type_jpeg;
        case 3: return type_gif;
        case 4: return type_png;
        case 5: return type_pdf;
        case 6: return type_doc;
        case 7: return type_docx;
        case 8: return type_rtf;
        case 9: return type_ppt;
        case 10: return type_pptx;
        case 11: return type_xls;
        case 12: return type_xlsx;
        case 13: return type_txt;
        case 14: return type_xml;
        case 15: return type_ps;
        case 16: return type_wml;
        case 17: return type_atom;
        case 18: return type_sitemap;
        case 19: return type_rss;
        case 20: return type_json;
        case 21: return type_riff_webp;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ContentType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContentType>() {
            public ContentType findValueByNumber(int number) {
              return ContentType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(2);
    }

    private static final ContentType[] VALUES = values();

    public static ContentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ContentType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.ContentType)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.MetaRobots}
   */
  public enum MetaRobots
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>r_unknown = 0;</code>
     */
    r_unknown(0, 0),
    /**
     * <code>r_nofollow = 1;</code>
     */
    r_nofollow(1, 1),
    /**
     * <code>r_noindex = 2;</code>
     */
    r_noindex(2, 2),
    /**
     * <code>r_noarchive = 4;</code>
     */
    r_noarchive(3, 4),
    /**
     * <code>r_nosnippet = 8;</code>
     */
    r_nosnippet(4, 8),
    ;

    /**
     * <code>r_unknown = 0;</code>
     */
    public static final int r_unknown_VALUE = 0;
    /**
     * <code>r_nofollow = 1;</code>
     */
    public static final int r_nofollow_VALUE = 1;
    /**
     * <code>r_noindex = 2;</code>
     */
    public static final int r_noindex_VALUE = 2;
    /**
     * <code>r_noarchive = 4;</code>
     */
    public static final int r_noarchive_VALUE = 4;
    /**
     * <code>r_nosnippet = 8;</code>
     */
    public static final int r_nosnippet_VALUE = 8;


    public final int getNumber() { return value; }

    public static MetaRobots valueOf(int value) {
      switch (value) {
        case 0: return r_unknown;
        case 1: return r_nofollow;
        case 2: return r_noindex;
        case 4: return r_noarchive;
        case 8: return r_nosnippet;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MetaRobots>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MetaRobots>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MetaRobots>() {
            public MetaRobots findValueByNumber(int number) {
              return MetaRobots.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(3);
    }

    private static final MetaRobots[] VALUES = values();

    public static MetaRobots valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MetaRobots(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.MetaRobots)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.ForumType}
   */
  public enum ForumType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>unknown = 0;</code>
     */
    unknown(0, 0),
    /**
     * <code>topic = 1;</code>
     */
    topic(1, 1),
    /**
     * <code>board = 2;</code>
     */
    board(2, 2),
    /**
     * <code>other = 3;</code>
     */
    other(3, 3),
    ;

    /**
     * <code>unknown = 0;</code>
     */
    public static final int unknown_VALUE = 0;
    /**
     * <code>topic = 1;</code>
     */
    public static final int topic_VALUE = 1;
    /**
     * <code>board = 2;</code>
     */
    public static final int board_VALUE = 2;
    /**
     * <code>other = 3;</code>
     */
    public static final int other_VALUE = 3;


    public final int getNumber() { return value; }

    public static ForumType valueOf(int value) {
      switch (value) {
        case 0: return unknown;
        case 1: return topic;
        case 2: return board;
        case 3: return other;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ForumType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ForumType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ForumType>() {
            public ForumType findValueByNumber(int number) {
              return ForumType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(4);
    }

    private static final ForumType[] VALUES = values();

    public static ForumType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ForumType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.ForumType)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.RobotsState}
   */
  public enum RobotsState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>not_checked = 0;</code>
     *
     * <pre>
     * default
     * </pre>
     */
    not_checked(0, 0),
    /**
     * <code>allowed = 1;</code>
     */
    allowed(1, 1),
    /**
     * <code>disallowed = 2;</code>
     */
    disallowed(2, 2),
    ;

    /**
     * <code>not_checked = 0;</code>
     *
     * <pre>
     * default
     * </pre>
     */
    public static final int not_checked_VALUE = 0;
    /**
     * <code>allowed = 1;</code>
     */
    public static final int allowed_VALUE = 1;
    /**
     * <code>disallowed = 2;</code>
     */
    public static final int disallowed_VALUE = 2;


    public final int getNumber() { return value; }

    public static RobotsState valueOf(int value) {
      switch (value) {
        case 0: return not_checked;
        case 1: return allowed;
        case 2: return disallowed;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RobotsState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RobotsState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RobotsState>() {
            public RobotsState findValueByNumber(int number) {
              return RobotsState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(5);
    }

    private static final RobotsState[] VALUES = values();

    public static RobotsState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RobotsState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.RobotsState)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.SourceMark}
   */
  public enum SourceMark
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FBL = 0;</code>
     */
    FBL(0, 0),
    /**
     * <code>STUB = 1;</code>
     */
    STUB(1, 1),
    /**
     * <code>RBT = 2;</code>
     */
    RBT(2, 2),
    /**
     * <code>CHR = 3;</code>
     */
    CHR(3, 3),
    ;

    /**
     * <code>FBL = 0;</code>
     */
    public static final int FBL_VALUE = 0;
    /**
     * <code>STUB = 1;</code>
     */
    public static final int STUB_VALUE = 1;
    /**
     * <code>RBT = 2;</code>
     */
    public static final int RBT_VALUE = 2;
    /**
     * <code>CHR = 3;</code>
     */
    public static final int CHR_VALUE = 3;


    public final int getNumber() { return value; }

    public static SourceMark valueOf(int value) {
      switch (value) {
        case 0: return FBL;
        case 1: return STUB;
        case 2: return RBT;
        case 3: return CHR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SourceMark>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SourceMark>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SourceMark>() {
            public SourceMark findValueByNumber(int number) {
              return SourceMark.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(6);
    }

    private static final SourceMark[] VALUES = values();

    public static SourceMark valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SourceMark(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.SourceMark)
  }

  /**
   * Protobuf enum {@code ru.mail.go.webbase.blobs.RenderType}
   */
  public enum RenderType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>R_NONE = 0;</code>
     */
    R_NONE(0, 0),
    /**
     * <code>R_SIMPLE_CHROME = 1;</code>
     */
    R_SIMPLE_CHROME(1, 1),
    ;

    /**
     * <code>R_NONE = 0;</code>
     */
    public static final int R_NONE_VALUE = 0;
    /**
     * <code>R_SIMPLE_CHROME = 1;</code>
     */
    public static final int R_SIMPLE_CHROME_VALUE = 1;


    public final int getNumber() { return value; }

    public static RenderType valueOf(int value) {
      switch (value) {
        case 0: return R_NONE;
        case 1: return R_SIMPLE_CHROME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RenderType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RenderType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RenderType>() {
            public RenderType findValueByNumber(int number) {
              return RenderType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.DocEnums.getDescriptor().getEnumTypes().get(7);
    }

    private static final RenderType[] VALUES = values();

    public static RenderType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RenderType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.RenderType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024document_enums.proto\022\030ru.mail.go.webba" +
      "se.blobs*\337\003\n\010Language\022\020\n\014lang_unknown\020\000\022" +
      "\020\n\014lang_russian\020\001\022\021\n\rlang_cyrillic\020\002\022\022\n\016" +
      "lang_bolgarian\020\003\022\022\n\016lang_ukrainian\020\004\022\025\n\021" +
      "lang_byelorussian\020\005\022\017\n\013lang_kazakh\020\006\022\020\n\014" +
      "lang_english\020\007\022\016\n\nlang_error\020\010\022\030\n\024lang_n" +
      "ot_enough_info\020\t\022\017\n\013lang_german\020\n\022\017\n\013lan" +
      "g_french\020\013\022\020\n\014lang_spanish\020\014\022\020\n\014lang_fin" +
      "nish\020\r\022\016\n\nlang_czech\020\016\022\022\n\016lang_hungarian" +
      "\020\017\022\020\n\014lang_italian\020\020\022\016\n\nlang_dutch\020\021\022\022\n\016",
      "lang_norwegian\020\022\022\017\n\013lang_polish\020\023\022\023\n\017lan" +
      "g_portuguese\020\024\022\021\n\rlang_romanian\020\025\022\020\n\014lan" +
      "g_swedish\020\026\022\020\n\014lang_turkish\020\027\022\023\n\017lang_ru" +
      "translit\020\030*\373\r\n\010Encoding\022\017\n\013enc_unknown\020\000" +
      "\022\r\n\tenc_utf_8\020\001\022\016\n\nenc_cp1251\020\002\022\016\n\nenc_k" +
      "oi8_r\020\003\022\020\n\014enc_us_ascii\020\004\022\022\n\016enc_iso_885" +
      "9_1\020\005\022\022\n\016enc_iso_8859_2\020\006\022\022\n\016enc_iso_885" +
      "9_3\020\007\022\022\n\016enc_iso_8859_4\020\010\022\022\n\016enc_iso_885" +
      "9_5\020\t\022\022\n\016enc_iso_8859_7\020\n\022\022\n\016enc_iso_885" +
      "9_9\020\013\022\023\n\017enc_iso_8859_10\020\014\022\023\n\017enc_iso_88",
      "59_13\020\r\022\023\n\017enc_iso_8859_14\020\016\022\023\n\017enc_iso_" +
      "8859_15\020\017\022\023\n\017enc_iso_8859_16\020\020\022\016\n\nenc_ko" +
      "i8_u\020\021\022\016\n\nenc_cp1250\020\022\022\016\n\nenc_cp1252\020\023\022\016" +
      "\n\nenc_cp1253\020\024\022\016\n\nenc_cp1254\020\025\022\016\n\nenc_cp" +
      "1257\020\026\022\r\n\tenc_cp850\020\027\022\r\n\tenc_cp866\020\030\022\016\n\n" +
      "enc_cp1131\020\031\022\020\n\014enc_macroman\020\032\022\030\n\024enc_ma" +
      "ccentraleurope\020\033\022\022\n\016enc_maciceland\020\034\022\023\n\017" +
      "enc_maccroatian\020\035\022\022\n\016enc_macromania\020\036\022\023\n" +
      "\017enc_maccyrillic\020\037\022\022\n\016enc_macukraine\020 \022\020" +
      "\n\014enc_macgreek\020!\022\022\n\016enc_macturkish\020\"\022\021\n\r",
      "enc_macintosh\020#\022\022\n\016enc_iso_8859_6\020$\022\022\n\016e" +
      "nc_iso_8859_8\020%\022\016\n\nenc_cp1255\020&\022\016\n\nenc_c" +
      "p1256\020\'\022\r\n\tenc_cp862\020(\022\021\n\renc_machebrew\020" +
      ")\022\021\n\renc_macarabic\020*\022\016\n\nenc_euc_jp\020+\022\021\n\r" +
      "enc_shift_jis\020,\022\r\n\tenc_cp932\020-\022\023\n\017enc_is" +
      "o_2022_jp\020.\022\025\n\021enc_iso_2022_jp_2\020/\022\025\n\021en" +
      "c_iso_2022_jp_1\0200\022\016\n\nenc_euc_cn\0201\022\n\n\006enc" +
      "_hz\0202\022\013\n\007enc_gbk\0203\022\r\n\tenc_cp936\0204\022\017\n\013enc" +
      "_gb18030\0205\022\016\n\nenc_euc_tw\0206\022\014\n\010enc_big5\0207" +
      "\022\r\n\tenc_cp950\0208\022\022\n\016enc_big5_hkscs\0209\022\023\n\017e",
      "nc_iso_2022_cn\020:\022\027\n\023enc_iso_2022_cn_ext\020" +
      ";\022\016\n\nenc_euc_kr\020<\022\r\n\tenc_cp949\020=\022\023\n\017enc_" +
      "iso_2022_kr\020>\022\r\n\tenc_johab\020?\022\021\n\renc_arms" +
      "cii_8\020@\022\030\n\024enc_georgian_academy\020A\022\023\n\017enc" +
      "_georgian_ps\020B\022\016\n\nenc_koi8_t\020C\022\r\n\tenc_pt" +
      "154\020D\022\016\n\nenc_rk1048\020E\022\023\n\017enc_iso_8859_11" +
      "\020F\022\017\n\013enc_tis_620\020G\022\r\n\tenc_cp874\020H\022\017\n\013en" +
      "c_macthai\020I\022\021\n\renc_mulelao_1\020J\022\016\n\nenc_cp" +
      "1133\020K\022\016\n\nenc_viscii\020L\022\014\n\010enc_tcvn\020M\022\016\n\n" +
      "enc_cp1258\020N\022\021\n\renc_hp_roman8\020O\022\020\n\014enc_n",
      "extstep\020P\022\r\n\tenc_ucs_2\020Q\022\017\n\013enc_ucs_2be\020" +
      "R\022\017\n\013enc_ucs_2le\020S\022\r\n\tenc_ucs_4\020T\022\017\n\013enc" +
      "_ucs_4be\020U\022\017\n\013enc_ucs_4le\020V\022\016\n\nenc_utf_1" +
      "6\020W\022\020\n\014enc_utf_16be\020X\022\020\n\014enc_utf_16le\020Y\022" +
      "\016\n\nenc_utf_32\020Z\022\020\n\014enc_utf_32be\020[\022\020\n\014enc" +
      "_utf_32le\020\\\022\r\n\tenc_utf_7\020]\022\013\n\007enc_c99\020^\022" +
      "\014\n\010enc_java\020_\022\026\n\022enc_ucs_2_internal\020`\022\026\n" +
      "\022enc_ucs_4_internal\020a\022\021\n\renc_undefined\020c" +
      "*\325\002\n\013ContentType\022\020\n\014type_unknown\020\000\022\r\n\tty" +
      "pe_html\020\001\022\r\n\ttype_jpeg\020\002\022\014\n\010type_gif\020\003\022\014",
      "\n\010type_png\020\004\022\014\n\010type_pdf\020\005\022\014\n\010type_doc\020\006" +
      "\022\r\n\ttype_docx\020\007\022\014\n\010type_rtf\020\010\022\014\n\010type_pp" +
      "t\020\t\022\r\n\ttype_pptx\020\n\022\014\n\010type_xls\020\013\022\r\n\ttype" +
      "_xlsx\020\014\022\014\n\010type_txt\020\r\022\014\n\010type_xml\020\016\022\013\n\007t" +
      "ype_ps\020\017\022\014\n\010type_wml\020\020\022\r\n\ttype_atom\020\021\022\020\n" +
      "\014type_sitemap\020\022\022\014\n\010type_rss\020\023\022\r\n\ttype_js" +
      "on\020\024\022\022\n\016type_riff_webp\020\025*\\\n\nMetaRobots\022\r" +
      "\n\tr_unknown\020\000\022\016\n\nr_nofollow\020\001\022\r\n\tr_noind" +
      "ex\020\002\022\017\n\013r_noarchive\020\004\022\017\n\013r_nosnippet\020\010*9" +
      "\n\tForumType\022\013\n\007unknown\020\000\022\t\n\005topic\020\001\022\t\n\005b",
      "oard\020\002\022\t\n\005other\020\003*;\n\013RobotsState\022\017\n\013not_" +
      "checked\020\000\022\013\n\007allowed\020\001\022\016\n\ndisallowed\020\002*1" +
      "\n\nSourceMark\022\007\n\003FBL\020\000\022\010\n\004STUB\020\001\022\007\n\003RBT\020\002" +
      "\022\007\n\003CHR\020\003*-\n\nRenderType\022\n\n\006R_NONE\020\000\022\023\n\017R" +
      "_SIMPLE_CHROME\020\001B\nB\010DocEnums"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
