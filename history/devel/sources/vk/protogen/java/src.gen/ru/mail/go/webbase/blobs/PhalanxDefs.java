// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phalanx_defs.proto

package ru.mail.go.webbase.blobs;

public final class PhalanxDefs {
  private PhalanxDefs() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DocumentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 version = 1;
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * Serialization version. Current version is defined in db.hpp
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * Serialization version. Current version is defined in db.hpp
     * </pre>
     */
    int getVersion();

    // required string key = 2;
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    // required bytes data = 3;
    /**
     * <code>required bytes data = 3;</code>
     *
     * <pre>
     * Actual data to return to client
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 3;</code>
     *
     * <pre>
     * Actual data to return to client
     * </pre>
     */
    com.google.protobuf.ByteString getData();

    // optional string contentType = 4;
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    boolean hasContentType();
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    java.lang.String getContentType();
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();

    // repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> 
        getCropList();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getCrop(int index);
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    int getCropCount();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
        getCropOrBuilderList();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getCropOrBuilder(
        int index);

    // optional bool prevCompat = 6;
    /**
     * <code>optional bool prevCompat = 6;</code>
     *
     * <pre>
     * this document is stored for backward compatibility with previous data release
     * </pre>
     */
    boolean hasPrevCompat();
    /**
     * <code>optional bool prevCompat = 6;</code>
     *
     * <pre>
     * this document is stored for backward compatibility with previous data release
     * </pre>
     */
    boolean getPrevCompat();
  }
  /**
   * Protobuf type {@code ru.mail.go.webbase.blobs.Document}
   */
  public static final class Document extends
      com.google.protobuf.GeneratedMessage
      implements DocumentOrBuilder {
    // Use Document.newBuilder() to construct.
    private Document(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Document(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Document defaultInstance;
    public static Document getDefaultInstance() {
      return defaultInstance;
    }

    public Document getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Document(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              key_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              contentType_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                crop_ = new java.util.ArrayList<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta>();
                mutable_bitField0_ |= 0x00000010;
              }
              crop_.add(input.readMessage(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              prevCompat_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          crop_ = java.util.Collections.unmodifiableList(crop_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_Document_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_Document_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.mail.go.webbase.blobs.PhalanxDefs.Document.class, ru.mail.go.webbase.blobs.PhalanxDefs.Document.Builder.class);
    }

    public static com.google.protobuf.Parser<Document> PARSER =
        new com.google.protobuf.AbstractParser<Document>() {
      public Document parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Document(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Document> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * Serialization version. Current version is defined in db.hpp
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 version = 1;</code>
     *
     * <pre>
     * Serialization version. Current version is defined in db.hpp
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    // required string key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.Object key_;
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 2;</code>
     *
     * <pre>
     * Arbitrary string key like url, data hash, etc
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 3;</code>
     *
     * <pre>
     * Actual data to return to client
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes data = 3;</code>
     *
     * <pre>
     * Actual data to return to client
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    // optional string contentType = 4;
    public static final int CONTENTTYPE_FIELD_NUMBER = 4;
    private java.lang.Object contentType_;
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    public boolean hasContentType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    public java.lang.String getContentType() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          contentType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string contentType = 4;</code>
     *
     * <pre>
     * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      java.lang.Object ref = contentType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;
    public static final int CROP_FIELD_NUMBER = 5;
    private java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> crop_;
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> getCropList() {
      return crop_;
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    public java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
        getCropOrBuilderList() {
      return crop_;
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    public int getCropCount() {
      return crop_.size();
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getCrop(int index) {
      return crop_.get(index);
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
     *
     * <pre>
     * additional info where intelligent crop is placed
     * </pre>
     */
    public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getCropOrBuilder(
        int index) {
      return crop_.get(index);
    }

    // optional bool prevCompat = 6;
    public static final int PREVCOMPAT_FIELD_NUMBER = 6;
    private boolean prevCompat_;
    /**
     * <code>optional bool prevCompat = 6;</code>
     *
     * <pre>
     * this document is stored for backward compatibility with previous data release
     * </pre>
     */
    public boolean hasPrevCompat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool prevCompat = 6;</code>
     *
     * <pre>
     * this document is stored for backward compatibility with previous data release
     * </pre>
     */
    public boolean getPrevCompat() {
      return prevCompat_;
    }

    private void initFields() {
      version_ = 0;
      key_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      contentType_ = "";
      crop_ = java.util.Collections.emptyList();
      prevCompat_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCropCount(); i++) {
        if (!getCrop(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getContentTypeBytes());
      }
      for (int i = 0; i < crop_.size(); i++) {
        output.writeMessage(5, crop_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, prevCompat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getContentTypeBytes());
      }
      for (int i = 0; i < crop_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, crop_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, prevCompat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.Document parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.mail.go.webbase.blobs.PhalanxDefs.Document prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ru.mail.go.webbase.blobs.Document}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.mail.go.webbase.blobs.PhalanxDefs.DocumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_Document_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_Document_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.mail.go.webbase.blobs.PhalanxDefs.Document.class, ru.mail.go.webbase.blobs.PhalanxDefs.Document.Builder.class);
      }

      // Construct using ru.mail.go.webbase.blobs.PhalanxDefs.Document.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCropFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        contentType_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cropBuilder_ == null) {
          crop_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cropBuilder_.clear();
        }
        prevCompat_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_Document_descriptor;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.Document getDefaultInstanceForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.Document.getDefaultInstance();
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.Document build() {
        ru.mail.go.webbase.blobs.PhalanxDefs.Document result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.Document buildPartial() {
        ru.mail.go.webbase.blobs.PhalanxDefs.Document result = new ru.mail.go.webbase.blobs.PhalanxDefs.Document(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.contentType_ = contentType_;
        if (cropBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            crop_ = java.util.Collections.unmodifiableList(crop_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.crop_ = crop_;
        } else {
          result.crop_ = cropBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prevCompat_ = prevCompat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.mail.go.webbase.blobs.PhalanxDefs.Document) {
          return mergeFrom((ru.mail.go.webbase.blobs.PhalanxDefs.Document)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.mail.go.webbase.blobs.PhalanxDefs.Document other) {
        if (other == ru.mail.go.webbase.blobs.PhalanxDefs.Document.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasKey()) {
          bitField0_ |= 0x00000002;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasContentType()) {
          bitField0_ |= 0x00000008;
          contentType_ = other.contentType_;
          onChanged();
        }
        if (cropBuilder_ == null) {
          if (!other.crop_.isEmpty()) {
            if (crop_.isEmpty()) {
              crop_ = other.crop_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCropIsMutable();
              crop_.addAll(other.crop_);
            }
            onChanged();
          }
        } else {
          if (!other.crop_.isEmpty()) {
            if (cropBuilder_.isEmpty()) {
              cropBuilder_.dispose();
              cropBuilder_ = null;
              crop_ = other.crop_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cropBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCropFieldBuilder() : null;
            } else {
              cropBuilder_.addAllMessages(other.crop_);
            }
          }
        }
        if (other.hasPrevCompat()) {
          setPrevCompat(other.getPrevCompat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        for (int i = 0; i < getCropCount(); i++) {
          if (!getCrop(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.mail.go.webbase.blobs.PhalanxDefs.Document parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.mail.go.webbase.blobs.PhalanxDefs.Document) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 version = 1;
      private int version_ ;
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * Serialization version. Current version is defined in db.hpp
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * Serialization version. Current version is defined in db.hpp
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * Serialization version. Current version is defined in db.hpp
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 version = 1;</code>
       *
       * <pre>
       * Serialization version. Current version is defined in db.hpp
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      // required string key = 2;
      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 2;</code>
       *
       * <pre>
       * Arbitrary string key like url, data hash, etc
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }

      // required bytes data = 3;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 3;</code>
       *
       * <pre>
       * Actual data to return to client
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes data = 3;</code>
       *
       * <pre>
       * Actual data to return to client
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 3;</code>
       *
       * <pre>
       * Actual data to return to client
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 3;</code>
       *
       * <pre>
       * Actual data to return to client
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // optional string contentType = 4;
      private java.lang.Object contentType_ = "";
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public boolean hasContentType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public java.lang.String getContentType() {
        java.lang.Object ref = contentType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        java.lang.Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public Builder setContentType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public Builder clearContentType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string contentType = 4;</code>
       *
       * <pre>
       * Content type to return to client (e.g. "image/jpeg"). Ignored if not set
       * </pre>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        contentType_ = value;
        onChanged();
        return this;
      }

      // repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;
      private java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> crop_ =
        java.util.Collections.emptyList();
      private void ensureCropIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          crop_ = new java.util.ArrayList<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta>(crop_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> cropBuilder_;

      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> getCropList() {
        if (cropBuilder_ == null) {
          return java.util.Collections.unmodifiableList(crop_);
        } else {
          return cropBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public int getCropCount() {
        if (cropBuilder_ == null) {
          return crop_.size();
        } else {
          return cropBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getCrop(int index) {
        if (cropBuilder_ == null) {
          return crop_.get(index);
        } else {
          return cropBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder setCrop(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (cropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCropIsMutable();
          crop_.set(index, value);
          onChanged();
        } else {
          cropBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder setCrop(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (cropBuilder_ == null) {
          ensureCropIsMutable();
          crop_.set(index, builderForValue.build());
          onChanged();
        } else {
          cropBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder addCrop(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (cropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCropIsMutable();
          crop_.add(value);
          onChanged();
        } else {
          cropBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder addCrop(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (cropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCropIsMutable();
          crop_.add(index, value);
          onChanged();
        } else {
          cropBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder addCrop(
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (cropBuilder_ == null) {
          ensureCropIsMutable();
          crop_.add(builderForValue.build());
          onChanged();
        } else {
          cropBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder addCrop(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (cropBuilder_ == null) {
          ensureCropIsMutable();
          crop_.add(index, builderForValue.build());
          onChanged();
        } else {
          cropBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder addAllCrop(
          java.lang.Iterable<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> values) {
        if (cropBuilder_ == null) {
          ensureCropIsMutable();
          super.addAll(values, crop_);
          onChanged();
        } else {
          cropBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder clearCrop() {
        if (cropBuilder_ == null) {
          crop_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cropBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public Builder removeCrop(int index) {
        if (cropBuilder_ == null) {
          ensureCropIsMutable();
          crop_.remove(index);
          onChanged();
        } else {
          cropBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder getCropBuilder(
          int index) {
        return getCropFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getCropOrBuilder(
          int index) {
        if (cropBuilder_ == null) {
          return crop_.get(index);  } else {
          return cropBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
           getCropOrBuilderList() {
        if (cropBuilder_ != null) {
          return cropBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(crop_);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder addCropBuilder() {
        return getCropFieldBuilder().addBuilder(
            ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder addCropBuilder(
          int index) {
        return getCropFieldBuilder().addBuilder(
            index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta crop = 5;</code>
       *
       * <pre>
       * additional info where intelligent crop is placed
       * </pre>
       */
      public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder> 
           getCropBuilderList() {
        return getCropFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
          getCropFieldBuilder() {
        if (cropBuilder_ == null) {
          cropBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder>(
                  crop_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          crop_ = null;
        }
        return cropBuilder_;
      }

      // optional bool prevCompat = 6;
      private boolean prevCompat_ ;
      /**
       * <code>optional bool prevCompat = 6;</code>
       *
       * <pre>
       * this document is stored for backward compatibility with previous data release
       * </pre>
       */
      public boolean hasPrevCompat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool prevCompat = 6;</code>
       *
       * <pre>
       * this document is stored for backward compatibility with previous data release
       * </pre>
       */
      public boolean getPrevCompat() {
        return prevCompat_;
      }
      /**
       * <code>optional bool prevCompat = 6;</code>
       *
       * <pre>
       * this document is stored for backward compatibility with previous data release
       * </pre>
       */
      public Builder setPrevCompat(boolean value) {
        bitField0_ |= 0x00000020;
        prevCompat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool prevCompat = 6;</code>
       *
       * <pre>
       * this document is stored for backward compatibility with previous data release
       * </pre>
       */
      public Builder clearPrevCompat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        prevCompat_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ru.mail.go.webbase.blobs.Document)
    }

    static {
      defaultInstance = new Document(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.Document)
  }

  public interface CropImageMetaOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 x1 = 2;
    /**
     * <code>required int32 x1 = 2;</code>
     */
    boolean hasX1();
    /**
     * <code>required int32 x1 = 2;</code>
     */
    int getX1();

    // required int32 y1 = 3;
    /**
     * <code>required int32 y1 = 3;</code>
     */
    boolean hasY1();
    /**
     * <code>required int32 y1 = 3;</code>
     */
    int getY1();

    // required int32 x2 = 4;
    /**
     * <code>required int32 x2 = 4;</code>
     */
    boolean hasX2();
    /**
     * <code>required int32 x2 = 4;</code>
     */
    int getX2();

    // required int32 y2 = 5;
    /**
     * <code>required int32 y2 = 5;</code>
     */
    boolean hasY2();
    /**
     * <code>required int32 y2 = 5;</code>
     */
    int getY2();

    // optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;
    /**
     * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
     */
    boolean hasType();
    /**
     * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
     */
    ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t getType();
  }
  /**
   * Protobuf type {@code ru.mail.go.webbase.blobs.CropImageMeta}
   *
   * <pre>
   *will somehow stored in aerospike with some key
   * </pre>
   */
  public static final class CropImageMeta extends
      com.google.protobuf.GeneratedMessage
      implements CropImageMetaOrBuilder {
    // Use CropImageMeta.newBuilder() to construct.
    private CropImageMeta(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CropImageMeta(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CropImageMeta defaultInstance;
    public static CropImageMeta getDefaultInstance() {
      return defaultInstance;
    }

    public CropImageMeta getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CropImageMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              x1_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              y1_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              x2_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              y2_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t value = ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.class, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder.class);
    }

    public static com.google.protobuf.Parser<CropImageMeta> PARSER =
        new com.google.protobuf.AbstractParser<CropImageMeta>() {
      public CropImageMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CropImageMeta(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CropImageMeta> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ru.mail.go.webbase.blobs.CropImageMeta.type_t}
     */
    public enum type_t
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>face = 1;</code>
       */
      face(0, 1),
      /**
       * <code>text = 2;</code>
       */
      text(1, 2),
      ;

      /**
       * <code>face = 1;</code>
       */
      public static final int face_VALUE = 1;
      /**
       * <code>text = 2;</code>
       */
      public static final int text_VALUE = 2;


      public final int getNumber() { return value; }

      public static type_t valueOf(int value) {
        switch (value) {
          case 1: return face;
          case 2: return text;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<type_t>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<type_t>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<type_t>() {
              public type_t findValueByNumber(int number) {
                return type_t.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDescriptor().getEnumTypes().get(0);
      }

      private static final type_t[] VALUES = values();

      public static type_t valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private type_t(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ru.mail.go.webbase.blobs.CropImageMeta.type_t)
    }

    private int bitField0_;
    // required int32 x1 = 2;
    public static final int X1_FIELD_NUMBER = 2;
    private int x1_;
    /**
     * <code>required int32 x1 = 2;</code>
     */
    public boolean hasX1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x1 = 2;</code>
     */
    public int getX1() {
      return x1_;
    }

    // required int32 y1 = 3;
    public static final int Y1_FIELD_NUMBER = 3;
    private int y1_;
    /**
     * <code>required int32 y1 = 3;</code>
     */
    public boolean hasY1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 y1 = 3;</code>
     */
    public int getY1() {
      return y1_;
    }

    // required int32 x2 = 4;
    public static final int X2_FIELD_NUMBER = 4;
    private int x2_;
    /**
     * <code>required int32 x2 = 4;</code>
     */
    public boolean hasX2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 x2 = 4;</code>
     */
    public int getX2() {
      return x2_;
    }

    // required int32 y2 = 5;
    public static final int Y2_FIELD_NUMBER = 5;
    private int y2_;
    /**
     * <code>required int32 y2 = 5;</code>
     */
    public boolean hasY2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 y2 = 5;</code>
     */
    public int getY2() {
      return y2_;
    }

    // optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;
    public static final int TYPE_FIELD_NUMBER = 6;
    private ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t type_;
    /**
     * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
     */
    public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t getType() {
      return type_;
    }

    private void initFields() {
      x1_ = 0;
      y1_ = 0;
      x2_ = 0;
      y2_ = 0;
      type_ = ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t.face;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, x1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, y1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, x2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, y2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(6, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, y1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, x2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, y2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ru.mail.go.webbase.blobs.CropImageMeta}
     *
     * <pre>
     *will somehow stored in aerospike with some key
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.class, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder.class);
      }

      // Construct using ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        x2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        y2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t.face;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getDefaultInstanceForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance();
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta build() {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta buildPartial() {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta result = new ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x1_ = x1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y1_ = y1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x2_ = x2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y2_ = y2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta) {
          return mergeFrom((ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta other) {
        if (other == ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance()) return this;
        if (other.hasX1()) {
          setX1(other.getX1());
        }
        if (other.hasY1()) {
          setY1(other.getY1());
        }
        if (other.hasX2()) {
          setX2(other.getX2());
        }
        if (other.hasY2()) {
          setY2(other.getY2());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX1()) {
          
          return false;
        }
        if (!hasY1()) {
          
          return false;
        }
        if (!hasX2()) {
          
          return false;
        }
        if (!hasY2()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 x1 = 2;
      private int x1_ ;
      /**
       * <code>required int32 x1 = 2;</code>
       */
      public boolean hasX1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 x1 = 2;</code>
       */
      public int getX1() {
        return x1_;
      }
      /**
       * <code>required int32 x1 = 2;</code>
       */
      public Builder setX1(int value) {
        bitField0_ |= 0x00000001;
        x1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 x1 = 2;</code>
       */
      public Builder clearX1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x1_ = 0;
        onChanged();
        return this;
      }

      // required int32 y1 = 3;
      private int y1_ ;
      /**
       * <code>required int32 y1 = 3;</code>
       */
      public boolean hasY1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 y1 = 3;</code>
       */
      public int getY1() {
        return y1_;
      }
      /**
       * <code>required int32 y1 = 3;</code>
       */
      public Builder setY1(int value) {
        bitField0_ |= 0x00000002;
        y1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 y1 = 3;</code>
       */
      public Builder clearY1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y1_ = 0;
        onChanged();
        return this;
      }

      // required int32 x2 = 4;
      private int x2_ ;
      /**
       * <code>required int32 x2 = 4;</code>
       */
      public boolean hasX2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 x2 = 4;</code>
       */
      public int getX2() {
        return x2_;
      }
      /**
       * <code>required int32 x2 = 4;</code>
       */
      public Builder setX2(int value) {
        bitField0_ |= 0x00000004;
        x2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 x2 = 4;</code>
       */
      public Builder clearX2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x2_ = 0;
        onChanged();
        return this;
      }

      // required int32 y2 = 5;
      private int y2_ ;
      /**
       * <code>required int32 y2 = 5;</code>
       */
      public boolean hasY2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 y2 = 5;</code>
       */
      public int getY2() {
        return y2_;
      }
      /**
       * <code>required int32 y2 = 5;</code>
       */
      public Builder setY2(int value) {
        bitField0_ |= 0x00000008;
        y2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 y2 = 5;</code>
       */
      public Builder clearY2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y2_ = 0;
        onChanged();
        return this;
      }

      // optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;
      private ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t type_ = ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t.face;
      /**
       * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t getType() {
        return type_;
      }
      /**
       * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
       */
      public Builder setType(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ru.mail.go.webbase.blobs.CropImageMeta.type_t type = 6;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.type_t.face;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ru.mail.go.webbase.blobs.CropImageMeta)
    }

    static {
      defaultInstance = new CropImageMeta(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.CropImageMeta)
  }

  public interface CropImageMetaBinOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> 
        getDataList();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getData(int index);
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ru.mail.go.webbase.blobs.CropImageMetaBin}
   */
  public static final class CropImageMetaBin extends
      com.google.protobuf.GeneratedMessage
      implements CropImageMetaBinOrBuilder {
    // Use CropImageMetaBin.newBuilder() to construct.
    private CropImageMetaBin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CropImageMetaBin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CropImageMetaBin defaultInstance;
    public static CropImageMetaBin getDefaultInstance() {
      return defaultInstance;
    }

    public CropImageMetaBin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CropImageMetaBin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                data_ = new java.util.ArrayList<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(input.readMessage(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.class, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.Builder.class);
    }

    public static com.google.protobuf.Parser<CropImageMetaBin> PARSER =
        new com.google.protobuf.AbstractParser<CropImageMetaBin>() {
      public CropImageMetaBin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CropImageMetaBin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CropImageMetaBin> getParserForType() {
      return PARSER;
    }

    // repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> data_;
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    public java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
     */
    public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private void initFields() {
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getDataCount(); i++) {
        if (!getData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(1, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ru.mail.go.webbase.blobs.CropImageMetaBin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.class, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.Builder.class);
      }

      // Construct using ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin getDefaultInstanceForType() {
        return ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.getDefaultInstance();
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin build() {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin buildPartial() {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin result = new ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin(this);
        int from_bitField0_ = bitField0_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin) {
          return mergeFrom((ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin other) {
        if (other == ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDataCount(); i++) {
          if (!getData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaBin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;
      private java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = new java.util.ArrayList<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> dataBuilder_;

      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder setData(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder setData(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder addData(ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder addData(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder addData(
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder addData(
          int index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          super.addAll(values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public java.util.List<? extends ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .ru.mail.go.webbase.blobs.CropImageMeta data = 1;</code>
       */
      public java.util.List<ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMeta.Builder, ru.mail.go.webbase.blobs.PhalanxDefs.CropImageMetaOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ru.mail.go.webbase.blobs.CropImageMetaBin)
    }

    static {
      defaultInstance = new CropImageMetaBin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ru.mail.go.webbase.blobs.CropImageMetaBin)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ru_mail_go_webbase_blobs_Document_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ru_mail_go_webbase_blobs_Document_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ru_mail_go_webbase_blobs_CropImageMeta_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022phalanx_defs.proto\022\030ru.mail.go.webbase" +
      ".blobs\"\226\001\n\010Document\022\017\n\007version\030\001 \002(\r\022\013\n\003" +
      "key\030\002 \002(\t\022\014\n\004data\030\003 \002(\014\022\023\n\013contentType\030\004" +
      " \001(\t\0225\n\004crop\030\005 \003(\0132\'.ru.mail.go.webbase." +
      "blobs.CropImageMeta\022\022\n\nprevCompat\030\006 \001(\010\"" +
      "\233\001\n\rCropImageMeta\022\n\n\002x1\030\002 \002(\005\022\n\n\002y1\030\003 \002(" +
      "\005\022\n\n\002x2\030\004 \002(\005\022\n\n\002y2\030\005 \002(\005\022<\n\004type\030\006 \001(\0162" +
      "..ru.mail.go.webbase.blobs.CropImageMeta" +
      ".type_t\"\034\n\006type_t\022\010\n\004face\020\001\022\010\n\004text\020\002\"I\n" +
      "\020CropImageMetaBin\0225\n\004data\030\001 \003(\0132\'.ru.mai",
      "l.go.webbase.blobs.CropImageMetaB\rB\013Phal" +
      "anxDefs"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ru_mail_go_webbase_blobs_Document_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ru_mail_go_webbase_blobs_Document_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ru_mail_go_webbase_blobs_Document_descriptor,
              new java.lang.String[] { "Version", "Key", "Data", "ContentType", "Crop", "PrevCompat", });
          internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ru_mail_go_webbase_blobs_CropImageMeta_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ru_mail_go_webbase_blobs_CropImageMeta_descriptor,
              new java.lang.String[] { "X1", "Y1", "X2", "Y2", "Type", });
          internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ru_mail_go_webbase_blobs_CropImageMetaBin_descriptor,
              new java.lang.String[] { "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
